1
00:00:00,260 --> 00:00:04,000
Hi, in this lesson you will learn
how to solve the problem of

2
00:00:04,000 --> 00:00:07,200
organizing children into
groups more efficiently.

3
00:00:07,200 --> 00:00:10,830
Most specifically, we will come up
with a polynomial time algorithm for

4
00:00:10,830 --> 00:00:16,680
this problem as opposed to the exponential
type algorithm from the previous lesson.

5
00:00:16,680 --> 00:00:20,860
But in order to do this,
we first need to do a very important thing

6
00:00:20,860 --> 00:00:25,760
that you should probably do every time
before solving an algorithmic problem.

7
00:00:25,760 --> 00:00:28,700
You should reformulate it
in mathematical terms.

8
00:00:28,700 --> 00:00:29,330
For example,

9
00:00:29,330 --> 00:00:34,340
in this problem we will consider points
on the line instead of children.

10
00:00:34,340 --> 00:00:39,390
For example, if we have a child of age
three and a half years we will instead

11
00:00:39,390 --> 00:00:46,060
consider a point on the line with
coordinate 3.5 and if we have another

12
00:00:46,060 --> 00:00:50,850
child of age 6, we will instead consider
a point with coordinate 6 on the line.

13
00:00:51,850 --> 00:00:55,020
Now, what do groups of
children correspond to?

14
00:00:55,020 --> 00:00:59,180
If we have a group of children,
it consists of several children and

15
00:00:59,180 --> 00:01:04,240
several points on the line correspond
to this group and the fact that the age

16
00:01:04,240 --> 00:01:08,970
of any two children in the group differs
by at most one, means that there exists

17
00:01:08,970 --> 00:01:13,770
a segment of length one on this line
that contains all those points.

18
00:01:15,370 --> 00:01:21,590
Now the goal becomes to select
the minimum possible number of segments

19
00:01:21,590 --> 00:01:27,250
of length one, such that those
segments cover all the points.

20
00:01:27,250 --> 00:01:29,550
Then, if we have such segments,

21
00:01:29,550 --> 00:01:34,520
we can just take all the points from
that segment in the same group,

22
00:01:34,520 --> 00:01:38,389
and any two children in the group
who differ by, at most, one year.

23
00:01:40,420 --> 00:01:41,960
Now let's look at an example.

24
00:01:43,100 --> 00:01:45,990
We have a line with a few points on it and

25
00:01:45,990 --> 00:01:49,660
we want to cover all the points
with segments of length one.

26
00:01:49,660 --> 00:01:52,530
Here is one example of such covering.

27
00:01:52,530 --> 00:01:55,726
All the segments on the picture
are of the same length and

28
00:01:55,726 --> 00:01:58,729
we consider that this
is length one of this line.

29
00:02:00,080 --> 00:02:05,650
This is not the optimal solution because
below there is another example of covering

30
00:02:05,650 --> 00:02:10,120
and we have only three segments and
they still cover all the points.

31
00:02:11,480 --> 00:02:16,120
Now we want to find a way to find
the minimum possible number of segments to

32
00:02:16,120 --> 00:02:18,710
cover all the points in any configuration.

33
00:02:19,800 --> 00:02:24,140
We want to do that using greedy
algorithm and you probably remember

34
00:02:24,140 --> 00:02:28,640
from the previous lessons that to come up
with a greedy algorithm, you need to

35
00:02:28,640 --> 00:02:32,560
do a greedy choice and to prove that
this greedy choice is a safe move.

36
00:02:33,880 --> 00:02:39,820
I state that in this problem,
safe move is to cover the leftmost point

37
00:02:39,820 --> 00:02:44,560
with a segment of length one which
starts or has left end in this point.

38
00:02:46,100 --> 00:02:51,890
To prove that this is really a safe move,
we need to prove that there exists an

39
00:02:51,890 --> 00:02:55,640
optimal solution with
the minimum possible number of

40
00:02:55,640 --> 00:03:00,210
unit length segments such
that one of the segments

41
00:03:00,210 --> 00:03:02,850
has its left end in the leftmost point.

42
00:03:04,890 --> 00:03:05,500
Let's prove that.

43
00:03:07,150 --> 00:03:11,640
To do that, let's consider any
optimal solution of a given

44
00:03:11,640 --> 00:03:13,220
problem with a given point.

45
00:03:14,400 --> 00:03:18,350
Let's consider the leftmost
point colored in green.

46
00:03:20,150 --> 00:03:21,880
It is covered by some segment.

47
00:03:23,090 --> 00:03:23,860
Colored in red.

48
00:03:25,310 --> 00:03:31,650
Now, let's move this red segment
to the right until it's left

49
00:03:31,650 --> 00:03:36,900
end is in this leftmost point.

50
00:03:36,900 --> 00:03:42,090
I say that we didn't miss any of the
points in the process, because this green

51
00:03:42,090 --> 00:03:46,640
point is the leftmost point so there
are no points to the left from it and

52
00:03:46,640 --> 00:03:52,030
while we are moving the segment to the
right, we didn't miss any of the points.

53
00:03:53,460 --> 00:03:58,540
It means that what we have now is
still a correct covering because

54
00:03:58,540 --> 00:04:03,080
all of the points are still covered and
the number of segments in this covering is

55
00:04:03,080 --> 00:04:07,970
the same as in some optimal
solution from which we started and

56
00:04:07,970 --> 00:04:11,770
that means that it is also
an optimal covering.

57
00:04:11,770 --> 00:04:15,590
So we have just found an optimal solution

58
00:04:15,590 --> 00:04:19,850
in which there is a segment which
starts in the leftmost point.

59
00:04:19,850 --> 00:04:22,410
So, we proved that

60
00:04:22,410 --> 00:04:27,190
covering the leftmost point with a
segment which starts in it is a safe move.

61
00:04:28,640 --> 00:04:34,000
Now that we have a safe move,
let's consider what happens after it.

62
00:04:34,000 --> 00:04:39,380
We have the leftmost point covered, and
also maybe some other points covered.

63
00:04:39,380 --> 00:04:42,630
So we don't need to consider
these points anymore.

64
00:04:42,630 --> 00:04:46,900
We are not interested in them and
we need to cover all the other points with

65
00:04:46,900 --> 00:04:50,330
the minimum possible number
of unit length segments.

66
00:04:50,330 --> 00:04:55,990
So this is the same kind of problem
which we started with, so

67
00:04:55,990 --> 00:04:56,930
this is a subproblem.

68
00:04:58,310 --> 00:05:00,730
Basically it means that we
have a greedy algorithm.

69
00:05:00,730 --> 00:05:05,660
First, make a safe move. Add
a segment to the solution

70
00:05:05,660 --> 00:05:08,690
with the left hand starting
in the leftmost point.

71
00:05:08,690 --> 00:05:13,586
Then remove all the points which
are already covered by the segment

72
00:05:13,586 --> 00:05:18,569
from the set and if there are still
points left, repeat the process and

73
00:05:18,569 --> 00:05:23,129
repeat this process until there
are no points left in the set.