1
00:00:00,320 --> 00:00:04,720
我是 Michael Levin
我们将一起学习贪心算法

2
00:00:04,720 --> 00:00:07,955
它们属于最简单的一类算法

3
00:00:07,955 --> 00:00:12,722
并且它们似乎是很自然的解决问题的方法

4
00:00:12,722 --> 00:00:15,330
我们将从几个会用到贪心算法的例子开始

5
00:00:15,330 --> 00:00:19,190
来说明它们是如何发挥作用的

6
00:00:19,190 --> 00:00:23,511
我们的第一个问题是关于最大的数

7
00:00:23,511 --> 00:00:27,019
对于这个问题，你很可能会自己想出一个贪心算法

8
00:00:27,019 --> 00:00:29,720
因为这是很自然的一件事

9
00:00:30,770 --> 00:00:33,091
想象这样一个场景

10
00:00:33,091 --> 00:00:37,674
你想找一份工作，而你已经经历了几轮面试

11
00:00:37,674 --> 00:00:39,081
一切都很顺利

12
00:00:39,081 --> 00:00:42,589
现在，你的老板将对你进行最后一场面试

13
00:00:42,589 --> 00:00:45,471
他说他会给你工作机会

14
00:00:45,471 --> 00:00:48,509
不过他不会与你商议你的工资

15
00:00:48,509 --> 00:00:52,500
而是会给你几个写着数字的纸条

16
00:00:53,510 --> 00:00:57,180
你的任务是将这些数字排成一行

17
00:00:57,180 --> 00:01:00,890
然后从左往右读出来，这个数字就是你的工资

18
00:01:01,890 --> 00:01:03,920
简单地说，你面临的问题是

19
00:01:03,920 --> 00:01:07,780
将给定的若干数字排列成尽可能大的数

20
00:01:08,910 --> 00:01:11,670
在幻灯片里给出了几个可能的数

21
00:01:13,190 --> 00:01:16,559
那你觉得这个问题的正确答案会是什么呢

22
00:01:18,520 --> 00:01:22,780
当然，正确答案是997531

23
00:01:22,780 --> 00:01:26,963
显然，你需要按照从大到小的顺序

24
00:01:26,963 --> 00:01:28,931
从左到右排列这些数字

25
00:01:28,931 --> 00:01:32,520
我们看看贪心算法是如何做到的

26
00:01:33,740 --> 00:01:38,640
因此，贪婪的策略是先把数字列出

27
00:01:38,640 --> 00:01:41,641
然后找到最大的数字

28
00:01:41,641 --> 00:01:47,121
把它加到你的数里，并从这组数中移除

29
00:01:47,121 --> 00:01:52,410
然后不断重复这个过程
直到数组里没有数字

30
00:01:52,410 --> 00:01:57,000
那么，下一步，我们找到最大的数，又是9

31
00:01:57,000 --> 00:02:02,625
把它添加到我们的数的右边，然后把它从这组数中移除

32
00:02:02,625 --> 00:02:07,680
接下来我们发现了7是最大的数，加到右边

33
00:02:07,680 --> 00:02:09,300
移除

34
00:02:09,300 --> 00:02:15,550
然后我们重复这项操作，5,3,1

35
00:02:18,310 --> 00:02:21,710
然后我们就得到了正确答案，997531

36
00:02:21,710 --> 00:02:25,820
在接下来的视频中我们将设计一个算法来

37
00:02:25,820 --> 00:02:30,450
求得一辆小汽车在长途旅行中最少需要加几次油

38
00:02:30,450 --> 00:02:33,570
我们会发现最大数问题和汽车加油问题

39
00:02:33,570 --> 00:02:37,060
的相似之处

40
00:02:37,060 --> 00:02:39,630
也将定义贪心算法一般是如何工作的