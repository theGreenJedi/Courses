嗨，大家好，今天这节课是关于排序的问题 和往常一样，今天的课程以回顾一个问题来开始 排序是一个非常基本的计算问题 这个问题里，你的输入由一系列元素组成 而你的目标是把这些元素按照(比方说)非降序输出 这个问题的正式描述如下 给定一系列有限个元素 这节课里，我们会用A表示这个序列 而你的目标是把这些相同的元素按非降序输出 同样的 排序是一个非常重要的计算问题，很多高效地算法中都会用到 对于某些算法，按从小到大的顺序处理 以非降序排列的元素是非常重要 在某些其它算法中，仅仅通过排序输入的数据 你就能够执行高效的多的查询 一个典型的例子是搜索问题 这个问题里，我们被有一系列有限多个元素 而你的目标是查看某个特定的元素是否 存在于你的序列中 一个非常简单的解决此问题的方法，当然是从左至右(一个一个地) 检查你的输入序列，看你的元素是否在其中 这大概是一个线性复杂度的算法 而如果你已经知道你的输入数据 是已经排好序的，那么你可以高效得多地做到这一点 大致上，就时间来说，只要输入数据大小的对数级的时间复杂度 这种情形下，我们可以先比较你的元素和中间的元素 如果几乎没有几个元素，那么比较可能就结束了。如果不是这样， 你继续跟左半序列比(比较这个子序列的中间元素)，或者右半序列 所以最坏情况下只要对数级别次数的比较， 你就可以确认你的元素是否在序列中 所以如果你被给予一个序列，而你需要执行很多这样的查询 你需要检查一个对象是否在序列中 对这种对象来说，先对输入数据排序是非常合理的 排序之后再执行这些查询 这样以来，你的算法整体上就会高效得多 好吧那就这样吧！//教育无边界字幕组 神奇的小张伟 而这仅仅是一个非常小的例子 我们会在将来看到很多其它的情况 在这些情形下，对数据排序可以帮助你执行高效的多的查询 所以在这节课之后的视频中 我们会学习很多高效的排序算法