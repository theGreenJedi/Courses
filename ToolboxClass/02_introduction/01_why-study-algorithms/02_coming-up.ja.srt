1
00:00:02,350 --> 00:00:06,550
こんにちは皆さん、データ構造とアルゴリズム専門科目の次の講義です。

2
00:00:07,630 --> 00:00:10,260
ここではこれから2つのレクチャでお話をする内容についての

3
00:00:10,260 --> 00:00:13,212
ちょっとした注意点について話そうと思います。

4
00:00:13,212 --> 00:00:16,510
これからすぐに入っていくことになる次の2つのレクチャでは、

5
00:00:16,510 --> 00:00:20,600
いくつかのアルゴリズム問題を見ていきます。特に、

6
00:00:20,600 --> 00:00:24,080
フィボナッチ数を計算するアルゴリズムと、最大公約数を計算する

7
00:00:24,080 --> 00:00:27,320
アルゴリズムを見ていきます。

8
00:00:27,320 --> 00:00:31,150
これらの問題は、現時点では、この講義で最初にお話しするアルゴリズムとしては

9
00:00:31,150 --> 00:00:34,320
少し奇妙なようにも見えます。

10
00:00:34,320 --> 00:00:38,160
これらの問題は数論的、数値的なもので、実は

11
00:00:38,160 --> 00:00:42,480
これから先の講義で学習する予定のアルゴリズムとあまり似ていません。

12
00:00:42,480 --> 00:00:45,150
だからなんでこんな問題を見るのか、また何に注目をすればいいのかを

13
00:00:45,150 --> 00:00:47,080
疑問に思うかもしれません。

14
00:00:47,080 --> 00:00:50,440
そこが、今日これから私が本当に話をしておきたいところなのです。

15
00:00:50,440 --> 00:00:53,880
特にこの2つのテーマが選ばれたのは、なぜアルゴリズムがきわめて重要なのか

16
00:00:53,880 --> 00:00:59,150
ということをもっとも明らかにしてくれる例だからです。

17
00:00:59,150 --> 00:01:04,280
なぜよいアルゴリズムを見つけることがさまざまな問題に対してそんなに重要なのか。

18
00:01:05,550 --> 00:01:06,800
そしてさらに、

19
00:01:06,800 --> 00:01:10,080
この二つの問題は、両方とも次のような非常に興味深い特性を持っています。

20
00:01:11,280 --> 00:01:15,820
まずは、これらの問題は両方ともとてもストレートなアルゴリズムが解法として存在するということです。

21
00:01:15,820 --> 00:01:19,160
あなたが解こうとしている問題の定義自体からそのまま取り出せるような

22
00:01:19,160 --> 00:01:20,040
ものです。

23
00:01:20,040 --> 00:01:23,570
その定義からそれなりに直接アルゴリズムを取り出すことが出来るのです。

24
00:01:23,570 --> 00:01:26,180
与えられている問題文から取り出して、

25
00:01:26,180 --> 00:01:28,940
その取り出したものをアルゴリズムとして実装するのです。

26
00:01:28,940 --> 00:01:32,520
そして、それなりに素早く、ちゃんと動くコードを手に入れることが出来ます。

27
00:01:32,520 --> 00:01:34,560
そのコードはちゃんとあなたが計算したいことを計算してくれます。

28
00:01:35,950 --> 00:01:38,920
残念ながらどちらのケースも、

29
00:01:38,920 --> 00:01:43,730
これらの非常にストレートなアルゴリズムでは、まったく遅すぎます。

30
00:01:43,730 --> 00:01:47,390
実行に何千年もかかってしまうようなアルゴリズムしか得られないのです。

31
00:01:47,390 --> 00:01:48,990
それほど多くない入力に対してもです。

32
00:01:50,240 --> 00:01:53,710
実践的な目的にはこのような事態は受け入れられません。

33
00:01:53,710 --> 00:01:58,040
計算が完了するのに何千年も待つ時間なんてないんですから。

34
00:01:58,040 --> 00:02:00,510
なので、もっとよい解法が必要です。ここで、

35
00:02:00,510 --> 00:02:03,229
両方のケースでもっとよい解法があるということを明らかにしていきます。

36
00:02:04,300 --> 00:02:07,620
もう少し複雑なアルゴリズムがあり、

37
00:02:07,620 --> 00:02:12,040
それがちゃんと動かすのに、いくらかの妙案が必要となるようなものであるということを見ていきます。

38
00:02:12,040 --> 00:02:15,240
このもう少し複雑なアルゴリズムは、ちゃんと動きますし、

39
00:02:15,240 --> 00:02:17,280
実はものすごく速いのです。

40
00:02:17,280 --> 00:02:19,830
これらの問題の妥当な入力量の例については、瞬きする間に

41
00:02:19,830 --> 00:02:21,380
解くことが出来ます。

42
00:02:22,600 --> 00:02:26,830
つまり、この具体例で本当に説明したいポイントは、

43
00:02:26,830 --> 00:02:30,750
少なくともこの実例、そして

44
00:02:30,750 --> 00:02:33,210
このコース全体で見るほかのさまざまな実例を通して伝えたいのは、

45
00:02:33,210 --> 00:02:36,840
アルゴリズムを発見するということは大きな違いを生むのだということです。

46
00:02:36,840 --> 00:02:39,730
その違いとは、生きているうちに終わらないくらい

47
00:02:39,730 --> 00:02:43,350
時間のかかるアルゴリズムと、

48
00:02:43,350 --> 00:02:47,400
始まったかどうかわからないうちに終わってしまうアルゴリズムの差から出てきます。

49
00:02:47,400 --> 00:02:50,680
つまり、これはあなたが注意を注がなければならないものなのです。

50
00:02:50,680 --> 00:02:54,580
なぜよいアルゴリズムを探すということがそんなに大事なのか。

51
00:02:56,170 --> 00:02:59,800
それが次に出てくる話題です。次のレクチャーをお楽しみに。