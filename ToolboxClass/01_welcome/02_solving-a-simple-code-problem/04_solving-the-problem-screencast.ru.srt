1
00:00:00,480 --> 00:00:04,230
Привет, в этом коротком видео 
мы вместе решим задание по программированию.

2
00:00:04,230 --> 00:00:06,620
Задание само по себе довольно простое.

3
00:00:06,620 --> 00:00:10,560
Таким образом, главная цель этого видео -
продемонстрировать общий план

4
00:00:10,560 --> 00:00:12,730
решения задачи по программированию в этом курсе.

5
00:00:15,170 --> 00:00:17,250
Задача называется "А плюс B".

6
00:00:17,250 --> 00:00:21,250
В этой задаче мы получаем два числа
со стандартного ввода и

7
00:00:21,250 --> 00:00:25,230
нашей целью является вывести их
сумму на стандартный вывод.

8
00:00:26,840 --> 00:00:31,380
Вы можете увидеть два примера
тестов на этой странице.

9
00:00:31,380 --> 00:00:36,840
Например, если на ввод вашей программе
подать целые числа 3 и 

10
00:00:36,840 --> 00:00:39,760
2, она должна будет вывести 5.

11
00:00:39,760 --> 00:00:43,776
Если на ввод подать два целых числа 7 и

12
00:00:43,776 --> 00:00:48,750
9, то ваша программа должна будет
 вывести 16, конечно.

13
00:00:48,750 --> 00:00:54,480
Следующий раздел содержит
три стартовых файла.

14
00:00:54,480 --> 00:00:59,330
Которые в данном случае, на самом деле, 
являются решениями, а не просто стартовыми файлами.

15
00:00:59,330 --> 00:01:05,300
Эти файлы представлены на языках 
программирования Python, Java, C++.

16
00:01:05,300 --> 00:01:09,850
И наконец, последний раздел
 содержит инструкцию

17
00:01:09,850 --> 00:01:13,540
состоящую из четырех этапов
для решения задачи.

18
00:01:13,540 --> 00:01:16,260
Итак, давайте пройдем эти
 четыре этапа вместе.

19
00:01:17,640 --> 00:01:21,540
Первый шаг заключатеся в загрузке
одного из стартовых файлов.

20
00:01:21,540 --> 00:01:26,929
Для этого, давайте выберем
 стартовый файл на C++ и скачаем его.

21
00:01:31,297 --> 00:01:31,800
Ладно.

22
00:01:37,740 --> 00:01:41,971
Теперь, когда файл загружен,
 давайте заглянем внутрь.

23
00:01:41,971 --> 00:01:48,690
Итак, это очень простое решение, которое
 для начала создает три перменные.

24
00:01:48,690 --> 00:01:52,570
После этого она считывает a и b
со стандратного ввода.

25
00:01:52,570 --> 00:01:54,850
После этого, вычисляет их сумму.

26
00:01:54,850 --> 00:02:00,090
И наконец, выводит эту сумму на
стандартный вывод.

27
00:02:03,030 --> 00:02:06,110
Итак, для запуска этой программы
 мы должны скомпилировать ее.

28
00:02:06,110 --> 00:02:09,490
Да, это уже второй шаг инструкции.

29
00:02:09,490 --> 00:02:12,898
Для этого мы рекомендуем
 использовать те же

30
00:02:12,898 --> 00:02:17,850
флаги комплияции,
 какие показаны на этой странице.

31
00:02:18,920 --> 00:02:22,850
Это гарантирует, что ваша программа
 будет вести себя одинаково

32
00:02:23,920 --> 00:02:26,620
в тестовой системе и
 на вашем локальном компьютере.

33
00:02:26,620 --> 00:02:33,198
Так что, просто давайте скопируем флаги и

34
00:02:33,198 --> 00:02:37,970
используем их для компиляции нашей программы.

35
00:02:37,970 --> 00:02:43,250
Итак, это создало исполняемый файл a.out
 и теперь мы можем использовать его.

36
00:02:46,750 --> 00:02:49,990
Давайте дадим этой программе, например, 2 и 3.

37
00:02:49,990 --> 00:02:51,710
Итак, она вывела 5.

38
00:02:51,710 --> 00:02:54,910
Отлично. И еще один тест.

39
00:02:54,910 --> 00:03:00,250
9 и 4, вывод - 13, как и ожидалось.

40
00:03:00,250 --> 00:03:02,040
Все идет нормально.

41
00:03:02,040 --> 00:03:10,550
А теперь следующим шагом,
 нужно сдать решение этой задания.

42
00:03:10,550 --> 00:03:12,030
Давайте вернемся наверх,
 к вкладке сдачи задания.

43
00:03:14,680 --> 00:03:20,360
Нажмите "Создать решение",
 затем замените данный файл на наш .cpp файл

44
00:03:25,368 --> 00:03:27,240
и нажмите кнопку "Отправить".

45
00:03:29,160 --> 00:03:33,360
Так через некоторое время,
 система тестирования покажет

46
00:03:33,360 --> 00:03:38,110
что наше решение прошло все тесты,
 этого вполне достаточно.

47
00:03:38,110 --> 00:03:41,122
В данном конкретном случае,
 вывод системы пуст,

48
00:03:41,122 --> 00:03:45,590
потому что нет никаих сообщений об ошибках.

49
00:03:46,730 --> 00:03:50,800
Чтобы проиллюстрировать это еще раз, позвольте мне быстро повторить все процедуру

50
00:03:50,800 --> 00:03:53,090
для языка программирования Python.

51
00:03:53,090 --> 00:03:57,640
Итак, мы сначала загружаем
 стартовый файл для Python.

52
00:04:08,902 --> 00:04:10,570
Давайте посмотрим, что находится внутри.

53
00:04:14,053 --> 00:04:16,890
Да, программа снова очень простая,
 как и следовало ожидать.

54
00:04:16,890 --> 00:04:22,600
Мы просто берем a и b со стандратного ввода
 и выводим их сумму.

55
00:04:22,600 --> 00:04:26,640
Теперь нам нужно запустить эту программу.

56
00:04:26,640 --> 00:04:32,510
Для этого вы можете перети на эту страницу,
 с доступными языками программирования.

57
00:04:32,510 --> 00:04:37,780
Опять же, просто, чтобы проверить,
 как мы запускаем этот скрипт.

58
00:04:37,780 --> 00:04:39,690
Мы должны просто использовать Python, Python 3.

59
00:04:39,690 --> 00:04:41,800
Так давайте сделаем это.

60
00:04:45,420 --> 00:04:53,060
Например, 4 и 4, на вывод получаем 8,
 как и следовало ожидать.

61
00:04:53,060 --> 00:05:00,510
Так что давйате просто вернемся наверх
 и сдадим этой решение.

62
00:05:00,510 --> 00:05:05,870
Перейдите на вкладку с решениями,
 и нажмие на кнопку "Создать решение" и

63
00:05:05,870 --> 00:05:13,319
замените этот файл на APlusB.py.

64
00:05:19,004 --> 00:05:23,850
Когда файл будет загружен, нажмите кнопку "Отправиь решение".

65
00:05:26,875 --> 00:05:33,330
И черехз несколько секунд решение 
будет принято тестовой системой.

66
00:05:33,330 --> 00:05:36,060
Что ж, было не очень сложно, не так ли?

67
00:05:36,060 --> 00:05:38,790
В следующем видео мы увидим гораздо более

68
00:05:38,790 --> 00:05:41,190
интересный пример вычислительной задачи.

69
00:05:41,190 --> 00:05:44,610
В этой задаче мы начнем с решения.

70
00:05:44,610 --> 00:05:48,260
Мы отправим это решение тестовой системе,
 чтобы выяснить, что оно содержить ошибки,

71
00:05:48,260 --> 00:05:49,230
на самом деле.

72
00:05:49,230 --> 00:05:50,380
Это ошибка.

73
00:05:50,380 --> 00:05:56,200
Мы исправим эту ошибку и попробуем отправить его снова,
 но поймем что наше решение является слишом медленным.

74
00:05:56,200 --> 00:06:00,900
Мы получим превышение ограничения по времени
 в сообщении от тестовой системы.

75
00:06:00,900 --> 00:06:06,610
Это означает, что для больших наборов данных,
 она работает, например, более чем секунду.

76
00:06:06,610 --> 00:06:11,270
Так это потребует от нас придумать более
 быстрое решение.

77
00:06:11,270 --> 00:06:13,860
Мы реализуем его,
 и снова отправим в систему,

78
00:06:13,860 --> 00:06:16,940
чтобы узнать, что решение
 по прежнему содержит ошибку.

79
00:06:16,940 --> 00:06:21,150
Мы будем использовать стресс-тестирование
 для поиска ошибки, исправим ее и

80
00:06:21,150 --> 00:06:27,144
наконец, отправим правильное решение,
 которое пройдет все тесты.