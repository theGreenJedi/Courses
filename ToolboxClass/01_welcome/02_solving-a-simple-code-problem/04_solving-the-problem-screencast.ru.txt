Привет, в этом коротком видео 
мы вместе решим задание по программированию. Задание само по себе довольно простое. Таким образом, главная цель этого видео -
продемонстрировать общий план решения задачи по программированию в этом курсе. Задача называется "А плюс B". В этой задаче мы получаем два числа
со стандартного ввода и нашей целью является вывести их
сумму на стандартный вывод. Вы можете увидеть два примера
тестов на этой странице. Например, если на ввод вашей программе
подать целые числа 3 и 2, она должна будет вывести 5. Если на ввод подать два целых числа 7 и 9, то ваша программа должна будет
 вывести 16, конечно. Следующий раздел содержит
три стартовых файла. Которые в данном случае, на самом деле, 
являются решениями, а не просто стартовыми файлами. Эти файлы представлены на языках 
программирования Python, Java, C++. И наконец, последний раздел
 содержит инструкцию состоящую из четырех этапов
для решения задачи. Итак, давайте пройдем эти
 четыре этапа вместе. Первый шаг заключатеся в загрузке
одного из стартовых файлов. Для этого, давайте выберем
 стартовый файл на C++ и скачаем его. Ладно. Теперь, когда файл загружен,
 давайте заглянем внутрь. Итак, это очень простое решение, которое
 для начала создает три перменные. После этого она считывает a и b
со стандратного ввода. После этого, вычисляет их сумму. И наконец, выводит эту сумму на
стандартный вывод. Итак, для запуска этой программы
 мы должны скомпилировать ее. Да, это уже второй шаг инструкции. Для этого мы рекомендуем
 использовать те же флаги комплияции,
 какие показаны на этой странице. Это гарантирует, что ваша программа
 будет вести себя одинаково в тестовой системе и
 на вашем локальном компьютере. Так что, просто давайте скопируем флаги и используем их для компиляции нашей программы. Итак, это создало исполняемый файл a.out
 и теперь мы можем использовать его. Давайте дадим этой программе, например, 2 и 3. Итак, она вывела 5. Отлично. И еще один тест. 9 и 4, вывод - 13, как и ожидалось. Все идет нормально. А теперь следующим шагом,
 нужно сдать решение этой задания. Давайте вернемся наверх,
 к вкладке сдачи задания. Нажмите "Создать решение",
 затем замените данный файл на наш .cpp файл и нажмите кнопку "Отправить". Так через некоторое время,
 система тестирования покажет что наше решение прошло все тесты,
 этого вполне достаточно. В данном конкретном случае,
 вывод системы пуст, потому что нет никаих сообщений об ошибках. Чтобы проиллюстрировать это еще раз, позвольте мне быстро повторить все процедуру для языка программирования Python. Итак, мы сначала загружаем
 стартовый файл для Python. Давайте посмотрим, что находится внутри. Да, программа снова очень простая,
 как и следовало ожидать. Мы просто берем a и b со стандратного ввода
 и выводим их сумму. Теперь нам нужно запустить эту программу. Для этого вы можете перети на эту страницу,
 с доступными языками программирования. Опять же, просто, чтобы проверить,
 как мы запускаем этот скрипт. Мы должны просто использовать Python, Python 3. Так давайте сделаем это. Например, 4 и 4, на вывод получаем 8,
 как и следовало ожидать. Так что давйате просто вернемся наверх
 и сдадим этой решение. Перейдите на вкладку с решениями,
 и нажмие на кнопку "Создать решение" и замените этот файл на APlusB.py. Когда файл будет загружен, нажмите кнопку "Отправиь решение". И черехз несколько секунд решение 
будет принято тестовой системой. Что ж, было не очень сложно, не так ли? В следующем видео мы увидим гораздо более интересный пример вычислительной задачи. В этой задаче мы начнем с решения. Мы отправим это решение тестовой системе,
 чтобы выяснить, что оно содержить ошибки, на самом деле. Это ошибка. Мы исправим эту ошибку и попробуем отправить его снова,
 но поймем что наше решение является слишом медленным. Мы получим превышение ограничения по времени
 в сообщении от тестовой системы. Это означает, что для больших наборов данных,
 она работает, например, более чем секунду. Так это потребует от нас придумать более
 быстрое решение. Мы реализуем его,
 и снова отправим в систему, чтобы узнать, что решение
 по прежнему содержит ошибку. Мы будем использовать стресс-тестирование
 для поиска ошибки, исправим ее и наконец, отправим правильное решение,
 которое пройдет все тесты.