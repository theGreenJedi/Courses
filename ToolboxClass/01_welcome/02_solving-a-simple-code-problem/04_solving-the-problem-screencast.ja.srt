1
00:00:00,480 --> 00:00:04,230
こんにちは、この短いビデオでは、プログラミング問題を一緒に解いていきます。

2
00:00:04,230 --> 00:00:06,620
問題自身はとても簡単なものです。

3
00:00:06,620 --> 00:00:10,560
このビデオの主な目的は、このクラスではどのような手順でプログラミング問題を

4
00:00:10,560 --> 00:00:12,730
解けばよいのかを示すことです。

5
00:00:15,170 --> 00:00:17,250
これは、「A plus B」という問題です。

6
00:00:17,250 --> 00:00:21,250
この問題では、標準入力で2桁の数字が与えられます。そして、

7
00:00:21,250 --> 00:00:25,230
目標は、標準出力にその2数を足した値を出力することです。

8
00:00:26,840 --> 00:00:31,380
問題ページには、2つのサンプルテストがみえるでしょう。

9
00:00:31,380 --> 00:00:36,840
たとえば、もしあなたのプログラムに対する入力が、整数値の3と

10
00:00:36,840 --> 00:00:39,760
2だったら、プログラムは5を出力しなくてはなりません。

11
00:00:39,760 --> 00:00:43,776
また、入力が2つの整数値7と

12
00:00:43,776 --> 00:00:48,750
9だったら、プログラムはもちろん16を出力するはずです。

13
00:00:48,750 --> 00:00:54,480
次のセクションには、3つのスタート用ファイルが含まれています。

14
00:00:54,480 --> 00:00:59,330
今回のケースでは、スタート用ではなく実際の解答が載っています。

15
00:00:59,330 --> 00:01:05,300
ファイルはPython、Java、C++の各プログラミング言語用に用意されています。

16
00:01:05,300 --> 00:01:09,850
最後のセクションにはインストラクションがあり、

17
00:01:09,850 --> 00:01:13,540
ここでは4つのステップでこの問題を解く説明をしています。

18
00:01:13,540 --> 00:01:16,260
実際にこの4ステップを一緒にやって見ましょう。

19
00:01:17,640 --> 00:01:21,540
最初のステップでは、開始用ファイルのうちの一つをダウンロードします。

20
00:01:21,540 --> 00:01:26,929
ここでは、C++の開始用ファイルを選んでダウンロードしてみます。

21
00:01:31,297 --> 00:01:31,800
この線の勾配になります。この導関数項はこの線の勾配となります。しかしこの

22
00:01:37,740 --> 00:01:41,971
ファイルがダウンロードされたので中身を見てみましょう。

23
00:01:41,971 --> 00:01:48,690
この問題はとても単純な問題ですね。まず最初に3つの変数を作っていますね。

24
00:01:48,690 --> 00:01:52,570
そしてaとbの値を標準入力から読み込みます。

25
00:01:52,570 --> 00:01:54,850
その後、合計を計算します。

26
00:01:54,850 --> 00:02:00,090
そして最後にその合計を標準出力に出力します。

27
00:02:03,030 --> 00:02:06,110
このプログラムを実行するために、まずコンパイルをする必要があります。

28
00:02:06,110 --> 00:02:09,490
それがインストラクションの2つ目のステップですね。

29
00:02:09,490 --> 00:02:12,898
これについてですが、このページに示してあるものと同じ

30
00:02:12,898 --> 00:02:17,850
コンパイラフラグを使うことを強くお勧めします。

31
00:02:18,920 --> 00:02:22,850
そうすることによって、あなたのプログラムがテストシステムと

32
00:02:23,920 --> 00:02:26,620
あなたのローカルマシンで同じ挙動をすることを保証できるでしょう。

33
00:02:26,620 --> 00:02:33,198
それではこのケースでは単純にフラグをコピーして

34
00:02:33,198 --> 00:02:37,970
プログラムをコンパイルするのに使いましょう。

35
00:02:37,970 --> 00:02:43,250
するとa.outという実行ファイルが生成されて、それを実行することが出来ます。

36
00:02:46,750 --> 00:02:49,990
ではこのプログラムに例である2と3を入れてみましょう。

37
00:02:49,990 --> 00:02:51,710
アウトプットは5ですね。

38
00:02:51,710 --> 00:02:54,910
では、もう一つテストを。

39
00:02:54,910 --> 00:03:00,250
9と4だと13が出力されます。期待通りですね。

40
00:03:00,250 --> 00:03:02,040
ここまではよいですね。

41
00:03:02,040 --> 00:03:10,550
ここから、次のステップは実際に問題の解答を提出して見ます。

42
00:03:10,550 --> 00:03:12,030
submissionタブへ行ってみましょう。

43
00:03:14,680 --> 00:03:20,360
“create submission”を押下し、この.cppファイルを置き換えます。

44
00:03:25,368 --> 00:03:27,240
そしてSubmitボタンを押下します。

45
00:03:29,160 --> 00:03:33,360
しばらくたつと、テストシステムが、解答が

46
00:03:33,360 --> 00:03:38,110
すべてのテストをクリアした、と表示します。非常によいですね。

47
00:03:38,110 --> 00:03:41,122
今回のケースでは、grader output（採点時出力）は空です。

48
00:03:41,122 --> 00:03:45,590
つまり、今回はエラーメッセージが出なかったということです。

49
00:03:46,730 --> 00:03:50,800
もう一度説明するために、Python言語で同じ手順を

50
00:03:50,800 --> 00:03:53,090
手早く繰り返させてください。

51
00:03:53,090 --> 00:03:57,640
まず最初にPython開始用ファイルをダウンロードします。

52
00:04:08,902 --> 00:04:10,570
中身を見てみましょう。

53
00:04:14,053 --> 00:04:16,890
今回もプログラムは期待通り非常にシンプルなものですね。

54
00:04:16,890 --> 00:04:22,600
標準入力からaとbを取り、aとbの和を出力します。

55
00:04:22,600 --> 00:04:26,640
ここで、このプログラムを実行しなくてはなりませんが、

56
00:04:26,640 --> 00:04:32,510
まず選択可能なプログラミング言語のページに行ってみるのもよいでしょう。

57
00:04:32,510 --> 00:04:37,780
Pythonのスクリプトをどう実行するかを確認するだけのためです。

58
00:04:37,780 --> 00:04:39,690
単にPythonもしくはPython 3を使用します。

59
00:04:39,690 --> 00:04:41,800
ではやってみましょう。

60
00:04:45,420 --> 00:04:53,060
たとえば4と4では、8が期待通りに出力されます。

61
00:04:53,060 --> 00:05:00,510
では解答の提出をやってみましょう。

62
00:05:00,510 --> 00:05:05,870
まずmy submissionタブに行き、Create Submissionボタンを押下して、

63
00:05:05,870 --> 00:05:13,319
そして、APlusB.pyにファイルを置き換えます。

64
00:05:19,004 --> 00:05:23,850
ファイルがアップデートされるので、最後にSubmitボタンを押下します。

65
00:05:26,875 --> 00:05:33,330
数秒のうちに、解答はテストシステムに受理されます。

66
00:05:33,330 --> 00:05:36,060
そんなに難しくないですね。

67
00:05:36,060 --> 00:05:38,790
次のビデオでは、もっと

68
00:05:38,790 --> 00:05:41,190
興味深い計算問題の例題を見てみることにします。

69
00:05:41,190 --> 00:05:44,610
その問題では、素朴な回答から始めて、

70
00:05:44,610 --> 00:05:48,260
テストシステムに提出し、その解答が実はバグった解答であるということを

71
00:05:48,260 --> 00:05:49,230
明らかにします。

72
00:05:49,230 --> 00:05:50,380
バグがあるということをね。

73
00:05:50,380 --> 00:05:56,200
そしてそのバグを直し提出しなおすと、今度は解答が遅すぎるということが明らかになります。

74
00:05:56,200 --> 00:06:00,900
テストシステムから制限時間超過というフィードバックメッセージが返されます。

75
00:06:00,900 --> 00:06:06,610
つまり、たとえば大きなデータセットでは一秒以上の時間がかかっているということです。

76
00:06:06,610 --> 00:06:11,270
そのため、さらに速い解答を見つける必要があるのです。

77
00:06:11,270 --> 00:06:13,860
その更に早い回答を実装し、システムに提出しますが、

78
00:06:13,860 --> 00:06:16,940
まだバグが残っていることが明らかになります。

79
00:06:16,940 --> 00:06:21,150
ストレステストを行ってバグを見つけ出して修正し、

80
00:06:21,150 --> 00:06:27,144
ようやくすべてのテストを通過する正しい解答をシステムに提出することができるのです。