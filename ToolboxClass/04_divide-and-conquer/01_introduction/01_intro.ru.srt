1
00:00:00,600 --> 00:00:02,630
Привет, я Нэйл Родс.

2
00:00:02,630 --> 00:00:05,390
Добро пожаловать в модуль - разделяй и властвуй. 

3
00:00:05,390 --> 00:00:08,950
В последнем цикле лекций, вы изучали,
как использовать "жадные" алгоритмы

4
00:00:08,950 --> 00:00:10,900
для решения определённых классов проблем.

5
00:00:11,920 --> 00:00:14,770
В этом разделе курса лекций, вы изучите способы 
решения проблем используя "разделяй и

6
00:00:14,770 --> 00:00:15,660
властвуй" алгоритмы.

7
00:00:16,880 --> 00:00:19,030
Термин - разделяй и властвуй довольно древний, и 

8
00:00:19,030 --> 00:00:22,940
применительно к военному делу, предполагает, что 
легче победить несколько небольших групп

9
00:00:22,940 --> 00:00:25,560
противников, чем пытаться 
разбить одного большого.

10
00:00:26,560 --> 00:00:28,500
Подобным образом, "разделяй и 

11
00:00:28,500 --> 00:00:33,630
властвуй" алгоритм использует преимущество 
разбивая проблему на одну или 

12
00:00:33,630 --> 00:00:36,380
более подпроблем, которые 
затем будут решены независимо.

13
00:00:37,950 --> 00:00:41,140
Также как, не все задачи могут быть 
решены используя "жадный" алгоритм,

14
00:00:41,140 --> 00:00:44,260
не все проблемы решаемы 
используя "разделяй и властвуй".

15
00:00:44,260 --> 00:00:47,640
Вместо того, оба подхода 
являются частью инструментария  

16
00:00:47,640 --> 00:00:49,950
стратегиями для решения задач.

17
00:00:49,950 --> 00:00:52,740
По мере создания алгоритма, 
вам придется учитывать будет ли или  

18
00:00:52,740 --> 00:00:54,730
нет работать "жадный" подход.

19
00:00:54,730 --> 00:00:57,230
Если нет, сработает ли "разделяй и 
властвуй" алгоритм?

20
00:00:59,510 --> 00:01:02,960
Взглянем на общую структуру 
алгоритма "разделяй и властвуй".

21
00:01:02,960 --> 00:01:06,180
Здесь, имеется задача, которую 
необходимо решить, представленная абстрактно

22
00:01:06,180 --> 00:01:06,950
в виде синего прямоугольника.

23
00:01:08,120 --> 00:01:12,370
Мы разбиваем задачу на набор составляющих 
не пересекающихся подзадач. 

24
00:01:12,370 --> 00:01:14,540
Отображённых в виде цветных прямоугольников,

25
00:01:15,610 --> 00:01:19,470
Важно отметить, что подзадачи 
того же типа, что и исходная.

26
00:01:21,750 --> 00:01:26,030
Для примера, здесь представлен способ разбивки 
исходной прямоугольной задачи. 

27
00:01:26,030 --> 00:01:29,140
на набор подзадач 
различного типа.

28
00:01:29,140 --> 00:01:30,930
Данные подзадачи треугольники.

29
00:01:30,930 --> 00:01:34,110
Следовательно, такая разбивка не соответствует 
алгоритму "разделяй и властвуй".

30
00:01:35,600 --> 00:01:38,710
Теперь, мы разбили 
исходную прямоугольную задачу

31
00:01:38,710 --> 00:01:41,940
на набор подзадач, которые 
сами являются прямоугольниками. 

32
00:01:41,940 --> 00:01:46,100
Сложность в том, что эти 
подзадачи перекрывают друг друга.

33
00:01:46,100 --> 00:01:49,390
Что означает, что данный способ, опять же, не отображает 
алгоритм "разделяй и властвуй".

34
00:01:51,110 --> 00:01:53,800
Возвращаясь к разбивке

35
00:01:53,800 --> 00:01:58,770
нашей задачи на набор непересекающихся 
подзадач одного исходного типа.

36
00:01:59,920 --> 00:02:04,650
Разбив на части, следующий шаг 
решить каждую подзадачу отдельно.

37
00:02:04,650 --> 00:02:07,920
Решаем первую подзадачу, 
отмечая решение "галочкой".

38
00:02:07,920 --> 00:02:11,120
Продолжаем, решая каждую подзадачу 
в свою очередь.

39
00:02:13,780 --> 00:02:17,550
Как только мы успешно решили 
каждую подзадачу,

40
00:02:17,550 --> 00:02:20,510
мы объединяем результаты в 
решение для начальной проблемы.

41
00:02:22,660 --> 00:02:25,520
Возникает вопрос, 
каким образом решать каждую подзадачу?

42
00:02:26,930 --> 00:02:31,800
Поскольку, каждая подзадача того же 
типа, как и исходная, мы можем рекурсивно

43
00:02:31,800 --> 00:02:35,450
решить подзадачи используя ту же 
стратегию - " разделяй и властвуй". 

44
00:02:35,450 --> 00:02:39,930
Таким образом, "разделяй и властвуй" алгоритм 
естественным образом приводит к рекурсивному решению.

45
00:02:41,000 --> 00:02:44,780
На практике, при том, что возможно прописать код 
для алгоритма "разделяй и властвуй" рекурсивно, 

46
00:02:44,780 --> 00:02:48,810
зачастую предпочтительнее 
рекурсивного будет последовательный / итеративный вариант.

47
00:02:48,810 --> 00:02:52,380
Обычно причиной может служить то, что некоторые 
программисты чувствуют себя менее уверенно с  

48
00:02:52,380 --> 00:02:56,380
рекурсией по сравнению с итеративным способом, а 
также из-за  дополнительного объема памяти 

49
00:02:56,380 --> 00:03:00,120
которую рекурсия может занять 
в виде растущего размера стека.

50
00:03:00,120 --> 00:03:03,820
Также, ограничения накладывает язык программирования и 
детали воплощения кода. 

51
00:03:03,820 --> 00:03:08,020
Подытоживая, алгоритм "разделяй и 
властвуй" состоит из: первое 

52
00:03:08,020 --> 00:03:12,330
деления задачи на непересекающиеся 
подзадачи того же типа.

53
00:03:12,330 --> 00:03:15,400
Второе: рекурсивно решать 
получившиеся подзадачи.

54
00:03:15,400 --> 00:03:17,990
и третье: объединить полученные результаты.

55
00:03:17,990 --> 00:03:22,280
В следующем видео, мы рассмотрим чрезвычайно 
простой пример использования "разделяй и властвуй".