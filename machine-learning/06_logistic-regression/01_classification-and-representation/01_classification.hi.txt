इस और अगले कुछ विडीओस में, मैं बात करना चाहूँगा क्लैसिफ़िकेशन प्राब्लम्ज़ के बारे में जहाँ वेरीअबल वाय जो आप प्रिडिक्ट करना चाहते हैं वह वैल्यूड होता हैं. हम डिवेलप करेंगे एक अल्गोरिद्म जिसे कहते हैं लजिस्टिक रिग्रेशन, जो सर्वाधिक प्रचलित और सर्वाधिक व्यापक लर्निंग अल्गोरिद्म है आज. यहाँ हैं कुछ उदाहरण हैं क्लैसिफ़िकेशन प्राब्लम्ज़ के. कुछ पहले हमने बात की थी ईमेल स्पैम क्लैसिफ़िकेशन की बतौर उदाहरण एक क्लैसिफ़िकेशन प्रॉब्लम के. एक और उदाहरण होगा क्लैसिफ़ाई करना ऑनलाइन ट्रैन्सैक्शंज़ को. अत: यदि आपकी है एक वेबसाइट जो बेचती है सामान और यदि आप जानना चाहते हैं कि एक विशेष ट्रैंज़ैक्शन धोखा है कि नहीं, क्या कोई इस्तेमाल तो नहीं कर रहा चुराया हुआ क्रेडिट कॉर्ड या चुराया हुआ यूज़र पास्वर्ड. एक और क्लैसिफ़िकेशन प्रॉब्लम है. और कुछ पहले हमने बात की थी उदाहरण की क्लासिफाई करना ट्यूमर्स को कैन्सरस, मालिगनेंट या बिनाइन ट्यूमर्स में. इन सब प्राब्लम्ज़ में वेरीअबल जो आप प्रिडिक्ट करने की कोशिश कर रहे हैं वह है एक वेरीअबल वाय जो ले सकता है दो वैल्यूज़ या ज़ीरो या एक, या स्पैम या नहीं स्पैम, धोखा या नहीं धोखा, मालिगनेंट या बिनाइन. एक और नाम क्लास के लिए जो हम डिनोट करते है ज़ीरो द्वारा वह है नेगेटिव क्लास, और एक और नाम क्लास के लिए जो हम डिनोट करते है एक से वह है पॉज़िटिव क्लास. अत: ज़ीरो हम डिनोट करते हैं बिनाइन ट्यूमर के लिए, और एक, पॉज़िटिव क्लास हम डिनोट करते हैं एक मालिगनेंट ट्यूमर को. असाइन करना दो क्लैसेज़ को, स्पैम नॉट स्पैम और इसी प्रकार आगे. असाइन करना दो क्लैसेज़ को, पॉज़िटिव और नेगेटिव को ज़ीरो और एक में कुछ मनमाना है और इससे वास्तव में कोई अंतर नहीं आता लेकिन अक्सर ऐसा अनुभव है कि एक नेगेटिव क्लास इशारा करती हैं अनुपस्थिति किसी चीज़ की जैसे न होना मालिगनेंट ट्यूमर का. जबकि एक पॉज़िटिव क्लास इशारा करती है उपस्थिति किसी चीज़ की जो हम शायद हम ढूँढ रहे थे, लेकिन परिभाषा कि क्या नेगेटिव है और क्या पॉज़िटिव बहुत कुछ स्वेच्छित है और उससे उतना अंतर नहीं पड़ता. अभी के लिए हम शुरू करेंगे क्लैसिफ़िकेशन प्राब्लम्ज़ सिर्फ़ दो क्लैसेज़ के साथ ज़ीरो और एक. बाद में हम बात करेंगे मल्टी-क्लास प्राब्लम्ज़ के बारे में भी जहाँ इसलिए वाय ले सकता है चार वैल्यूज़ ज़ीरो, एक, दो और तीन. इसे कहते हैं मल्टीक्लास क्लैसिफ़िकेशन प्रॉब्लम. लेकिन अगले कुछ विडीओस में, शुरू करते हैं दो क्लास या बाइनेरी क्लैसिफ़िकेशन प्रॉब्लम से और हम सोचेंगे मल्टीक्लास के बारे में बाद में. तो कैसे डिवेलप करते हैं हम एक क्लैसिफ़िकेशन अल्गोरिद्म? यहाँ है एक उदाहरण ट्रेनिंग सेट का एक क्लैसिफ़िकेशन टास्क का क्लैसिफ़ाई करने के लिए एक ट्यूमर को मालिगनेंट या बिनाइन. और ध्यान दें, कि मालिगनैन्सी लेती है सिर्फ़ दो वैल्यूज़, ज़ीरो या एक, न या हाँ. अत: एक काम जो हम कर सकते हैं दिया होने पर यह ट्रेनिंग सेट कि अप्लाई करें अल्गोरिद्म जो हमें पहले से पता है. लिनीअर रेग्रेशन इस डेटा सेट को और कोशिश करें फ़िट करने की सीधी लाइन इस डेटा को. इसलिए यदि आप लेते हैं यह ट्रेनिंग सेट और फ़िट करते हैं एक सीधी लाइन इसमें शायद आपको मिले एक हायपॉथिसस जो वैसी दिखे, सही है? तो वह है मेरी हायपॉथिसस. एच(एक्स) ईक्वल्ज़ थीटा ट्रैन्स्पोज़ एक्स. अगर आप करना चाहते हैं प्रिडिक्शंज़, एक काम जो आप कर सकते हैं तब कि थ्रेशोल्ड / सीमा रेखा लें क्लैसिफ़ायअर आउट्पुट की 0.5 पर जो है एक वर्टिकल / खड़ी ऐक्सिस वैल्यू 0.5 और यदि हायपॉथिसस आउट पुट करती है वैल्यू बड़ी या बराबर 0.5 के तो आप ले सकते है वाय=1, यदि यह कम है 0.5 से तो आप लें वाय=0. चलिए देखते है क्या होता है जब हम वह करते हैं. तो 0.5 और तो वह है जहाँ सीमा रेखा है और वह है लिनीअर रेग्रेशन करना इस प्रकार. सब कुछ इस पोईँट के दाईं तरफ़ हम प्रिडिक्ट करेंगे पॉज़िटिव क्लास. क्योंकि आउट्पुट वैल्यू बड़ी है 0.5 से खड़ी ऐक्सिस पर और सबकुछ इस पोईँट के बाईं तरफ़ हम प्रिडिक्ट करेंगे एक नेगेटिव वैल्यू. इस ख़ास उदाहरण में, ऐसा लगता है कि लिनीअर रेग्रेशन वास्तव में कुछ उचित कर रहा है. जबकि यह है एक क्लैसिफ़िकेशन टास्क जिसमें हमें दिलचस्पी है. लेकिन अब चलिए प्रॉब्लम को थोड़ा बदलते हैं. मैं इक्स्टेंड / बढ़ाता हूँ हॉरिज़ॉंटल /लेटी हुई ऐक्सिस थोड़ी सी और मान लीजिए हमारे पास एक और ट्रेनिंग इग्ज़ाम्पल है काफ़ी दूर वहाँ दाईं तरफ़. ध्यान दें कि वह अतिरिक्त ट्रेनिंग इग्ज़ाम्पल, यह यहाँ पर, यह वास्तव में कुछ बदलता नहीं है, सही है? ट्रेनिंग सेट को देख कर बिल्कुल स्पष्ट है कि हायपॉथिसस उपयुक्त है. यह है कि सब कुछ है दायीं तरफ़ लगभग यहाँ पर, और दायीं तरफ इसके हमें प्रिडिक्ट करना चाहिए इसे पॉज़िटिव. सबकुछ बाईं तरफ़ हमें शायद प्रिडिक्ट करना चाहिए इसे नेगेटिव क्योंकि इस ट्रेनिंग सेट से, ऐसा लगता है कि सारे ट्यूमर्स जो बड़े हैं एक निश्चित वैल्यू से यहाँ पर मालिगनेंट हैं, और ट्यूमर्स जो उससे छोटे हैं वे मालिगनेंट नहीं हैं, कम से कम इस ट्रेनिंग सेट में. लेकिन जब हमने लिया यह अतिरिक्त इग्ज़ाम्पल यहाँ पर, अगर अब आप रन करें लिनीअर रेग्रेशन, आपको इसके स्थान पर मिलेगी एक सीधी लाइन फ़िट इस डेटा को. जो शायद ऐसी दिखेगी. और यदि आप जानते हैं थ्रेशोल्ड/ सीमारेखा हायपॉथिसस की है 0.5 पर, आपको मिलती है एक थ्रेशोल्ड / सीमारेखा जो लगभग यहाँ है, अत: सब कुछ इस पोईँट के दाईं तरफ़ आप प्रिडिक्ट करेंगे पॉज़िटिव और सब कुछ बाईं तरफ़ उसके आप प्रिडिक्ट करेंगे नेगेटिव. और यह प्रतीत होता है एक बुरा काम जो लिनीअर रेग्रेशन ने किया. सही? क्योंकि आप जानते हैं कि ये हमारे पॉज़िटिव इग्ज़ाम्पल्ज़ हैं, ये हमारे नेगेटिव इग्ज़ाम्पल्ज़ हैं. यह काफ़ी स्पष्ट है हमें करने चाहिए दोनो अलग लगभग यहाँ कहीं, लेकिन किसी कारण से लेने से एक अतिरिक्त इग्ज़ाम्पल काफ़ी दूर यहाँ दाईं तरफ़, यह इग्ज़ाम्पल वास्तव में हमें कोई नई जानकारी नहीं दे रहा है. मेरा मतलब है, कोई अप्रत्याशित / नई बात नहीं है लर्निंग अल्गोरिद्म के लिए. कि इग्ज़ाम्पल दूर वहाँ पर निकला मालिगनेंट. लेकिन किसी कारण से उस दूर वहाँ के इग्ज़ाम्पल ने बदल दिया लिनीअर रेग्रेशन की सीधी लाइन फ़िट डेटा को इस मजेंटा लाइन जो यहाँ है से इस नीली लाइन में यहाँ पर, और बना दिया है और भी ख़राब हायपॉथिसस. अत: अप्लाई करना लिनीअर रेग्रेशन एक क्लैसिफ़िकेशन प्रॉब्लम को अक्सर एक अच्छा विचार नहीं है. पहले उदाहरण में, मेरे इस अतिरिक्त ट्रेनिंग इग्ज़ाम्पल को लेने से पहले, पहले लिनीअर रेग्रेशन था सफल और उसने हमें दिया एक हायपॉथिसस जो सही थी उस ख़ास उदाहरण के लिए, लेकिन प्रायः अप्लाई करने पर लिनीअर रेग्रेशन एक डेटा सेट को, शायद आप सफल हो पाएँ, लेकिन अक्सर यह अच्छा विचार नहीं है. अत: मैं नहीं करूँगा लिनीअर रेग्रेशन एक क्लैसिफ़िकेशन प्रॉब्लम के लिए. यहाँ है एक और मज़ेदार चीज़ जो हो सकती है यदि हम करेंगे लिनीअर रेग्रेशन एक क्लैसिफ़िकेशन प्रॉब्लम के लिए. क्लैसिफ़िकेशन के लिए हम जानते हैं कि वाय या तो ज़ीरो है या एक. लेकिन अगर आप कर रहे हैं लिनीअर रेग्रेशन जहाँ हायपॉथिसस आउट्पुट कर सकती है वैल्यूज़ जो हैं बहुत बड़ी या बहुत छोटी ज़ीरो से, तब भी जब सारे आपके ट्रेनिंग इग्ज़ाम्पल्ज़ के लेबल्ज़ हैं ज़ीरो या एक. और यह थोड़ा विचित्र प्रतीत होता है कि यद्यपि हम जानते हैं कि लेबल्ज़ होने चाहिए ज़ीरो या एक, यह एक प्रकार से विचित्र है यदि अल्गोरिद्म आउट्पुट कर सकता है वैल्यूज़ जो हैं बहुत बड़ी या बहुत छोटी ज़ीरो से, तो आगे के कुछ विडीओज़ में हम डिवेलप करेंगे एक अल्गोरिद्म जिसे कहते हैं लजिस्टिक रिग्रेशन, जिसका गुण है कि आउट्पुट, प्रिडिक्शन लजिस्टिक रेग्रेशन का हमेशा ज़ीरो और एक के बीच होता है, और एक से बड़ा नहीं होता तथा ज़ीरो से छोटा नहीं होता. और वैसे तो, लजिस्टिक रेग्रेशन है, और हम इसे प्रयोग करेंगे एक क्लैसिफ़िकेशन अल्गोरिद्म की तरह, है थोड़ा, शायद कभी-कभी अस्पष्ट क्योंकि टर्म रेग्रेशन आती है इस नाम में जबकि लॉजिस्टिक रिग्रेशन है एक क्लैसिफ़िकेशन अल्गोरिद्म. लेकिन वह सिर्फ़ एक नाम है जो दिया गया था एतिहासिक कारणों से. अत: आप उससे कन्फ़्यूज़्ड / भ्रमित न हों लॉजिस्टिक रिग्रेशन वास्तव में है एक क्लैसिफ़िकेशन अल्गोरिद्म जो हम अप्लाई करते हैं सेटिंग्स में जहाँ लेबल वाय एक डिस्क्रीट वैल्यू है, जब यह या तो ज़ीरो है या एक. आशा है, इससे आपको अब समझ आया है कि यदि आपके पास एक क्लैसिफ़िकेशन प्रॉब्लम है, लिनीअर रेग्रेशन प्रयोग करना एक अच्छा विचार नहीं है. अगले वीडियो में, हम करेंगे विस्तृत रूप से लॉजिस्टिक रिग्रेशन अल्गोरिद्म पर बात.