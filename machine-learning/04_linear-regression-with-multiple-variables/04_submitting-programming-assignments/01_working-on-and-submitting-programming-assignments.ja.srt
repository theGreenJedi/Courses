1
00:00:00,000 --> 00:00:04,162
このビデオでは、手早く、このクラスの宿題の取り組み方と

2
00:00:04,162 --> 00:00:09,387
提出システムの使い方の手順をお見せします。これに

3
00:00:09,387 --> 00:00:15,619
より、機械学習のプログラミング演習で正しい答えが出たかすぐに確認できます。

4
00:00:15,619 --> 00:00:19,354
ここに私の Octave ウィンドウがあります。では最初にデスクトップにいきましょう。

5
00:00:19,354 --> 00:00:25,374
最初の演習問題を保存してあり、いくつかのファイルはデスクトップ上にあります。

6
00:00:25,374 --> 00:00:27,994
このディレクトリです。 ml-class-ex1

7
00:00:27,994 --> 00:00:32,921
ここにはいくつかのファイルがあり、そのうちのいくつかを編集する課題が与えられます。

8
00:00:32,921 --> 00:00:40,701
最初に読むべきファイルは、PDF ファイルにあるこのプログラミング演習の詳細です。

9
00:00:40,701 --> 00:00:45,352
しかし、編集する課題が与えられているファイルの一つがこのファイル、warmUpExercise.m で

10
00:00:45,352 --> 00:00:49,890
この演習は単に提出システムに慣れて頂くためだけのものです。

11
00:00:49,890 --> 00:00:53,795
課題は単に 5 x 5 の単位行列を戻すだけのことです。

12
00:00:53,795 --> 00:01:00,301
ですから今お見せした課題の答えは、A = eye(5) と書くことです。

13
00:01:00,301 --> 00:01:05,766
これでこの関数が 5 x 5 の単位行列を作成するように編集されます。

14
00:01:05,766 --> 00:01:11,149
そして、この関数 warmUpExercise() は 5 x 5 の単位行列を戻すようになりました。

15
00:01:11,149 --> 00:01:13,727
では、これを保存します。

16
00:01:13,727 --> 00:01:17,465
これでこの宿題のPart 1が完了しました。Octave ウィンドウに戻って

17
00:01:17,465 --> 00:01:27,185
先ほどの ディレクトリに行きます。C:\users\ang\Desktop\ml-class-ex1

18
00:01:27,185 --> 00:01:33,347
そしてこれが正しく実装されていることを確認するために、warmUpExcercise() と入力します。

19
00:01:33,347 --> 00:01:39,671
はい、先ほど書いたコードの通り、5 x 5 の単位行列を返しました。

20
00:01:39,671 --> 00:01:43,870
では、これでコードを以下のように提出できます。submit() と

21
00:01:43,870 --> 00:01:49,300
このディレクトリで入力し、私は part 1 を提出したいので、1 を選択肢として入力します。

22
00:01:49,300 --> 00:01:54,387
すると、私のメールアドレスを聞いてきます。コースウェブサイトに行き、

23
00:01:54,387 --> 00:01:59,682
これは内部のテストサイトなので、実際に皆さんが使うバージョンとは見た目が異なるかもしれません。

24
00:01:59,682 --> 00:02:07,934
それはともかく、これが私のメールアドレスで、これが私の提出用パスワードです。これを単に入力するだけです。

25
00:02:07,934 --> 00:02:19,205
私のアドレスは ang@cs.stanford.edu そして私の提出用パスワードは 9yC75USsGf です。

26
00:02:19,205 --> 00:02:23,849
Enter を押すと、サーバーに接続し、提出し、そしてすぐに

27
00:02:23,849 --> 00:02:28,567
"Congratulatoins! You have successfully completed Homework 1 Part 1" と結果が返ってきます。

28
00:02:28,567 --> 00:02:33,160
こうして、このパートについて答えが正しかったことが確認できるわけです。

29
00:02:33,160 --> 00:02:36,795
そして、もし正しい答えを提出しなかった場合は、

30
00:02:36,795 --> 00:02:39,501
答えが正しくなかったというメッセージを返します。

31
00:02:39,501 --> 00:02:47,861
ところで、この提出用パスワードを使うこともできますし、新しいパスワードを作成することもできます。いずれでも構いません。

32
00:02:47,861 --> 00:02:52,556
ウェブサイトへのログイン用のパスワードも使えますが、

33
00:02:52,556 --> 00:02:59,281
このパスワードが通常のテキストとしてモニターに表示されるので、別に提出用のパスワードを提供しています。

34
00:02:59,281 --> 00:03:03,650
ウェブサイトの通常のパスワードをウィンドウに入力するのがいやな場合に、

35
00:03:03,650 --> 00:03:09,219
使っているオペレーティングシステムにより、Octave の提出スクリプトに入力する際に、

36
00:03:09,219 --> 00:03:14,544
このパスワードがテキストとして表示されたりしなかったりしますので。

37
00:03:14,544 --> 00:03:18,746
では、宿題を済ませた後の提出方法は以上です。

38
00:03:18,746 --> 00:03:23,696
ご幸運を。宿題をやる段階になったら、全て正解が得られることを希望します。

39
00:03:23,696 --> 00:03:28,329
そして最後に、次の最後の Octave チュートリアルビデオでお話したいのは、

40
00:03:28,329 --> 00:03:33,337
Octave のコードを効率的に実行する手法であるベクトル化についてです。