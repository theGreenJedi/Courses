1
00:00:00,450 --> 00:00:03,210
इस वीडियो में, मैं आपको देना चाहता हूँ कुछ उपयोगी सलाह

2
00:00:03,210 --> 00:00:05,070
ग्रेडीयंट डिसेंट को काम करवाने के लिए.

3
00:00:05,070 --> 00:00:08,650
सुझाव इस विडीओ में केंद्रित होंगे लर्निंग रेट अल्फ़ा पर.

4
00:00:09,860 --> 00:00:13,180
वास्तव में, यहाँ है ग्रेडीयंट डिसेंट अप्डेट रूल.

5
00:00:13,180 --> 00:00:16,270
और इस विडीओ में मैं क्या करना चाहता हूँ कि बताऊँ आपको

6
00:00:16,270 --> 00:00:19,050
कि मैं क्या सोचता हूँ डीबगिंग की तरह, और कुछ सलाह

7
00:00:19,050 --> 00:00:22,390
यह तय करने के लिए कि ग्रेडीयंट डिसेंट सही काम कर रहा है.

8
00:00:22,390 --> 00:00:26,480
और दूसरा, मैं आपको बताना चाहता हूँ कि कैसे चुने लर्निंग रेट अल्फ़ा या

9
00:00:26,480 --> 00:00:29,250
कम से कम कैसे मैं कोशिश करता हूँ इसे चुनने की.

10
00:00:29,250 --> 00:00:32,770
यहाँ है कुछ जो मैं अक्सर करता हूँ यह तय करने के लिए कि ग्रेडीयंट डिसेंट काम कर रहा है

11
00:00:32,770 --> 00:00:34,150
सही ढंग से.

12
00:00:34,150 --> 00:00:38,219
ग्रेडीयंट डिसेंट का काम है ढूँढना थीटा की वैल्यू

13
00:00:38,219 --> 00:00:42,553
आपके लिए जो आशापूर्वक न्यूनतम करेगी कॉस्ट फ़ंक्शन जे(थीटा) को.

14
00:00:42,553 --> 00:00:47,483
मैं अक्सर क्या करता हूँ इसलिए प्लॉट करता हूँ कॉस्ट फ़ंक्शन जे (थीटा) जब

15
00:00:47,483 --> 00:00:49,750
ग्रेडीयंट डिसेंट रन करता है.

16
00:00:49,750 --> 00:00:53,515
अत: एक्स ऐक्सिस पर यहाँ है एक संख्या इटरेशन्स की ग्रेडीयंट डिसेंट की और

17
00:00:53,515 --> 00:00:58,659
जब ग्रेडीयंट डिसेंट रन करता है आपको आशापूर्वक मिलता है एक प्लॉट जो शायद ऐसा दिखता है.

18
00:00:59,720 --> 00:01:02,960
ध्यान दें कि एक्स ऐक्सिस है संख्या इटरेशन्स की.

19
00:01:02,960 --> 00:01:07,795
पहले हम देख रहे थे जे(थीटा) के प्लॉट्स पर जहाँ एक्स ऐक्सिस, जहाँ

20
00:01:07,795 --> 00:01:13,107
हॉरिज़ॉंटल ऐक्सिस थी पेरामिटर वेक्टर थीटा. लेकिन यह वह नहीं हैं.

21
00:01:13,107 --> 00:01:15,767
वस्तुत:, यह पोईँट क्या है,

22
00:01:15,767 --> 00:01:20,570
कि मैं रन करूँगा ग्रेडीयंट डिसेंट 100 इटरेशन्स के लिए.

23
00:01:20,570 --> 00:01:25,240
और जो भी वैल्यू मुझे मिलती है थीटा के लिए 100 इटरेशन्स के बाद,

24
00:01:25,240 --> 00:01:28,770
मुझे मिलेगी कुछ वैल्यू थीटा की 100 इटरेशन्स के बाद.

25
00:01:28,770 --> 00:01:32,630
और मैं करूंगा इवैल्यूएट कॉस्ट फ़ंक्शन जे(थीटा).

26
00:01:32,630 --> 00:01:35,630
जो वैल्यू मुझे मिली थीटा की 100 इटरेशन्स के बाद,

27
00:01:35,630 --> 00:01:39,760
और यह वर्टिकल हाइट है वैल्यू जे(थीटा) की.

28
00:01:39,760 --> 00:01:43,630
वैल्यू जो मुझे मिली थीटा की 100 इटरेशन्स के बाद ग्रेडीयंट डिसेंट की.

29
00:01:43,630 --> 00:01:49,620
और यह पोईँट यहाँ कॉरेस्पॉंड करता हैं वैल्यू जे(थीटा) से जो

30
00:01:49,620 --> 00:01:53,810
थीटा जो मुझे मिला जब मैंने रन कर लिया है ग्रेडीयंट डिसेंट 200 इटरेशन्स के लिए.

31
00:01:55,230 --> 00:01:59,353
तो यह प्लॉट क्या दिखा रहा है, यह दिखा रहा है वैल्यू आपके कॉस्ट फ़ंक्शन की

32
00:01:59,353 --> 00:02:02,020
ग्रेडीयंट डिसेंट की प्रत्येक इटरेशन के बाद.

33
00:02:02,020 --> 00:02:07,392
और यदि ग्रेडीयंट डिसेंट सही ढंग से काम कर रहा है तब जे(थीटा)

34
00:02:07,392 --> 00:02:11,671
कम होना चाहिए प्रत्येक इटरेशन के बाद.

35
00:02:17,058 --> 00:02:21,774
और एक उपयोगी चीज़ जो इस प्रकार का प्लॉट आपको बता सकता है वह है कि याद आप देखें

36
00:02:21,774 --> 00:02:26,783
विशेष चित्र पर जो मैंने बनाया है, यह दिखता है जब आपको मिल गए है

37
00:02:26,783 --> 00:02:31,350
शायद 300 इटरेशन्स, 300 और 400 इटरेशन्स के बीच,

38
00:02:31,350 --> 00:02:35,720
इस सेगमेंट में यह दिखता है कि जे(थीटा) और ज़्यादा कम नहीं हुआ है.

39
00:02:35,720 --> 00:02:38,540
तो जब तक आप पहुँचते हैं 400 इटरेशन्स पर,

40
00:02:38,540 --> 00:02:41,520
ऐसा लगता है कि यह कर्व यहाँ फ़्लैट हो गया है.

41
00:02:41,520 --> 00:02:46,090
और इसलिए यहाँ 400 इटरेशन्स पर, ऐसा लगता है ग्रेडीयंट डिसेंट लगभग

42
00:02:46,090 --> 00:02:50,510
कन्वर्ज हो गया है क्योंकि आपका कॉस्ट फ़ंक्शन और कम नहीं हो रहा है.

43
00:02:50,510 --> 00:02:53,800
अत: इस चित्र को देखने से आपको समझ आ सकती है क्या

44
00:02:53,800 --> 00:02:55,829
ग्रेडीयंट डिसेंट कन्वर्ज हुआ है या नहीं.

45
00:02:57,580 --> 00:03:01,630
वैसे तो, संख्या इटरेशन्स की जो ग्रेडीयंट डिसेंट लेता है कन्वर्ज होने के लिए

46
00:03:01,630 --> 00:03:04,850
ऐप्लिकेशन में हो सकती है भिन्न

47
00:03:04,850 --> 00:03:09,220
एक ऐप्लिकेशन में, ग्रेडीयंट डिसेंट शायद कन्वर्ज हो जाए तीस इटरेशन्स के बाद.

48
00:03:09,220 --> 00:03:15,110
एक भिन्न ऐप्लिकेशन के लिए, ग्रेडीयंट डिसेंट शायद ले 3,000 इटरेशन्स.

49
00:03:15,110 --> 00:03:20,110
किसी और लर्निंग अल्गोरिद्म के लिए, यह शायद ले सकता है 3 मिल्यन इटरेशन्स.

50
00:03:20,110 --> 00:03:24,048
यह बहित कठिन हो जाता है बता पाना पहले से कि कितनी इटरेशन्स ग्रेडीयंट

51
00:03:24,048 --> 00:03:25,476
डिसेंट को चाहिए कन्वर्ज होने के लिए.

52
00:03:25,476 --> 00:03:30,026
और प्रायः प्लॉट करने से इस प्रकार के प्लॉट, प्लॉट करने से कॉस्ट फ़ंक्शन जैसे हम

53
00:03:30,026 --> 00:03:34,430
बढ़ाते हैं संख्या इटरेशन्स की, है अक्सर देख कर इन प्लॉट्स पर.

54
00:03:34,430 --> 00:03:37,725
लेकिन मैं कोशिश करता हूँ बताने की यदि ग्रेडीयंट डिसेंट कन्वर्ज हो गया है.

55
00:03:37,725 --> 00:03:42,430
यह भी सम्भव है बना पाना स्वचालित कन्वर्जेन्स टेस्ट,

56
00:03:42,430 --> 00:03:47,560
मतलब कि होना एक अल्गोरिद्म का जो बता पाए यदि ग्रेडीयंट डिसेंट कन्वर्ज हो गया है.

57
00:03:47,560 --> 00:03:52,310
और यहाँ है एक काफ़ी आम उदाहरण एक स्वचालित कन्वर्जेन्स टेस्ट का.

58
00:03:52,310 --> 00:03:57,100
और इस तरह का टेस्ट शायद घोषित कर दे कनवरजेन्स यदि आपका कॉस्ट फ़ंक्शन जे(थीटा)

59
00:03:57,100 --> 00:04:01,220
कम होता है एक छोटी एप्सिलोन वैल्यू से कम.

60
00:04:01,220 --> 00:04:05,340
कोई छोटी वैल्यू 10 से माइनस 3 तक एक इटरेशन में.

61
00:04:05,340 --> 00:04:10,460
लेकिन मुझे पता लगा कि यह थ्रेशोल्ड / सीमारेखा ढूँढ पाना काफ़ी कठिन है.

62
00:04:10,460 --> 00:04:13,840
और इसलिए जाँचने के लिए आपकी ग्रेडीयंट डिसेंट का कन्वर्जेन्स

63
00:04:13,840 --> 00:04:18,110
मैं वास्तव में देखता हूँ इस तरह के प्लॉट्स पर, जैसे यह चित्र बाईं तरफ़,

64
00:04:18,110 --> 00:04:21,740
बजाय भरोसा करने के एक स्वचालित कन्वर्जेन्स टेस्ट पर.

65
00:04:21,740 --> 00:04:25,370
इस तरह के चित्र पर देखने से आपको यह भी पता चलता है, या एक अग्रिम चेतावनी मिल जाती है,

66
00:04:25,370 --> 00:04:28,730
यदि शायद ग्रेडीयंट डिसेंट सही काम नहीं कर रहा है.

67
00:04:28,730 --> 00:04:33,600
वस्तुत:,यदि आप प्लॉट करते हैं जे(थीटा) को इटरेशन संख्या के फ़ंक्शन की तरह.

68
00:04:33,600 --> 00:04:38,280
तब आप देखते हैं एक चित्र इस तरह का जहाँ जे(थीटा) वास्तव में बढ़ रहा है,

69
00:04:38,280 --> 00:04:43,110
तब वह भी आपको देता है एक स्पष्ट इशारा कि ग्रेडीयंट डिसेंट काम नहीं कर रहा है.

70
00:04:43,110 --> 00:04:47,250
और एक इस तरह के थीटा  का अक्सर मतलब होता है कि आपको इस्तेमाल करनी चाहिए लर्निंग रेट अल्फ़ा.

71
00:04:48,320 --> 00:04:52,885
यदि जे(थीटा) वाक़ई में बढ़ रहा है, सबसे ज़्यादा आम कारण

72
00:04:52,885 --> 00:04:58,370
उसके लिए है कि यदि आप न्यूनतम करने की कोशिश कर रहे हो एक फ़ंक्शन को, वह शायद ऐसा दिखता है.

73
00:04:59,380 --> 00:05:02,545
लेकिन यदि आपकी लर्निंग रेट काफ़ी बड़ी है तब यदि आप यहाँ से शुरू करते है,

74
00:05:02,545 --> 00:05:06,090
ग्रेडीयंट डिसेंट शायद पार कर जाए मिनिमम और भेज दे आपको वहाँ.

75
00:05:06,090 --> 00:05:07,450
और यदि लर्निंग रेट बहुत बड़ी है,

76
00:05:07,450 --> 00:05:11,525
आप शायद पार कर जाएँगे फिर से और यह भेज दे आपको वहाँ और इसी प्रकार आगे.

77
00:05:11,525 --> 00:05:15,075
तो वह, आप वास्तव में क्या चाहते थे कि शुरू करें यहाँ और

78
00:05:15,075 --> 00:05:17,975
वह धीरे-धीरे नीचे जाए, सही?

79
00:05:17,975 --> 00:05:20,096
लेकिन यदि लर्निंग रेट बहुत बड़ी है,

80
00:05:20,096 --> 00:05:24,284
तब ग्रेडीयंट डिसेंट इसके स्थान पर पार करता रहेगा मिनिमम.

81
00:05:24,284 --> 00:05:26,617
ताकि आपकी स्थिति होती जाएगी और ख़राब  और

82
00:05:26,617 --> 00:05:30,690
ख़राब बजाय जाने के ऊपर की वैल्यूज़ पर कोस्ट फ़ंक्शन जे(थीटा) की.

83
00:05:30,690 --> 00:05:34,140
तो आपको मिलता है एक प्लॉट इस तरह का, और यदि आप देखें  प्लॉट इस तरह का,

84
00:05:34,140 --> 00:05:38,660
इसका हल अक्सर है लेना एक छोटी वैल्यू अल्फ़ा की.

85
00:05:38,660 --> 00:05:41,820
ओह, और वैसे भी, सुनिश्चित कर लें कि आपके कोड में कोई बग नहीं है.

86
00:05:41,820 --> 00:05:46,700
लेकिन अक्सर एक बहुत बड़ी वैल्यू अल्फ़ा की हो सकती है एक आम समस्या.

87
00:05:49,020 --> 00:05:53,090
इसी प्रकार कभी-कभी आप शायद देखें जे(थीटा) करते हुए कुछ ऐसा भी,

88
00:05:53,090 --> 00:05:56,890
यह शायद कम हो  थोड़ी देर के लिए फिर ज़्यादा हो थोड़ी देर के लिए फिर कम हो थोड़ी देर के लिए फिर ज़्यादा हो फिर कम हो

89
00:05:56,890 --> 00:05:58,850
थोड़ी देर के लिए फिर ज़्यादा हो और ऐसा चलता रहे.

90
00:05:58,850 --> 00:06:03,130
और हल इस तरह की कुछ चीज़ के लिए भी है लेना एक छोटी वैल्यू अल्फ़ा की.

91
00:06:04,150 --> 00:06:05,400
मैं नहीं करूँगा उसे प्रूव / प्रमाणित यहाँ,

92
00:06:05,400 --> 00:06:09,560
लेकिन दूसरी असम्प्शंज़ / पूर्वधारणा  के तहत कॉस्ट फ़ंक्शन के बारे में, यह सत्य नहीं हैं

93
00:06:09,560 --> 00:06:14,180
लिनीअर रेग्रेशन के लिए, गणित ने दिखाया है कि यदि आपकी लर्निंग रेट

94
00:06:14,180 --> 00:06:19,030
पर्याप्त रूप से कम है, तब जे (थीटा) कम होना चाहिए प्रत्येक इटरेशन के साथ.

95
00:06:19,030 --> 00:06:21,979
अत: यदि यह नहीं होता है सम्भवत: अल्फ़ा ज़्यादा बड़ा है,

96
00:06:21,979 --> 00:06:23,810
आपको उसे कम पर सेट करना चाहिए.

97
00:06:23,810 --> 00:06:26,430
लेकिन निस्संदेह, आप नहीं चाहते आपकी लर्निंग रेट ज़्यादा कम भी

98
00:06:26,430 --> 00:06:30,830
क्योंकि यदि आप वह करते हैं तब ग्रेडीयंट डिसेंट धीरे कन्वर्ज हो सकता है.

99
00:06:31,930 --> 00:06:36,760
और यदि अल्फ़ा बहुत छोटा होगा, आप शायद यहाँ से शुरू करें, मान लो,

100
00:06:36,760 --> 00:06:40,930
और ले पाएँगे छोटे छोटे स्टेप्स.

101
00:06:40,930 --> 00:06:47,100
और केवल लेंगे बहुत अधिक इटरेशन्स इससे पहले कि आप मिनिमम पर पहुँच पाए,

102
00:06:47,100 --> 00:06:50,990
और इसलिए यदि अल्फ़ा बहुत छोटा है, ग्रेडीयंट डिसेंट कर सकता है धीमी प्राग्रेस और

103
00:06:50,990 --> 00:06:52,360
कन्वर्ज हो सकता है धीरे-धीरे.

104
00:06:52,360 --> 00:06:55,510
सारांश में, यदि लर्निंग रेट बहुत छोटी है,

105
00:06:55,510 --> 00:06:59,845
आपके पास है धीरे कन्वर्जेन्स की समस्या, और यदि लर्निंग रेट बहुत बड़ी है,

106
00:06:59,845 --> 00:07:05,640
जे (थीटा) शायद कम न हो प्रत्येक इटरेशन में, और शायद यह कन्वर्ज भी न हो.

107
00:07:05,640 --> 00:07:11,490
कुछ केसीज़ में यदि लर्निंग रेट बहुत बड़ी है, धीरे कन्वर्जेन्स भी सम्भव है.

108
00:07:11,490 --> 00:07:15,220
लेकिन ज़्यादा आम समस्या जो आप देखते हैं वह है

109
00:07:15,220 --> 00:07:19,040
केवल कि जे (थीटा) शायद कम न हो प्रत्येक इटरेशन में.

110
00:07:19,040 --> 00:07:23,810
और डीबग करने के लिए इन सब चीज़ों को, अक्सर प्लॉट कर लेने से वह जे(थीटा)

111
00:07:23,810 --> 00:07:27,810
इटरेशन की संख्या के फ़ंक्शन की तरह सहायता करता है आपको समझने में कि क्या हो रहा है.

112
00:07:27,810 --> 00:07:31,620
वास्तव में, मैं वास्तव में क्या करता हूँ जब मैं रन करता हूँ ग्रेडीयंट डिसेंट

113
00:07:31,620 --> 00:07:33,500
कि मैं परखता हूँ एक रेंज वैल्यूज़ की.

114
00:07:33,500 --> 00:07:36,460
अत: कोशिश करें रन करने की ग्रेडीयंट डिसेंट को एक रेंज के साथ

115
00:07:36,460 --> 00:07:38,670
अल्फ़ा की, जैसे 0.001 और 0.01.

116
00:07:38,670 --> 00:07:41,550
तो वे हैं भिन्न एक दस फ़ैक्टर के अंतर से.

117
00:07:41,550 --> 00:07:45,250
और इन भिन्न अल्फ़ा की वैल्यूज़ के लिए प्लॉट करें जे(थीटा) एक फ़ंक्शन के तरह

118
00:07:45,250 --> 00:07:47,290
इटरेशन की संख्या के, और

119
00:07:47,290 --> 00:07:54,160
तब चुन लें अल्फ़ा की वैल्यू जो प्रतीत होती है कम करती हुई जे(थीटा) को तीव्रता से.

120
00:07:54,160 --> 00:07:57,180
वैसे तो, मैं वास्तव में क्या करता हूँ वे ये दस के स्टेप्स नहीं हैं.

121
00:07:57,180 --> 00:08:00,970
तो यह है एक स्केल दस के फ़ैक्टर से बढ़ाना प्रत्येक स्टेप में.

122
00:08:00,970 --> 00:08:03,679
मैं वास्तव में क्या करता हूँ कि मैं परखता हूँ एक रेंज वैल्यूज़ की.

123
00:08:06,827 --> 00:08:09,985
और इसी प्रकार, जहाँ यह है 0.001.

124
00:08:09,985 --> 00:08:13,613
मैं तब बढ़ाऊँगा रेट को तीन गुणा लेने के लिए 0.003.

125
00:08:13,613 --> 00:08:15,232
और अब इसे बढ़ाऊँगा 0.01 पर,

126
00:08:15,232 --> 00:08:20,627
यह एक और लगभग तीन गुणा बढ़त है 0.003 से 0.01 तक.

127
00:08:20,627 --> 00:08:25,512
और इसलिए ये हैं, क़रीब, परखना ग्रेडीयंट डिसेंट प्रत्येक

128
00:08:25,512 --> 00:08:30,640
वैल्यू से जो लगभग 3x बड़ी है पिछली वैल्यू से.

129
00:08:30,640 --> 00:08:33,316
तो मैं क्या करता हूँ कि परखता हूँ एक रेंज वैल्यूज़ की तब तक जब मुझे मिल जाती है वह

130
00:08:33,316 --> 00:08:37,078
वैल्यू जो काफ़ी छोटी है और मुझे मिल जाती है एक वैल्यू जो काफ़ी बड़ी है.

131
00:08:37,078 --> 00:08:40,966
तब मैं कोशिश करता हूँ लेने की अधिकतम सम्भव वैल्यू, या

132
00:08:40,966 --> 00:08:45,943
केवल थोड़ी छोटी अधिकतम उचित रूप से बड़ी वैल्यू से जो मुझे मिली थी.

133
00:08:45,943 --> 00:08:51,780
और जब मैं वह करता हूँ अक्सर यह मझे देता है एक अच्छी लर्निंग रेट मेरी प्रॉब्लम के लिए.

134
00:08:51,780 --> 00:08:55,910
और यदि आप भी यह करते हैं शायद आप भी चुन पाएँगे एक अच्छी लर्निंग रेट

135
00:08:55,910 --> 00:08:58,010
आपकी इम्प्लमेंटेशन के लिए ग्रेडीयंट डिसेंट की.