1
00:00:00,190 --> 00:00:01,270
Di video ini dan di

2
00:00:01,440 --> 00:00:02,720
video selanjutnya, saya

3
00:00:02,850 --> 00:00:04,040
ingin membahas tentang beberapa

4
00:00:04,180 --> 00:00:06,940
trik praktis untuk membuat gradient
descent bekerja dengan baik.

5
00:00:07,680 --> 00:00:10,250
Di video ini, saya ingin membahas
tentang skala parameter.

6
00:00:11,770 --> 00:00:12,210
kita menggunakan for loop

7
00:00:13,030 --> 00:00:14,080
Jika Anda punya kasus dimana Anda

8
00:00:14,180 --> 00:00:15,880
punya beberapa parameter, jika Anda

9
00:00:16,320 --> 00:00:17,410
memastikan bahwa parameter itu

10
00:00:18,050 --> 00:00:19,440
berskala sama,

11
00:00:19,570 --> 00:00:20,480
maksud saya memastikan bahwa

12
00:00:20,650 --> 00:00:22,130
parameter berbeda memiliki

13
00:00:22,300 --> 00:00:23,390
jangkauan nilai yang serupa,

14
00:00:24,420 --> 00:00:26,490
maka gradient descent bisa menemukan
hasilnya lebih cepat.

15
00:00:27,510 --> 00:00:28,680
Konkritnya, katakanlah Anda

16
00:00:28,820 --> 00:00:29,860
punya kasus dengan 2 parameter

17
00:00:30,380 --> 00:00:31,680
dimana x1 adalah ukuran

18
00:00:31,950 --> 00:00:32,860
rumah dan memiliki nilai

19
00:00:33,530 --> 00:00:34,540
antara 0 - 2000,

20
00:00:35,490 --> 00:00:36,270
dan x2 adalah jumlah

21
00:00:36,520 --> 00:00:37,570
kamar tidur, dan mungkin

22
00:00:37,820 --> 00:00:39,250
bernilai antara 1 - 5.

23
00:00:40,100 --> 00:00:41,690
Jika Anda plot kontur

24
00:00:41,800 --> 00:00:43,000
fungsi harga J(theta),

25
00:00:44,810 --> 00:00:46,540
maka konturnya terlihat

26
00:00:46,750 --> 00:00:49,010
seperti ini, dimana

27
00:00:49,230 --> 00:00:50,570
J(theta) merupakan fungsi

28
00:00:50,910 --> 00:00:53,590
dari parameter theta0, theta1, dan
theta2.

29
00:00:54,300 --> 00:00:55,400
Saya akan

30
00:00:56,020 --> 00:00:57,230
mengabaikan theta0

31
00:00:57,480 --> 00:00:58,730
dan menganggap J(theta) sebagai fungsi

32
00:00:58,840 --> 00:01:01,080
theta1 dan theta2.

33
00:01:01,510 --> 00:01:02,810
Jika x1 memuat

34
00:01:02,940 --> 00:01:04,110
jangkauan nilai yang lebih

35
00:01:04,370 --> 00:01:05,790
besar dari x2,

36
00:01:06,120 --> 00:01:07,270
kontur

37
00:01:07,340 --> 00:01:08,320
fungsi harga J(theta)

38
00:01:09,420 --> 00:01:11,400
bisa berbentuk

39
00:01:11,690 --> 00:01:14,720
elips yang sangat pipih ini,

40
00:01:15,070 --> 00:01:16,620
dan dengan rasio 2000:5,

41
00:01:16,770 --> 00:01:18,470
bentuknya bisa lebih pipih lagi.

42
00:01:18,800 --> 00:01:20,190
Jadi, elips atau oval

43
00:01:20,560 --> 00:01:23,070
yang sangat tinggi dan pipih ini,

44
00:01:23,320 --> 00:01:24,950
membentuk

45
00:01:25,310 --> 00:01:27,940
kontur fungsi harga J(theta) ini.

46
00:01:29,420 --> 00:01:30,860
Dan jika Anda menjalankan gradient
descent

47
00:01:30,930 --> 00:01:34,290
pada fungsi harga ini, gradient

48
00:01:34,830 --> 00:01:36,480
Anda perlu waktu

49
00:01:36,970 --> 00:01:38,660
yang sangat lama dan

50
00:01:39,080 --> 00:01:40,360
bisa berosilasi bolak-balik

51
00:01:41,100 --> 00:01:43,130
sebelum

52
00:01:43,190 --> 00:01:46,120
akhirnya menemukan minimum global.

53
00:01:47,470 --> 00:01:48,720
Bahkan,

54
00:01:48,890 --> 00:01:50,400
jika kontur ini

55
00:01:50,580 --> 00:01:51,970
semakin

56
00:01:52,480 --> 00:01:54,300
tinggi pipih,

57
00:01:56,230 --> 00:01:57,030
maka

58
00:01:57,380 --> 00:01:59,060
gradient descent

59
00:01:59,790 --> 00:02:02,310
jalannya akan

60
00:02:02,630 --> 00:02:04,280
berliku-liku,

61
00:02:04,690 --> 00:02:06,030
dan perlu waktu

62
00:02:06,120 --> 00:02:08,270
lebih lama lagi menuju ke minimum
global.

63
00:02:12,130 --> 00:02:14,370
Pada kasus seperti ini, perlu

64
00:02:14,780 --> 00:02:16,280
untuk menskala parameternya.

65
00:02:17,380 --> 00:02:18,760
Konkritnya, jika Anda

66
00:02:19,200 --> 00:02:20,370
mendefinisikan parameter x1

67
00:02:20,570 --> 00:02:21,770
sebagai ukuran

68
00:02:21,870 --> 00:02:23,070
rumah dibagi 2000,

69
00:02:24,040 --> 00:02:25,140
dan x2 sebagai

70
00:02:25,270 --> 00:02:26,520
jumlah kamar tidur dibagi

71
00:02:26,940 --> 00:02:29,010
5, maka perhitungan

72
00:02:29,170 --> 00:02:30,020
fungsi harga J

73
00:02:30,090 --> 00:02:31,840
bisa

74
00:02:32,900 --> 00:02:34,430
lebih simetris

75
00:02:34,840 --> 00:02:36,990
sehingga konturnya seperti lingkaran.

76
00:02:38,210 --> 00:02:39,180
Jika Anda menjalankan

77
00:02:39,520 --> 00:02:40,540
gradient descent pada

78
00:02:40,750 --> 00:02:42,120
fungsi harga seperti ini, maka

79
00:02:44,110 --> 00:02:45,630
Anda dapat

80
00:02:45,860 --> 00:02:47,430
menemukan jalan langsung

81
00:02:47,540 --> 00:02:48,830
ke minimum global

82
00:02:49,390 --> 00:02:51,200
dan bukannya

83
00:02:51,530 --> 00:02:52,530
jalan

84
00:02:52,620 --> 00:02:53,520
yang

85
00:02:54,310 --> 00:02:55,910
berliku-liku.

86
00:02:57,300 --> 00:02:58,710
Jadi, dengan

87
00:02:58,950 --> 00:03:01,000
menskala parameternya, nilai

88
00:03:01,620 --> 00:03:02,810
x1 dan x2,

89
00:03:02,970 --> 00:03:04,150
pada contoh ini,

90
00:03:04,300 --> 00:03:06,960
antara 0 dan 1.

91
00:03:09,580 --> 00:03:12,290
Dengan gradient descent, Anda bisa

92
00:03:12,690 --> 00:03:13,810
mendapatkan hasilnya jauh lebih cepat.

93
00:03:18,120 --> 00:03:19,640
Umumnya, saat kita

94
00:03:20,160 --> 00:03:21,240
menskala parameter,

95
00:03:21,530 --> 00:03:22,480
kita membuat

96
00:03:22,750 --> 00:03:25,670
setiap parameter dijangkauan nilai

97
00:03:25,780 --> 00:03:28,170
-1 s/d 1, dan konkritnya,

98
00:03:28,960 --> 00:03:31,710
parameter x0 selalu bernilai 1.

99
00:03:31,760 --> 00:03:32,810
Jadi, selalu x0 = 1,

100
00:03:34,110 --> 00:03:35,150
tapi parameter lainnya

101
00:03:35,630 --> 00:03:36,950
dibagi dengan angka yang berbeda

102
00:03:37,330 --> 00:03:39,150
agar nilainya dikisaran -1 s/d 1.

103
00:03:39,510 --> 00:03:41,520
Angka -1 dan +1 tidak terlalu penting.

104
00:03:42,270 --> 00:03:42,900
Jadi, jika Anda punya 1 parameter

105
00:03:44,150 --> 00:03:45,340
x1 yang bernilai

106
00:03:45,510 --> 00:03:48,000
antara 0 dan 3, itu tidak masalah.

107
00:03:48,400 --> 00:03:49,410
Jika Anda punya

108
00:03:49,600 --> 00:03:51,190
parameter berbeda yang

109
00:03:52,140 --> 00:03:54,020
bernilai antara -2 dan +0.5,

110
00:03:54,300 --> 00:03:55,710
ini cukup dekat

111
00:03:56,070 --> 00:03:57,070
dengan -1 dan +1,

112
00:03:57,320 --> 00:03:59,160
yang berarti tidak masalah.

113
00:04:00,310 --> 00:04:01,260
Jika Anda punya

114
00:04:01,340 --> 00:04:02,580
parameter berbeda,

115
00:04:02,820 --> 00:04:04,780
x3 yang nilainya

116
00:04:05,840 --> 00:04:09,070
antara -100 s/d 100,

117
00:04:09,330 --> 00:04:10,850
maka nilai

118
00:04:11,090 --> 00:04:13,570
ini sangat berbeda dari -1 dan +1.

119
00:04:13,860 --> 00:04:15,020
Jadi, ini parameter

120
00:04:15,230 --> 00:04:17,480
yang tidak diskala dengan baik.

121
00:04:17,970 --> 00:04:19,340
Sama halnya, jika Anda punya parameter

122
00:04:19,420 --> 00:04:20,680
x4 yang

123
00:04:20,950 --> 00:04:22,060
bernilai sangat kecil

124
00:04:22,340 --> 00:04:25,530
antara -0.0001 dan +0.0001,

125
00:04:25,740 --> 00:04:28,290
maka ini jauh lebih

126
00:04:29,720 --> 00:04:30,780
kecil

127
00:04:30,910 --> 00:04:31,960
dari

128
00:04:32,460 --> 00:04:33,760
-1 dan +1.

129
00:04:34,040 --> 00:04:36,630
Penskalaan parameter ini sangat jelek.

130
00:04:37,850 --> 00:04:39,150
Jadi, Anda perlu jangkauan nilai yang

131
00:04:39,430 --> 00:04:40,350
bisa

132
00:04:41,070 --> 00:04:42,010
lebih besar atau lebih kecil

133
00:04:42,370 --> 00:04:43,840
dari +1, tapi

134
00:04:44,040 --> 00:04:45,170
tidak seperti

135
00:04:45,610 --> 00:04:47,470
+100 atau terlalu kecil

136
00:04:47,650 --> 00:04:49,990
seperti 0.0001.

137
00:04:50,770 --> 00:04:52,530
Lain orang, lain juga aturannya.

138
00:04:52,870 --> 00:04:53,910
Aturan yang saya gunakan adalah,

139
00:04:54,070 --> 00:04:55,440
jika parameter

140
00:04:55,670 --> 00:04:56,750
bernilai dari,

141
00:04:56,980 --> 00:04:58,590
katakanlah -3 s/d +3,

142
00:04:58,840 --> 00:05:00,120
itu tidak masalah,

143
00:05:00,170 --> 00:05:01,690
kecuali

144
00:05:02,000 --> 00:05:03,050
nilainya lebih besar

145
00:05:03,440 --> 00:05:04,360
dari +3 atau -3.

146
00:05:04,530 --> 00:05:06,400
Jika nilainya, katakanlah dari

147
00:05:06,700 --> 00:05:09,660
-1/3 s/d 1/3,

148
00:05:10,920 --> 00:05:12,020
itu juga tidak masalah,

149
00:05:12,270 --> 00:05:14,880
begitu juga 0 s/d 1/3 atau -1/3 s/d 0.

150
00:05:14,910 --> 00:05:17,890
Saya kira, nilai di sekitar sektor 0 itu
masih oke.

151
00:05:18,560 --> 00:05:19,310
Kecuali nilainya

152
00:05:19,450 --> 00:05:20,640
sangat kecil

153
00:05:20,900 --> 00:05:23,220
seperti x4 ini.

154
00:05:23,790 --> 00:05:25,060
Jadi pesannya adalah

155
00:05:25,500 --> 00:05:26,780
jangan khawatir bila

156
00:05:27,000 --> 00:05:28,550
parameter Anda

157
00:05:28,700 --> 00:05:30,920
tidak sama skala atau jarak nilainya.

158
00:05:31,170 --> 00:05:31,930
Selama semua nilainya

159
00:05:32,090 --> 00:05:35,060
cukup dekat dengan gradient descent ini,
itu akan bekerja.

160
00:05:35,930 --> 00:05:37,530
Selain membagi dengan

161
00:05:37,930 --> 00:05:39,960
nilai maksimum saat

162
00:05:40,220 --> 00:05:42,080
menskala parameter, kadang

163
00:05:42,730 --> 00:05:45,070
orang juga melakukan normalisasi nilai
tengah.

164
00:05:45,330 --> 00:05:47,150
Itu maksudnya Anda mengambil

165
00:05:47,320 --> 00:05:48,130
paramater xi

166
00:05:48,350 --> 00:05:49,810
dan menggantinya

167
00:05:50,230 --> 00:05:51,850
dengan xi - ui

168
00:05:52,870 --> 00:05:55,260
untuk membuat nilai tengah parameter
Anda sekitar 0.

169
00:05:56,530 --> 00:05:57,730
Dan kita tidak akan

170
00:05:57,890 --> 00:05:59,260
menerapkan ini ke parameter x0,

171
00:05:59,650 --> 00:06:00,750
karena

172
00:06:00,940 --> 00:06:02,260
parameter x0 selalu bernilai 1,

173
00:06:02,360 --> 00:06:03,600
jadi x0

174
00:06:03,810 --> 00:06:05,100
tidak punya nilai rata-rata 0.

175
00:06:06,370 --> 00:06:07,760
Tapi untuk

176
00:06:07,950 --> 00:06:09,320
parameter lain, jika

177
00:06:09,600 --> 00:06:10,320
ukuran rumah

178
00:06:10,960 --> 00:06:14,170
bernilai antara 0 - 2000, dan jika

179
00:06:14,310 --> 00:06:15,080
Anda tahu

180
00:06:15,230 --> 00:06:16,230
ukuran rata2

181
00:06:16,470 --> 00:06:18,340
sebuah rumah sama dengan

182
00:06:18,500 --> 00:06:20,080
1000, maka Anda boleh

183
00:06:21,470 --> 00:06:21,950
menggunakan rumus ini.

184
00:06:23,940 --> 00:06:24,970
Parameter x1 =

185
00:06:25,250 --> 00:06:26,270
ukuran rumah -

186
00:06:26,590 --> 00:06:28,010
nilai rata2 dibagi 2000.

187
00:06:28,630 --> 00:06:31,820
Sama halnya, jika

188
00:06:32,530 --> 00:06:34,010
rumah Anda punya

189
00:06:34,520 --> 00:06:37,630
1 - 5 kamar tidur, dan rata2

190
00:06:39,240 --> 00:06:40,460
rumah punya

191
00:06:40,890 --> 00:06:41,920
2 kamar tidur, maka Anda bisa

192
00:06:42,110 --> 00:06:44,750
menggunakan rumus ini untuk

193
00:06:45,080 --> 00:06:47,460
menormalisasi nilai tengah parameter x2.

194
00:06:49,340 --> 00:06:50,720
Pada kedua kasus ini, Anda

195
00:06:50,840 --> 00:06:52,730
mendapatkan nilai parameter x1 dan x2.

196
00:06:52,930 --> 00:06:54,490
Kasarnya, nilainya

197
00:06:54,880 --> 00:06:56,580
antara -0.5 dan +0.5.

198
00:06:57,130 --> 00:06:57,880
Yang kedua tidak benar,

199
00:06:58,210 --> 00:07:00,920
x2 bisa sedikit lebih besar dari 0.5.

200
00:07:01,800 --> 00:07:03,140
Aturan yang lebih umum adalah

201
00:07:03,530 --> 00:07:04,860
Anda bisa

202
00:07:04,900 --> 00:07:06,390
mengambil parameter x1 dan menggantinya

203
00:07:08,060 --> 00:07:10,110
dengan x1-u1

204
00:07:10,940 --> 00:07:13,410
dibagi s1, dimana

205
00:07:13,550 --> 00:07:15,890
u1 adalah

206
00:07:16,200 --> 00:07:18,290
nilai rata2 x1

207
00:07:19,960 --> 00:07:21,310
dalam set latihan

208
00:07:22,320 --> 00:07:24,190
dan s1 adalah

209
00:07:24,350 --> 00:07:27,420
jarak nilai parameter itu,

210
00:07:27,820 --> 00:07:28,940
maksudnya,

211
00:07:29,040 --> 00:07:30,110
nilai maksimumnya

212
00:07:30,630 --> 00:07:31,900
kurang nilai minimumnya

213
00:07:32,290 --> 00:07:33,350
atau bagi mereka

214
00:07:33,590 --> 00:07:35,360
yang tahu deviasi variabel

215
00:07:35,850 --> 00:07:37,390
bisa juga menset s1

216
00:07:37,760 --> 00:07:40,790
sebagai deviasi standar variabel.

217
00:07:41,020 --> 00:07:43,240
Tapi boleh juga menggunakan nilai
max-min.

218
00:07:44,330 --> 00:07:45,170
Dan sama halnya untuk

219
00:07:45,610 --> 00:07:47,380
parameter kedua, x2,

220
00:07:47,840 --> 00:07:49,740
diganti dengan nilai tengah

221
00:07:51,040 --> 00:07:52,220
parameternya

222
00:07:52,800 --> 00:07:54,110
dan membaginya dengan selisih nilai

223
00:07:54,380 --> 00:07:55,980
parameternya yaitu nilai max-min.

224
00:07:56,880 --> 00:07:57,910
Rumus ini

225
00:07:58,370 --> 00:07:59,630
akan

226
00:07:59,850 --> 00:08:01,020
menghasilkan nilai bagi parameter Anda

227
00:08:01,920 --> 00:08:03,320
di jarak ini.

228
00:08:03,490 --> 00:08:04,820
Bagi

229
00:08:04,890 --> 00:08:05,700
mereka

230
00:08:05,940 --> 00:08:07,570
yang sangat hati2 saat

231
00:08:07,710 --> 00:08:09,300
mengambil jaraknya sebagai nilai

232
00:08:09,610 --> 00:08:12,410
max-min, 5 ini sebenarnya akan jadi 4.

233
00:08:13,140 --> 00:08:14,390
Jadi, jika max 5

234
00:08:14,600 --> 00:08:15,830
min 1, maka

235
00:08:16,320 --> 00:08:17,160
jarak nilai sebenarnya

236
00:08:17,860 --> 00:08:18,530
adalah 4, tapi semua ini

237
00:08:18,690 --> 00:08:20,380
adalah perkiraan dan setiap nilai

238
00:08:20,830 --> 00:08:22,010
parameter yang mendekati jarak

239
00:08:22,450 --> 00:08:24,750
nilai ini akan bekerja dengan baik.

240
00:08:25,200 --> 00:08:27,220
Menskala parameter juga tidak harus

241
00:08:27,660 --> 00:08:28,520
sangat tepat,

242
00:08:29,050 --> 00:08:30,390
agar

243
00:08:30,790 --> 00:08:32,290
gradient descent bekerja dengan cepat.

244
00:08:34,610 --> 00:08:35,840
Sekarang Anda tahu

245
00:08:36,020 --> 00:08:37,420
tentang menskala parameter,

246
00:08:37,530 --> 00:08:39,040
dan jika Anda menggunakan trik ini,

247
00:08:39,250 --> 00:08:40,650
itu dapat membuat gradient descent

248
00:08:40,870 --> 00:08:43,680
bekerja jauh lebih cepat dan mendapat
hasilnya dgn iterasi yg lebih sedikit.

249
00:08:44,990 --> 00:08:45,540
Begitulah menskala parameter.

250
00:08:46,080 --> 00:08:47,190
Pada video berikut,

251
00:08:47,350 --> 00:08:49,410
saya akan membahas tentang trik lain
yang pada prakteknya membuat

252
00:08:49,710 --> 00:08:50,970
gradient descent bekerja dengan baik.