1
00:00:00,220 --> 00:00:03,688
पिछले वीडियो में, हमने बात की फॉर्म के बारे में हाईपोथीसिस की

2
00:00:03,688 --> 00:00:07,246
लिनीयर रीग्रेशन विद मल्टीपल फीचर्स या मल्टीपल वेरिएब्ल्ज़ के साथ॰

3
00:00:07,246 --> 00:00:11,912
इस वीडियो में, आओ बात करें कि उस हाईपोथीसिस के पैरामीटर्ज़ फिट कैसे करने हैं॰

4
00:00:11,912 --> 00:00:15,175
विशेषता आओ बात करें कि कैसे इस्तेमाल करना है ग्रेडिएंट डिसेन्ट को

5
00:00:15,175 --> 00:00:19,875
लिनीयर रीग्रेशन विद मल्टीपल फीचर्स के लिए॰

6
00:00:19,875 --> 00:00:24,802
फुर्ती से संक्षिप्तिकरण करने के लिए हमारी नोटेशन को, यह है हमारी फ़ोर्मल हायपॉथिसस

7
00:00:24,802 --> 00:00:31,509
मल्टी वेरीअबल लिनीअर रेग्रेशन में जहाँ हमने अपनाया है कन्वेन्शन कि एक्स 0 =1.

8
00:00:31,509 --> 00:00:37,505
पेरमिटर्स इस मॉडल के हैं थीटा 0 से थीटा एन तक, लेकिन सोचने की बजाय

9
00:00:37,505 --> 00:00:42,385
इसे एन अलग पेरमिटर्स की तरह, जो वैलिड / जायज़ है, मैं सोचूँगा

10
00:00:42,385 --> 00:00:51,175
पेरमिटर्स को थीटा की तरह जहाँ थीटा है एक एन+1-डिमेन्शन्स का वेक्टर.

11
00:00:51,175 --> 00:00:55,498
अत: मैं सोचूँगा पेरमिटर्स को इस मॉडल के

12
00:00:55,498 --> 00:00:58,674
स्वयं एक वेक्टर की तरह.

13
00:00:58,674 --> 00:01:03,507
हमारा कॉस्ट  फ़ंक्शन है जे ऑफ़ थीटा 0 से थीटा एन तक जो दिया जाता है इस हमेशा की तरह से

14
00:01:03,507 --> 00:01:08,983
सम ऑफ़ स्क्वेर ऑफ़ एरर टर्म से. लेकिन, फिर से, यह सोचने की बजाय जे को एक फ़ंक्शन जैसे

15
00:01:08,983 --> 00:01:14,016
इन एन+1 नम्बर्ज़ का, मैं सामान्य तौर पर लिखूँगा जे को सिर्फ़ एक

16
00:01:14,016 --> 00:01:22,275
फ़ंक्शन पेरामिटर वेक्टर थीटा क्योंकि थीटा यहाँ एक वेक्टर है.

17
00:01:22,275 --> 00:01:26,897
यहाँ है कि ग्रेडीयंट डिसेंट कैसे दिखता है. हम बार-बार अप्डेट करेंगे हर एक

18
00:01:26,897 --> 00:01:32,142
पेरामिटर थीटा जे को थीटा जे माइनस अल्फ़ा टाइम्ज़ यह डेरिवेटिव टर्म के अनुसार.

19
00:01:32,142 --> 00:01:37,868
और एक बार फ़िट हम लिखते हैं इसे सिर्फ़ जे ऑफ़ थीटा की तरह, ताकि थीटा अप्डेट हो

20
00:01:37,868 --> 00:01:41,840
थीटा जे माइनस लर्निंग रेट अल्फ़ा टाइम्ज़ डेरिवेटिव से, एक पार्शल

21
00:01:41,840 --> 00:01:47,840
डेरिवेटिव कॉस्ट फ़ंक्शन का विद रिस्पेक्ट टु पेरामिटर थीटा जे.

22
00:01:47,840 --> 00:01:51,305
चलिए देखते हैं कैसे दिखता है यह जब हम इम्प्लमेंट करते हैं ग्रेडीयंट डिसेंट और,

23
00:01:51,305 --> 00:01:55,985
विशेषत:, चलिए देखते है कैसे दिखती है वह पार्शल डेरिवेटिव टर्म.

24
00:01:55,985 --> 00:02:01,383
यहाँ है कि क्या है हमारे पास ग्रेडीयंट डिसेंट के लिए उस केस में जब हमारे पास थे एन = 1 फ़ीचर.

25
00:02:01,383 --> 00:02:06,782
हमारे पास थे दो अलग अप्डेट रूल्ज़ पेरामिटर थीटा 0 और थीटा 1 के लिए, और

26
00:02:06,782 --> 00:02:12,779
आशा है ये आपको जाने पहचाने लगते है. और यह टर्म यहाँ थी निस्संदेह

27
00:02:12,779 --> 00:02:17,672
पार्शल डेरिवेटिव कॉस्ट फ़ंक्शन की विद रिस्पेक्ट टु पेरामिटर थीटा 0,

28
00:02:17,672 --> 00:02:21,891
और इसी प्रकार हमारे पास था एक दूसरा अप्डेट रूल पेरामिटर थीटा 1 के लिए.

29
00:02:21,891 --> 00:02:26,259
वहाँ एक छोटा अंतर है जो है कि जब हमारे पास पहले केवल एक

30
00:02:26,259 --> 00:02:31,992
फ़ीचर था, हम उसे कह पाए फ़ीचर एक्स(आई) लेकिन अब हमारी नोटेशन में

31
00:02:31,992 --> 00:02:38,462
हमें निस्संदेह इसे कहेंगे एक्स(आई) <u>1 डिनोट करने के लिए हमारा एक फ़ीचर.</u>

32
00:02:38,462 --> 00:02:41,019
तो वह था जब हमारे पास था केवल एक फ़ीचर.

33
00:02:41,019 --> 00:02:44,496
चलिए देखते हैं नया अल्गोरिद्म क्योंकि हमारे पास हैं एक से ज़्यादा फ़ीचर्ज़,

34
00:02:44,496 --> 00:02:47,350
जहाँ फ़ीचर्ज़ की संख्या एन शायद बहुत बड़ी है एक से.

35
00:02:47,350 --> 00:02:53,158
हम लेते हैं यह अप्डेट रूल ग्रेडीयंट डिसेंट के लिए, शायद आप में से वे जो

36
00:02:53,158 --> 00:02:57,781
जानते हैं कैल्क्युलुस, अगर आप लें परिभाषा कॉस्ट फ़ंक्शन की और लें

37
00:02:57,781 --> 00:03:03,312
पार्शल डेरिवेटिव कॉस्ट फ़ंक्शन जे का विद रिस्पेक्ट टु पेरामिटर

38
00:03:03,312 --> 00:03:08,119
थीटा जे, आप पाएँगे कि पार्शल डेरिवेटिव बिल्कुल वही टर्म है जिसके

39
00:03:08,119 --> 00:03:10,665
आस पास मैंने नीला बॉक्स बनाया है.

40
00:03:10,665 --> 00:03:14,837
और अगर आप इसे इम्प्लमेंट करते हैं तो आपको मिलेगा एक वर्किंग इम्प्लमेंटेशन

41
00:03:14,837 --> 00:03:18,962
ग्रेडीयंट डिसेंट का मल्टी वेरीयेट लिनीअर रेग्रेशन के लिए.

42
00:03:18,962 --> 00:03:21,572
अंतिम काम जो मैं करना चाहता हूँ इस स्लाइड पर है कि आपको देना चाहता हूँ एक अनुभव

43
00:03:21,572 --> 00:03:26,882
कि क्यों ये नए और पुराने अल्गोरिद्म्स हैं एक प्रकार से एक ही या क्यों ये हैं

44
00:03:26,882 --> 00:03:30,904
दोनो एक जैसे अल्गोरिद्म्स या क्यों ये दोनो ग्रेडीयंट डिसेंट अल्गोरिद्म्स है.

45
00:03:30,904 --> 00:03:34,363
चलिए लेते हैं एक केस जहाँ हमारे पास हैं दो फ़ीचर्ज़

46
00:03:34,363 --> 00:03:37,488
या शायद दो से ज़्यादा फ़ीचर्ज़, ताकि हमारे पास हों तीन अप्डेट रूल्ज़

47
00:03:37,488 --> 00:03:42,680
पेरामिटर थीटा 0, थीटा 1, थीटा 2 के लिए और शायद  थीटा की दूसरी वैल्यूज़ के लिए भी.

48
00:03:42,680 --> 00:03:49,457
अगर आप देखें अप्डेट रूल को थीटा 0 के लिए, क्या मिलता है आपको कि यह

49
00:03:49,457 --> 00:03:55,300
अप्डेट रूल यहाँ वैसा ही है जैसा अप्डेट रूल हमारे पास था पहले

50
00:03:55,300 --> 00:03:57,350
केस एन = 1 के लिए.

51
00:03:57,350 --> 00:04:00,203
और कारण कि ये समतुल्य / इक्विवलेंट हैं, निस्संदेह है,

52
00:04:00,203 --> 00:04:06,871
हमारी नोटेशनल कन्वेन्शन के वजह से, हमारे पास था  एक्स(आई) <u>0=1 कन्वेन्शन जो बताता है </u>

53
00:04:06,871 --> 00:04:12,003
कि क्यों ये दोनो टर्म्ज़ जिनके आस पास मैंने बनाया है मजेंटा बॉक्स एक सी हैं.

54
00:04:12,003 --> 00:04:16,010
इसी प्रकार, अगर आप देखें अप्डेट रूल को थीटा 1 के लिए, आपको मिलता है कि

55
00:04:16,010 --> 00:04:21,540
यह टर्म यहाँ एक सी है उस टर्म के जो हमारे पास पहले थी,

56
00:04:21,540 --> 00:04:25,020
या एक सी है अप्डेट रूल के जो हमारे पास था थीटा 1 के लिए,

57
00:04:25,020 --> 00:04:30,222
जहाँ निस्संदेह हम प्रयोग कर रहे हैं यह नई नोटेशन एक्स(आई) <u>1 डिनोट </u>

58
00:04:30,222 --> 00:04:37,605
करने के लिए हमारा पहला फ़ीचर, और अब जब हमारे पास हैं एक से ज़्यादा फ़ीचर्ज़ हम कर सकते हैं

59
00:04:37,605 --> 00:04:43,560
वैसे ही अप्डेट रूल्ज़ और पेरमिटर्स के लिए जैसे थीटा2 और इसी प्रकार आगे.

60
00:04:43,560 --> 00:04:48,219
यहाँ इस स्लाइड पर बहुत कुछ हो रहा है तो मैं निश्चय ही आपको प्रोत्साहित करूँगा

61
00:04:48,219 --> 00:04:52,020
कि यदि आपको विडीओ को पॉज़ करना है और देखना है सारा मैथ इस स्लाइड पर

62
00:04:52,020 --> 00:04:55,446
धीरे-धीरे यह सुनिश्चित करने के लिए आप समझ पाएँ है सब कुछ जो यहाँ हो रहा है.

63
00:04:55,446 --> 00:05:00,440
लेकिन यदि आप इम्प्लमेंट करते हैं अल्गोरिद्म जो यहाँ लिखा है तब आपके पास है

64
00:05:00,440 --> 00:05:51,300
एक वर्किंग इम्प्लमेंटेशन लिनीयर रीग्रेशन विद मल्टीपल फीचर्स की.