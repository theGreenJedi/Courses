이전 영상에서 여러 요소들=feature과 변수들을 이용한 선형회귀 추론=hypothesis 에 대해서 살펴보았습니다. 이번 영상에서는 추론의 파라미터를 어떻게 지정하는 지 알아보도록 하죠. 특히, 어떻게 여러 요소들의 선형 회귀에 경사 하강법을 적용하는 지도 알아보도록 하겠습니다. 빠르게 저번 시간에 지정한 변수명을 살펴보겠습니다. 이는  x0=1의 공식을 적용한 다선량 선형 회귀의 형식입니다. 해당 모델의 파라미터는 θ0 ~ θn까지 있지만 이 파라미터들이 n으로 분리된 파라미터로 생각하는 대신에, 사실 이것도 맞는 것이지만, 파라미터들을 θ로 여기도록 하겠습니다. 여기서의 θ는 n+1 차원의 벡터죠. 이제 해당 모델의 파라미터들을 벡터 그 자체라 하겠습니다. 이 비용 함수는 j의 θ0~ θn이고 이것은 보통 오차항의 승의 합에서 구해지죠. 그런데 다시 말하지만 j를 n+1 의 수의 함수로 생각하는 대신, j를 파라미터 벡터 θ의 함수라 하겠습니다 그럼 θ가 벡터가 되겠지요. 바로 이것을 경사 하강이라 볼 수 있습니다. 이제 파라미터 θ j를 θj- α*파생되는 변수에 의해서 계속 덮어 쓸 것입니다. 그리고 다시 이걸 j의 θ로 표현해서, θj가 θj – α의 학습률 * 파생되는 변수로 계속 업데이트 될 것입니다. 부분적 비용 함수의 파생변수는 각각의 θj 파라미터가 될 것입니다. 이제 경사 강하를 적용했을 때 어떤 모습일 지 한 번 보겠습니다. 그리고 특별히 부분 파생 변수도 함께 살펴보겠습니다. 여기 n=1 요소가 있는 경우에 경사 하강을 하는 것을 볼 수 있습니다. 그리고 각각의 θ0, θ1는 각각 분리된 업데이트 규칙=update rules들을 갖고 있습니다. 화면이 여러분에게 친숙하셨으면 좋겠네요. 여기의 변수는 당연히 θ0의 파라미터와 관련된 비용 함수의 부분 파생입니다. 이와 유사하게 θ1 파라미터의 업데이트 규칙도 있습니다. 우리가 앞서 단일 요소=feature만을 갖고 있었을 때와는 조금 다른 모습이지요. 우리는 feature x(i)라 부르기로 했지만 새로운 명명에서는 하나의 요소를 x(i)<u>1</u> 이라 불렀습니다. 이게 요소 하나만 가지고 있는 경우이고요. 그럼 이제 요소들의 개수인 n이 1 보다 큰 경우, 즉 하나 이상의 요소를 가질 때의 알고리즘을 살펴보시겠습니다. 이 업데이트 규칙을 경사 하강법으로 가져왔어요, 혹시 여러분 중 미적분에 대해 아는 분은 비용 함수의 정의를 가질 때와 θ0의 파라미터와 관련된 비용 함수의 부분 파생 θ1 을 가질 때 여기 파란색 박스로 표시해 둔 부분의 부분 파생과 동일한 것을 확인하실 수 있을 겁니다. 다변수 선형 회귀의 경사 하강를 적용할 수 있는 일을 한 것입니다. 이번 슬라이드에서 마지막으로 제가 말하고 싶은 것은 왜 새로 나오는 알고리즘이나 기존 알고리즘들이 결국에는 같거나 유사한 지, 그리고 왜 이 두 알고리즘이 결국은 둘 다 경사 하강인지 그 느낌의 차이를 알려주고 싶습니다. 자, 우리에게 두 개 또는 두 개 이상의 요소가 있다고 가정해보겠습니다, 이제 우리는 θ0, θ1, θ2 에 대응되는 세 개의 업데이트 규칙들이 있겠지요. 
다른 θ가 있을 수도 있겠고요. 만약, θ0의 업데이트 규칙을 보면, 이 업데이트 규칙은 앞서 가졌던 업데이트 규칙의, n = 1 인 경우의 업데이트 규칙과 동일하다는 것을 알 것입니다. 그 이유는 이들이, 당연히, 모두 명명 규칙에 따라 x(i)<u>0</u>~ = 1 를 따랐기 때문이고, 이는 여기 자주색으로 표시한 박스 안의 두 변수가 동일한 이유입니다. 이와 유사하게, θ1의 업데이트 규칙을 보면, 여기 이 변수는 앞서 θ1에서 가졌던, 공식 또는 θ1 에서 기존에 갖고있던 업데이트 규칙이고 이는 첫 번째 요소를 부르기 위해 x(i)<u>1</u>로 새롭게 지정한 것이였지요. 이제 우리는 하나 이상의 요소를 가진 것이고 다음 θ2 파라미터에도 비슷한 업데이트 규칙을 갖도록 할 것입니다. 해당 슬라이드에서 우리는 많은 것을 다뤘습니다. 그러니 잠시 영상을 멈추고 여기 이 슬라이드에 있는 수학 공식들을 천천히 살펴보면서 이해해 보는 시간을 갖도록 하십시오. 만약 여기의 알고리즘을 이해하고 구현할 수 있다면 다변수의 선형회귀의 구현이 동작하는 환경을 구축할 수 있을 것입니다.