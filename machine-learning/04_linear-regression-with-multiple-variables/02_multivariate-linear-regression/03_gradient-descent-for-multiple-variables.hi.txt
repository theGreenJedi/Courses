पिछले वीडियो में, हमने बात की फॉर्म के बारे में हाईपोथीसिस की लिनीयर रीग्रेशन विद मल्टीपल फीचर्स या मल्टीपल वेरिएब्ल्ज़ के साथ॰ इस वीडियो में, आओ बात करें कि उस हाईपोथीसिस के पैरामीटर्ज़ फिट कैसे करने हैं॰ विशेषता आओ बात करें कि कैसे इस्तेमाल करना है ग्रेडिएंट डिसेन्ट को लिनीयर रीग्रेशन विद मल्टीपल फीचर्स के लिए॰ फुर्ती से संक्षिप्तिकरण करने के लिए हमारी नोटेशन को, यह है हमारी फ़ोर्मल हायपॉथिसस मल्टी वेरीअबल लिनीअर रेग्रेशन में जहाँ हमने अपनाया है कन्वेन्शन कि एक्स 0 =1. पेरमिटर्स इस मॉडल के हैं थीटा 0 से थीटा एन तक, लेकिन सोचने की बजाय इसे एन अलग पेरमिटर्स की तरह, जो वैलिड / जायज़ है, मैं सोचूँगा पेरमिटर्स को थीटा की तरह जहाँ थीटा है एक एन+1-डिमेन्शन्स का वेक्टर. अत: मैं सोचूँगा पेरमिटर्स को इस मॉडल के स्वयं एक वेक्टर की तरह. हमारा कॉस्ट  फ़ंक्शन है जे ऑफ़ थीटा 0 से थीटा एन तक जो दिया जाता है इस हमेशा की तरह से सम ऑफ़ स्क्वेर ऑफ़ एरर टर्म से. लेकिन, फिर से, यह सोचने की बजाय जे को एक फ़ंक्शन जैसे इन एन+1 नम्बर्ज़ का, मैं सामान्य तौर पर लिखूँगा जे को सिर्फ़ एक फ़ंक्शन पेरामिटर वेक्टर थीटा क्योंकि थीटा यहाँ एक वेक्टर है. यहाँ है कि ग्रेडीयंट डिसेंट कैसे दिखता है. हम बार-बार अप्डेट करेंगे हर एक पेरामिटर थीटा जे को थीटा जे माइनस अल्फ़ा टाइम्ज़ यह डेरिवेटिव टर्म के अनुसार. और एक बार फ़िट हम लिखते हैं इसे सिर्फ़ जे ऑफ़ थीटा की तरह, ताकि थीटा अप्डेट हो थीटा जे माइनस लर्निंग रेट अल्फ़ा टाइम्ज़ डेरिवेटिव से, एक पार्शल डेरिवेटिव कॉस्ट फ़ंक्शन का विद रिस्पेक्ट टु पेरामिटर थीटा जे. चलिए देखते हैं कैसे दिखता है यह जब हम इम्प्लमेंट करते हैं ग्रेडीयंट डिसेंट और, विशेषत:, चलिए देखते है कैसे दिखती है वह पार्शल डेरिवेटिव टर्म. यहाँ है कि क्या है हमारे पास ग्रेडीयंट डिसेंट के लिए उस केस में जब हमारे पास थे एन = 1 फ़ीचर. हमारे पास थे दो अलग अप्डेट रूल्ज़ पेरामिटर थीटा 0 और थीटा 1 के लिए, और आशा है ये आपको जाने पहचाने लगते है. और यह टर्म यहाँ थी निस्संदेह पार्शल डेरिवेटिव कॉस्ट फ़ंक्शन की विद रिस्पेक्ट टु पेरामिटर थीटा 0, और इसी प्रकार हमारे पास था एक दूसरा अप्डेट रूल पेरामिटर थीटा 1 के लिए. वहाँ एक छोटा अंतर है जो है कि जब हमारे पास पहले केवल एक फ़ीचर था, हम उसे कह पाए फ़ीचर एक्स(आई) लेकिन अब हमारी नोटेशन में हमें निस्संदेह इसे कहेंगे एक्स(आई) <u>1 डिनोट करने के लिए हमारा एक फ़ीचर.</u> तो वह था जब हमारे पास था केवल एक फ़ीचर. चलिए देखते हैं नया अल्गोरिद्म क्योंकि हमारे पास हैं एक से ज़्यादा फ़ीचर्ज़, जहाँ फ़ीचर्ज़ की संख्या एन शायद बहुत बड़ी है एक से. हम लेते हैं यह अप्डेट रूल ग्रेडीयंट डिसेंट के लिए, शायद आप में से वे जो जानते हैं कैल्क्युलुस, अगर आप लें परिभाषा कॉस्ट फ़ंक्शन की और लें पार्शल डेरिवेटिव कॉस्ट फ़ंक्शन जे का विद रिस्पेक्ट टु पेरामिटर थीटा जे, आप पाएँगे कि पार्शल डेरिवेटिव बिल्कुल वही टर्म है जिसके आस पास मैंने नीला बॉक्स बनाया है. और अगर आप इसे इम्प्लमेंट करते हैं तो आपको मिलेगा एक वर्किंग इम्प्लमेंटेशन ग्रेडीयंट डिसेंट का मल्टी वेरीयेट लिनीअर रेग्रेशन के लिए. अंतिम काम जो मैं करना चाहता हूँ इस स्लाइड पर है कि आपको देना चाहता हूँ एक अनुभव कि क्यों ये नए और पुराने अल्गोरिद्म्स हैं एक प्रकार से एक ही या क्यों ये हैं दोनो एक जैसे अल्गोरिद्म्स या क्यों ये दोनो ग्रेडीयंट डिसेंट अल्गोरिद्म्स है. चलिए लेते हैं एक केस जहाँ हमारे पास हैं दो फ़ीचर्ज़ या शायद दो से ज़्यादा फ़ीचर्ज़, ताकि हमारे पास हों तीन अप्डेट रूल्ज़ पेरामिटर थीटा 0, थीटा 1, थीटा 2 के लिए और शायद  थीटा की दूसरी वैल्यूज़ के लिए भी. अगर आप देखें अप्डेट रूल को थीटा 0 के लिए, क्या मिलता है आपको कि यह अप्डेट रूल यहाँ वैसा ही है जैसा अप्डेट रूल हमारे पास था पहले केस एन = 1 के लिए. और कारण कि ये समतुल्य / इक्विवलेंट हैं, निस्संदेह है, हमारी नोटेशनल कन्वेन्शन के वजह से, हमारे पास था  एक्स(आई) <u>0=1 कन्वेन्शन जो बताता है </u> कि क्यों ये दोनो टर्म्ज़ जिनके आस पास मैंने बनाया है मजेंटा बॉक्स एक सी हैं. इसी प्रकार, अगर आप देखें अप्डेट रूल को थीटा 1 के लिए, आपको मिलता है कि यह टर्म यहाँ एक सी है उस टर्म के जो हमारे पास पहले थी, या एक सी है अप्डेट रूल के जो हमारे पास था थीटा 1 के लिए, जहाँ निस्संदेह हम प्रयोग कर रहे हैं यह नई नोटेशन एक्स(आई) <u>1 डिनोट </u> करने के लिए हमारा पहला फ़ीचर, और अब जब हमारे पास हैं एक से ज़्यादा फ़ीचर्ज़ हम कर सकते हैं वैसे ही अप्डेट रूल्ज़ और पेरमिटर्स के लिए जैसे थीटा2 और इसी प्रकार आगे. यहाँ इस स्लाइड पर बहुत कुछ हो रहा है तो मैं निश्चय ही आपको प्रोत्साहित करूँगा कि यदि आपको विडीओ को पॉज़ करना है और देखना है सारा मैथ इस स्लाइड पर धीरे-धीरे यह सुनिश्चित करने के लिए आप समझ पाएँ है सब कुछ जो यहाँ हो रहा है. लेकिन यदि आप इम्प्लमेंट करते हैं अल्गोरिद्म जो यहाँ लिखा है तब आपके पास है एक वर्किंग इम्प्लमेंटेशन लिनीयर रीग्रेशन विद मल्टीपल फीचर्स की.