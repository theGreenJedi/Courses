1
00:00:00,144 --> 00:00:02,011
在这段视频中

2
00:00:02,011 --> 00:00:03,990
传达给你一个直观的感受

3
00:00:03,990 --> 00:00:05,771
告诉你正规化是如何进行的

4
00:00:05,771 --> 00:00:07,386
而且 我们还要写出

5
00:00:07,386 --> 00:00:11,724
我们使用正规化时 需要使用的代价函数

6
00:00:11,780 --> 00:00:13,327
根据我们幻灯片上的

7
00:00:13,327 --> 00:00:14,916
这些例子

8
00:00:14,950 --> 00:00:17,642
我想我可以给你一个直观的感受

9
00:00:17,700 --> 00:00:19,608
但是 一个更好的

10
00:00:19,608 --> 00:00:21,192
让你自己去理解正规化

11
00:00:21,192 --> 00:00:22,643
如何工作的方法是 

12
00:00:22,643 --> 00:00:25,869
你自己亲自去实现它 并且看看它是如何工作的

13
00:00:25,869 --> 00:00:26,888
如果在这节课后

14
00:00:26,888 --> 00:00:28,603
你进行一些适当的练习

15
00:00:28,603 --> 00:00:30,053
你就有机会亲自体验一下

16
00:00:30,053 --> 00:00:33,927
正规化到底是怎么工作的

17
00:00:33,930 --> 00:00:36,519
那么 这里就是一些直观解释

18
00:00:36,519 --> 00:00:38,233
在前面的视频中 我们看到了

19
00:00:38,233 --> 00:00:39,771
如果说我们要

20
00:00:39,771 --> 00:00:41,420
用一个二次函数来

21
00:00:41,420 --> 00:00:44,283
拟合这些数据 它给了我们一个对数据很好的拟合

22
00:00:44,283 --> 00:00:45,286
然而 如果我们

23
00:00:45,310 --> 00:00:47,175
用一个更高次的

24
00:00:47,210 --> 00:00:48,823
多项式去拟合 我们最终

25
00:00:48,850 --> 00:00:50,111
可能得到一个曲线

26
00:00:50,111 --> 00:00:51,760
能非常好地拟合训练集 但是

27
00:00:51,760 --> 00:00:53,381
这真的不是一个好的结果

28
00:00:53,420 --> 00:00:54,497
它过度拟合了数据

29
00:00:54,497 --> 00:00:57,225
因此 一般性并不是很好

30
00:00:57,900 --> 00:01:00,453
让我们考虑下面的假设

31
00:01:00,453 --> 00:01:02,088
我们想要加上惩罚项 从而使

32
00:01:02,088 --> 00:01:04,753
参数 θ3 和 θ4 足够的小

33
00:01:04,753 --> 00:01:06,543
这里我的意思就是

34
00:01:06,543 --> 00:01:09,676
这是我们的优化目标

35
00:01:09,690 --> 00:01:10,859
或者客观的说 这就是我们需要

36
00:01:10,870 --> 00:01:12,574
优化的问题 我们需要尽量减少

37
00:01:12,580 --> 00:01:15,526
代价函数的均方误差

38
00:01:15,526 --> 00:01:17,350
对于这个函数

39
00:01:17,370 --> 00:01:19,125
我们对它进行一些 添加一些项

40
00:01:19,160 --> 00:01:23,291
加上 1000 乘以 θ3 的平方

41
00:01:23,291 --> 00:01:28,334
再加上 1000 乘以 θ4 的平方

42
00:01:28,334 --> 00:01:32,354
1000 只是我随便写的某个较大的数字而已

43
00:01:32,354 --> 00:01:33,538
现在 如果我们要

44
00:01:33,540 --> 00:01:35,127
最小化这个函数

45
00:01:35,140 --> 00:01:36,688
为了使这个

46
00:01:36,710 --> 00:01:38,620
新的代价函数最小化

47
00:01:38,620 --> 00:01:40,769
我们要让 θ3 和 θ4

48
00:01:40,769 --> 00:01:42,133
尽可能小 对吧？

49
00:01:42,133 --> 00:01:43,264
因为 如果你有

50
00:01:43,264 --> 00:01:44,956
1000 乘以 θ3 这个

51
00:01:44,970 --> 00:01:48,103
新的代价函数将会是很大的

52
00:01:48,140 --> 00:01:49,245
所以 当我们最小化

53
00:01:49,245 --> 00:01:50,402
这个新的函数时 我们将使

54
00:01:50,402 --> 00:01:52,107
θ3 的值

55
00:01:52,110 --> 00:01:53,776
接近于0

56
00:01:53,776 --> 00:01:56,700
θ4 的值也接近于0

57
00:01:56,700 --> 00:01:59,691
就像我们忽略了

58
00:01:59,691 --> 00:02:03,206
这两个值一样

59
00:02:03,710 --> 00:02:05,282
如果我们做到这一点

60
00:02:05,290 --> 00:02:06,783
如果 θ3 和 θ4 

61
00:02:06,783 --> 00:02:07,973
接近0 那么我们

62
00:02:07,973 --> 00:02:09,643
将得到一个近似的二次函数

63
00:02:09,643 --> 00:02:11,089
所以 我们最终

64
00:02:11,110 --> 00:02:13,343
恰当地拟合了数据  你知道

65
00:02:13,343 --> 00:02:15,463
二次函数加上一些项

66
00:02:15,463 --> 00:02:17,856
这些很小的项 贡献很小

67
00:02:17,860 --> 00:02:20,207
因为 θ3 θ4 它们是非常接近于0的

68
00:02:20,207 --> 00:02:27,293
所以 我们最终得到了

69
00:02:27,293 --> 00:02:29,386
实际上 很好的一个二次函数

70
00:02:29,386 --> 00:02:30,544
因为这是一个

71
00:02:30,544 --> 00:02:34,060
更好的假设

72
00:02:34,104 --> 00:02:36,666
在这个具体的例子中 我们看到了

73
00:02:36,700 --> 00:02:39,023
惩罚这两个

74
00:02:39,023 --> 00:02:41,446
大的参数值的效果

75
00:02:41,446 --> 00:02:46,510
更一般地 这里给出了正规化背后的思路

76
00:02:46,980 --> 00:02:48,924
这种思路就是 如果我们

77
00:02:48,924 --> 00:02:50,303
的参数值

78
00:02:50,303 --> 00:02:53,083
对应一个较小值的话

79
00:02:53,083 --> 00:02:55,250
就是说 参数值比较小

80
00:02:55,250 --> 00:02:57,866
那么往往我们会得到一个

81
00:02:57,866 --> 00:03:00,386
形式更简单的假设

82
00:03:00,386 --> 00:03:02,279
所以 我们最后一个例子中

83
00:03:02,279 --> 00:03:04,024
我们惩罚的只是 θ3 和

84
00:03:04,024 --> 00:03:05,666
θ4 使这两个

85
00:03:05,666 --> 00:03:07,046
值均接近于零

86
00:03:07,046 --> 00:03:08,450
我们得到了一个更简单的假设

87
00:03:08,480 --> 00:03:12,549
也即这个假设大抵上是一个二次函数

88
00:03:12,549 --> 00:03:13,991
但更一般地说 如果我们就像这样

89
00:03:13,991 --> 00:03:15,989
惩罚的其它参数 通常我们

90
00:03:15,989 --> 00:03:17,416
可以把它们都想成是

91
00:03:17,420 --> 00:03:19,076
得到一个更简单的假设

92
00:03:19,110 --> 00:03:20,943
因为你知道

93
00:03:20,943 --> 00:03:22,380
当这些参数越接近这个例子时

94
00:03:22,410 --> 00:03:23,700
假设的结果越接近

95
00:03:23,700 --> 00:03:26,105
一个二次函数

96
00:03:26,105 --> 00:03:29,038
但更一般地

97
00:03:29,038 --> 00:03:30,493
可以表明

98
00:03:30,530 --> 00:03:32,536
这些参数的值越小

99
00:03:32,540 --> 00:03:34,416
通常对应于越光滑的函数

100
00:03:34,416 --> 00:03:36,780
也就是更加简单的函数

101
00:03:36,780 --> 00:03:41,667
因此 就不易发生过拟合的问题

102
00:03:41,680 --> 00:03:43,245
我知道

103
00:03:43,245 --> 00:03:45,441
为什么要所有的部分参数变小的这些原因

104
00:03:45,441 --> 00:03:46,944
为什么越小的参数对应于一个简单的假设

105
00:03:46,960 --> 00:03:48,916
我知道这些原因

106
00:03:48,916 --> 00:03:51,572
对你来说现在不一定完全理解

107
00:03:51,590 --> 00:03:52,784
但现在解释起来确实比较困难

108
00:03:52,784 --> 00:03:54,477
除非你自己实现一下

109
00:03:54,480 --> 00:03:56,446
自己亲自运行了这部分

110
00:03:56,470 --> 00:03:58,247
但是我希望 这个例子中 

111
00:03:58,247 --> 00:03:59,610
使 θ3 和 θ4

112
00:03:59,650 --> 00:04:01,230
很小 并且这样做

113
00:04:01,230 --> 00:04:02,535
能给我们一个更加简单的

114
00:04:02,540 --> 00:04:04,776
假设 我希望这个例子

115
00:04:04,800 --> 00:04:06,314
有助于解释原因 至少给了

116
00:04:06,330 --> 00:04:09,320
我们一些直观感受 为什么这应该是这样的

117
00:04:09,320 --> 00:04:11,476
来让我们看看具体的例子

118
00:04:12,010 --> 00:04:13,873
对于房屋价格预测我们

119
00:04:13,873 --> 00:04:15,465
可能有上百种特征

120
00:04:15,480 --> 00:04:17,223
我们谈到了一些可能的特征

121
00:04:17,250 --> 00:04:18,756
比如说 x1 是房屋的尺寸

122
00:04:18,756 --> 00:04:20,096
x2 是卧室的数目

123
00:04:20,096 --> 00:04:21,963
x3 是房屋的层数等等

124
00:04:21,963 --> 00:04:24,502
那么我们可能就有一百个特征

125
00:04:24,502 --> 00:04:26,896
跟前面的多项式例子不同

126
00:04:26,920 --> 00:04:28,459
我们是不知道的 对吧

127
00:04:28,460 --> 00:04:29,826
我们不知道 θ3

128
00:04:29,826 --> 00:04:32,641
θ4 是高阶多项式的项

129
00:04:32,641 --> 00:04:34,515
所以 如果我们有一个袋子

130
00:04:34,540 --> 00:04:35,863
如果我们有一百个特征

131
00:04:35,863 --> 00:04:38,074
在这个袋子里 我们是很难

132
00:04:38,100 --> 00:04:40,210
提前选出那些

133
00:04:40,260 --> 00:04:42,729
关联度更小的特征的

134
00:04:42,729 --> 00:04:45,773
也就是说如果我们有一百或一百零一个参数

135
00:04:45,780 --> 00:04:47,340
我们不知道

136
00:04:47,340 --> 00:04:48,987
挑选哪一个

137
00:04:49,010 --> 00:04:50,445
我们并不知道

138
00:04:50,450 --> 00:04:54,272
如何选择参数 如何缩小参数的数目

139
00:04:54,430 --> 00:04:56,237
因此在正规化里

140
00:04:56,237 --> 00:04:58,438
我们要做的事情 就是把我们的

141
00:04:58,438 --> 00:05:01,213
代价函数 这里就是线性回归的代价函数

142
00:05:01,213 --> 00:05:02,656
接下来我度量

143
00:05:02,660 --> 00:05:04,326
来修改这个代价函数

144
00:05:04,340 --> 00:05:06,246
从而缩小

145
00:05:06,270 --> 00:05:07,643
我所有的参数值 因为你知道

146
00:05:07,643 --> 00:05:09,059
我不知道是哪个

147
00:05:09,059 --> 00:05:10,440
哪一个或两个要去缩小

148
00:05:10,440 --> 00:05:11,690
所以我就修改我的

149
00:05:11,690 --> 00:05:16,732
代价函数 在这后面添加一项

150
00:05:17,390 --> 00:05:20,436
就像我们在方括号里的这项

151
00:05:20,440 --> 00:05:22,212
当我添加一个额外的

152
00:05:22,212 --> 00:05:23,516
正则化项的时候

153
00:05:23,530 --> 00:05:25,510
我们收缩了每个

154
00:05:25,560 --> 00:05:27,286
参数 并且因此

155
00:05:27,320 --> 00:05:28,745
我们会使

156
00:05:28,760 --> 00:05:30,747
我们所有的参数 θ1

157
00:05:30,747 --> 00:05:32,746
θ2 θ3

158
00:05:32,746 --> 00:05:35,490
直到 θ100 的值变小

159
00:05:36,790 --> 00:05:39,629
顺便说一下 按照惯例来讲

160
00:05:39,629 --> 00:05:41,007
我们从第一个这里开始

161
00:05:41,007 --> 00:05:43,341
所以我实际上没有去惩罚 θ0

162
00:05:43,360 --> 00:05:45,416
因此 θ0 的值是大的

163
00:05:45,470 --> 00:05:46,435
这就是一个约定

164
00:05:46,435 --> 00:05:48,664
从1到 n 的求和

165
00:05:48,664 --> 00:05:50,185
而不是从0到 n 的求和

166
00:05:50,190 --> 00:05:51,953
但其实在实践中

167
00:05:51,960 --> 00:05:53,464
这只会有非常小的差异

168
00:05:53,490 --> 00:05:54,788
无论你是否包括这项

169
00:05:54,788 --> 00:05:56,221
就是 θ0 这项

170
00:05:56,221 --> 00:05:59,532
实际上 结果只有非常小的差异

171
00:05:59,540 --> 00:06:01,804
但是按照惯例 通常情况下我们还是只

172
00:06:01,804 --> 00:06:03,356
从 θ1 到 θ100 进行正规化

173
00:06:03,360 --> 00:06:06,084
这里我们写下来

174
00:06:06,084 --> 00:06:08,978
我们的正规化优化目标

175
00:06:08,978 --> 00:06:10,655
我们的正规化后的代价函数

176
00:06:10,655 --> 00:06:11,718
就是这样的

177
00:06:11,718 --> 00:06:13,903
J(θ) 这个项

178
00:06:13,970 --> 00:06:15,863
右边的这项就是一个正则化项

179
00:06:15,863 --> 00:06:17,548
并且 λ

180
00:06:17,570 --> 00:06:23,950
在这里我们称做正规化参数

181
00:06:23,973 --> 00:06:26,334
 λ 要做的就是控制

182
00:06:26,334 --> 00:06:28,480
在两个不同的目标中

183
00:06:28,510 --> 00:06:30,636
的一个平衡关系

184
00:06:30,636 --> 00:06:32,478
第一个目标

185
00:06:32,500 --> 00:06:34,399
第一个需要抓住的目标

186
00:06:34,399 --> 00:06:36,081
就是我们想要训练

187
00:06:36,090 --> 00:06:38,350
使假设更好地拟合训练数据

188
00:06:38,390 --> 00:06:41,083
我们希望假设能够很好的适应训练集

189
00:06:41,083 --> 00:06:42,954
而第二个目标是

190
00:06:42,954 --> 00:06:44,474
我们想要保持参数值较小

191
00:06:44,474 --> 00:06:46,053
这就是第二项的目标

192
00:06:46,060 --> 00:06:49,103
通过正则化目标函数

193
00:06:49,103 --> 00:06:53,583
这就是λ 这个正则化

194
00:06:53,583 --> 00:06:55,937
参数需要控制的

195
00:06:55,937 --> 00:06:57,694
它会这两者之间的平衡

196
00:06:57,694 --> 00:06:58,938
目标就是平衡拟合训练的目的

197
00:06:58,960 --> 00:07:00,562
和

198
00:07:00,562 --> 00:07:02,043
保持参数值较小的目的

199
00:07:02,080 --> 00:07:05,688
从而来保持假设的形式相对简单

200
00:07:05,688 --> 00:07:09,134
来避免过度的拟合

201
00:07:09,290 --> 00:07:11,026
对于我们的房屋价格预测来说

202
00:07:11,030 --> 00:07:13,026
这个例子 尽管我们之前有

203
00:07:13,030 --> 00:07:14,256
我们已经用非常高的

204
00:07:14,256 --> 00:07:15,968
高阶多项式来拟合 我们将会

205
00:07:15,968 --> 00:07:17,461
得到一个

206
00:07:17,480 --> 00:07:19,020
非常弯曲和复杂的曲线函数

207
00:07:19,020 --> 00:07:22,460
就像这个 如果你还是用高阶多项式拟合

208
00:07:22,460 --> 00:07:24,120
就是用这里所有的多项式特征来拟合的话

209
00:07:24,120 --> 00:07:26,038
但现在我们不这样了

210
00:07:26,038 --> 00:07:27,956
你只需要确保使用了

211
00:07:27,970 --> 00:07:30,798
正规化目标的方法

212
00:07:30,798 --> 00:07:32,272
那么你就可以得到

213
00:07:32,272 --> 00:07:34,332
实际上是一个曲线 但这个曲线不是

214
00:07:34,340 --> 00:07:36,465
一个真正的二次函数

215
00:07:36,490 --> 00:07:38,510
而是更加的流畅和简单

216
00:07:38,510 --> 00:07:39,870
也许就像这条紫红色的曲线一样

217
00:07:39,870 --> 00:07:42,261
那么 你知道的

218
00:07:42,261 --> 00:07:45,445
这样就得到了对于这个数据更好的假设

219
00:07:45,445 --> 00:07:46,613
再一次说明下

220
00:07:46,613 --> 00:07:47,919
我了解这部分有点难以明白 为什么加上

221
00:07:47,919 --> 00:07:50,064
参数的影响可以具有

222
00:07:50,064 --> 00:07:51,668
这种效果 但如果你

223
00:07:51,690 --> 00:07:54,584
亲自实现了正规化

224
00:07:54,650 --> 00:07:56,063
你将能够看到

225
00:07:56,090 --> 00:07:58,859
这种影响的最直观的感受

226
00:08:00,620 --> 00:08:02,777
在正规化线性回归中 如果

227
00:08:02,777 --> 00:08:05,748
正规化参数值

228
00:08:05,748 --> 00:08:07,669
被设定为非常大

229
00:08:07,669 --> 00:08:09,542
那么将会发生什么呢？

230
00:08:09,542 --> 00:08:11,698
我们将会非常大地惩罚

231
00:08:11,698 --> 00:08:13,513
参数θ1 θ2

232
00:08:13,520 --> 00:08:15,207
θ3 θ4

233
00:08:15,230 --> 00:08:17,409
也就是说

234
00:08:17,430 --> 00:08:21,916
 如果我们的假设是底下的这个

235
00:08:21,930 --> 00:08:23,674
如果我们最终惩罚

236
00:08:23,674 --> 00:08:24,913
θ1 θ2 θ3

237
00:08:24,990 --> 00:08:26,145
θ4 在一个非常大的程度 那么我们

238
00:08:26,145 --> 00:08:29,463
会使所有这些参数接近于零的 对不对？

239
00:08:29,463 --> 00:08:32,240
θ1 将接近零   θ2 将接近零

240
00:08:32,240 --> 00:08:34,410
θ3 和 θ4

241
00:08:34,410 --> 00:08:36,646
最终也会接近于零

242
00:08:36,646 --> 00:08:37,810
如果我们这么做 那么就是

243
00:08:37,810 --> 00:08:39,143
我们的假设中

244
00:08:39,160 --> 00:08:41,189
相当于去掉了这些项 并且使

245
00:08:41,189 --> 00:08:43,597
我们只是留下了一个简单的假设

246
00:08:43,597 --> 00:08:44,224
这个假设只能表明

247
00:08:44,230 --> 00:08:46,020
那就是 房屋价格

248
00:08:46,020 --> 00:08:48,624
就等于 θ0 的值

249
00:08:48,650 --> 00:08:50,830
那就是类似于拟合了

250
00:08:50,830 --> 00:08:54,679
一条水平直线 对于数据来说

251
00:08:54,679 --> 00:08:56,533
这就是一个

252
00:08:56,570 --> 00:08:58,773
欠拟合 (underfitting)

253
00:08:58,773 --> 00:09:00,926
这种情况下这一假设

254
00:09:00,950 --> 00:09:02,552
它是条失败的直线

255
00:09:02,570 --> 00:09:04,063
对于训练集来说

256
00:09:04,070 --> 00:09:05,423
这只是一条平滑直线

257
00:09:05,423 --> 00:09:07,173
它没有任何趋势

258
00:09:07,173 --> 00:09:10,432
它不会去趋向大部分训练样本的任何值

259
00:09:10,432 --> 00:09:11,592
这句话的另​​一种方式来表达就是

260
00:09:11,592 --> 00:09:13,697
这种假设有

261
00:09:13,720 --> 00:09:15,410
过于强烈的"偏见" 或者

262
00:09:15,450 --> 00:09:17,091
过高的偏差 (bais)

263
00:09:17,120 --> 00:09:18,446
认为预测的价格只是

264
00:09:18,460 --> 00:09:20,183
等于 θ0 并且

265
00:09:20,230 --> 00:09:22,123
尽管我们的数据集

266
00:09:22,123 --> 00:09:23,207
选择去拟合一条

267
00:09:23,207 --> 00:09:25,648
扁平的直线 仅仅是一条

268
00:09:25,650 --> 00:09:28,230
扁平的水平线  我画得不好

269
00:09:28,230 --> 00:09:30,447
对于数据来说

270
00:09:30,447 --> 00:09:33,059
 这只是一条水平线 因此

271
00:09:33,060 --> 00:09:35,626
为了使正则化运作良好

272
00:09:35,626 --> 00:09:37,835
我们应当注意一些方面

273
00:09:37,850 --> 00:09:39,903
应该去选择一个不错的

274
00:09:39,903 --> 00:09:42,991
正则化参数 λ

275
00:09:42,991 --> 00:09:44,908
并且当我们以后讲到多重选择时

276
00:09:44,920 --> 00:09:46,717
在后面的课程中 我们将讨论

277
00:09:46,717 --> 00:09:48,413
一种方法

278
00:09:48,420 --> 00:09:50,803
一系列的方法来自动选择

279
00:09:50,810 --> 00:09:54,833
正则化参数 λ  所以

280
00:09:54,833 --> 00:09:56,570
这就是高度正则化的思路

281
00:09:56,570 --> 00:09:58,254
回顾一下代价函数

282
00:09:58,254 --> 00:10:00,454
为了使用正则化

283
00:10:00,454 --> 00:10:01,885
在接下来的两段视频中 让我们

284
00:10:01,885 --> 00:10:03,736
把这些概念 应用到

285
00:10:03,750 --> 00:10:05,440
到线性回归和

286
00:10:05,440 --> 00:10:07,111
逻辑回归中去

287
00:10:07,111 --> 00:10:09,020
那么我们就可以让他们

288
00:10:09,060 --> 00:10:10,982
避免过度拟合了 【教育无边界字幕组】翻译：Naplessss 校对/审核：所罗门捷列夫