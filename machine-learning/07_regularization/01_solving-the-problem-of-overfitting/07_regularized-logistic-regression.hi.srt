1
00:00:00,160 --> 00:00:01,480
लॉजिस्टिक रिग्रेशन के लिए हमने पहले

2
00:00:02,110 --> 00:00:04,730
बात की थी दो तरह के ऑप्टिमायज़ेशन अल्गोरिद्म्स की.

3
00:00:05,190 --> 00:00:06,190
हमने बात की कि कैसे वास्तव में इस्तेमाल करते हैं

4
00:00:06,560 --> 00:00:09,210
ग्रेडीयंट डिसेंट करने के लिए ऑप्टिमायज़ कॉस्ट फ़ंक्शन जे ऑफ़ थीटा को.

5
00:00:09,690 --> 00:00:10,770
और हमने बात भी की थी

6
00:00:11,120 --> 00:00:12,730
एडवांसड ऑप्टिमायज़ेशन तरीक़ों की.

7
00:00:13,520 --> 00:00:14,670
वे जिनको आवश्यकता है कि आप

8
00:00:14,790 --> 00:00:16,300
दें एक ढंग कम्प्यूट करने के लिए

9
00:00:16,940 --> 00:00:18,160
आपका कॉस्ट फ़ंक्शन जे ऑफ़

10
00:00:18,420 --> 00:00:20,920
थीटा और कि आप दें एक तरीक़ा कम्प्यूट करने का डेरीवेटिव्स.

11
00:00:22,450 --> 00:00:23,920
इस विडियो में, हम दिखाएँगे कि कैसे

12
00:00:24,190 --> 00:00:25,420
आप अनुकूल बना सकते हैं दोनो

13
00:00:25,500 --> 00:00:27,570
उन तकनीकों को, दोनो ग्रेडीयंट डिसेंट तथा

14
00:00:27,720 --> 00:00:29,350
अधिक एडवांसड ऑप्टिमायज़ेशन तकनीक़ों को

15
00:00:30,280 --> 00:00:31,770
करवाने के लिए उन्हें

16
00:00:31,950 --> 00:00:33,550
काम रेगुलराइज्ड लॉजिस्टिक रिग्रेशन के लिए.

17
00:00:35,430 --> 00:00:36,670
तो, यह है सुझाव.

18
00:00:37,260 --> 00:00:38,770
हमने देखा पहले कि लॉजिस्टिक

19
00:00:39,190 --> 00:00:40,490
रेग्रेशन का झुकाव भी हो सकता है

20
00:00:40,850 --> 00:00:42,540
ओवर फ़िटिंग की तरफ़ यदि आप फ़िट करते हैं

21
00:00:42,810 --> 00:00:44,090
इसे एक बहुत, एक प्रकार से,

22
00:00:44,290 --> 00:00:45,890
ऊँची डिग्री के पालिनोमीयल फ़ीचर्ज़ से इस तरह.

23
00:00:46,470 --> 00:00:48,250
जहाँ G है

24
00:00:48,480 --> 00:00:49,970
सिग्मोईड फ़ंक्शन और

25
00:00:50,030 --> 00:00:51,330
विशेष रूप से आपको मिलती है

26
00:00:51,530 --> 00:00:53,020
हायपॉथिसस, आप जानते हैं,

27
00:00:53,150 --> 00:00:54,120
जिसकी निर्णायक सीमा रेखा है

28
00:00:54,360 --> 00:00:55,930
सिर्फ़ एक प्रकार से बहुत जटिल

29
00:00:56,620 --> 00:00:58,600
और बहुत अधिक घुमावदार फ़ंक्शन जो

30
00:00:58,820 --> 00:00:59,680
वास्तव में नहीं है एक बहुत बढ़िया

31
00:00:59,790 --> 00:01:01,000
हायपॉथिसस इस ट्रेनिंग

32
00:01:01,350 --> 00:01:02,990
सेट के लिए, और सामान्य रूप में यदि आपके पास है

33
00:01:03,120 --> 00:01:04,890
लॉजिस्टिक रेग्रेशन बहुत से फ़ीचर्ज़ के साथ.

34
00:01:05,150 --> 00:01:06,630
ज़रूरी नहीं है कि पालिनोमीयल फ़ीचर्ज़ हों, लेकिन

35
00:01:06,790 --> 00:01:07,510
केवल बहुत से

36
00:01:07,670 --> 00:01:09,720
फ़ीचर्ज़ के साथ आपको मिल सकते है ओवरफ़िटिंग.

37
00:01:11,620 --> 00:01:14,010
यह था हमारा कॉस्ट फ़ंक्शन लॉजिस्टिक रेग्रेशन के लिए.

38
00:01:14,810 --> 00:01:16,210
और यदि हम चाहते हैं बदलना इसे

39
00:01:16,740 --> 00:01:18,820
ताकि यह इस्तेमाल करे रेगुलराइज़ेशन, हमें सिर्फ़

40
00:01:18,950 --> 00:01:20,630
करना है कि जोड़ें

41
00:01:20,820 --> 00:01:22,290
इसमें निम्न टर्म

42
00:01:22,650 --> 00:01:24,860
प्लस वन ओवर 2M, सम

43
00:01:25,110 --> 00:01:26,580
J बराबर 1 से, और

44
00:01:26,730 --> 00:01:29,670
हमेशा की तरह सम है J बराबर 1 से.

45
00:01:29,800 --> 00:01:31,000
बजाय कि सम है J

46
00:01:31,550 --> 00:01:33,670
बराबर 0 से, थीटा J स्क्वेर्ड का.

47
00:01:34,330 --> 00:01:35,470
और इसका होना चाहिए

48
00:01:35,750 --> 00:01:36,960
प्रभाव इसलिए, दंडित करने का

49
00:01:37,650 --> 00:01:39,140
पेरमिटर्स थीटा 1 थीटा

50
00:01:39,570 --> 00:01:42,600
2 और आगे थीटा n तक ताकि वे बहुत बड़े न हों.

51
00:01:43,610 --> 00:01:44,720
और यदि आप यह करते हैं,

52
00:01:45,720 --> 00:01:46,450
तो इसका होगा

53
00:01:46,750 --> 00:01:48,870
प्रभाव कि भले ही आप फिट कर रहे हों

54
00:01:49,250 --> 00:01:51,500
एक बहुत ऊँची डिग्री का पालिनोमीयल बहुत से पेरमिटर्स के साथ.

55
00:01:52,210 --> 00:01:53,240
जब आप कर रहे हैं अप्लाई रेगुलराइज़ेशन

56
00:01:53,910 --> 00:01:55,090
और रखते हैं पेरमिटर्स को छोटे

57
00:01:55,850 --> 00:01:57,580
आपको एक निर्णायक सीमा रेखा मिलने की अधिक सम्भावना है.

58
00:01:58,830 --> 00:02:00,040
आप जानते हैं, जो शायद ऐसी दिखेगी.

59
00:02:00,320 --> 00:02:01,460
यह दिखती है अधिक उचित अलग करने के लिए

60
00:02:02,500 --> 00:02:03,740
पॉज़िटिव और नेगेटिव इग्ज़ाम्पल को.

61
00:02:05,300 --> 00:02:06,970
अत:, जब आप इस्तेमाल कर रहे हैं रेगुलराइज़ेशन

62
00:02:08,140 --> 00:02:09,080
तब भी जब हमारे पास हैं बहुत से

63
00:02:09,220 --> 00:02:11,110
फ़ीचर्ज़, रेगुलराइज़ेशन कर सकता है

64
00:02:11,620 --> 00:02:13,500
सहायता ओवरफ़िटिंग समस्या में.

65
00:02:14,740 --> 00:02:15,790
कैसे हम वास्तव में इसे अप्लाई करते हैं?

66
00:02:16,720 --> 00:02:18,280
ठीक है, प्रारम्भिक ग्रेडीयंट डिसेंट

67
00:02:18,710 --> 00:02:20,380
अल्गोरिद्म में, यह था अप्डेट जो हमारे पास था.

68
00:02:20,670 --> 00:02:22,300
हम बार-बार करेंगे निम्न

69
00:02:22,750 --> 00:02:24,610
अप्डेट थीटा J को. यह

70
00:02:24,740 --> 00:02:26,940
स्लाइड दिखती है काफ़ी कुछ पिछली स्लाइड जैसी लिनीअर रेग्रेशन वाली.

71
00:02:27,510 --> 00:02:28,460
लेकिन क्या करुंगा मैं कि

72
00:02:29,210 --> 00:02:31,390
लिखूँगा थीटा 0 का अप्डेट अलग से

73
00:02:31,670 --> 00:02:32,930
तो, पहली लाइन है

74
00:02:33,060 --> 00:02:34,110
थीटा 0 का अप्डेट और

75
00:02:34,230 --> 00:02:35,470
दूसरी लाइन है अब

76
00:02:35,590 --> 00:02:36,730
थीटा 1 के लिए मेरा अप्डेट

77
00:02:36,880 --> 00:02:38,470
थीटा N तक.

78
00:02:38,900 --> 00:02:40,740
यहाँ, मैं ले रहा हूँ थीटा 0 को अलग से

79
00:02:41,700 --> 00:02:43,140
और करने के लिए

80
00:02:43,700 --> 00:02:45,370
बदलाव इस अल्गोरिद्म में, इस्तेमाल करने के लिए

81
00:02:46,770 --> 00:02:48,480
एक रेगुलराइज्ड कॉस्ट फ़ंक्शन,

82
00:02:49,100 --> 00:02:50,510
मुझे सिर्फ़ क्या करना है

83
00:02:50,950 --> 00:02:51,810
काफ़ी समान है जो हमने

84
00:02:51,930 --> 00:02:53,700
किया लिनीअर रेग्रेशन के लिए है

85
00:02:53,870 --> 00:02:55,620
वास्तव में केवल बदलाव इस

86
00:02:55,890 --> 00:02:57,480
दूसरे अप्डेट नियम में निम्न तरह से.

87
00:02:58,510 --> 00:02:59,800
और, एक बार फिर, यह, आप जानते हैं

88
00:03:00,380 --> 00:03:02,080
देखने में लगता है समान जो

89
00:03:02,230 --> 00:03:03,720
हमारे पास था लिनीअर रेग्रेशन के लिए.

90
00:03:04,580 --> 00:03:05,580
लेकिन निश्चय ही यह नहीं है

91
00:03:05,660 --> 00:03:06,590
समान अल्गोरिद्म जो हमारे पास था,

92
00:03:06,890 --> 00:03:08,370
क्योंकि अब हायपॉथिसस

93
00:03:08,780 --> 00:03:10,420
है परिभाषित इस्तेमाल करते हुए इसे.

94
00:03:10,860 --> 00:03:12,550
तो यह नहीं है समान अल्गोरिद्म

95
00:03:13,130 --> 00:03:14,390
रेगुलराइज्ड लिनीअर रेग्रेशन जैसे.

96
00:03:14,830 --> 00:03:16,340
क्योंकि हायपॉथिसस भिन्न है.

97
00:03:16,940 --> 00:03:18,360
जबकि यह अप्डेट जो मैंने लिखा.

98
00:03:18,630 --> 00:03:20,160
यह वास्तव में दिखता है

99
00:03:20,350 --> 00:03:22,130
समान जैसा हमारे पास पहले था.

100
00:03:22,480 --> 00:03:25,310
हम कर रहे थे ग्रेडीयंट डिसेंट रेगुलराइज्ड लिनीअर रेग्रेशन के लिए.

101
00:03:26,690 --> 00:03:27,720
तो, समाप्त करते हुए

102
00:03:27,830 --> 00:03:29,360
इस चर्चा को, यह टर्म

103
00:03:29,560 --> 00:03:30,860
यहाँ वर्ग

104
00:03:31,130 --> 00:03:32,330
कोष्ठक में, इसलिए यह टर्म

105
00:03:32,670 --> 00:03:35,120
यहाँ, यह टर्म है,

106
00:03:35,410 --> 00:03:36,750
निश्चय ही, नया पर्शियल

107
00:03:37,210 --> 00:03:38,590
डेरिवेटिव विद रिस्पेक्ट टु

108
00:03:38,660 --> 00:03:41,420
थीटा J कॉस्ट फ़ंक्शन जे ऑफ़ थीटा का.

109
00:03:42,300 --> 00:03:43,480
जहाँ J ऑफ़ थीटा यहाँ है

110
00:03:43,700 --> 00:03:44,980
कॉस्ट फ़ंक्शन जो हमने परिभाषित किया था

111
00:03:45,180 --> 00:03:48,100
पिछली स्लाइड पर जो इस्तेमाल करता है रेगुलराइज़ेशन.

112
00:03:49,770 --> 00:03:52,060
तो, वह था ग्रेडीयंट डिसेंट रेगुलराइज्ड लिनीअर रेग्रेशन के लिए.

113
00:03:55,200 --> 00:03:56,430
चलो बात करते हैं कि कैसे

114
00:03:56,580 --> 00:03:58,290
रेगुलराइज्ड लिनीअर रेग्रेशन को

115
00:03:58,950 --> 00:04:00,010
काम करवाते हैं इस्तेमाल करते हुए अधिक

116
00:04:00,360 --> 00:04:02,070
एडवांसड ऑप्टिमायज़ेशन तरीक़ों की.

117
00:04:03,180 --> 00:04:05,590
और बस आपको याद दिला दूँ कि

118
00:04:05,840 --> 00:04:06,800
उन तरीक़ों के लिए हमें क्या चाहिए था

119
00:04:07,080 --> 00:04:08,390
करना कि परिभाषित करें

120
00:04:08,450 --> 00:04:09,460
फ़ंक्शन जिसे कहते हैं कॉस्ट

121
00:04:09,640 --> 00:04:11,160
फ़ंक्शन, जो लेता है

122
00:04:11,280 --> 00:04:13,660
इनपुट पेरामिटर वेक्टर थीटा और

123
00:04:13,790 --> 00:04:16,180
एक बार फिर इक्वेज़न में

124
00:04:16,770 --> 00:04:19,030
हम लिख रहे हैं हमने इस्तेमाल किया है 0 इंडेक्स वेक्टर.

125
00:04:19,510 --> 00:04:20,690
तो हमारे पास था थीटा 0 से

126
00:04:21,180 --> 00:04:22,810
थीटा N तक. लेकिन

127
00:04:23,020 --> 00:04:25,920
क्योंकि ओकटेव के इंडेक्स करता है वेक्टर को 1 से शुरू करते हुए.

128
00:04:26,820 --> 00:04:28,240
थीटा 0 लिखा जाता है

129
00:04:28,560 --> 00:04:29,990
ओकटेव में थीटा 1.

130
00:04:30,120 --> 00:04:31,630
थीटा 1 लिखा जाता है

131
00:04:31,860 --> 00:04:32,930
ओकटेव में थीटा 2, और

132
00:04:33,280 --> 00:04:35,070
इसी प्रकार आगे थीटा

133
00:04:36,270 --> 00:04:36,650
N प्लस 1 तक.

134
00:04:36,740 --> 00:04:38,450
तो हमें क्या चाहिए था

135
00:04:38,600 --> 00:04:40,240
करना कि दें एक फ़ंक्शन.

136
00:04:41,170 --> 00:04:42,370
चलो देते हैं एक फ़ंक्शन जिसे कहते हैं

137
00:04:42,780 --> 00:04:44,140
कॉस्ट फ़ंक्शन जो हम करेंगे

138
00:04:44,360 --> 00:04:46,920
तब पास उसमें जो हमारे पास है, जो हमने पहले देखा था.

139
00:04:47,300 --> 00:04:48,490
हम इस्तेमाल करेंगे fminunc

140
00:04:49,060 --> 00:04:50,310
और तब

141
00:04:50,540 --> 00:04:52,160
जानते हैं कॉस्ट फ़ंक्शन पर,

142
00:04:54,830 --> 00:04:55,430
और इसी तरह, ठीक है.

143
00:04:55,600 --> 00:04:56,870
लेकिन F min, u

144
00:04:57,030 --> 00:04:58,060
और c था F min

145
00:04:58,280 --> 00:04:59,310
अनकोंस्ट्रैंड और यह करेगा

146
00:04:59,650 --> 00:05:01,230
काम fminunc के साथ

147
00:05:01,310 --> 00:05:02,300
था कि यह लेगा

148
00:05:02,540 --> 00:05:04,340
कॉस्ट फ़ंक्शन और न्यूनतम करेगा इसे हमारे लिए.

149
00:05:05,950 --> 00:05:07,050
इसलिए दो मुख्य बातें है कि

150
00:05:07,170 --> 00:05:08,600
कॉस्ट फ़ंक्शन को देना चाहिए

151
00:05:08,700 --> 00:05:10,620
वपिस पहली J-val.

152
00:05:11,280 --> 00:05:12,400
और उसके लिए, हमें जरूरत है

153
00:05:12,720 --> 00:05:13,950
लिखने की कोड

154
00:05:14,020 --> 00:05:15,710
कम्प्यूट करने के लिए कॉस्ट फ़ंक्शन जे ऑफ़ थीटा.

155
00:05:17,130 --> 00:05:19,030
अब, जब हम इस्तेमाल कर रहे हैं रेगुलराइज्ड लॉजिस्टिक

156
00:05:19,450 --> 00:05:20,920
रेग्रेशन, निश्चय ही

157
00:05:20,990 --> 00:05:21,960
कॉस्ट फ़ंक्शन जे ऑफ़ थीटा

158
00:05:22,280 --> 00:05:23,450
बदल जाता है और, विशेष रूप से,

159
00:05:24,480 --> 00:05:25,760
अब एक कॉस्ट फ़ंक्शन को चाहिए

160
00:05:25,870 --> 00:05:29,580
लेना यह अतिरिक्त रेगुलराइज़ेशन टर्म भी अंत में.

161
00:05:29,850 --> 00:05:30,930
तो जब आप कम्प्यूट करते हैं जे ऑफ़

162
00:05:31,030 --> 00:05:33,410
थीटा तब न भूले शामिल करना उस टर्म को अंत में.

163
00:05:34,590 --> 00:05:35,520
और तब, दूसरी चीज़ जो

164
00:05:36,050 --> 00:05:37,240
इस कॉस्ट फ़ंक्शन को

165
00:05:37,690 --> 00:05:39,010
डिराइव करना एक ग्रेडीयंट से.

166
00:05:39,530 --> 00:05:41,170
तो ग्रेडीयंट एक होना चाहिए

167
00:05:41,400 --> 00:05:42,570
सेट

168
00:05:42,660 --> 00:05:44,080
पार्शियल डेरिवेटिव जे

169
00:05:44,240 --> 00:05:45,520
ऑफ़ थीटा का विद रिस्पेक्ट टु थीटा

170
00:05:45,690 --> 00:05:47,170
ज़ीरो, ग्रेडीयंट दो होना चाहिए

171
00:05:47,580 --> 00:05:49,520
सेट उसको, और इसी प्रकार आगे.

172
00:05:49,780 --> 00:05:50,900
एक बार फिर, इंडेक्स शुरू है एक से.

173
00:05:51,220 --> 00:05:52,850
ठीक है, क्योंकि इंडेक्सिंग है

174
00:05:53,110 --> 00:05:54,450
एक से ओकटेव में.

175
00:05:55,940 --> 00:05:56,780
और देखने पर इन टर्म्ज़ को.

176
00:05:57,850 --> 00:05:58,680
यह टर्म यहाँ.

177
00:05:59,410 --> 00:06:00,640
हमने वास्तव में किया इसे

178
00:06:00,720 --> 00:06:02,840
एक पिछली स्लाइड पर है वास्तव में बराबर इसके.

179
00:06:03,230 --> 00:06:03,640
यह नहीं बदलती है.

180
00:06:04,120 --> 00:06:07,250
क्योंकि थीटा ज़ीरो का डेरिवेटिव नहीं बदलता है.

181
00:06:07,650 --> 00:06:09,540
तुलना में वर्ज़न के बिना रेगुलराइज़ेशन के.

182
00:06:10,960 --> 00:06:13,210
और अन्य टर्म्ज़ अवश्य बदल जाती हैं.

183
00:06:13,840 --> 00:06:16,340
और विशेष रूप से डेरिवेटिव विद रिस्पेक्ट टु थीटा एक.

184
00:06:17,010 --> 00:06:18,830
हमने यह भी पिछली स्लाइड में किया था.

185
00:06:19,110 --> 00:06:20,670
है बराबर, आप जानते हैं,

186
00:06:20,890 --> 00:06:22,560
प्रारम्भिक टर्म के फिर माइनस

187
00:06:23,450 --> 00:06:24,870
लैम्डा ओवर M गुणा थीटा j.

188
00:06:25,310 --> 00:06:27,140
सिर्फ़ हम सुनिश्चित करते हैं कि हम पास करते हैं इसे सही ढंग से.

189
00:06:27,800 --> 00:06:29,370
और हम कोष्ठकों को यहां जोड़ सकते हैं.

190
00:06:29,830 --> 00:06:30,980
ठीक है, तो समेशन आगे नहीं जाता है.

191
00:06:31,570 --> 00:06:33,160
और इसी तरह, आप जानते हैं,

192
00:06:33,380 --> 00:06:34,800
यह अन्य टर्म यहाँ दिखती है

193
00:06:35,130 --> 00:06:36,180
ऐसी, इस अतिरिक्त

194
00:06:37,070 --> 00:06:37,950
के साथ जो हमारे पास थी

195
00:06:38,030 --> 00:06:39,770
पिछली स्लाइड पर, वह कॉरेस्पॉंड करती है

196
00:06:39,950 --> 00:06:41,450
ग्रेडीयंट को उनके रेगुलराइज़ेशन ओबजेक्टिव से.

197
00:06:42,230 --> 00:06:43,650
तो यदि आप इम्प्लमेंट करते हैं इस

198
00:06:43,820 --> 00:06:45,140
कॉस्ट फ़ंक्शन को और पास करते हैं

199
00:06:45,720 --> 00:06:47,370
इसे fminunc में

200
00:06:48,190 --> 00:06:49,160
या किसी एडवांसड ऑप्टिमायज़ेशन

201
00:06:50,050 --> 00:06:51,940
तकनीक को, जो करेगा न्यूनतम/ मिनमायज़

202
00:06:52,540 --> 00:06:55,990
नए रेगुलराइज्ड कॉस्ट फ़ंक्शन जे ऑफ़ थीटा को.

203
00:06:56,990 --> 00:06:58,220
और पेरमिटर्स जो आपको मिलते हैं

204
00:06:59,530 --> 00:07:00,740
होगे वे जो कॉरेस्पॉंड करते हैं

205
00:07:01,450 --> 00:07:02,940
लॉजिस्टिक रिग्रेशन को रेगुलराइज़ेशन के साथ.

206
00:07:04,410 --> 00:07:05,540
तो, अब आप जानते हैं

207
00:07:05,780 --> 00:07:08,210
कैसे करते हैं इम्प्लमेंट रेगुलराइज्ड लॉजिस्टिक रिग्रेशन.

208
00:07:09,780 --> 00:07:10,920
जब मैं सिलिकॉन वैली के आस पास टहलता हूँ,

209
00:07:11,380 --> 00:07:12,900
मैं सिलीकॉन वैली में रहता हूँ, वहाँ हैं

210
00:07:13,100 --> 00:07:14,900
बहुत से एंज़िनियर्स जो स्पष्टत:, बना रहे हैं

211
00:07:15,420 --> 00:07:16,490
बहुत सा पैसा उनकी

212
00:07:16,610 --> 00:07:18,090
कम्पनीज़ के लिए इस्तेमाल करके मशीन लर्निंग अल्गोरिद्म्स.

213
00:07:19,180 --> 00:07:20,390
और मुझे पता है हम

214
00:07:20,600 --> 00:07:22,860
आप जानते हैं, पढ़ रहे हैं यह सब कुछ ही समय से.

215
00:07:23,620 --> 00:07:25,410
लेकिन यदि आप समझते हैं लिनीअर

216
00:07:26,510 --> 00:07:28,360
रेग्रेशन, एडवांसड ऑप्टिमायज़ेशन

217
00:07:29,210 --> 00:07:30,710
अल्गोरिद्म्स और रेगुलराइज़ेशन, अब

218
00:07:30,950 --> 00:07:32,520
तक, स्पष्टत:, आप शायद जानते हैं

219
00:07:32,950 --> 00:07:34,270
काफ़ी अधिक मशीन लर्निंग

220
00:07:35,010 --> 00:07:36,290
तुलना में बहुत से, निश्चित रूप से अब,

221
00:07:36,750 --> 00:07:38,050
लेकिन आप शायद जानते हैं काफ़ी

222
00:07:38,180 --> 00:07:39,580
अधिक मशीन लर्निंग अब

223
00:07:40,240 --> 00:07:41,670
तुलना में स्पष्ट रूप से, बहुत से

224
00:07:41,820 --> 00:07:44,760
सिलिकन वैली एंजिनीयर्स से जिनका करियर काफ़ी सफल है.

225
00:07:45,300 --> 00:07:46,420
आप जानते हैं, बना रहे हैं बहुत पैसे उनकी कम्पनीज़ के लिए.

226
00:07:47,050 --> 00:07:49,250
या बना रहे हैं प्रॉडक्ट्स इस्तेमाल करके मशीन लर्निंग अल्गोरिद्म्स.

227
00:07:50,370 --> 00:07:50,960
तो,बधाई हो.

228
00:07:52,080 --> 00:07:53,120
आप वास्तव में काफ़ी दूर निकल आए हैं.

229
00:07:53,490 --> 00:07:54,550
और आप वास्तव में कर सकते हैं, आप

230
00:07:54,780 --> 00:07:55,990
वास्तव में जानते हैं पर्याप्त

231
00:07:56,310 --> 00:07:58,210
अप्लाई करने के लिए इसे और काम करवा सकते हैं कई प्राब्लम्ज़ के लिए.

232
00:07:59,260 --> 00:08:00,580
तो इसके लिए बधाई.

233
00:08:00,780 --> 00:08:01,880
लेकिन ज़ाहिर है, वहाँ है

234
00:08:02,350 --> 00:08:03,280
अभी भी काफ़ी कुछ जो हम

235
00:08:03,400 --> 00:08:05,180
पढ़ाना चाहते हैं आपको, और

236
00:08:05,380 --> 00:08:06,540
वीडियो के अगले सेट में

237
00:08:06,560 --> 00:08:07,850
इसके बाद, हम शुरू करेंगे बात करना

238
00:08:08,030 --> 00:08:10,890
एक काफ़ी प्रभावशाली क्लास की नॉन-लिनीअर क्लैसिफ़ायअर की.

239
00:08:11,680 --> 00:08:13,350
तो जबकि लिनीअर रेग्रेशन, लॉजिस्टिक

240
00:08:13,690 --> 00:08:14,940
रेग्रेशन, आप जानते हैं आप

241
00:08:15,080 --> 00:08:17,310
बना सकते हैं पालिनोमीयल टर्म्ज़, लेकिन यह

242
00:08:17,460 --> 00:08:18,350
होता है कि ऐसी बहुत

243
00:08:18,510 --> 00:08:21,150
अधिक प्रभावशाली नॉन-लिनीअर क्लैसिफ़ायअर हैं जो

244
00:08:21,460 --> 00:08:23,650
कर सकते हैं तब पालिनोमीयल रेग्रेशन.

245
00:08:24,640 --> 00:08:25,780
और अगले सेट में

246
00:08:25,810 --> 00:08:28,280
वीडियो के इसके बाद, मैं शुरू करूँगा और बताना आपको उनके बारे में.

247
00:08:28,510 --> 00:08:29,560
ताकि आप के पास हीं और भी अधिक

248
00:08:29,760 --> 00:08:30,440
प्रभावशाली लर्निंग अल्गोरिद्म्स तुलना में जो हैं आपके पास

249
00:08:31,380 --> 00:08:32,870
अब अप्लाई करने के लिए भिन्न प्राब्लम्ज़ को.