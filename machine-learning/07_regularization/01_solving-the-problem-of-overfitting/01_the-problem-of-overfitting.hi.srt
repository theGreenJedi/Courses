1
00:00:00,360 --> 00:00:01,753
अब तक, आपने देखे है

2
00:00:01,760 --> 00:00:04,097
कुछ भिन्न-भिन्न लर्निंग अल्गोरिद्म्स, लिनीअर

3
00:00:04,097 --> 00:00:06,504
रेग्रेशन और लॉजिस्टिक रिग्रेशन.

4
00:00:06,510 --> 00:00:08,583
वे सही काम करते हैं बहुत सी प्राब्लम्ज़ के लिए,

5
00:00:08,583 --> 00:00:09,684
लेकिन जब आप अप्लाई करते हैं उन्हें

6
00:00:09,684 --> 00:00:11,903
कुछ निश्चित मशीन लर्निंग ऐप्लिकेशन्स के लिए, वे

7
00:00:11,903 --> 00:00:13,889
जा सकते हैं कठिनाई में जिसे कहते हैं

8
00:00:13,900 --> 00:00:18,052
ओवरफ़िटिंग जो कारण बन सकती है उनकी ख़राब पर्फ़ॉर्मन्स का.

9
00:00:18,052 --> 00:00:18,866
मैं क्या करना चाहता हूँ

10
00:00:18,866 --> 00:00:20,393
इस वीडियो में है समझाना

11
00:00:20,393 --> 00:00:22,400
आपको कि क्या है यह ओवरफ़िटिंग

12
00:00:22,400 --> 00:00:24,083
की समस्या, और

13
00:00:24,083 --> 00:00:25,861
इस के बाद के अगले कुछ वीडियो में,

14
00:00:25,861 --> 00:00:27,759
हम बात करेंगे एक तकनीक की जिसे कहते हैं

15
00:00:27,760 --> 00:00:29,787
रेगुलराइज़ेशन, जो करने देगा

16
00:00:29,787 --> 00:00:31,529
हमें सुधार या

17
00:00:31,529 --> 00:00:33,607
कमी इस ओवरफ़िटिंग समस्या में और

18
00:00:33,607 --> 00:00:36,844
कराएगा इन लर्निंग अल्गोरिद्म्स को शायद काम बेहतर.

19
00:00:36,860 --> 00:00:39,607
तो क्या है ओवरफ़िटिंग?

20
00:00:39,607 --> 00:00:41,616
चलो इस्तेमाल करते रहते हैं हमारा हमेशा का

21
00:00:41,620 --> 00:00:44,030
उदाहरण प्रिडिक्ट करने वाला घरों की

22
00:00:44,050 --> 00:00:46,146
क़ीमतें लिनीअर रेग्रेशन से

23
00:00:46,146 --> 00:00:47,123
जहाँ हम प्रिडिक्ट करना चाहते हैं

24
00:00:47,123 --> 00:00:50,730
क़ीमत घर के साइज़ के एक फ़ंक्शन की तरह.

25
00:00:50,730 --> 00:00:51,870
एक काम जो हम कर सकते हैं है कि

26
00:00:51,910 --> 00:00:53,620
फ़िट करें एक लिनीअर फ़ंक्शन

27
00:00:53,620 --> 00:00:54,892
एक डेटा को, और यदि हम

28
00:00:54,892 --> 00:00:56,296
वह करते हैं, शायद हमें मिलती है

29
00:00:56,296 --> 00:00:58,913
उस तरह की सीधी लाइन जो फ़िट होती है इस डेटा को.

30
00:00:58,913 --> 00:01:01,012
लेकिन यह नहीं है एक अच्छा मॉडल

31
00:01:01,012 --> 00:01:02,543
डेटा को देखते हुए, यह प्रतीत होता है

32
00:01:02,560 --> 00:01:04,100
काफ़ी स्पष्ट कि जैसे

33
00:01:04,100 --> 00:01:06,274
साइज़ घर का बढ़ता है,

34
00:01:06,274 --> 00:01:08,268
घर की क़ीमत एक समभूमि तक पहुँचती है, या एक प्रकार से

35
00:01:08,270 --> 00:01:11,721
समतल होती जाती है जैसे हम जाते हैं दाईं तरफ़ और इसलिए

36
00:01:11,740 --> 00:01:14,020
यह अल्गोरिद्म नहीं

37
00:01:14,020 --> 00:01:15,898
फ़िट करता ट्रेनिंग को और हम

38
00:01:15,898 --> 00:01:19,166
कहते हैं इसे अंडरफ़िटिंग की समस्या, और

39
00:01:19,180 --> 00:01:20,494
एक अन्य टर्म इसके लिए है

40
00:01:20,500 --> 00:01:24,666
कि इस अल्गोरिद्म में हाई बाइयस है.

41
00:01:25,140 --> 00:01:26,841
इन दोनो का लगभग

42
00:01:26,890 --> 00:01:30,760
मतलब है कि यह फ़िट ही नहीं कर रहा ट्रेनिंग डेटा को ढंग से.

43
00:01:30,760 --> 00:01:32,328
टर्म है एक प्रकार से

44
00:01:32,328 --> 00:01:34,515
एक ऐतिहासिक या तकनीकी,

45
00:01:34,515 --> 00:01:36,109
लेकिन विचार है कि

46
00:01:36,110 --> 00:01:37,303
यदि फ़िट करने से एक सीधी लाइन

47
00:01:37,303 --> 00:01:38,909
डेटा को, तब, यह है जैसे

48
00:01:38,920 --> 00:01:40,290
कि अल्गोरिद्म में है एक

49
00:01:40,330 --> 00:01:42,638
बहुत अधिक मज़बूत पूर्व धारणा, या एक

50
00:01:42,638 --> 00:01:44,633
बहुत मजबूत बाइयस कि घरों की

51
00:01:44,650 --> 00:01:46,339
क़ीमतें होंगी तबदील

52
00:01:46,339 --> 00:01:49,988
लिनीअरली उनके साइज़ के हिसाब से और जबकि डेटा इसके विपरीत

53
00:01:50,000 --> 00:01:51,281
सबूत होने के बावजूद कि

54
00:01:51,290 --> 00:01:54,174
विपरीत है पूर्व धारणा अभी भी है

55
00:01:54,174 --> 00:01:55,413
बाइयस, अभी भी समाप्त करता है

56
00:01:55,440 --> 00:01:56,974
इसे फ़िट करते हुए एक सीधी लाइन

57
00:01:56,974 --> 00:02:00,638
और यह हो जाता है एक ख़राब फ़िट डेटा को.

58
00:02:00,638 --> 00:02:02,173
अब, मध्य में, हम कर सकते थे

59
00:02:02,210 --> 00:02:04,626
फ़िट एक क्वाड्रैटिक फ़ंक्शन और,

60
00:02:04,626 --> 00:02:06,222
इस डेटा सेट के साथ, हम फ़िट करते हैं

61
00:02:06,222 --> 00:02:07,793
क्वाड्रैटिक फ़ंक्शन, शायद, हमें मिले

62
00:02:07,810 --> 00:02:10,211
उस तरह का कर्व

63
00:02:10,211 --> 00:02:14,361
और, वह बेहतर काम करता है.

64
00:02:14,361 --> 00:02:17,543
और दूसरी तरफ़ अति होती, यदि हमें करना होता फ़िट, मान लो एक चार डिग्री का पालिनोमीयल डेटा को.

65
00:02:17,550 --> 00:02:19,442
तो, यहाँ हैं हमारे पाँच पेरमिटर्स,

66
00:02:19,470 --> 00:02:23,196
थीटा ज़ीरो से थीटा चार तक,

67
00:02:23,210 --> 00:02:23,926
और, उस के साथ, हम वास्तव में फ़िट कर सकते हैं एक कर्व

68
00:02:23,926 --> 00:02:26,727
जो जाता है हमारे सारे पाँच ट्रेनिंग इग्ज़ाम्पल्ज़ से.

69
00:02:26,727 --> 00:02:29,507
आपको शायद मिले एक कर्व जो दिखता है ऐसा.

70
00:02:31,260 --> 00:02:32,454
वह, जहाँ एक

71
00:02:32,460 --> 00:02:33,791
तरफ़, प्रतीत होता है करता हुआ

72
00:02:33,791 --> 00:02:35,052
एक बहुत अच्छा काम फ़िट करते हुए

73
00:02:35,052 --> 00:02:36,291
ट्रेनिंग सेट को और, जो

74
00:02:36,291 --> 00:02:38,269
जाता है मेरे पूरे डेटा से, कम से कम.

75
00:02:38,270 --> 00:02:40,284
लेकिन, यह अभी भी एक बहुत घुमावदार कर्व, ठीक है?

76
00:02:40,300 --> 00:02:41,660
तो, जा रहा है ऊपर और नीचे सब

77
00:02:41,660 --> 00:02:43,430
जगह, और, हम नहीं वास्तव में

78
00:02:43,430 --> 00:02:46,996
सोचते कि वह है एक अच्छा मॉडल प्रिडिक्ट करने के लिए घर की कीमत.

79
00:02:47,000 --> 00:02:48,924
तो यह समस्या, हम

80
00:02:48,924 --> 00:02:51,967
कहते हैं ओवरफ़िटिंग, और, एक अन्य

81
00:02:51,970 --> 00:02:53,165
इसके लिए है कि

82
00:02:53,170 --> 00:02:57,304
इस अल्गोरिद्म में हाई वेरीयन्स है.

83
00:02:57,890 --> 00:02:59,951
टर्म हाई वेरीयन्स है एक अन्य

84
00:02:59,951 --> 00:03:02,110
एक ऐतिहासिक या तकनीकी टर्म.

85
00:03:02,130 --> 00:03:03,797
लेकिन अनुभव यह है कि,

86
00:03:03,800 --> 00:03:05,080
हम फ़िट कर रहे हैं इतना अधिक

87
00:03:05,080 --> 00:03:07,326
डिग्री का पालिनोमीयल, तब,

88
00:03:07,330 --> 00:03:08,603
हायपॉथिसस फ़िट कर सकती है, आप जानते हैं,

89
00:03:08,620 --> 00:03:09,584
यह है लगभग कि यह कर सकती है

90
00:03:09,584 --> 00:03:11,995
फ़िट लगभग कोई भी फ़ंक्शन और

91
00:03:11,995 --> 00:03:14,159
यह फ़ेस सम्भावित हायपॉथिसस का

92
00:03:14,159 --> 00:03:16,601
है बहुत बड़ा, यह है अधिक वेरीयबल.

93
00:03:16,610 --> 00:03:18,052
और हमारे पास पर्याप्त डेटा नहीं है

94
00:03:18,052 --> 00:03:19,279
इसे रोकने का कि यह दे

95
00:03:19,279 --> 00:03:22,714
हमें एक बेहतर हायपॉथिसस तो उसे कहते हैं ओवरफ़िटिंग.

96
00:03:22,740 --> 00:03:24,340
और मध्य में, वहाँ नहीं है वास्तव में

97
00:03:24,350 --> 00:03:26,990
एक नाम लेकिन मैं सिर्फ़ लिखूँगा, आप जानते हैं, बस सही.

98
00:03:26,990 --> 00:03:29,911
जहाँ एक द्वितीय डिग्री का पालिनोमीयल, क्वाड्रैटिक फ़ंक्शन

99
00:03:29,911 --> 00:03:32,559
प्रतीत होता एकदम सही फ़िट करने के लिए इस डेटा को.

100
00:03:32,559 --> 00:03:34,684
दोहराते हुए थोड़ा सा

101
00:03:34,690 --> 00:03:37,042
समस्या ओवरफ़िटिंग की आती है

102
00:03:37,042 --> 00:03:38,258
जब हमारे पास हैं

103
00:03:38,258 --> 00:03:40,729
बहुत अधिक फ़ीचर्ज़, तब

104
00:03:40,729 --> 00:03:43,881
लर्न हायपॉथिसस शायद फ़िट करे ट्रेनिंग सेट को ढंग से.

105
00:03:43,881 --> 00:03:46,023
तो, आपका कॉस्ट फ़ंक्शन

106
00:03:46,023 --> 00:03:47,344
शायद वास्तव में हो काफ़ी नज़दीक

107
00:03:47,344 --> 00:03:48,446
ज़ीरो के या शायद जो

108
00:03:48,446 --> 00:03:50,750
हो बिल्कुल ज़ीरो ही, लेकिन आपको

109
00:03:50,750 --> 00:03:52,063
शायद मिले एक

110
00:03:52,063 --> 00:03:53,950
कर्व ऐसा जो, आप

111
00:03:53,950 --> 00:03:55,314
जानते हैं कोशिश करता है बहुत अधिक

112
00:03:55,314 --> 00:03:57,103
फ़िट करने के लिए ट्रेनिंग सेट को, ताकि यह

113
00:03:57,110 --> 00:03:59,233
विफल भी हो जाता है जनरलाइज होने में

114
00:03:59,250 --> 00:04:01,117
नए इग्ज़ाम्पल्ज़ के लिए और विफल रहता है

115
00:04:01,120 --> 00:04:03,018
प्रिडिक्ट करने में क़ीमतें नए इग्ज़ाम्पल्ज़ के लिए

116
00:04:03,050 --> 00:04:04,337
भी, और यहाँ

117
00:04:04,350 --> 00:04:06,853
टर्म जनरलाइज्ड का मतलब है

118
00:04:06,853 --> 00:04:10,868
कितनी अच्छी तरह से हायपॉथिसस अप्लाई करती है नए इग्ज़ाम्पल्ज़ को.

119
00:04:10,868 --> 00:04:12,274
मतलब कि डेटा को

120
00:04:12,320 --> 00:04:16,467
घरों के जो नहीं थे ट्रेनिंग सेट में.

121
00:04:16,600 --> 00:04:17,910
इस स्लाइड पर, हमने देखा

122
00:04:17,910 --> 00:04:20,802
ओवर फ़िटिंग लिनीअर रेग्रेशन के लिए.

123
00:04:20,810 --> 00:04:24,182
एक ऐसी ही चीज़ अप्लाई करती हैं लजिस्टिक रेग्रेशन के लिए भी.

124
00:04:24,190 --> 00:04:26,090
यहाँ है एक लॉजिस्टिक रिग्रेशन का

125
00:04:26,090 --> 00:04:28,871
उदाहरण दो फ़ीचर्ज़ के साथ x1 और x2.

126
00:04:28,910 --> 00:04:30,136
एक काम जो हम कर सकते हैं, है

127
00:04:30,140 --> 00:04:31,522
फ़िट करें लॉजिस्टिक रिग्रेशन

128
00:04:31,522 --> 00:04:34,518
केवल एक सरल हायपॉथिसस से इस तरह,

129
00:04:34,530 --> 00:04:38,076
जहाँ, हमेशा की तरह, G है मेरा सिग्मोईड फ़ंक्शन.

130
00:04:38,120 --> 00:04:39,334
और यदि आप वह करते हैं, आपको मिलती है

131
00:04:39,334 --> 00:04:41,593
एक हायपॉथिसस, प्रयास करते हुए

132
00:04:41,600 --> 00:04:42,923
इस्तेमाल करने का, शायद सिर्फ़ एक सीधी

133
00:04:42,923 --> 00:04:45,713
लाइन जो अलग करती है पॉज़िटिव या नेगेटिव इग्ज़ाम्पल को.

134
00:04:45,713 --> 00:04:49,071
और यह नहीं दिखती है एक बहुत अच्छा फ़िट हायपॉथिसस को.

135
00:04:49,100 --> 00:04:50,659
तो, एक बार फिर, यह

136
00:04:50,659 --> 00:04:52,577
है एक उदाहरण अंडरफ़िटिंग का

137
00:04:52,577 --> 00:04:56,040
या हायपॉथिसस का जिसमें हाई बाइयस है.

138
00:04:56,210 --> 00:04:57,504
इसके विपरीत, यदि आपको

139
00:04:57,504 --> 00:04:59,146
जोड़ने होते आपके फ़ीचर्ज़

140
00:04:59,170 --> 00:05:01,032
ये क्वाड्रैटिक टर्म्ज़, तब,

141
00:05:01,032 --> 00:05:02,613
आपको मिल सकती एक निर्णायक

142
00:05:02,613 --> 00:05:05,620
सीमा जो शायद दिखे अधिक इस जैसी.

143
00:05:05,620 --> 00:05:07,784
और, आप जानते हैं, वह है डेटा के लिए एक बहुत अच्छा फिट.

144
00:05:07,784 --> 00:05:10,838
शायद, लगभग उतना

145
00:05:10,860 --> 00:05:13,991
अच्छा जितना हमें मिल सकता था, इस ट्रेनिंग सेट पर.

146
00:05:14,010 --> 00:05:15,157
और अंत में, दूसरी

147
00:05:15,170 --> 00:05:16,169
तरफ़, यदि आपको करना होता

148
00:05:16,169 --> 00:05:18,207
फ़िट एक बहुत बड़ी डिग्री का पालिनोमीयल, यदि

149
00:05:18,207 --> 00:05:20,036
आपको बनाने होते बहुत से

150
00:05:20,036 --> 00:05:22,461
ऊँची डिग्री के पालिनोमीयल, तब,

151
00:05:22,490 --> 00:05:24,730
तब, लजिस्टिक रेग्रेशन शायद बिगड़ जाता

152
00:05:24,750 --> 00:05:26,551
ख़ुद, शायद कोशिश करता बहुत

153
00:05:26,560 --> 00:05:28,233
अधिक ढूँढने की एक

154
00:05:28,233 --> 00:05:31,742
निर्णय सीमा है जो फ़िट करती है

155
00:05:31,742 --> 00:05:33,013
आपके ट्रेनिंग डेटा को या

156
00:05:33,030 --> 00:05:35,006
बहुत कोशिश करता मरोड़ने की अपने आप को,

157
00:05:35,006 --> 00:05:37,689
फ़िट करने के लिए प्रत्येक ट्रेनिंग इग्ज़ाम्पल को सही तरीक़े से.

158
00:05:37,700 --> 00:05:38,757
और, आप जानते हैं, यदि

159
00:05:38,757 --> 00:05:39,547
फ़ीचर्ज़ x1 और

160
00:05:39,550 --> 00:05:41,435
x2 प्रिडिक्ट करते हैं, शायद,

161
00:05:41,435 --> 00:05:43,350
कैंसर को,

162
00:05:43,390 --> 00:05:46,448
आप जानते हैं, कैन्सर हैं एक घातक, सौम्य स्तन ट्यूमर को.

163
00:05:46,448 --> 00:05:47,988
यह नहीं है, यह वास्तव में नहीं

164
00:05:47,988 --> 00:05:51,893
दिखती एक बहुत अच्छी हायपॉथिसस, प्रिडिक्शन्स करने के लिए.

165
00:05:51,930 --> 00:05:53,463
और तो, एक बार फिर, यह है

166
00:05:53,463 --> 00:05:55,432
एक उदाहरण ओवर फ़िटिंग का

167
00:05:55,432 --> 00:05:57,128
और एक हायपॉथिसस का

168
00:05:57,128 --> 00:05:59,403
जिसमें हाई वेरीयन्स है और नहीं है वास्तव में,

169
00:05:59,403 --> 00:06:04,243
और, संभावना नहीं है कि जनरलाइज करें अच्छी तरह से नए इग्ज़ाम्पल्ज़ को.

170
00:06:04,560 --> 00:06:06,158
बाद में, इस पाठ्यक्रम में, जब हम

171
00:06:06,158 --> 00:06:08,453
बात करेंगे डीबगिंग और डायग्नोसिस करने की

172
00:06:08,460 --> 00:06:09,794
चीज़ों को जो ग़लत हो सकती हैं

173
00:06:09,810 --> 00:06:11,490
लर्निंग अल्गोरिद्म्स के साथ, हम देंगे आपको

174
00:06:11,490 --> 00:06:13,297
विशेष टूलस पहचान करने के लिए

175
00:06:13,297 --> 00:06:14,953
कि कब ओवर फ़िटिंग और,

176
00:06:14,953 --> 00:06:17,503
कब अंडर फ़िटिंग शायद हो रही है.

177
00:06:17,503 --> 00:06:18,775
लेकिन, अभी के लिए, चलो बात करते हैं

178
00:06:18,780 --> 00:06:20,342
समस्या की, यदि हम

179
00:06:20,360 --> 00:06:22,206
सोचते हैं ओवर फ़िटिंग हो रही है.

180
00:06:22,250 --> 00:06:24,864
हम क्या कर सकते हैं इसे सम्बोधित करने के लिए?

181
00:06:24,864 --> 00:06:26,640
पिछले उदाहरणों में, हमारे पास था

182
00:06:26,660 --> 00:06:28,701
एक या दो आयामी / डिमेन्शनल डेटा इसलिए,

183
00:06:28,701 --> 00:06:31,335
हम कर पाए प्लॉट हायपॉथिसस को और देख पाए कि क्या हो रहा था

184
00:06:31,335 --> 00:06:34,612
और चुन पाए उचित डिग्री का पालिनोमीयल.

185
00:06:34,620 --> 00:06:36,836
अत:, पहले घरों की

186
00:06:36,836 --> 00:06:38,405
क़ीमत के उदाहरण में, हम कर पाए केवल

187
00:06:38,410 --> 00:06:40,597
प्लॉट हायपाथिसस को और, आप

188
00:06:40,600 --> 00:06:41,628
जानते हैं, शायद देख पाए कि यह

189
00:06:41,628 --> 00:06:42,830
फ़िट कर रहा था एक प्रकार से

190
00:06:42,830 --> 00:06:46,339
बहुत घुमावदार फ़ंक्शन जो जा रहा था सब तरफ़ प्रिडिक्ट करने के लिए घरों की क़ीमतें.

191
00:06:46,339 --> 00:06:47,701
और हम तब इस्तेमाल कर पाए चित्र

192
00:06:47,740 --> 00:06:50,667
इस तरह के और चुन पाए उचित डिग्री का पालिनोमीयल.

193
00:06:50,680 --> 00:06:54,166
अत: प्लॉट करना हायपॉथिसस, हो सकता हैं

194
00:06:54,166 --> 00:06:55,728
एक तरीक़ा कोशिश में

195
00:06:55,750 --> 00:06:58,160
तय करने की कि कौन सी डिग्री पालिनोमीयल की लेनी चाहिए.

196
00:06:58,160 --> 00:07:00,163
लेकिन वह हमेश काम नहीं करता.

197
00:07:00,180 --> 00:07:02,019
और, वैसे तो अक्सर हमारे पास

198
00:07:02,019 --> 00:07:06,075
शायद हो सकती हैं लर्निंग प्राब्लम्ज़ ज़िनमे हमारे पास होते हैं बहुत से फ़ीचर्ज़.

199
00:07:06,075 --> 00:07:07,563
और वहाँ नही है

200
00:07:07,563 --> 00:07:10,599
प्रश्न सिर्फ़ चुनने के कौन सी डिग्री पालिनोमीयल की.

201
00:07:10,630 --> 00:07:12,147
और, वैसे तो जब हमारे पास

202
00:07:12,170 --> 00:07:13,779
हैं बहुत अधिक फ़ीचर्ज़, यह

203
00:07:13,779 --> 00:07:15,593
हो जाता है कठिन भी प्लॉट करना

204
00:07:15,630 --> 00:07:17,698
डेटा को और यह हो जाता है

205
00:07:17,710 --> 00:07:19,211
कठिनतर इसे विज़ूअलाइज करना,

206
00:07:19,211 --> 00:07:22,396
तय करने के लिए कि कौन से फ़ीचर्ज़ इस्तेमाल रखने हैं या नही.

207
00:07:22,420 --> 00:07:24,142
तो वस्तुतः, यदि हम प्रयास कर रहे हैं

208
00:07:24,160 --> 00:07:27,849
प्रिडिक्ट करने का घरों की क़ीमत कभी-कभी हमारे पास हो सकते हैं बहुत से भिन्न फ़ीचर्ज़.

209
00:07:27,880 --> 00:07:31,373
और सारे वे फ़ीचर्ज़ प्रतीत होते हैं, आप जानते हैं, शायद वे प्रतीत होते हैं उपयोगी.

210
00:07:31,373 --> 00:07:32,609
लेकिन, यदि हमारे पास हैं 

211
00:07:32,609 --> 00:07:34,123
बहुत से फ़ीचर्ज़, और, बहुत कम

212
00:07:34,123 --> 00:07:35,820
ट्रेनिंग डेटा, तब, ओवर

213
00:07:35,840 --> 00:07:37,776
फिटिंग एक समस्या बन सकती है.

214
00:07:37,776 --> 00:07:39,180
सम्बोधित करने के लिए ओवर

215
00:07:39,180 --> 00:07:40,651
फ़िटिंग, वहाँ दो

216
00:07:40,651 --> 00:07:43,780
मुख्य विकल्प हैं चीज़ों के लिए जो हम कर सकते हैं.

217
00:07:43,780 --> 00:07:45,759
पहला विकल्प है, कोशिश करें

218
00:07:45,770 --> 00:07:47,976
कम करने के लिए संख्या फ़ीचर्ज़ की.

219
00:07:47,990 --> 00:07:49,337
वस्तुतः, एक काम जो हम

220
00:07:49,337 --> 00:07:51,383
कर सकते हैं कि ख़ुद से देखें

221
00:07:51,383 --> 00:07:53,236
फ़ीचर्ज़ की लिस्ट को, और, इस्तेमाल करें

222
00:07:53,236 --> 00:07:54,894
उसे तय करने की कोशिश में कि कौन से

223
00:07:54,894 --> 00:07:57,256
हैं सबसे अधिक महत्वपूर्ण फ़ीचर्ज़, और, इसलिए,

224
00:07:57,256 --> 00:07:58,476
कौन से फ़ीचर्ज़ हैं जो हमें चाहिए

225
00:07:58,476 --> 00:08:01,844
रखने, और कौन से हैं फ़ीचर्ज़ जो हमें हटा देने चाहिए.

226
00:08:01,844 --> 00:08:03,401
बाद में, इस पाठ्यक्रम में, हम

227
00:08:03,401 --> 00:08:06,018
बात करेंगे मॉडल सिलेक्शन अल्गोरिद्म्स की भी.

228
00:08:06,040 --> 00:08:08,361
कौन से अल्गोरिद्म्स हैं स्वचालित रूप से

229
00:08:08,361 --> 00:08:09,788
निर्णय लेने के लिए कि कौन से फ़ीचर्ज़

230
00:08:09,800 --> 00:08:12,500
रखने हैं और कौन से हटाने हैं.

231
00:08:12,500 --> 00:08:13,987
यह सुझाव काम करने का

232
00:08:13,987 --> 00:08:15,562
संख्या फ़ीचर्ज़ की काम कर सकता है

233
00:08:15,562 --> 00:08:17,853
सही, और, कम कर सकता है ओवर फ़िटिंग.

234
00:08:17,853 --> 00:08:19,383
और, जब हम बात करेंगे मॉडल

235
00:08:19,383 --> 00:08:22,534
सिलेक्शन की, हम जाएँगे इसमें गहराई में.

236
00:08:22,534 --> 00:08:24,386
लेकिन, नुकसान यह है कि,

237
00:08:24,386 --> 00:08:25,603
फेंक देने से कुछ इनमें से

238
00:08:25,603 --> 00:08:27,010
फ़ीचर्ज़, का मतलब है फेंक

239
00:08:27,370 --> 00:08:30,615
देना कुछ इन्फ़र्मेशन जो आपके पास है प्रॉब्लम के बारे में.

240
00:08:30,650 --> 00:08:31,942
उदाहरण के लिए, शायद, सभी

241
00:08:31,942 --> 00:08:33,760
वे फ़ीचर्ज़ हैं वास्तव में उपयोगी

242
00:08:33,780 --> 00:08:35,050
प्रिडिक्ट करने के लिए क़ीमत एक

243
00:08:35,070 --> 00:08:36,636
घर की, तो, शायद, हम वास्तव में नहीं

244
00:08:36,640 --> 00:08:37,687
चाहते फेंकना कुछ

245
00:08:37,687 --> 00:08:40,990
हमारी इन्फ़र्मेशन या फेंकना हमारे कुछ फ़ीचर्ज़.

246
00:08:41,540 --> 00:08:44,515
दूसरा विकल्प है, जिसकी हम

247
00:08:44,515 --> 00:08:45,995
बात करेंगे

248
00:08:46,010 --> 00:08:49,268
अगले कुछ वीडियो में, है रेगुलराइज़ेशन.

249
00:08:49,268 --> 00:08:50,390
यहाँ, हम रखेंगे

250
00:08:50,390 --> 00:08:52,579
सारे फ़ीचर्ज़, लेकिन हम

251
00:08:52,579 --> 00:08:55,063
काम करेंगे मग्निट्यूड / परिमाण

252
00:08:55,063 --> 00:08:56,506
वैल्यूज़ पेरमिटर्स

253
00:08:56,520 --> 00:08:58,745
थीटा j की. और, यह

254
00:08:58,750 --> 00:09:00,690
विधि काम करती है अच्छी तरह से, हम देखेंगे

255
00:09:00,690 --> 00:09:01,925
जब हमारे पास हैं बहुत से

256
00:09:01,925 --> 00:09:03,822
फ़ीचर्ज़, उनमें से प्रत्येक योगदान देता है

257
00:09:03,822 --> 00:09:05,502
थोड़ा बहुत प्रिडिक्ट करने के लिए

258
00:09:05,502 --> 00:09:07,723
y की वैल्यू, जैसे हमने

259
00:09:07,740 --> 00:09:10,283
देखा घर की क़ीमत प्रिडिक्ट करने के उदाहरण में.

260
00:09:10,283 --> 00:09:11,413
जहाँ हमारे पास हो सकते हैं अधिक संख्या में

261
00:09:11,413 --> 00:09:12,720
फ़ीचर्ज़, प्रत्येक उनमें से

262
00:09:12,750 --> 00:09:16,902
है, आप जानते हैं, कुछ हद तक उपयोगी, तो, शायद, हम नहीं फेंकना चाहते उन्हें.

263
00:09:16,930 --> 00:09:19,247
तो, यह देता है

264
00:09:19,250 --> 00:09:22,790
रेगुलराइज़ेशन का सुझाव मोटे तौर पर.

265
00:09:22,790 --> 00:09:24,354
और, मैं समझता हूँ कि, सारी

266
00:09:24,360 --> 00:09:26,763
ये विस्तृत जानकारी शायद आपको समझ नहीं आयी होगी अभी.

267
00:09:26,763 --> 00:09:28,316
लेकिन, अगले वीडियो में, हम

268
00:09:28,316 --> 00:09:30,960
शुरू करेंगे फ़ॉर्म्युलेट करना कि वास्तव में कैसे

269
00:09:30,960 --> 00:09:35,117
अप्लाई करना हैं रेगुलराइज़ेशन करना और, वास्तव में रेगुलराइज़ेशन का क्या मतलब है.

270
00:09:35,140 --> 00:09:36,810
और, तब हम शुरू करेंगे

271
00:09:36,810 --> 00:09:38,310
समझना, कि कैसे इसे इस्तेमाल करना है,

272
00:09:38,310 --> 00:09:40,412
कैसे लर्निंग अल्गोरिद्म को काम करवाना है

273
00:09:40,412 --> 00:09:42,460
बेहतर और कैसे बचना है ओवर फ़िटिंग से.