पिछले विडीओ में, हमने डिवेलप किया एक अनॉमली डिटेक्शन अल्गोरिद्म. इस विडीओ में, मैं चाहता हूँ बात करना प्रक्रिया की कि कैसे डिवेलप करते हैं एक ख़ास ऐप्लिकेशन अनॉमली डिटेक्शन का एक प्रॉब्लम में और विशेष तौर पर यह केंद्रित होगा प्रॉब्लम पर कि कैसे इवैल्यूएट करते / आँकते हैं एक एनोमली डिटेक्शन अल्गोरिद्म. पिछले वीडियोस में, हमने पहले ही बात की महत्व की रियल नम्बर इवैल्यूएशन के और यह कैप्चर करता है आइडिया कि जब आप कोशिश कर रहे हैं डिवेलप करने की एक लर्निंग एल्गोरिद्म एक ख़ास ऐप्लिकेशन के लिए, आपको ज़रूरत है अक्सर लेने की बहुत से विकल्प जैसे, आप जानते हैं चुनना कौन से फ़ीचर्ज़ लेने हैं इत्यादि. और निर्णय लेना इन सब विकल्पों का बहुधा काफ़ी सरल होता है और यदि आपके पास है एक तरीक़ा इवैल्यूएट करने का आपके लर्निंग अल्गोरिद्म को जो केवल आपको देता है वापिस एक नम्बर. तो यदि आप कोशिश कर रहे हैं निर्णय लेने की, आप जानते हैं, मेरे पास एक सुझाव है एक अतिरिक्त फ़ीचर का, मैं इस फ़ीचर को लूँ या नहीं. यदि आप रन कर सकते हैं अल्गोरिद्म को फ़ीचर के साथ, और रन करते हैं अल्गोरिद्म बिना फ़ीचर के, और वापिस मिलता है सिर्फ़ एक नम्बर जो आपको बताता है, आप जानते हैं, क्या बेहतर हुई या बिगड़ गई पर्फ़ॉर्मन्स इस फ़ीचर को लेने से? तब यह देता है आपको एक बेहतर ढंग, एक काफ़ी सरल ढंग, जिससे निर्णय लिया जा सकता है कि फ़ीचर लेना है या नहीं. अत: करने के लिए डिवेलप एक अनॉमली डिटेक्शन सिस्टम फुर्ती से, यह होगा वास्तव में सहायक होना एक तरीक़े का इवैल्यूएट करने के लिए एक अनॉमली डिटेक्शन सिस्टम. और ऐसा करने के लिए, इवैल्यूएट करने के लिए एक अनॉमली डिटेक्शन सिस्टम, हम वास्तव में मान लेंगे कि हमारे पास कुछ लेबल्ड डेटा है. तो, अभी तक, हम कर रहे थे ट्रीट अनॉमली डिटेक्शन को एक अनसुपरवाईज्ड लर्निंग प्रॉब्लम की तरह, लेकर अनलेबलड डेटा. लेकिन यदि आपके पास कुछ लेबल्ड डेटा है जो बताता है कि कौन से है कुछ अनॉमलस इग्ज़ाम्पल्ज़, और कौन से नान-अनॉमलस इग्ज़ाम्पल्ज़ हैं, तब ऐसे हम वास्तव में सोचते हैं स्टैंडर्ड ढंग इवैल्यूएट करने के लिए एक अनॉमली डिटेक्शन अल्गोरिद्म. तो लेते हुए एयरक्राफ़्ट एंजिन का उदाहरण फिर से. मान लेते हैं कि, आप जानते हैं, हमारे पास हैं कुछ लेबल्ड डेटा केवल कुछ अनॉमलस एयर क्राफ़्ट एंजिन्स के इग्ज़ाम्पल्ज़ का जो उत्पादित हुए थे पहले और निकले अनॉमलस. निकले दोषपूर्ण या असामान्य किसी तरह से. मान लीजिए हम लेते हैं हमारे पास कुछ नॉन-अनॉमलस इग्ज़ाम्पल्ज़ भी हैं, अत: कुछ बिल्कुल सही इग्ज़ाम्पल्ज़. मैं लूँगा वाय बराबर 0 डिनोट करने के लिए नोर्मल / नियमित या नॉन-अनॉमलस इग्ज़ाम्पल और वाय बराबर 1 डिनोट करने के लिए अनॉमलस इग्ज़ाम्पल्ज़. प्रक्रिया डिवेलप करने और इवैल्यूएट करने की एक अनॉमली डिटेक्शन अल्गोरिद्म निम्न प्रकार से है. हम सोचेंगे इसे एक ट्रेनिंग सेट की तरह और बात करेंगे क्रॉस वैलिडेशन के बारे में टेस्ट सेट में बाद में, लेकिन ट्रेनिंग सेट हम आमतौर पर सोचते हैं इसे अभी भी अनलेबल्ड ट्रेनिंग सेट जैसे. और इसलिए यह है हमारा बड़ा कलेक्शन नियमित, नॉन-अनॉमलस या नॉट अनॉमलस इग्ज़ाम्पल्ज़ का. और अक्सर हम सोचते हैं इसे कि यह नॉन अनॉमलस है, लेकिन यह वास्तव में सही है यदि कुछ अनॉमलीज़ आ भी जाती हैं आपके अनलेबल्ड ट्रेनिंग सेट में. और आगे  हम करेंगे परिभाषित एक क्रॉस वैलिडेशन सेट और एक टेस्ट सेट, जिससे इवैल्यूएट करने  / आँकने के लिए एक विशेष एनोमली डिटेक्शन अल्गोरिद्म. अत: विशेषतया, दोनो क्रॉस वैलिडेशन और टेस्ट सेट के लिए हम मान लेंगे कि, आप जानते हैं, हम कर सकते हैं शामिल कुछ इग्ज़ाम्पल्ज़ क्रॉस वैलिडेशन सेट में और टेस्ट सेट में जिसमें हैं इग्ज़ाम्पल्ज़ जो पता है कि अनॉमलस हैं. अत: टेस्ट सेटस कहते हैं हमारे पास कुछ इग्ज़ाम्पल्ज़ हैं जिनमें वाय बराबर है 1 जो कॉरेस्पॉंड करते हैं अनॉमलस एयरक्राफ़्ट एंजिन्स को. तो यहाँ है एक विशेष इग्ज़ाम्पल. मान लीजिए, कुल मिलाकर, यह है डेटा जो हमारे पास है. हमने बनाएँ हैं 10,000 इग्ज़ाम्पल्ज़ एंजिन्स के, जो, जहाँ तक हम जानते है बिल्कुल सही हैं, पूर्ण रूप से बढ़िया एयर क्राफ़्ट एंजिन्स हैं. और फिर, यह सही होगा यदि कुछ दोषपूर्ण एंजिन्स आ भी जाएँ सेट 10,000 के में वास्तव में सही है, लेकिन हमने एक प्रकार से मान लिया है कि अधिकांश इन 10,000 इग्ज़ाम्पल्ज़ में हैं, आप जानते हैं बढ़िया और नियमित नॉन-अनॉमलस एंजिन्स. और मान लेते हैं कि, आप जानते हैं, पहले, जितने भी समय से हम रन कर रहे है मैन्युफ़ैक्चरिंग प्लांट, मान लीजिए कि हमें मिलते हैं फ़ीचर्ज़, मिलते हैं 24 से 28 अनॉमलस एंजिन्स भी. और एक प्रचलित ऐप्लिकेशन अनॉमली डिटेक्शन की, आप जानते हैं, संख्या नॉन-अनॉमलस इग्ज़ाम्पल्ज़ की, मतलब वाय बराबर 1 के साथ, हमारे पास शायद होंगे कुछ 20 से 50 तक. यह होगा एक काफ़ी आम रेंज इग्ज़ाम्पल्ज़ की, संख्या इग्ज़ाम्पल्ज़ की जो हमारे पास है जिनमे वाय है 1. और अक्सर हमारे पास होगी एक काफ़ी बड़ी संख्या नियमित इग्ज़ाम्पल्ज़ की. अत:, दिया होने पास यह टेस्ट सेट, और एक प्रचलित तरीक़ा  विभाजन का इसे ट्रेनिंग सेट में, क्रॉस वैलिडेशन सेट में और टेस्ट सेट में होगा निम्न प्रकार से. लेते हैं 10,000 अच्छे एयर क्राफ़्ट एंजिन्स और रखते हैं 6,000 उनमें से अनलेबल्ड ट्रेनिंग सेट में॰ तो, मैं कह रहा हूँ इसे एक अनलेबल्ड ट्रेनिंग सेट लेकिन ये सारे इग्ज़ाम्पल्ज़ हैं वास्तव में वे जो कॉरेस्पॉंड करते हैं वाय बराबर 0 को, जहाँ तक हम जानते हैं. और इसलिए हम इस्तेमाल करेंगे इसे फ़िट करने के लिए पी ऑफ़ एक्स, सही. और इसलिए,  हम इस्तेमाल करेंगे ये 6000 एंजिन्स फ़िट करने के लिए पी ऑफ़ एक्स, जो है वह पी ऑफ़ एक्स जो पेरामिटराइज्ड है मयू 1, सिग्मा स्क्वेर्ड 1, पी ऑफ़ एक्स एन तक पेरामिटराइज्ड हुआ है मयू एन  सिग्मा स्क्वेर्ड एन से. और इसलिए ये होंगे 6,000 इग्ज़ाम्पल्ज़ जो हम करेंगे इस्तेमाल अनुमान लगाने के लिए पेरमिटर्स मयू 1, सिग्मा स्क्वेर्ड 1, से मयू एन, सिग्मा स्क्वेर्ड एन तक. और इसलिए वह है हमारा ट्रेनिंग सेट सारे, आप जानते हैं अच्छे, या अधिकांश अच्छे इग्ज़ाम्पल्ज़ का. आगे फिर हम लेगे हमारे अच्छे एयरक्राफ़्ट एंजिन्स और रखेंगे कुछ उनमें से एक क्रॉस वैलिडेशन सेट में और कुछ उनमें से टेस्ट सेटस में. अत: 6,000 प्लस 2,000 प्लस 2,000, ऐसे करते हैं हम विभाजित अपने 10,000 अच्छे एयरक्राफ़्ट एंजिन्स को. और तब हमारे पास 20 दोषपूर्ण एयरक्राफ़्ट एंजिन्स भी हैं, और हम लेते हैं उसे और शायद विभाजित करते हैं उसे, आप जानते हैं, रखते हैं उनमें से दस क्रॉस वैलिडेशन सेट में और उनमें से दस टेस्ट सेट में. और अगली स्लाइड में हम बात करेंगे कि कैसे वास्तव में इसे काम में लाएँगे इवैल्यूएट करने के लिए अनॉमली डिटेक्शन अल्गोरिद्म को. अत: मैंने जो अभी वर्णन किया यहाँ आप जानते हैं शायद एक अच्छा ढंग है विभाजित करने का लेबल्ड तथा अनलेबल्ड इग्ज़ाम्पल का. अच्छे और दोषपूर्ण एयरक्राफ़्ट एंजिन्स. जहाँ हम लेते हैं जैसे एक 60, 20, 20% विभाजन अच्छे एंजिन्स और हम लेते हैं दोषपूर्ण एंजिन्स, और हम रख देते हैं सिर्फ़ उन्हें क्रॉस वैलिडेशन सेट में, और सिर्फ़ टेस्ट सेट में, तब हम देखेंगे अगली स्लाइड में कि ऐसा क्यों करते हैं. सिर्फ़ थोड़ा सा हट के, यदि आप देखें कि लोग कैसे आप अप्लाई करते हैं अनॉमली डिटेक्शन अल्गोरिद्म्स, कभी-कभी आप देखेंगे दूसरे लोग बाँटते हैं डेटा अलग तरीक़े से भी. तो, एक और विकल्प हैं, यह वास्तव में नहीं है रेकमेंडेड विकल्प, लेकिन कुछ लोग चाहते हैं लेना आपके 10,000 अच्छे एंजिन्स, शायद रखें 6000 उनमें से आपके ट्रेनिंग सेट में और तब रखें बाक़ी के 4000 क्रॉस वैलिडेशन सेट में और टेस्ट सेट में. और इसलिए, आप जानते हैं, हमें पसंद हैं सोचना क्रॉस वैलिडेशन सेट और टेस्ट सेट को बिलकुल भिन्न डेटा सेट्स एक दूसरे से. लेकिन आप जानते हैं, अनॉमली डिटेक्शन में, आप जानते हैं, कभी आप देखते हैं लोग, एक प्रकार से, इस्तेमाल करते हैं वही सेट अच्छे एंजिन्स का क्रॉस वैलिडेशन सेट्स में, और टेस्ट सेटस में, और कभी आप देखते हैं लोगों को इस्तेमाल करते हुए बिलकुल वही सेट अनॉमलस एंजिन्स के क्रॉस वैलिडेशन सेट और टेस्ट सेट में. और इसलिए, इन सब पर ग़ौर किया जाता है, आप जानते हैं, कम अच्छी आदत हैं और अवश्य ही कम रेकमेंडेड है. निश्चय ही इस्तेमाल करने से वही डेटा क्रॉस वैलिडेशन सेट में और टेस्ट सेट में, वह नहीं समझी जाती एक अच्छी मशीन लर्निंग प्रैक्टिस. लेकिन, कभी-कभी आप देखते हैं लोगों को यह भी करते हुए. अत:, दिया होने पर ट्रेनिंग क्रॉस वैलिडेशन और टेस्ट सेट्स, यहाँ है कि कैसे आप इवैल्यूएट करते हैं या यहाँ है कि कैसे आप डिवेलप करते हैं और इवैल्यूएट करते हैं एक अल्गोरिद्म को. पहले,  हम लेते हैं ट्रेनिंग सेटस और हम फ़िट करते हैं मॉडल पी ऑफ़ एक्स. अत: हम फ़िट करते हैं, आप जानते हैं, ये सब गॉशीयन्स को मेरे एम अनलेबल्ड एयरक्राफ़्ट एंजिन्स के इग्ज़ाम्पल्ज़ में, और ये, मैं कहूँगा उन्हें अनलेबल्ड इग्ज़ाम्पल्ज़, परंतु ये हैं वास्तव में इग्ज़ाम्पल्ज़ जिन्हें हम मान रहे हैं हमारे अच्छे नॉर्मल / नियमित एरक्राफ़्ट एंजिन्स. तब कल्पना कीजिए कि आपका अनॉमली डिटेक्शन अल्गोरिद्म वास्तव में प्रिडिक्शन करता है. अत:, क्रॉस वैलिडेशन सेट पर, टेस्ट सेट के, दिया है, मान लीजिए, टेस्ट इग्ज़ाम्पल एक्स, सोचिए कि अल्गोरिद्म ने प्रिडिक्ट किया है कि वाय बराबर है 1, पी ऑफ़ एक्स है कम एप्सिलोन से, हमें लेना चाहिए ज़ीरो, यदि पी ऑफ़ एक्स है बड़ा या बराबर एप्सिलोन के. अत:, दिया होने पर एक्स, यह कोशिश करता हैं प्रिडिक्ट करने की, क्या है लेबल, दिया होने पर वाय बराबर 1 कॉरेस्पॉंड करता हैं एक अनॉमली को या क्या वाय बराबर 0 कॉरेस्पॉंड कर रहा है एक नोर्मल / नियमित इग्ज़ाम्पल को? अत: दिया होने पर ट्रेनिंग, क्रॉस वैलिडेशन और टेस्ट सेट्स, कैसे करते हैं आप डिवेलप एक अल्गोरिद्म? और विशेष रूप से, कैसे आप इवैल्यूएट करते / आँकते हैं एक एनोमली डिटेक्शन अल्गोरिद्म? अच्छा, यह सब करने के लिए, पहल क़दम हैं लेना अनलेबल्ड ट्रेनिंग सेट, और फ़िट करना मॉडल पी ऑफ़ एक्स ट्रेनिंग डेटा में. तो आप लें इसे, आप जानते हैं अनलेबल्ड ट्रेनिंग सेट, लेकिन वास्तव में, ये हैं इग्ज़ैम्पल्ज़ जिन्हें हम मान रहे हैं, अधिकांश इनमें से हैं नियमित एयर क्राफ़्ट एंजिन्स, इसलिए नहीं कि वे अनॉमलीज़ नहीं हैं और ये फ़िट होंगे मॉडल पी अव एक्स में. यह फ़िट करेगा वे सब पेरमिटर्स सारे गॉशीयन्स के लिए इस डेटा पर. आगे क्रॉस वैलिडेशन सेट पर टेस्ट सेट के, हम सोचेंगे अनॉमली डिटेक्शन अल्गोरिद्म को कोशिश करते हुए प्रिडिक्ट करने की वैल्यू वाय की. अत: प्रत्येक टेस्ट इग्ज़ाम्पल्ज़ के लिए. हमारे पास हैं ये एक्स-आइ टेस्ट्स, वाय-आइ टेस्ट्स, जहाँ वाय होगा बराबर 1 या 0 निर्भर करते हुए कि यह अनॉमलस इग्ज़ाम्पल था या नहीं. अत: दी होने पर इनपुट एक्स मेरे टेस्ट सेट में, मेरा अनॉमली डिटेक्शन अल्गोरिद्म सोचिए इसे प्रिडिक्ट करते हुए वाय 1 यदि पी ऑफ़ एक्स है एप्सिलोन से कम. अत: प्रिडिक्ट करते हुए उसे अनॉमली, यह शायद काफ़ी कम है. और हम सोचते हैं अल्गोरिद्म प्रिडिक्ट कर रही है कि वाय है बराबर 0. यदि पी ऑफ एक्स है बड़ा या बराबर है एप्सिलोन के. तो प्रिडिक्ट करना उन्हें नियमित इग्ज़ाम्पल्ज़ यदि पी ऑफ़ एक्स काफ़ी बड़ा है. और इसलिए हम अब सोच सकते हैं अनॉमली डिटेक्शन अल्गोरिद्म को करते हुए प्रिडिक्शन्स कि क्या हैं वैल्यूज़ इन वाय लेबल्ज़ की टेस्ट सेट्स में या क्रॉस वैलिडेशन सेट में. यह करता है हमें कुछ अधिक अनुरूप सूपरवाइज़्ड लर्निंग की सेट्टिंग से, सही? जहाँ हमारे पास है लेबल टेस्ट सेट और हमारा अल्गोरिद्म कर रहा है प्रिडिक्शन इन लेबल्ज़ पर और हम इवैल्यूएट कर सकते हैं इसे आप जानते हैं देखकर कि कितनी बार इसे लेबल सही मिलता है. निस्संदेह ये लेबल्ज़ होंगे बहुत स्क्यूड / तिरछे क्योंकि वाय बराबर ज़ीरो, मतलब नियमित इग्ज़ाम्पल, अक्सर ज़्यादा आम होगा वाय बराबर 1  अनॉमलस इग्ज़ाम्पल से. लेकिन, आप जानते हैं, यह है काफ़ी नज़दीक मूल के इवैल्यूएशन मेट्रिक्स के जो हम प्रयोग करते हैं सूपर्वायज़्ड लर्निंग में. तो क्या है एक अच्छी इवैल्यूएशन मिट्रिक इस्तेमाल करने के लिए. हाँ, क्योंकि डेटा है काफ़ी स्क्यूड, क्योंकि वाय बराबर 0 है ज़्यादा आम, क्लैसिफ़िकेशन एक्यूरेसी एक अच्छा इवैल्यूएशन मिट्रिक नहीं होगा. अत:,  हमने बात की थी इस बारे में पिछले विडीओ में. अत:, यदि आपके पास है एक बहुत स्क्यूड डेटा सेट, तब प्रिडिक्ट करना वाय बराबर 0 हर समय, होगा एक बहुत उच्च क्लैसिफ़िकेशन एक्यूरेसी. इसके बजाय, हमें लेना चाहिए इवैल्यूएशन मिट्रिकस, जैसे कम्प्यूट करें फ़्रैक्शन ट्रू पॉज़िटिव्ज़ का, फाल्स पॉज़िटिव्ज़ का, फाल्स नेगटिव्ज़ का, ट्रू नेगटिव्ज़ का या कम्प्यूट करे पोज़िशन वी कर्व की इस अल्गोरिद्म के या करें काम जैसे कम्प्यूट करें एफ़ 1 स्कोर, सही, जो है एक अकेला रियल नम्बर तरीक़ा सार निकालने का प्रिसिज़न और रिकॉल नम्बर्ज़ का. और इसलिए ये होंगे तरीक़े इवैल्यूएट करने के एक अनॉमली डिटेक्शन अल्गोरिद्म को आपके क्रॉस वैलिडेशन सेट पर या आपके टेस्ट सेट पर. अंत में. पहले अनॉमली डिटेक्शन अल्गोरिद्म में, हमारे पास यह पेरामिटर एप्सिलोन भी था, सही? अत:, एप्सिलोन है यह थ्रेशोल्ड / सीमा रेखा जो हम इस्तेमाल करेंगे निर्णय लेने के लिए कब करना है सूचित किसी चीज़ को एक अनॉमली की तरह. और इसलिए, यदि आपके पास है एक क्रॉस वैलिडेशन सेट, एक और तरीक़ा निर्धारित करने का इस पेरामिटर एप्सिलोन को, होगा ट्राई करें एक भिन्न, ट्राई करें बहुत सी भिन्न वैल्यूज़ एप्सिलोन की, और तब उठाएँ एप्सिलोन की वैल्यू जो, मान लीजिए, मैक्सिमायज़ करती है एफ़ 1 स्कोर, या वह अन्य प्रकार से अच्छे परिणाम देता आपके क्रॉस वैलिडेशन सेट पर. और साधारणतया, ढंग कम करने का ट्रेनिंग, टेस्टिंग, और क्रॉस वैलिडेशन सेट्स, का है कि जब आप निर्णय ले रहे हैं, कि कौन से फ़ीचर्ज़ लेने हैं, या कोशिश कर रहे हों, आप जानते है, ट्यून करने के पेरामिटर एप्सिलोन को, तब हम लगातार इवैल्यूएट करेंगे अल्गोरिद्म को क्रॉस वैलिडेशन सेट पर और लेंगे वे सब निर्णय कि क्या फ़ीचर्ज़ आपने लिए, आप जानते हैं, कैसे सेट करना है एप्सिलोन, प्रयोग करना है, इवैल्यूएट करना है अल्गोरिद्म क्रॉस वैलिडेशन सेट पर, और तब जब हमने सुनिश्चित कर लिए हैं फ़ीचर्ज़, जब हमें मिल गई हैं वैल्यू एप्सिलोन की जिससे हम ख़ुश हैं, हम तब ले सकते हैं अंतिम मॉडल और इवैल्यूएट करेंगे इसे, आप जानते हैं, करेंगे अंतिम इवैल्यूएशन अल्गोरिद्म का टेस्ट सेट पर. अत: इस विडीओ में, हमने बात की प्रक्रिया की कि कैसे इवैल्यूएट करते हैं एक अनॉमली डिटेक्शन अल्गोरिद्म, और फिर से, कर पाने के बाद इवैल्यूएशन अल्गोरिद्म का, आप जानते हैं, एक अकेले रियल नम्बर के इवैल्यूएशन के साथ, एक नम्बर जैसे एफ़ 1 स्कोर के साथ जो अक्सर आपको करने देता है काफ़ी अधिक एफ़िशिएँट इस्तेमाल आपके समय का जब आप कर रहे हैं कोशिश डिवेलप करने की एक एनोमली डिटेक्शन अल्गोरिद्म. और हम कोशिश करते हैं इस तरह के निर्णय लेने की. मुझे चुनना है एप्सिलोन, कौन से फ़ीचर्ज़ लेने हैं, इत्यादि. इस विडीओ में, हमने शुरू किया प्रयोग करना थोड़ा लेबल्ड डेटा करने के लिए इवैल्यूएट एनोमली डिटेक्शन अल्गोरिद्म और यह हमें ले जाता है थोड़ा क़रीब एक सूपर्वायज़्ड लर्निंग सेट्टिंग के. अगले विडीओ में, मैं करूँगा बात थोड़ी अधिक उस बारे में. और विशेष रूप से हम बात करेंगे कि कब आपको इस्तेमाल करना चाहिए एक एनोमली डिटेक्शन अल्गोरिद्म और कब  हमें सोचना चाहिए सूपर्वायज़्ड लर्निंग की सेट्टिंग इसके स्थान पर, और क्या अंतर है इन दोनो फ़ॉर्मलिज़म में.