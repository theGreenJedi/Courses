En el último vídeo hablamos sobre el proceso de cómo evaluar un algoritmo de detección de anomalías y allí empezamos a utilizar algunos datos con valores asignados, con ejemplos que sabíamos que eran anómalos o no anómalos, con y=1 o y=0. Entonces surge la pregunta, si tenemos estos datos valores asignados, tenemos algunos ejemplos que son conocidos por ser anomalías y algunos que no se conocen como anomalías, ¿por qué no simplemente usamos un algoritmo de aprendizaje supervisado? Así que ¿por qué no lo usamos la regresión logística o una nueva red para tratar de aprender directamente de nuestros datos con valores asignados a predecir si y=uno o y=cero. En este video, voy a tratar de compartir con usted algunas ideas y algunas pautas para saber cuándo probablemente debe usar un algoritmo de detección de anomalías y cuándo tal vez sea más fácil considerar el uso del algoritmo de aprendizaje supervisado. Esta diapositiva muestra cuáles son los casos bajo los cuales debe usar la detección de anomalías y cuándo podría ser más provechoso usar el aprendizaje supervisado. Si usted tiene un problema con un número muy reducido de ejemplos positivos y recuerda que los ejemplos de y=1, son los ejemplos anómalos, entonces usted podría considerar usar un recuadro de algoritmo de detección de anomalía. Así que teniendo 0 a 20, tal vez hasta 50 ejemplos positivos, sería muy típico y por lo general, tenemos un pequeño conjunto de ejemplos positivos, vamos a reservar los ejemplos positivos sólo para los conjuntos de validación cruzada y de prueba. En contraste, en un típico caso normal de detección de anomalía, a menudo tenemos un número relativamente grande de ejemplos negativos, de estos ejemplos normales de motores de avión normales. Entonces podemos usar este número grande de ejemplos negativos, para ingresarlos al modelo p(x).  Y así, hay esta idea en muchas aplicaciones de detección de anomalías, usted tiene muy pocos ejemplos positivos y muchos ejemplos negativos y cuando realizamos el proceso de estimación de p(x), de ajustar todos los parámetros Gaussianos, necesitamos sólo ejemplos negativos para hacer eso. Así que si usted tiene un montón de datos negativos, aún podemos ajustarlos muy bien a p(x). En cambio, para el aprendizaje supervisado, más típicamente tendríamos un número bastante grande de ejemplos tanto negativos, como positivos. Esta es sólo una manera de mirar el problema y decidir si debe usar un algoritmo de detección de anomalía o un algoritmo de aprendizaje supervisado. Aquí hay otra forma en la que a menudo la gente piensa sobre los algoritmos de detección de anomalías. Para aplicaciones de detección de anomalías, con frecuencia hay muchos tipos diferentes de anormalidades, entonces piense en los motores de avión. Como sabe, hay muchas maneras diferentes en que los motores de avión pueden fallar ¿correcto? Hay tantas cosas que pueden salir mal, que podrían romper el motor de un avión. Por lo que, si ese es el caso y usted tiene un conjunto muy pequeño de ejemplos positivos, entonces puede ser difícil que un algoritmo aprenda a partir de su pequeño conjunto de ejemplos positivos, cómo lucen las anomalías. En particular, futuras anomalías pueden verse muy distintas a las que ha visto hasta ahora. Así que quizás en su conjunto de ejemplos positivos, haya visto 5, 10 o 20 diferentes formas en que puede fallar el motor de un avión. Pero tal vez mañana, necesite detectar un conjunto completamente nuevo, una forma de anomalía totalmente nueva, una nueva forma en que el motor de un avión puede dañarse y que nunca ha visto antes, si este es el caso, entonces, sería más prometedor sólo modelar los ejemplos negativos, con un tipo de modelo Gaussiano p(x), en vez de probar intensivamente de modelar los ejemplos positivos porque, como sabe, la anomalía de mañana puede ser muy distintas a las que ha visto hasta ahora. En contraste, en algunos otros problemas, tiene suficientes ejemplos positivos para que un algoritmo tenga una idea de cómo son los ejemplos positivos. Y, en particular, si piensa que probablemente los ejemplos positivos futuros serán similares a los del del conjunto de entrenamiento, entonces en ese caso, podría ser más razonable tener un algoritmo de aprendizaje supervisado, que se está rodeado de muchos ejemplos positivos, que puede mirar muchos ejemplos negativos, y usar esto para intentar distinguir entre ejemplos positivos y negativos. Espero que esto le haya dado una idea de, si tiene un problema específico y tiene que pensar sobre el uso del algoritmo de detección de anomalías o un algoritmo de aprendizaje supervisado. La diferencia clave en realidad es que en la detección de anomalías, después de tener un pequeño conjunto de ejemplos positivos con los que es imposible que un algoritmo de aprendizaje comprenda mucho a partir de ellos. Así que lo que podemos hacer en vez de esto es tomar un gran conjunto de ejemplos negativos y poder aprender mucho, comprender p(x) a partir de los ejemplos negativos de los motores de avión normales, digamos. Y reservamos el pequeño número de ejemplos positivos para evaluar nuestro algoritmo, para utilizarlo en los conjuntos de validación cruzada o de prueba. Sólo como un comentario sobre estos tipos diferentes de anomalías, ya sabe, en videos anteriores hablamos sobre los ejemplos de SPAM de correo electrónico. En esos ejemplos, hay en realidad muchos tipos diferentes de correo no deseado. El SPAM de correo electrónico está intentando venderle cosas por correo, tratando de robar sus contraseñas, esto se denomina pesca de correos y hay muchos tipos diferentes de correos electrónicos SPAM. Pero para el problema del SPAM, por lo general tenemos bastantes ejemplos que ver, ya sabe, la mayoría de estos diferentes tipos de correos SPAM, porque tenemos un gran conjunto de ejemplos de SPAM, y por eso con frecuencia pensamos en el SPAM como un entorno de aprendizaje supervisado, aún cuando puede haber muchos tipos diferentes de SPAM. Si miramos algunas aplicaciones de detección de anomalías versus aprendizaje supervisado, encontraremos que, en la detección de fraudes, si tiene muchos tipos diferentes de de formas en que la gente trata de cometer un fraude y un conjunto de entrenamiento muy pequeño, un número reducido de usuarios fraudulentos en su sitio web, entonces usaría un algoritmo de detección de anomalías. Debo decir que si usted tiene, si es un mayorista en línea y en realidad ha tenido un gran número de personas que intenta cometer fraude en su sitio web, en realidad ya tiene un gran número de ejemplos donde y=1, entonces, a veces la detección de fraude en realidad podría cambiar a la columna de aprendizaje supervisado. Pero si no ha visto muchos ejemplos de usuarios que hacen cosas extrañas en su sitio de Internet entonces, con más frecuencia, la detección de fraudes en realidad se trata como un un algoritmo de detección de anomalías, en vez de un algoritmo de aprendizaje supervisado. Para mencionar otros ejemplos, hemos hablado ya de la fabricación, espero que vea más ejemplos normales y no tantas anomalías. D nuevo, para algunos procesos de fabricación, si está fabricando volúmenes muy grandes y ha visto muchos malos ejemplos, tal vez la fabricación también podría cambiar a la columna de aprendizaje supervisado. Pero si no ha visto muchos malos ejemplos de los productos viejos, entonces haré esta detección de anomalías. En el monitoreo de máquinas en el centro de datos, de nuevo podemos aplicar tipos de argumentos similares. Mientras que, la clasificación de correo SPAM , la predicción meteorológica y la clasificación de canceres, si tiene números iguales de ejemplos positivos y negativos, muchos de ustedes tienen muchos ejemplos de sus casos positivos y negativos, ejemplos, entonces, tendemos a tratar todos estos problemas como aprendizaje supervisado. Ojalá esto le de una idea de cuáles son las propiedades de un problema de aprendizaje que podría causar que usted marcara esto como un problema de detección de anomalías versus un problema de aprendizaje supervisado. Para muchos de los problemas enfrentados enfrentado por varias empresas de tecnología y de ese tipo, en realidad estamos en estos contextos, donde tenemos muy pocos o a veces ningún ejemplo de entrenamiento positivo, tal vez hay algunos otros tipos diferentes de anormalidades que nunca hayamos visto antes y para esos tipos de problemas, muy a menudo, que el algoritmo que usamos es un algoritmo de detección de anomalías.