前回のビデオでは ガウス分布について話した。 今回のビデオではそれを用いて アノマリー検出のアルゴリズムを開発する。 ラベル付けされていない m個の手本があるとしよう。 これらの手本の個々は R nに属するフィーチャーと なっている。 つまりトレーニングセットは例えば 製造した直近m個の 航空機エンジンのフィーチャーベクトルでも良し、 m人のユーザーのフィーチャーでも それ以外の何かでも良い。 アノマリー検出に どうアプローチしていくか、というと、 データセットからp(x)を モデリングしていきます。 どんなフィーチャーの組みの確率が高くてどんなフィーチャーの組みが低い確率なのかを 見つけ出したい。 で、xはベクトルなので、 p(x)をモデリングするとは x1の確率、、、ここで x1はxの最初の成分ですが、 x1の確率に、 掛けることのx2となる確率、 これは二番目のフィーチャーの確率で、 それに掛けることの 三番目のフィーチャーの確率、 などなどと、 最後のフィーチャーxnの確率まで 掛け合わせます。 ここにスペースを空けたのは、あとでここに書きたい事があるからです。 で、これらの個々の項、 p(x1)、p(x2)などを どうモデリングするのでしょうか？ どうやるかというと、 x1がガウス分布に従って 分布していると 想定します、なんらかの平均、 それをミュー1と 書きましょう、 そしてなんらかの分散、 それをシグマ二乗の1と書くことにしましょう。 そしてp(x1)は 平均がミュー1で 分散シグマ二乗1の ガウスの確率分布に従うとする。 同様に x2はガウス分布に従って分布していると、、、 ところで、 この小さなチルダ記号は （右辺に従い）分布している、という事を意味する。 で、平均がミュー2で分散がシグマ二乗の2の ガウス分布に従っている、つまり異なるガウス分布に従って 分布している、と想定する。 それは異なるパラメータのセット、ミュー2とシグマ二乗の2を持っている。 同様に、 x3もまた別のガウス分布で、 これもまた 他のフィーチャーとは異なる 平均と標準偏差を持ちえる。 などなどと、xnまで続く。 以上が私のモデルとなる。 あなたたちの中のうち、 統計のスペシャリストの人向けの余談ですが、 私の書き下した方程式の 実際にはフィーチャーの値、 x1からxnまでの値が 独立である事を 仮定している。 だが実際には、 ここに書いたアルゴリズム片は、 これらのフィーチャーが 独立に近いかどうかに関わらず機能する、 実は独立の仮定が成り立たない時ですら このアルゴリズムはうまく機能する。 だけどもしあなたが、たった今、私が使った 独立の仮定だとかの用語の意味が分からなければ 気にしないでよろしい。 そのうち分かるようになるだろうし、 このアルゴリズムは正しく実装出来るだろうから。 さきのコメントは単に統計の専門家向けのコメントに過ぎない。 最後に、これのまとめとして、 この式を もうちょっとだけコンパクトに書く。 これを、以下のように jが1からnまでの 以下のpの積として書くことにする。 pのxjで、xjは ミューjとシグマ二乗jで パラメトライズされている。 つまりこのファニーな 記号、大文字の ギリシャ文字のアルファベット、パイだが、 そのファニーな記号は、値の集合に対して 積をとる事に対応する。 つまり、和の記号に 慣れているなら、 iを1からnまでのiの 和を取ると、 この意味は1+2+3+... とnまでの和という意味。 一方このファニーな 記号は、この掛け算記号は、 iが1からnまでの iの掛け算。 これの意味する所は 和の記号とほとんど同じだけど、今回は足す代わりに掛け算する、という意味。 これは結局、1掛ける 2掛ける3掛ける、、、と、nまで掛ける。 で、この積の記法を 使うと、 このjが1からnまでこの式を掛け合わせる、というのを使うと もっとコンパクトになる。 これらの項全部を 書く、より短い 方法となるワケ。 だってこれらのpの、ミューjとシグマjが 与えられた時のxjの 値をとって、 それらを掛け合わせているのだから。 ところで、このpのxという 分布を推計する問題は 密度推計の問題、と 呼ばれる事がある。 それがこのスライドのタイトルでもある。 では、全部合わせると、 我らのアノマリー検出のアルゴリズムはこうなる。 最初のステップはフィーチャーを選ぶ事、 または見つけ出すことだ、 アノマリーであるサンプルを示してくれると 思われるようなフィーチャーxiを。 つまり、どういう意味かというと、 以下のようなフィーチャーを 探し出すという事です: あなたのシステムに 詐欺行為を働いているかもしれない 普通でないユーザーが いた時に、または航空機エンジンの 例では、何かおかしな事、 何か奇妙な事が航空機エンジンに起こっている時には 普通でないほど大きな値、 または普通でないほど小さな値をとる、と あなたが思うようなフィーチャーxiを選ぶ、 アノマリーのサンプルが どんな感じかを知る為に。 またはより一般的に、 集めているデータの対象の一般的な性質を 良くとらえているフィーチャーを集めても良い。 次に、得られたm個のトレーニングセットに対し、 ラベル無し手本に対し、 x1からxmまでに対し、 パラメータをフィットさせる、 ミュー1からミューnまでと、 シグマ二乗の1からシグマ二乗のnまで。 これらの式は 前回のビデオでやった 式と似ている。 これらのパラメータの推計に この式を使っていく。 いくつか解釈を与えておくと、 ミューj、 これはフィーチャーjの平均だ。 そしてこのミューjはpのxjの式に パラメータとして入る、それは ミューjとシグマ二乗jでパラメトライズされていたのだった。 だからこれの言ってる事は ミューjは単に トレーニングセットに渡って フィーチャーjの平均を取った物、という事。 そして補足しておくと、 あなたは、これらの式を jが1からnまでに渡って 計算することになる。 つまりこれらの式を使ってミュー1、 ミュー2、と ミューnまで、推計する。 シグマ二乗も同様だ。 そしてまた、これらの ベクトル化したバージョンを作る事も可能だ。 ミューをベクトルとして 考えると、 つまりミュー1があって、 ミュー2があって、、、と ミューnまで。すると ベクトル化したバージョンの パラメータのセットは 1からnまでの xiの和と書ける。 つまり今書いたこの式で このxiをフィーチャーベクトルとして n個全てのミューの値を 同時に推計する。 そしてまた、シグマ二乗jの 推計についても ベクトル化した式を作れる。 最後に、新しいサンプルを与えられたら、 つまり、新しい航空エンジンが来て、 この航空機エンジンがアノマリーなのかどうかを知りたいとすると、 やらなくてはならない事は p(x)を、この新しいエンジンの確率を計算する事だ。 で、p(x)は この積と等しくて、 実装としては、計算するのは、 この式で、 ここにある、これは ガウス確率の 式だ。 だからこれを計算し、 最終的に、この確率が とても小さければ、 これをアノマリーとフラグづけする。 これはこの手法の適用例だ。 このスライドの左上に プロットしたようなデータがあるとしよう。 もしこの、フィーチャーx1を見てみると、 もしこのデータセットを見てみると、 見た感じだいたい フィーチャーx1の平均は5のあたりで、 標準偏差は このデータセットのx1の値だけを 見ると、標準偏差は だいたい2くらい。 つまりそれがシグマ1。 そしてフィーチャーx2の 値を見ると、 それは縦軸で測れて その平均は見たところ だいたい3くらいで、 標準偏差はだいたい1。 だからこのデータセットに対して ミュー1、ミュー2と、シグマ1、シグマ2を 推計すると、これが得られる物だ。 ここでもまた、シグマとここに書いた。 標準偏差について考えているけれど、 前のスライドの式は これらの二乗の推計を与える物だった。 つまりシグマ二乗の1、シグマ二乗の2。 だから、シグマ1とシグマ2を使ってるのか それともシグマ二乗1とシグマ二乗2を 使ってるのかに、注意しなさい。 そしてシグマ二乗1はもちろん、 イコール4となる。 2の二乗だから。 図では、 ミュー1とシグマ二乗1で パラメトライズされている p(x1)と、 ミュー2とシグマ二乗2で パラメトライズされたp(x2)は ここにあるこれら2つの分布のような見た目となるだろう。 そして結局、 p(x)をプロットすると それはこれら2つの 積だったのだから 実際にはこんな感じの 平面プロットが得られる。 これはp(x)のプロットで その高さ、 この上の高さ、 平面上のある特定の点の 高さは、つまりある x1、x2が与えられた時に x2の値が2で x1の値が2なら、この点だ。 そしてこの三次元平面の高さが それこそがp(x)だ。 つまりp(x)、それがこのプロットの 高さだ。 それは文字通りミュー1とシグマ二乗1で パラメトライズされたp(x1) 掛けることの ミュー2とシグマ二乗2で パラメトライズされたp(x2)である。 つまり、これがパラメータを このデータにフィットさせる方法だ。 新しいサンプルが幾つか来た場合を考えてみよう。 新しいサンプルはここかもしれない。 これはアノマリーか？そうでないか？ また、それとは別のサンプルが、 例えば二番目のサンプルがここにあるとしよう。 これはアノマリーか？そうでないか？ それを区別する方法は ある値エプシロンをセットする、 ここではエプシロンを 0.02としたとしよう。 どうやってエプシロンを選ぶかは後で話す。 まずは最初のサンプルを 取ってみよう。このサンプルを x1 test と呼ぶ事にする。 そして二番目のサンプルをx2 testと 呼ぶことにする。 で、どうするかというと、 p(x1 test)を計算する。 その為に、この式を使って それを計算する。 これは見たところかなり大きな値に見える。 特に、これはエプシロン 以上となっている。 だからこれは、きわめて大きい確率で 少なくともエプシロンより大きいとは言える。 だからx1 testはアノマリーでは無い、と 言って良かろう。 一方 p(x2 test) を計算してみると、 これはもっとずっと小さい値となる。 これはエプシロンより小さい。 だから、これは確かに アノマリーだと言える。 何故ならそれは、我らが選んだエプシロンより小さいから。 そして実際、ここで言った事は、 これの本当に意味している事は、三次元での表面プロットを見ると、 それの言わんとしている事は、 その点の上の 表面までの高さが高い点となるx1，x2は、全て 非アノマリーのサンプルに、つまりOKというかノーマルなサンプルに 対応しているという事。 一方、遥か離れたこの辺の点は全て 遥か離れたこの辺の点は全て、 これらの点は全て とても低い確率となっている。 つまり、我らとしては、 これらの点をアノマリーと フラグづけする事になる。つまりある領域を それはこんな感じとなるだろうが、 その外の全ての点を アノマリーとフラグづけ する事となる。 一方で、このエプシロンの内部に ある物たちは、ここに書いたように、 これはOK、または非アノマリーなサンプルとみなす。 つまりこのサンプルx2 testは その領域の外に位置しているので つまりそれはとても低い 確率なので、それはアノマリーのサンプルとみなす訳だ。 このビデオでは、どうやってp(x)を推計するかを 議論してきた。xとなる確率を。 アノマリー検出のアルゴリズムを 開発する為に。 そしてこのビデオではまた、 所与のデータセットに対して パラメータをフィッティングする、 パラメータを推計する全体の手順も見ていった。 パラメータであるミューとシグマを取得して、 次に新しいサンプルに対して それがアノマリーかどうかを判断した。 次のビデオでは、 このアルゴリズムに対してより深く見ていく。 そしてこれを実際にうまく運用する為に ちょっとした補足の話もしていく。