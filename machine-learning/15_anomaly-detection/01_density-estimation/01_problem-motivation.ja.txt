今後の一連のビデオで、 アノマリー検出、と言われる 問題を扱いたい。 これは割と良く使われる種類の 機械学習で、 そして興味深い側面の一つに、 これはだいたい教師なし学習の 問題でありながら、またある側面では 教師有り学習の問題に とても似ている部分もある。 で、アノマリー検出とは何か？ それを説明する為に、 やる気になりそうな例として、、、 航空機のエンジンの 製造者だとしよう。 そしてあなたの航空機のエンジンが 組み立てラインからロールオフして、 そしてQAをしている、つまり 品質保証テストをしているとしよう。 そしてそのテストの一貫として、 航空機のエンジンの ある機能ーーそうだなぁ、生成される熱とか 振動とかを 測っているとしよう。 ずっと昔に私の友人達が この問題に挑んでいて これらのフィーチャーは本当に 彼らが実際の航空機エンジンから 集めた物だ。 あなたは今、 X1からXmのデータセットを 持っている。 m個の航空機エンジンを作ったとして、 そのデータをプロットすると、こんな感じになるだろう。 この各点、各バッテンは あなたのラベル無し手本だ。 そしてアノマリー検出の問題は以下のような感じ。 翌日、新しい航空機のエンジンが 組立ラインから ロールオフしたと してみよう。 あなたの新しい航空エンジンは 幾つかのフィーチャーの集合、x-testを持つ。 アノマリー検出問題とは この航空機エンジンが とにかく何かしら普通でないかを 知りたい。言い換えると、 たとえばこのエンジンを さらなるテストに回さなきゃいけないかを知りたい、 またはこのエンジンは 問題なさそうなのかを。 問題なさそうで、 追加のテスト無しで客に出荷して良さそうかを。 つまり、その新しい 航空機エンジンが そこの点なら うーむ、それ以前の たくさんの航空機エンジンと 似てるので、たぶんOKそうでしょう。 一方、新しい航空機エンジンが x-testが、 ここの点なら、 つまりx1とx2が この新しい手本のフィーチャーなら、 x-testがはるかこの 外にあるなら、それはアノマリーと呼んで良かろう。 だからたぶん、顧客に出荷する前に 追加のテストに送り出しても 良いといえよう。 だってこのエンジンは、 それ以外に見た物と大きく異なっているから。 より正式には、アノマリー検出の問題では なんらかのデータセットが与えられて、 それはx1からxmまでの 手本としておく、そして、 普通はこれらのm個の手本を ノーマル、または アノマリーでは無い、と想定する。 そしてある新しいサンプル、 x-testが来た時にに、それがアノマリーっぽいかをアルゴリズムに教えて欲しい。 その為に我らがとるアプローチは 与えられたデータセットに対し ラベル無しのトレーニングセットが与えられた時に モデルp(x)を 構築する。 言い換えると、 xの時の確率のモデルを 構築するということ、ここで xはこれらのフィーチャー、例えば航空機のエンジンとかの。 そしてxの時の確率のモデルを 構築して、 新しい航空機エンジンに対し、 p(x-test)が、 あるエプシロンより 小さいかを見る。 そしてこれがアノマリーかどうかのフラグをつける。 つまり新しいエンジンで データから推計した モデル、p(x)による確率が とても小さいのを見かけたら、 これをアノマリーとフラグをつける。 もしp(x-test)が、例えば ある小さな閾値より大きければ それはオーケーっぽいと言うわけ。 そして与えられたトレーニングセットが ここにプロットしたような物だとして、 以下のようなモデルを構築して、 航空機エンジンの、、、 いや、モデルp(x)に、 どこかこの中のあたりに ある点に対しては、 とても高い確率だと言って欲しく、 他方、ちょっと離れた所にある点には、低い確率だと言って欲しい。 さらに遠く離れた点に対しては なんらかの、より低い確率になって欲しい。 そしてこの離れた点や この離れた点は アノマリーだろう。 他方ここにある点、 ちょうどなかほどにある点、 これはOKだろう、 だってp(x)は なかほどの点に対しては とても高くなるだろうから、だって その辺にはたくさんの点が見られているから。 これはアノマリー検出の応用の一例だ。 たぷん一番一般的なアノマリー検出の 応用例は、 たくさんのユーザーが居て、 各ユーザーが異なるアクティビティを行なっている時に、 たとえば webサイト上とか 物理的な工場とかそういうので、 各ユーザーごとのアクティビティの フィーチャーを計算する事が出来る時に、 モデルを構築して、 いわば、異なるユーザーが 別々の行動をとる確率を言わせる事が 出来る。 ユーザー行動を表すフィーチャーの あるベクトルがどの位の 確率となるのか、 たとえばユーザーアクティビティの フィーチャーの例としては、 webサイトの場合なら、 x1がユーザーのログインの頻度で、 x2は、うーん、 訪問したページの 総数とか、取引の総数で、 x3は、うーん、 そのユーザーがフォーラムにポストした 投稿の総数で、 フィーチャーx4は ユーザーのタイピング速度とかの 可能性だってありえる。 実際一秒あたりのユーザーの タイプした文字速度を トラックしているwebサイトもある。 そしてこんな類のデータに対して、p(x)をモデリング出来るわけだ。 そして最後に、その得られたモデルp(x)を使って、 あなたのwebサイトで 凄く奇妙な行動をとっているユーザーを 特定する事が出来る、 どのユーザーが確率的に エプシロン以下なのかをチェックする事によって。 そしてそれらのユーザーのプロファイルをさらなるレビューに送り出すとか、 または、それらのユーザーからは追加の身分証明を 提出させるとか、 そういう、あなたのwebサイトを奇妙な行動や 詐欺っぽい行動からガードする何らかの措置を講ずるのだ。 この種の技術は、 普通でない行動をしているユーザーをフラグ付けしてしまい、 それは必ずしも 不正をしているユーザーだけとは限らない。 つまりいっつも盗みを働いているユーザーだけじゃなく たんにふざけてるだけのユーザーも。 普通でないユーザーを探すだけ。 だがこれは実際に たくさんの商品を販売している オンラインwebサイトにおいて、 詐欺行為をしているか 不正にのっとったアカウントを使っている事を示す事を期待すべく、 奇妙な行動をとっているユーザーを見つける為に 使われているテクニックだ。 アノマリー検出のもう一つの応用例は製造業だ。 航空機エンジンのケースを 既に話したが、そこでは 普通とは異なる航空機エンジンを 見つけ出して、それらをさらなるレビューへと送り出すのだった。 三番目の応用例はデータセンターの コンピュータをモニタリングするという事。 これに実際に従事してる友達が何人かいるよ。 コンピュータのクラスタなりデータセンターなりに たくさんのコンピュータが あったとして、 各マシンの フィーチャーを計算出来る。 例えばどれだけのメモリを使ってるかとか ディスクアクセスの総数だとか CPU負荷だとか もっと複雑なフィーチャーでも良い、 このマシンのCPUロードを このマシンのネットワークトラフィックの量で 割ったりだとか、 そういう物を捉えたようなフィーチャー。 そしてデータセンターの 通常時の振る舞いのデータを 与えられた時に、 xとなる確率をモデリング出来る。 つまりこれらのマシンが 様々なメモリ使用量となる確率、 またはこれらのマシンが 様々なディスクアクセスの回数となる確率、 様々なCPU負荷となる確率などを モデリング出来る。 そしてもし確率xが、 p(x)が とても小さいマシンがあったら、 そのマシンは普通でなく振舞ってるという事が分かり、 そのマシンは落ちる所かもしれないので それをフラグ付けして システム管理者にレビューさせたり出来る。 そしてこれは実際に、 こんにち様々なデータセンターで 自分たちのマシンに普通でない事が起きていないか 監視するのに使われている。 以上がアノマリー検出。 次のビデオでは ガウス分布とガウス分布の性質を ちょこっと議論し、 そしてその後のビデオで アノマリー検出のアルゴリズムを 開発するのにそれを使っていく。