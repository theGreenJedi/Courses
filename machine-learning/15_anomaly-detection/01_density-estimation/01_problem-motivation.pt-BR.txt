Nos próximos vídeos, vou falar sobre um problema chamado Detecção de Anomalias. Este é um uso comum de aprendizado de máquina. Um dos aspectos interessantes é que isto é usado principalmente em problemas de aprendizado não-supervisionado, mas alguns aspectos dele são muito similares aos problemas de aprendizado supervisionado. O que é detecção de anomalia? Para explicá-lo, vou usar este exemplo: imagine que você é um fabricante de motores de aviões, e digamos que quando seus motores saem da linha de montagem, você faz testes de qualidade. Como parate do teste, você mede características dos motores. Por exemplo, você mede o calor gerado, vibração, e coisas do tipo. Eu tenho amigos que trabalharam neste problema no passado e, na verdade, estas eram as características que eles coletavam dos motores das aeronaves. Agora você tem um conjunto de dados: x⁽¹⁾, ...,  x⁽ᵐ⁾ de m motores de aeronaves fabricadas. Seus dados plotados se parecem com isto, onde cada cruz é um dos seus exemplos não-rotulados. O problema de detecção de anomalia é o seguinte: digamos que você tenha um novo motor de aeronave saindo da linha de montagem, e seu novo motor tenha um conjunto de atributos x-test. O problema de detecção de anomalias é: queremos saber se esse motor de aeronave é uma anomalia, de alguma forma, ou seja, queremos saber se esse motor deveria passar por testes adicionais, ou se ele se parece  com um motor normal e,  portanto,  pode ser despachado para o consumidor sem passar por outros testes. Se o seu novo motor de aeronave é esse ponto aqui, ele parece muito com um motor que já vimos, e diríamos que ele parece ok. No entanto, se para o seu novo motor, o x-test for um ponto aqui, de forma que  x₁ e x₂ forem os atributos desse novo exemplo, se o x-test estiver nesta distância, chamaríamos isso de anomalia, e talvez enviássemos esse motor para mais testes antes de despachá-lo para o cliente porque ele parece ser muito diferente dos outros motores que vimos anteriormente. Mais formalmente, no problema de detecção de anomalias, temos um conjunto de dados x⁽¹⁾ até  x⁽ᵐ⁾ de exemplos, e normalmente assumimos que esses "m" exemplos são normais, ou exemplos de não-anomalias. Queremos um algoritmo que diga se um novo exemplo, x-test, é uma anomalia. Esta é a abordagem: dado um conjunto de treinamento não-rotulado, vamos construir um modelo para p(x). Em outras palavras, vamos construir um modelo para a probabilidade de x, onde x são os atributos do motor de aeronaves. Tendo construído um modelo para a probabilidade de x, vamos então dizer que para um novo motor de aeronave, se p(x-test) for menor que ε, rotulamos x-test como uma anomalia. Então, quando temos um novo motor com uma probabilidade muito baixa, sob o modelo "p(x)", que estimamos a partir dos dados, nós marcamos como anomalia. Enquanto, se p(x)≥ε, dizemos que o motor está ok. Dado um conjunto de treinamento como o plotado aqui, se construirmos um modelo p(x), esperamos que o modelo p(x) dirá que pontos localizados perto do centro têm probabilidade muito alta e pontos longe do centro têm probabilidades menores. Pontos ainda mais distantes têm probabilidades menores. Pontos muito longe (em verde) seriam anomalias. Já pontos bem no centro estariam ok porque p(x) bem no centro teria probabilidade muito alta porque vimos muitos pontos naquela região. Aqui estão alguns exemplos de aplicações de detecção de anomalia. Talvez a aplicação mais comum de detecção de anomalias seja quando você tem muitos usuários e cada usuário executa atividades diferentes. Por exemplo, no seu website ou em uma planta, e você pode computar os atributos das diferentes atividades dos usuários. Você pode construir um modelo para dizer qual é a probabilidade de usuários diferentes se comportarem de forma diferente. Qual é a probabilidade de um vetor específico de atributos de comportamento dos usuários? Exemplos de atributos de atividades de usuários em um website, podem ser: x₁ - com que frequência o usuário loga no website, x₂ - o número de páginas visitadas, ou o número de transações, x₃ - o número de posts do usuário no fórum, x₄ - qual a velocidade de digitação do usuário. Alguns websites podem, na verdade, calcular o número de caracteres digitados por segundo. Você pode modelar p(x) com base nesse tipo de dado. Finalmente, tendo o seu modelo p(x), você pode tentar identificar usuários que têm um comportamento muito estranho no seu website, checando quais têm p(x)<ε e enviar o perfil desses usuários para revisão ou exigir confirmação da identidade desses usuários para evitar comportamentos muito estranhos ou fraudulentos no seu website. Esse tipo de técnica pode marcar usuários que se comportam de forma não-usual, não apenas de forma fraudulenta. Então, não apenas para detectar fraudes mas também para detectar usuários incomuns. Essa é, na verdade, a técnica usada por muitos websites que vendem produtos para identificar usuários com comportamento estranho, que pode indicar comportamento fraudulento ou contas roubadas de usuários. Outro exemplo de detecção de anomalia é na manufatura. Falamos sobre motores de aeronaves onde você pode encontrar motores incomuns e enviá-los para revisão. Uma terceira aplicação seria monitorar computadores em uma central de dados. Tenho alguns amigos que trabalham nisso também. Se você tem muitas máquinas em um agrupamento, ou central de dados, podemos computar atributos de cada máquina. Atributos que capturam quanta memória é usada, acessos a disco, e uso da CPU bem como atributos mais complexos como qual é o uso da CPU dividido pelo tráfego de rede nessa máquina? A partir desses dados, de como os computadores normalmente se comportam, você pode modelar p(x), pode modelar a probabilidade dessas máquinas usarem diferentes quantidades de memória, a probabilidade dessas máquinas terem diferentes números de acesso a disco, uso de CPU, etc. Se você tiver uma máquina com p(x) muito baixa, você sabe que a máquina está se comportando de forma incomum, e talvez essa máquina esteja para parar de funcionar e você pode marcá-la para revisão por um administrador de sistemas. Isso é usado hoje em dia hoje por várias centrais de dados para encontrar comportamentos incomuns nas suas máquinas. Então, isso é detecção de anomalias. No próximo vídeo, vou falar um pouco sobre a distribuição Gaussiana, e rever propriedades da distribuição de probabilidade Gaussiana. Nos vídeos posteriores, vamos aplica-las para desenvolver um algoritmo de detecção de anomalias.