1
00:00:00,410 --> 00:00:01,520
前回のビデオで、

2
00:00:01,820 --> 00:00:04,130
我らはPrecision（精度）とRecall（再現率）という物を

3
00:00:04,280 --> 00:00:06,180
スキューしたクラスの分類問題に関する

4
00:00:06,840 --> 00:00:08,220
評価指標として議論した。

5
00:00:09,530 --> 00:00:11,020
多くの応用において、

6
00:00:11,180 --> 00:00:13,350
PrecisionとRecallの間のトレードオフを

7
00:00:13,630 --> 00:00:15,640
なんらかの形で取りたいと思う事になる。

8
00:00:16,500 --> 00:00:17,310
それをどうやってやれば良いのか、話していこう。

9
00:00:17,470 --> 00:00:19,020
そしてまた、学習アルゴリズムの

10
00:00:19,390 --> 00:00:20,520
評価メトリクスとして

11
00:00:21,050 --> 00:00:22,810
PrecisionとRecallを、

12
00:00:22,980 --> 00:00:24,290
更に有効にする方法も

13
00:00:24,720 --> 00:00:27,380
お見せする。

14
00:00:28,620 --> 00:00:30,180
まずは思い出してもらう為に

15
00:00:30,250 --> 00:00:32,150
これがら前回のビデオから抜き出した

16
00:00:32,380 --> 00:00:34,100
PrecisionとRecallの定義だ。

17
00:00:35,920 --> 00:00:37,650
継続してガンの分類問題を使っていこう、

18
00:00:38,680 --> 00:00:39,980
そこではもし患者がガンだったら

19
00:00:40,370 --> 00:00:41,790
y=1で、

20
00:00:42,270 --> 00:00:43,310
それ以外だったらy=0だった。

21
00:00:44,800 --> 00:00:46,060
そしてロジスティック回帰分類器を

22
00:00:46,360 --> 00:00:48,580
訓練する事にし、それで

23
00:00:49,070 --> 00:00:50,690
0と1の間の確率を出力する。

24
00:00:51,740 --> 00:00:52,830
つまり、いつも通り、

25
00:00:53,010 --> 00:00:54,690
1と予測する、つまりy =1と予測するのは

26
00:00:55,080 --> 00:00:56,290
hのxが

27
00:00:56,560 --> 00:00:57,980
0.5以上の時で、

28
00:00:58,090 --> 00:00:59,720
そして0と予測するのは

29
00:01:00,140 --> 00:01:01,570
仮説の出力した値が

30
00:01:01,820 --> 00:01:03,720
0.5未満だった時とする。

31
00:01:04,040 --> 00:01:05,400
そしてこの分類器が我らに

32
00:01:05,710 --> 00:01:08,430
なんらかのPrecisionとRecallの値を与えてくれる訳だ。

33
00:01:10,420 --> 00:01:11,860
しかしここで、我らが

34
00:01:12,140 --> 00:01:13,440
患者がガンだと予測するのは

35
00:01:13,730 --> 00:01:15,510
本当に彼らがガンだととても深く確信を持ってる時だけにしたい、

36
00:01:15,750 --> 00:01:17,190
と仮定してみよう。

37
00:01:18,010 --> 00:01:18,900
何故なら、知っての通り、

38
00:01:19,140 --> 00:01:20,180
もしあなたが患者の所に行き

39
00:01:20,480 --> 00:01:21,570
彼らがガンだ、と告げると、

40
00:01:21,710 --> 00:01:22,450
その事は彼らにとって大ショックだろう、

41
00:01:22,680 --> 00:01:23,860
何故ならこれはきわめて深刻な

42
00:01:24,220 --> 00:01:25,610
知らせで、そして彼らは

43
00:01:25,700 --> 00:01:27,080
とても痛みを伴う治療過程を

44
00:01:27,660 --> 00:01:29,570
受けるはめになりそうだから。

45
00:01:29,780 --> 00:01:30,770
だから我らがある人に

46
00:01:30,980 --> 00:01:31,880
あなたはガンだと思う、と告げるのは

47
00:01:32,090 --> 00:01:34,240
とても確信がある時だけにしたい。

48
00:01:36,230 --> 00:01:37,210
これを行う一つの方法としては

49
00:01:37,320 --> 00:01:38,940
アルゴリズムを修正して、

50
00:01:39,120 --> 00:01:40,290
しきい値を0.5に

51
00:01:40,710 --> 00:01:42,270
設定する代わりに

52
00:01:42,820 --> 00:01:44,360
我らはy =1 と

53
00:01:44,510 --> 00:01:45,370
予測するのを

54
00:01:46,330 --> 00:01:48,630
hのxが0.7以上の時だけにする、

55
00:01:48,700 --> 00:01:50,200
という手が考えられる。

56
00:01:50,490 --> 00:01:51,620
つまりこうして、

57
00:01:52,360 --> 00:01:53,400
ある人にガンだと告げるのは

58
00:01:53,510 --> 00:01:54,530
我らが彼らをガンだと思う確率が

59
00:01:54,810 --> 00:01:56,280
70パーセント以上の

60
00:01:56,730 --> 00:01:59,060
時だけにする訳だ。

61
00:02:00,830 --> 00:02:02,000
そしてもしこのやり方をやれば、

62
00:02:02,850 --> 00:02:03,740
あなたはある人をガンだと予測するのは、

63
00:02:03,840 --> 00:02:04,990
あなたがより確信を持ってる時だけとなり、

64
00:02:05,100 --> 00:02:07,230
それは結局、

65
00:02:07,520 --> 00:02:08,830
より高いPrecisionの分類器を

66
00:02:09,920 --> 00:02:13,410
得る事となる。

67
00:02:14,140 --> 00:02:15,300
何故ならあなたが赴いて

68
00:02:15,450 --> 00:02:16,630
「あなたはガンだろう」と告げる事になる

69
00:02:16,860 --> 00:02:18,220
患者は全て、

70
00:02:18,440 --> 00:02:19,760
それらの患者は全て、ここでは

71
00:02:20,350 --> 00:02:21,420
彼らがひとたびその報告を聞けば、

72
00:02:21,720 --> 00:02:23,100
彼らが実際にガンだととても確信が持てるのだから。

73
00:02:24,260 --> 00:02:26,050
つまりはあなたがガンだと

74
00:02:26,150 --> 00:02:27,460
予測した患者のより多くの割合が

75
00:02:27,530 --> 00:02:28,990
実際にもガンとなる、

76
00:02:29,280 --> 00:02:30,720
何故なら我らはそれらの予測に

77
00:02:31,000 --> 00:02:32,870
極めて確信を持ってるから。

78
00:02:34,510 --> 00:02:36,360
しかし対照的に、この分類器は

79
00:02:36,540 --> 00:02:38,530
より低いRecallとなる。何故なら

80
00:02:39,140 --> 00:02:40,220
ここでは我らは

81
00:02:40,340 --> 00:02:41,650
予測をする時に、、、

82
00:02:41,740 --> 00:02:44,180
我らはy=1と予測するのを、より少ない数の患者にしかしなくなるから。

83
00:02:45,090 --> 00:02:45,920
ここでこれをさらに進めて、

84
00:02:46,330 --> 00:02:47,520
しきい値を0.7に設定する代わりに

85
00:02:48,080 --> 00:02:49,210
これを0.9に設定して、

86
00:02:49,490 --> 00:02:51,550
yが1と予測するのを

87
00:02:52,430 --> 00:02:53,270
90パーセント以上確かに

88
00:02:53,320 --> 00:02:54,560
その患者がガンだと思う

89
00:02:55,380 --> 00:02:57,020
ときだけにする、という事も出来る。

90
00:02:57,600 --> 00:02:58,720
その場合、それらの患者は

91
00:02:58,850 --> 00:02:59,820
大部分が

92
00:03:00,020 --> 00:03:01,380
実際にもガンだろう、つまり

93
00:03:01,560 --> 00:03:03,060
これは高いPrecisionで、より低いRecallの

94
00:03:04,160 --> 00:03:06,090
分類器となるだろう、

95
00:03:06,190 --> 00:03:08,550
何故なら我らは、それらの患者がガンだと、正しく検出したいから。

96
00:03:09,310 --> 00:03:10,780
次に別の例を考えよう。

97
00:03:12,100 --> 00:03:13,200
我らは実際のガンを

98
00:03:13,470 --> 00:03:15,530
見逃しすぎるのを避けたいと仮定する。

99
00:03:15,960 --> 00:03:17,480
つまりfalse negative（偽陰性）を避けたいとする。

100
00:03:18,600 --> 00:03:19,820
具体的には、もし患者が実際に

101
00:03:20,350 --> 00:03:22,280
ガンの時に、もし我らがそうした人たちに

102
00:03:22,520 --> 00:03:23,700
あなたたちはガンだ、と言い損なったとすると、

103
00:03:23,860 --> 00:03:25,710
それは極めてまずい事態となりうる。

104
00:03:25,880 --> 00:03:27,460
何故ならもし我らが

105
00:03:27,760 --> 00:03:28,870
患者に、あなたはガンじゃ無い、と

106
00:03:29,240 --> 00:03:31,460
告げたとすると、

107
00:03:31,530 --> 00:03:32,870
彼らはさらなる治療を受けには行かないだろう。

108
00:03:32,980 --> 00:03:33,890
もし彼らが結局ガンだと

109
00:03:34,050 --> 00:03:35,380
判明して、しかも彼らに

110
00:03:35,520 --> 00:03:36,410
ガンだと告げ損なったとすると、

111
00:03:36,660 --> 00:03:39,060
彼らは全く治療を受けないだろう。

112
00:03:39,430 --> 00:03:40,520
つまり、それは極めてまずい

113
00:03:40,640 --> 00:03:41,820
結果と思われる。

114
00:03:42,080 --> 00:03:43,050
何故なら彼は死んでしまうだろうから、

115
00:03:43,140 --> 00:03:44,560
我らが彼らにガンでは無いと言ってしまったせいで、

116
00:03:44,670 --> 00:03:46,780
彼らは治療を受け損ない、だが実際にガンだと

117
00:03:48,230 --> 00:03:48,790
のちに判明してしまったのだから。

118
00:03:49,260 --> 00:03:50,260
疑わしい時には、

119
00:03:50,360 --> 00:03:52,430
我らはy=1と予測したい。

120
00:03:52,720 --> 00:03:54,260
つまり疑わしければ、

121
00:03:54,480 --> 00:03:55,510
彼らはガンだ、と予想したい、

122
00:03:55,770 --> 00:03:56,820
そうする事で少なくとも

123
00:03:57,110 --> 00:03:58,150
さらなる調査がなされるように。

124
00:03:59,400 --> 00:04:00,720
そして最終的にガンだと判明したら

125
00:04:01,180 --> 00:04:02,750
治療を受けさせる事が可能となるから。

126
00:04:04,870 --> 00:04:06,300
この場合には、閾値を

127
00:04:06,750 --> 00:04:08,920
より高い確率に設定するのでは無く、

128
00:04:09,100 --> 00:04:11,370
むしろこの値を

129
00:04:12,270 --> 00:04:13,310
より低い値に

130
00:04:13,540 --> 00:04:14,710
設定する事になる。そうだなぁ、例えば

131
00:04:15,060 --> 00:04:17,390
0.3とかそんな感じの。

132
00:04:18,760 --> 00:04:19,780
そうする事で、我らはこう言ってる訳だ：

133
00:04:20,070 --> 00:04:21,380
30%以上の確率で

134
00:04:21,480 --> 00:04:22,190
ガンだと思う時には、

135
00:04:22,220 --> 00:04:24,660
念のため

136
00:04:24,890 --> 00:04:26,270
より保守的になって、

137
00:04:26,510 --> 00:04:27,330
ガンかもしれない、と彼らに伝えた方がいい、と。

138
00:04:27,850 --> 00:04:29,610
そうする事で、もし必要なら彼らが処置を受けられるように。

139
00:04:31,110 --> 00:04:32,630
そしてこの場合、

140
00:04:32,790 --> 00:04:34,200
我らが得る事になるのは、

141
00:04:35,120 --> 00:04:38,260
より高いRecallの分類器だ。

142
00:04:39,550 --> 00:04:41,440
何故なら我らは

143
00:04:41,580 --> 00:04:43,330
実際にガンを持っている患者達全体の

144
00:04:43,580 --> 00:04:44,760
より高い割合を正しくフラグづけ

145
00:04:44,800 --> 00:04:45,920
する事になるから。

146
00:04:46,130 --> 00:04:47,570
しかし我らは、

147
00:04:47,740 --> 00:04:51,040
より低い Precisionとなる。

148
00:04:51,670 --> 00:04:53,490
何故なら我らがガンだと言った患者のより高い割合が

149
00:04:53,600 --> 00:04:54,700
彼らのうちより多くの割合の人が

150
00:04:54,820 --> 00:04:57,530
実はガンで無かったと判明するだろうから。

151
00:05:00,470 --> 00:05:01,320
ところで、ちょっと脇道にそれて、

152
00:05:01,400 --> 00:05:02,640
ここまでの話を

153
00:05:02,920 --> 00:05:04,900
他の生徒達にした所、

154
00:05:05,160 --> 00:05:07,760
とても驚かれた。

155
00:05:08,390 --> 00:05:09,720
生徒のうちの幾人かは

156
00:05:09,850 --> 00:05:11,960
どうしてこの話をどちら側でも出来るのか？と言った。

157
00:05:12,550 --> 00:05:14,220
何故我らは高いPrecisionまたは高いRecallを

158
00:05:14,450 --> 00:05:15,490
求める事があるのだろう？

159
00:05:16,130 --> 00:05:18,570
そしてこの話はどちらの側でも、実際にありえそうに見える。

160
00:05:19,340 --> 00:05:20,550
だが、アルゴリズムの詳細は

161
00:05:20,670 --> 00:05:22,720
正しいと思うし、

162
00:05:22,990 --> 00:05:24,360
より一般的な原理として、

163
00:05:24,780 --> 00:05:26,150
あなたがどちらを望むかに応じて、

164
00:05:26,330 --> 00:05:28,010
高いPrecisionで低いRecallを望むか、

165
00:05:28,540 --> 00:05:30,340
はたまた高いRecallで低いPrecisionを望むかに応じて、

166
00:05:30,450 --> 00:05:32,100
あなたはh(x)がある閾値より大きい時に

167
00:05:32,540 --> 00:05:35,040
y=1と予測する、という風にする事が出来る。

168
00:05:36,590 --> 00:05:39,240
そしてそうする事で、一般に、

169
00:05:39,880 --> 00:05:41,330
多くの分類器において、

170
00:05:41,540 --> 00:05:44,200
PrecisionとRecallの間のトレードオフをとる事が出来る。

171
00:05:45,360 --> 00:05:46,540
そしてこの閾値の値を

172
00:05:47,050 --> 00:05:48,700
ここに書いたこの値を、

173
00:05:49,030 --> 00:05:49,850
変更していく事で、

174
00:05:49,910 --> 00:05:51,470
あなたは実際に

175
00:05:51,790 --> 00:05:53,850
PrecisionとRecallのトレードオフを

176
00:05:54,030 --> 00:05:56,060
グラフにする事が出来る。

177
00:05:56,200 --> 00:05:58,010
ここで、この点、

178
00:05:58,410 --> 00:06:00,020
この値は、とても高い閾値の値に

179
00:06:01,360 --> 00:06:02,620
対応している、

180
00:06:02,770 --> 00:06:04,490
例えば閾値が0.99以上とかそういうの。

181
00:06:05,420 --> 00:06:06,790
つまりそれの意味する事は、

182
00:06:07,090 --> 00:06:08,270
99%以上の確信がある時しか

183
00:06:08,480 --> 00:06:09,640
y=1と予測しない、

184
00:06:10,290 --> 00:06:11,700
最低でも99%の

185
00:06:11,950 --> 00:06:13,460
確率の場合だ。

186
00:06:13,760 --> 00:06:15,390
つまりとても高いPrecisionで、相対的に低いRecallとなる。

187
00:06:15,960 --> 00:06:17,550
一方、この下の、ここの点、

188
00:06:17,820 --> 00:06:20,380
これは閾値の値が

189
00:06:20,490 --> 00:06:22,240
ずっと小さい値、例えば0.01とかに

190
00:06:22,450 --> 00:06:24,940
対応した点となる。

191
00:06:25,520 --> 00:06:26,810
とても疑わしい時でも、y=1と言っておく。

192
00:06:27,120 --> 00:06:28,380
そうしておけば、

193
00:06:28,520 --> 00:06:29,570
結果としてより低いPrecisionで

194
00:06:29,760 --> 00:06:31,730
より高いRecallの分類器が得られる。

195
00:06:33,350 --> 00:06:34,970
そしてこの閾値を変更していくにつれて、

196
00:06:35,430 --> 00:06:36,550
もしお望みなら、あなたは実際に

197
00:06:37,000 --> 00:06:38,280
分類器で、PrecisionとRecallの様々な値を得る事で、

198
00:06:38,930 --> 00:06:41,420
このカーブを全てトレースする事が出来る。

199
00:06:43,050 --> 00:06:43,810
ところで、Precision-Recall曲線は、

200
00:06:44,230 --> 00:06:46,860
様々な形の曲線になりうる。

201
00:06:47,260 --> 00:06:49,140
こんな形になる時もあるし、

202
00:06:50,550 --> 00:06:51,260
こんな形になる時もある。

203
00:06:52,330 --> 00:06:53,210
分類器の詳細に応じて

204
00:06:53,610 --> 00:06:54,820
Precision-Recall曲線は

205
00:06:55,020 --> 00:06:56,850
様々な形となりうる。

206
00:06:57,990 --> 00:06:59,620
これはもう一つ、

207
00:06:59,900 --> 00:07:01,680
興味深い問を想起する：

208
00:07:01,870 --> 00:07:03,130
この閾値を、

209
00:07:03,510 --> 00:07:06,100
自動的に選ぶ方法はあるだろうか？

210
00:07:06,810 --> 00:07:07,890
またはより一般的に、

211
00:07:08,500 --> 00:07:10,060
幾つかの異なるアルゴリズムや、

212
00:07:10,150 --> 00:07:12,290
幾つかのアルゴリズムに対する異なるアイデアがあった時に、

213
00:07:12,490 --> 00:07:15,340
どうやって異なるPrecision-Recallの値同士を比較したらいいだろうか？

214
00:07:16,400 --> 00:07:16,400
具体的には、

215
00:07:17,170 --> 00:07:18,250
三つの異なるアルゴリズムがあると仮定しよう、

216
00:07:18,590 --> 00:07:20,050
これらは本当に別々の

217
00:07:20,120 --> 00:07:22,060
学習アルゴリズムでも良いし、

218
00:07:22,250 --> 00:07:25,010
同一のアルゴリズムで別々の閾値、というだけでも良い。

219
00:07:26,190 --> 00:07:28,560
どうやって、これらのアルゴリズムの中から、最良の物を決めたらいいだろうか？

220
00:07:29,770 --> 00:07:30,460
以前に話した事の中に、

221
00:07:30,680 --> 00:07:31,630
単一実数値による評価指標の

222
00:07:32,520 --> 00:07:34,590
重要さ、というのがあった。

223
00:07:35,880 --> 00:07:36,890
それは、分類器が

224
00:07:36,970 --> 00:07:38,050
どれだけうまく機能しているかを

225
00:07:38,370 --> 00:07:40,130
直接教えてくれる一つの数値を持つ、というアイデアだ。

226
00:07:41,270 --> 00:07:42,260
だがPrecisionとRecallの指標にスイッチした時に、

227
00:07:42,690 --> 00:07:44,330
我らは実は、それを失っている。

228
00:07:44,580 --> 00:07:46,090
いまや我らは二つの実数値を持つのだ。

229
00:07:47,190 --> 00:07:48,600
つまり、我らはしばしば

230
00:07:48,770 --> 00:07:50,580
例えば二つのアルゴリズム、

231
00:07:50,750 --> 00:07:52,770
アルゴリズム1とアルゴリズムを比較したい、という

232
00:07:52,970 --> 00:07:54,350
状況に直面する。

233
00:07:54,420 --> 00:07:55,420
すると結局我らは自分自身に、

234
00:07:55,450 --> 00:07:56,550
Precisionが0.5でRecallが0.4というのは、

235
00:07:56,700 --> 00:07:57,580
うーん、例えば

236
00:07:57,830 --> 00:07:58,830
Precisionが0.7でRecallが0.1より

237
00:07:58,960 --> 00:08:00,120
良いのだろうか？悪いのだろうか？と

238
00:08:00,300 --> 00:08:01,890
問いかけるハメになる。

239
00:08:02,150 --> 00:08:03,020
もしあなたが新しいアルゴリズムを

240
00:08:03,350 --> 00:08:04,730
試す都度、毎回

241
00:08:04,890 --> 00:08:06,070
ぼーっと座って、

242
00:08:06,530 --> 00:08:07,710
うーん、0.5がいいか0.4がいいか、

243
00:08:07,960 --> 00:08:09,170
0.7や0.1よりは良いかもしれない、とか、

244
00:08:09,330 --> 00:08:11,120
どうかな、分からん ー 私も分からん ー
とか考えなくてはならないとすると、

245
00:08:11,590 --> 00:08:13,740
毎回ぼーっと座ってこれらの決断をしなくてはならないとすると、

246
00:08:14,440 --> 00:08:15,830
それはあなたの意思決定プロセスを

247
00:08:16,030 --> 00:08:18,710
とてものろくしてしまう。

248
00:08:19,120 --> 00:08:21,560
どの変更があなたのアルゴリズムにとって良いかに関する意思決定の。

249
00:08:23,070 --> 00:08:24,810
それとは対照的に、もし我らが

250
00:08:24,880 --> 00:08:26,410
単一実数値の評価指標を持っていたら、

251
00:08:27,220 --> 00:08:28,240
アルゴリズム1とアルゴリズム2のどちらが良いかを

252
00:08:28,590 --> 00:08:31,140
簡単に教えてくれるような数字があれば、

253
00:08:31,710 --> 00:08:33,110
それはどのアルゴリズムで行ったらいいか、

254
00:08:33,370 --> 00:08:34,840
もっと素早く決断する事を助けてくれて、

255
00:08:34,950 --> 00:08:36,290
そしてアルゴリズムに対して

256
00:08:36,450 --> 00:08:37,520
考えられる様々な変更を

257
00:08:38,110 --> 00:08:39,700
もっと素早く評価する事も

258
00:08:39,830 --> 00:08:41,370
助けてくれる。

259
00:08:42,050 --> 00:08:43,080
では、どうやって我らは

260
00:08:43,480 --> 00:08:45,910
単一の実数値による評価指標を得られるだろうか？

261
00:08:47,480 --> 00:08:48,590
一つ自然に試そうと思える事として、

262
00:08:48,660 --> 00:08:49,910
PrecisionとRecallの平均を

263
00:08:50,150 --> 00:08:52,110
見てみる、というのが考えられるかもしれない。

264
00:08:52,330 --> 00:08:53,310
つまり、PとRをPrecisionとRecallを

265
00:08:53,570 --> 00:08:54,800
表す文字として、

266
00:08:55,010 --> 00:08:56,300
あなたが行う事は、単純に平均を計算してみる、という事。

267
00:08:56,520 --> 00:08:57,280
そしてどの分類器でこの平均値が

268
00:08:57,770 --> 00:08:59,300
最大になるかを見てみるという事。

269
00:09:00,840 --> 00:09:01,990
だがこれは、そんなに良いソリューションじゃない事が

270
00:09:02,040 --> 00:09:04,990
判明する。何故なら、

271
00:09:05,350 --> 00:09:06,480
前に見た例と同様に、

272
00:09:07,860 --> 00:09:08,970
もしどんな時でも

273
00:09:09,070 --> 00:09:10,260
y=1と予測する分類器が

274
00:09:11,310 --> 00:09:13,830
あるとすると、

275
00:09:13,960 --> 00:09:15,540
それでとても高いRecallが得られる。

276
00:09:16,290 --> 00:09:18,700
それは結局、とても低いPrecisionにもなる訳だが。

277
00:09:19,690 --> 00:09:21,230
逆にもし、どんな時でも

278
00:09:21,640 --> 00:09:24,060
y=0を予測する分類器があると、

279
00:09:25,340 --> 00:09:26,400
つまりy=1と予測する時は

280
00:09:26,490 --> 00:09:28,100
とても慎重に行う分類器の場合、

281
00:09:28,910 --> 00:09:30,820
これは前の段の記法で言う所の、

282
00:09:31,130 --> 00:09:34,190
とても高い閾値の状況に対応する。

283
00:09:34,490 --> 00:09:35,610
すると結局あなたは、

284
00:09:35,670 --> 00:09:37,650
とても高いPrecisionでとても低いRecallとする事が出来る。

285
00:09:39,280 --> 00:09:40,470
以上の二つの極端なケース、

286
00:09:40,790 --> 00:09:42,380
とても高い閾値と、

287
00:09:42,540 --> 00:09:44,050
とても低い閾値、

288
00:09:44,170 --> 00:09:45,610
どちらも、特に良い分類器、という事は無いだろう。

289
00:09:46,280 --> 00:09:47,560
その事は結局それらは

290
00:09:47,650 --> 00:09:48,650
とても低いPrecisionかとても低いRecallの

291
00:09:48,710 --> 00:09:49,830
どちらかとなる事を見れば

292
00:09:50,030 --> 00:09:52,710
悟る事が出来る。

293
00:09:54,140 --> 00:09:56,120
そしてもしあなたが単に(P+R)/2 で平均を取るだけだと、

294
00:09:57,140 --> 00:09:58,980
この例でそれを実際に行うと、

295
00:09:59,760 --> 00:10:01,410
平均はアルゴリズム3で最も高くなってしまう。

296
00:10:01,810 --> 00:10:02,800
この種のパフォーマンスは

297
00:10:02,910 --> 00:10:04,010
どんな時でもy=1と予測するだけで

298
00:10:04,510 --> 00:10:05,850
得られてしまう物だというのにも関わらずだ。

299
00:10:06,220 --> 00:10:08,580
そしてそんな分類器は良い分類器では無かろう、でしょ？

300
00:10:08,670 --> 00:10:09,680
いつでもy=1と予測する分類器は

301
00:10:09,780 --> 00:10:11,010
単にそんなに役に立つ分類器ではなかろう、

302
00:10:11,210 --> 00:10:13,950
いっつもy=1と画面に出力するだけなのだから。

303
00:10:15,000 --> 00:10:16,580
だからアルゴリズム1とアルゴリズム2は

304
00:10:17,040 --> 00:10:18,080
少なくともアルゴリズム３よりはマシだと

305
00:10:18,280 --> 00:10:19,620
思われるのだが、

306
00:10:20,500 --> 00:10:22,330
しかしこの例では、アルゴリズム3の方が

307
00:10:23,080 --> 00:10:24,840
PrecisionとRecallの平均の値は

308
00:10:24,920 --> 00:10:27,460
アルゴリズム1や2より大きくなってしまっている。

309
00:10:28,770 --> 00:10:29,780
つまり、我らは普通、

310
00:10:29,900 --> 00:10:31,410
PrecisionとRecallの平均というのは、

311
00:10:32,280 --> 00:10:35,000
学習アルゴリズムを評価する良い指標とは、みなさない。

312
00:10:38,200 --> 00:10:39,820
これとは対照的な、PrecisionとRecallを組み合わせる

313
00:10:40,030 --> 00:10:41,770
別の方法がある。

314
00:10:42,370 --> 00:10:44,940
それはFスコアと言われる物で、それはこんな式を使う。

315
00:10:46,420 --> 00:10:48,740
この例では、Fスコアはこうなる。

316
00:10:49,530 --> 00:10:50,440
そして我らはこのFスコアから、

317
00:10:50,900 --> 00:10:52,140
こんな風に言える：

318
00:10:52,270 --> 00:10:53,660
一番Fスコアが高いのは

319
00:10:53,820 --> 00:10:55,290
アルゴリズム1。

320
00:10:55,620 --> 00:10:56,910
二番目に高いのがアルゴリズム2。

321
00:10:57,180 --> 00:10:58,560
アルゴリズム3が最低。

322
00:10:59,040 --> 00:10:59,920
つまり、Fスコアで判断すれば、

323
00:11:00,190 --> 00:11:02,700
我らは他のアルゴリズムよりもアルゴリズム1を優先して選ぶ事になる。

324
00:11:04,950 --> 00:11:06,120
Fスコアは、

325
00:11:06,310 --> 00:11:07,470
F1スコアとも言われていて、

326
00:11:07,670 --> 00:11:09,110
普通はこのようにF1スコアと

327
00:11:09,340 --> 00:11:11,620
書くが、しかし単にFスコアと呼ぶ人も居る、

328
00:11:12,800 --> 00:11:14,750
どちらの用語も使われているが、

329
00:11:15,080 --> 00:11:16,130
これはPrecisionとRecallの

330
00:11:16,290 --> 00:11:17,660
平均のような物を取る訳だが、

331
00:11:18,080 --> 00:11:19,220
しかしPrecisionとRecallの

332
00:11:19,580 --> 00:11:20,860
低い方の値に、

333
00:11:21,060 --> 00:11:23,460
ー それがどちらであれ ー より大きな重みを与える。

334
00:11:23,950 --> 00:11:25,220
つまり、分子を見ると、

335
00:11:25,360 --> 00:11:27,090
FスコアはPrecisionとRecallの積を

336
00:11:27,250 --> 00:11:29,910
持っている。

337
00:11:30,460 --> 00:11:31,900
つまり、Precisionがイコール0か

338
00:11:32,050 --> 00:11:33,070
Recallがイコール0なら、

339
00:11:33,180 --> 00:11:34,310
Fスコアもイコール0

340
00:11:34,600 --> 00:11:35,590
となる。

341
00:11:35,690 --> 00:11:38,290
つまり、ある意味これは、PrecisionとRecallを結合した物と言える。

342
00:11:38,850 --> 00:11:40,160
しかし、Fスコアが大きくなる為には、

343
00:11:40,300 --> 00:11:41,600
PrecisionとRecallの両方が

344
00:11:42,100 --> 00:11:43,480
かなり大きくならないといけない。

345
00:11:44,490 --> 00:11:45,770
PrecisionとRecallを組み合わせるには、

346
00:11:45,950 --> 00:11:47,950
これ以外にももっとたくさんの可能な式が

347
00:11:48,060 --> 00:11:49,450
あり得るという事は言っておくべきだろう。

348
00:11:50,040 --> 00:11:51,400
このFスコアは単に、

349
00:11:51,730 --> 00:11:53,470
もっとたくさんの可能性の中の

350
00:11:53,640 --> 00:11:54,800
たった一つの場合に過ぎない。

351
00:11:54,880 --> 00:11:57,200
だが歴史的に、または慣例的に、

352
00:11:57,270 --> 00:11:58,310
これが機械学習の人々が

353
00:11:58,460 --> 00:12:00,110
使っている指標だ。

354
00:12:01,550 --> 00:12:02,840
そしてFスコア、という用語には、

355
00:12:02,960 --> 00:12:04,160
何の意味も無い。

356
00:12:04,390 --> 00:12:05,460
だからなんでこれがFスコアとかF1スコアと呼ばれるか、とか

357
00:12:05,690 --> 00:12:07,680
気にしないで欲しい。

358
00:12:08,510 --> 00:12:10,900
しかしこれは通常、

359
00:12:11,370 --> 00:12:12,230
望ましい振る舞いをする。

360
00:12:12,600 --> 00:12:14,070
何故ならPrecisionが0か、

361
00:12:14,370 --> 00:12:15,410
Recallが0なら、

362
00:12:15,470 --> 00:12:17,470
これはとても低いFスコアを返すからだ。

363
00:12:17,610 --> 00:12:18,730
つまり、高いFスコアを得るには、

364
00:12:18,770 --> 00:12:20,030
いつも1とみなす、

365
00:12:20,280 --> 00:12:21,790
という手は使えない。

366
00:12:22,230 --> 00:12:24,630
具体的には、もしPが

367
00:12:25,010 --> 00:12:26,300
イコール0か、

368
00:12:26,450 --> 00:12:28,440
Rがイコール0なら、

369
00:12:28,650 --> 00:12:31,540
Ｆスコアは0となる。

370
00:12:33,430 --> 00:12:34,630
一方で最高のFスコアは、

371
00:12:34,820 --> 00:12:36,120
Precisionがイコール1で

372
00:12:36,550 --> 00:12:38,520
Recallもイコール1の時だから、

373
00:12:38,940 --> 00:12:40,380
その時はFスコアは

374
00:12:40,580 --> 00:12:43,450
1掛ける1を2で割った値に

375
00:12:43,680 --> 00:12:44,780
2を掛けた物に

376
00:12:45,100 --> 00:12:46,650
等しくなるのだから、

377
00:12:46,800 --> 00:12:47,590
Fスコアは

378
00:12:47,900 --> 00:12:48,610
イコール1となる。

379
00:12:48,680 --> 00:12:50,300
もし完璧なPrecisionとRecallを持つなら。

380
00:12:51,280 --> 00:12:53,230
そして0と1の間の値は、

381
00:12:53,520 --> 00:12:54,980
これは普通、異なる分類器同士の間の

382
00:12:55,210 --> 00:12:57,240
合理的な順位の序列を提供してくれる。

383
00:13:00,000 --> 00:13:01,070
このビデオでは、

384
00:13:01,370 --> 00:13:03,240
PrecisionとRecallの間の

385
00:13:03,760 --> 00:13:05,290
トレードオフについて話してきた、

386
00:13:06,140 --> 00:13:07,410
そしてy=1と予測するかy=0と予測するかの

387
00:13:07,540 --> 00:13:09,110
閾値を変化させる事で

388
00:13:09,250 --> 00:13:10,340
そのトレードオフを選択する方法についても

389
00:13:10,540 --> 00:13:11,980
話してきた。

390
00:13:12,180 --> 00:13:13,990
この閾値は

391
00:13:14,070 --> 00:13:15,180
我らがy=1と予測する為に

392
00:13:15,500 --> 00:13:16,970
少なくともどれだけの確信が必要か、

393
00:13:17,200 --> 00:13:19,340
70%以上の確信が必要、とするか、90%以上の確信が必要とするか、

394
00:13:19,650 --> 00:13:21,150
それ以外のどんな値でも、とにかくそれ以上必要とする、という値を教える。

395
00:13:21,260 --> 00:13:22,610
そして閾値を変更する事で、

396
00:13:22,950 --> 00:13:23,930
PrecisionとRecallの間のトレードオフを

397
00:13:24,300 --> 00:13:25,960
コントロールする事が出来る。

398
00:13:26,430 --> 00:13:27,150
最後に、Fスコアについて話したが、

399
00:13:27,420 --> 00:13:28,850
これはPrecisionとRecallを用いて

400
00:13:29,640 --> 00:13:30,730
単一の実数値による

401
00:13:31,270 --> 00:13:32,480
評価指標を与える物だ。

402
00:13:33,320 --> 00:13:34,460
そしてもちろん、もしあなたのゴールが

403
00:13:34,740 --> 00:13:36,590
y=1かy=0かを決める閾値を

404
00:13:36,880 --> 00:13:38,390
自動的に設定する、

405
00:13:38,590 --> 00:13:39,320
という物なら、

406
00:13:39,520 --> 00:13:41,180
それを行う

407
00:13:41,420 --> 00:13:42,410
一つのとても合理的な方法としては、

408
00:13:42,740 --> 00:13:44,140
様々な範囲の閾値の値を試す、

409
00:13:44,640 --> 00:13:46,350
という手が考えられて、

410
00:13:46,930 --> 00:13:47,740
つまり、ある範囲の閾値を試してみて、

411
00:13:48,190 --> 00:13:50,430
これらの様々な閾値を

412
00:13:50,620 --> 00:13:51,610
例えばクロスバリデーションセットで

413
00:13:51,790 --> 00:13:53,650
評価してみて、

414
00:13:53,840 --> 00:13:55,760
クロスバリデーションセットに対して

415
00:13:56,580 --> 00:13:57,910
一番高いFスコアを与えた

416
00:13:58,060 --> 00:13:59,760
閾値を選ぶ、という方法が考えられる。

417
00:14:00,130 --> 00:14:01,220
これは分類器の閾値を自動的に選ぶ、

418
00:14:01,720 --> 00:14:04,620
極めて合理的な方法と言えるだろう。