1
00:00:01,180 --> 00:00:02,410
続くいくつかのビデオで

2
00:00:02,560 --> 00:00:04,780
機械学習システムのデザインについて話す。

3
00:00:05,780 --> 00:00:06,950
これらのビデオは

4
00:00:07,190 --> 00:00:08,370
複雑な機械学習のシステムを

5
00:00:08,540 --> 00:00:10,140
あなたがデザインする時に

6
00:00:10,220 --> 00:00:11,450
直面するであろう問題に触れる、

7
00:00:12,470 --> 00:00:13,310
そしてどうやって複雑な

8
00:00:13,490 --> 00:00:14,680
機械学習のシステムを組み合わせるかについての

9
00:00:14,780 --> 00:00:17,580
戦略を提供する。

10
00:00:18,970 --> 00:00:20,190
この後に続く一連のビデオが

11
00:00:20,340 --> 00:00:21,390
いまいちまとまりが無く感じられたとしたら、

12
00:00:21,530 --> 00:00:23,140
それはこれらのビデオが

13
00:00:23,360 --> 00:00:24,340
複雑な機械学習のシステムをデザインする時に

14
00:00:24,450 --> 00:00:25,800
遭遇するであろう様々な問題に

15
00:00:26,150 --> 00:00:28,220
触れていくからだ。

16
00:00:29,600 --> 00:00:31,080
そしてこの後の一連のビデオはまた、

17
00:00:31,160 --> 00:00:32,270
いくらか、数学的で無い、と

18
00:00:32,560 --> 00:00:34,740
感じるかもしれないが、

19
00:00:35,050 --> 00:00:36,180
それでもこれらの題材はとても役に立つ、と

20
00:00:36,500 --> 00:00:38,280
分かる日が来るだろうと思う。

21
00:00:38,400 --> 00:00:39,650
そしてあなたが大きな機械学習のシステムを構築する時には

22
00:00:40,120 --> 00:00:41,610
巨大な時間の節約になってくれると思う。

23
00:00:42,890 --> 00:00:44,140
具体的に言うと、

24
00:00:44,260 --> 00:00:45,710
次に何をするのに

25
00:00:46,330 --> 00:00:47,500
時間を費やすべきかの

26
00:00:47,790 --> 00:00:48,680
プライオリティ付けする、という問題について議論したい。

27
00:00:48,980 --> 00:00:50,330
スパム分類の例から

28
00:00:50,740 --> 00:00:52,220
始めよう。

29
00:00:55,580 --> 00:00:57,280
スパム分類器を構築したいとする。

30
00:00:58,540 --> 00:00:59,740
ここに、明らかにスパムのメールと

31
00:01:00,180 --> 00:01:02,340
明らかにスパムで無いメールが幾つかある。

32
00:01:03,400 --> 00:01:05,350
左側のは、物を売ろうとするメールだ。

33
00:01:06,270 --> 00:01:07,640
スパマーはどう単語をミススペルしているか

34
00:01:08,470 --> 00:01:10,080
気づくだろう。

35
00:01:10,540 --> 00:01:13,470
たとえばMedicineの中には数字の1が混じってたり、M0rgagesとかだったり。

36
00:01:14,850 --> 00:01:16,350
そして右側は

37
00:01:16,560 --> 00:01:17,760
明らかにスパムで無い例。

38
00:01:18,480 --> 00:01:20,680
これは実際の、私の弟からのメールだ。

39
00:01:21,710 --> 00:01:22,940
我らは何通かの

40
00:01:23,350 --> 00:01:24,560
スパムのメールと

41
00:01:24,860 --> 00:01:26,130
スパムでないメールからなる

42
00:01:26,240 --> 00:01:28,200
トレーニングセットがあり、

43
00:01:28,240 --> 00:01:30,780
それをラベルでy=1か0で示してあるとする。

44
00:01:31,290 --> 00:01:32,600
スパムと非スパムを

45
00:01:33,110 --> 00:01:34,900
区別する分類器を

46
00:01:35,230 --> 00:01:37,130
教師あり学習を用いてどうやって構築出来るだろうか？

47
00:01:38,130 --> 00:01:39,670
教師あり学習を適用する為には

48
00:01:40,340 --> 00:01:41,430
最初に決めなくてはならない事は

49
00:01:41,660 --> 00:01:43,190
xをどう表現するか、

50
00:01:43,270 --> 00:01:44,860
これはe-mailのフィーチャーだが、

51
00:01:45,260 --> 00:01:46,590
それを決める事だ。

52
00:01:47,430 --> 00:01:48,900
フィーチャーxとラベルyが

53
00:01:49,160 --> 00:01:50,290
トレーニングセットとして

54
00:01:50,410 --> 00:01:51,510
与えられたとすると、

55
00:01:51,720 --> 00:01:54,660
我らは分類器を、例えばロジスティック回帰を使うなどして、訓練する事が出来る。

56
00:01:56,150 --> 00:01:57,120
これは、我らのe-mailについてのフィーチャーを選ぶ

57
00:01:57,550 --> 00:01:59,630
一つの方法だ。

58
00:02:00,850 --> 00:02:01,930
例えば我らは

59
00:02:02,280 --> 00:02:03,630
e-mailがスパムか非スパムかを

60
00:02:03,870 --> 00:02:05,170
判断出来ると思われる、

61
00:02:05,440 --> 00:02:06,850
100個の特徴的な単語を

62
00:02:07,190 --> 00:02:09,230
選び出せたとする。

63
00:02:09,370 --> 00:02:10,410
例えば、e-mailの一部分に

64
00:02:10,580 --> 00:02:11,640
dealという単語が含まれていたら、

65
00:02:12,340 --> 00:02:13,350
きっとこれはスパムっぽい。

66
00:02:13,460 --> 00:02:14,410
buyという単語が

67
00:02:14,850 --> 00:02:16,280
含まれていたら、

68
00:02:16,450 --> 00:02:17,670
これもスパムの可能性が増す。

69
00:02:17,990 --> 00:02:19,340
discountという単語も

70
00:02:19,580 --> 00:02:20,900
よりスパムっぽい。

71
00:02:21,080 --> 00:02:22,340
他方でe-mailの一部分が、私の名前、

72
00:02:23,920 --> 00:02:25,350
Andrewを含んでいたら、

73
00:02:25,630 --> 00:02:26,870
それは送り主が実際に

74
00:02:26,910 --> 00:02:27,740
私が誰かを知っているという事を意味するので、

75
00:02:27,900 --> 00:02:30,090
スパムの可能性は減る。

76
00:02:31,470 --> 00:02:32,580
そしてある理由により、

77
00:02:32,840 --> 00:02:33,990
私はnowという単語が入っている物も

78
00:02:34,260 --> 00:02:35,680
非スパムを示すと考える。

79
00:02:35,980 --> 00:02:37,150
何故なら私はたくさんの

80
00:02:37,540 --> 00:02:39,370
緊急のe-mailを受け取るからだ。などなど。

81
00:02:39,520 --> 00:02:41,220
こんな風にして、例えば100個の単語を選ぶ。

82
00:02:42,380 --> 00:02:43,510
e-mailの一部分を与えられた時に、

83
00:02:43,970 --> 00:02:44,930
このe-mailの一部分を

84
00:02:45,180 --> 00:02:46,220
以下のように

85
00:02:46,640 --> 00:02:47,970
フィーチャーベクトルへと

86
00:02:48,290 --> 00:02:49,930
エンコードする。

87
00:02:50,810 --> 00:02:51,450
100個の単語の

88
00:02:51,720 --> 00:02:54,560
リストに対し、

89
00:02:54,960 --> 00:02:56,620
それをアルファベット順に並べる。

90
00:02:57,210 --> 00:02:57,980
単語のリストはソートされてないかもしれないから。

91
00:02:58,450 --> 00:02:59,910
そしてこれが

92
00:03:00,110 --> 00:03:02,080
単語のリストだ。discountとか

93
00:03:02,710 --> 00:03:03,950
そのまま下まで行って

94
00:03:04,160 --> 00:03:05,430
nowとか、

95
00:03:06,080 --> 00:03:07,230
などなど。

96
00:03:07,350 --> 00:03:08,540
そして右に示したようなe-mailの一部分が与えられた時に、

97
00:03:08,610 --> 00:03:09,640
これらの単語が

98
00:03:09,770 --> 00:03:11,400
それぞれ

99
00:03:11,450 --> 00:03:12,560
e-mailに現れるかを

100
00:03:13,030 --> 00:03:14,560
チェックしていき、

101
00:03:14,810 --> 00:03:16,400
そしてフィーチャーベクトルxを

102
00:03:16,580 --> 00:03:19,130
以下のように定義する：

103
00:03:19,260 --> 00:03:20,260
この右側のメールの一部分において、

104
00:03:20,340 --> 00:03:21,520
私の名前は現れてない、

105
00:03:21,930 --> 00:03:23,210
だからそこに0を入れる。

106
00:03:24,070 --> 00:03:25,410
buyは現れている。

107
00:03:26,790 --> 00:03:27,690
だから1を入れる。

108
00:03:28,090 --> 00:03:29,450
そうやって1か0を入れていく。

109
00:03:30,170 --> 00:03:31,550
Buyが二回現れても

110
00:03:31,730 --> 00:03:33,950
1を入れる。

111
00:03:34,600 --> 00:03:36,490
単語が何回出てくるか、はカウントしない。

112
00:03:37,590 --> 00:03:40,280
単語dealは現れる、だから1を入れる。

113
00:03:40,900 --> 00:03:42,450
discountは現れない。

114
00:03:42,620 --> 00:03:43,680
少なくともこのメールの範囲には。

115
00:03:44,520 --> 00:03:46,140
という風に続けていく。

116
00:03:46,810 --> 00:03:48,740
単語nowは現れる、などなど。

117
00:03:48,870 --> 00:03:50,250
つまり、私はフィーチャーベクトルに

118
00:03:50,560 --> 00:03:52,560
0か1を、特定の単語が

119
00:03:52,720 --> 00:03:54,230
現れるかどうかに応じて入れていく。

120
00:03:55,060 --> 00:03:56,740
そしてこの例では、

121
00:03:56,870 --> 00:03:58,850
私のフィーチャーベクトルは

122
00:03:59,110 --> 00:04:00,920
100次元の次元を持つ。

123
00:04:02,310 --> 00:04:03,960
私が100を選んだからだが。

124
00:04:04,310 --> 00:04:05,460
もし100語の単語を

125
00:04:05,650 --> 00:04:06,850
この表現に

126
00:04:07,010 --> 00:04:08,980
使う事としたとして、

127
00:04:09,240 --> 00:04:13,060
そして各フィーチャーxjは

128
00:04:13,300 --> 00:04:15,150
基本的には、

129
00:04:16,360 --> 00:04:17,410
ある単語、それを単語jと呼ぼう、

130
00:04:17,490 --> 00:04:18,930
それがe-mailにあったら

131
00:04:19,420 --> 00:04:20,940
1をとり、

132
00:04:22,400 --> 00:04:23,910
それ以外ではxjは0となる。

133
00:04:25,700 --> 00:04:25,700
オーケー。

134
00:04:25,900 --> 00:04:27,440
こうしてe-mail片の

135
00:04:27,600 --> 00:04:30,220
フィーチャーによる表現が得られる。

136
00:04:30,920 --> 00:04:32,060
ところで、このプロセスを

137
00:04:32,200 --> 00:04:34,260
手動で100個の単語を選ぶ、と

138
00:04:34,920 --> 00:04:36,790
記述したが、

139
00:04:36,950 --> 00:04:38,510
実際にはもっとも一般的な方法は、

140
00:04:38,940 --> 00:04:40,140
トレーニングセットを取り、

141
00:04:40,400 --> 00:04:42,710
それを見ていって

142
00:04:42,800 --> 00:04:43,980
トレーニングセットの中に

143
00:04:44,050 --> 00:04:45,690
もっとも頻繁に現れるn個の単語を選び出す、

144
00:04:46,080 --> 00:04:47,290
ここでnは通常は

145
00:04:47,450 --> 00:04:49,310
1万から5万程度の値で、

146
00:04:49,550 --> 00:04:50,810
それらをフィーチャーとして使う。

147
00:04:51,630 --> 00:04:52,910
つまり、手動で100個の単語を選ぶ代わりに、

148
00:04:53,090 --> 00:04:54,220
トレーニング手本を

149
00:04:54,390 --> 00:04:56,030
見ていって、

150
00:04:56,130 --> 00:04:57,570
もっとも良く見かける単語の

151
00:04:57,930 --> 00:04:58,860
上位1万から5万語くらいを選び、

152
00:04:59,260 --> 00:05:00,680
それらから構成されるフィーチャーを

153
00:05:00,820 --> 00:05:01,550
スパム分類器に対して

154
00:05:01,640 --> 00:05:04,320
e-mailを表現するフィーチャーとして用いる。

155
00:05:05,450 --> 00:05:06,850
今、もしあなたがスパム分類器を

156
00:05:06,910 --> 00:05:09,020
構築しているとすると、

157
00:05:09,570 --> 00:05:11,260
直面するであろう一つの問いとして、

158
00:05:11,500 --> 00:05:12,580
スパム分類器として高い正確性と低いエラーを得る為に

159
00:05:13,230 --> 00:05:14,820
何に時間を使うのが、

160
00:05:14,980 --> 00:05:17,510
もっとも賢い自分の時間の使い方か？というのがある。

161
00:05:18,910 --> 00:05:21,350
自然に思い浮かぶ事としては、もっと多くのデータを集めるという事。

162
00:05:21,780 --> 00:05:21,780
でしょ？

163
00:05:22,030 --> 00:05:23,120
そして現実でも、

164
00:05:23,700 --> 00:05:24,670
より多くのデータがあれば、アルゴリズムはよりうまくやってくれるに違いない、と

165
00:05:24,740 --> 00:05:26,590
考える傾向にある。

166
00:05:27,560 --> 00:05:28,850
そして実際、e-mailのスパムの分野では、

167
00:05:29,100 --> 00:05:30,500
Honey Pot（ハチミツ壺）プロジェクト、と呼ばれる

168
00:05:31,310 --> 00:05:32,840
とても真剣なプロジェクトが存在していて、

169
00:05:33,180 --> 00:05:35,310
それは偽のe-mailアドレスを作って

170
00:05:35,710 --> 00:05:37,090
その偽のアドレスを

171
00:05:37,200 --> 00:05:38,910
スパマーにつかませて、

172
00:05:39,140 --> 00:05:40,710
それを使って

173
00:05:40,910 --> 00:05:41,870
大量のスパムのe-mailを集める、

174
00:05:42,140 --> 00:05:43,440
という物だ。つまり、

175
00:05:44,120 --> 00:05:46,120
学習アルゴリズムを訓練するスパムのデータをたくさん集める、という事。

176
00:05:47,060 --> 00:05:48,760
だが我らは既に

177
00:05:49,150 --> 00:05:50,630
ここまでの何本かのビデオで、

178
00:05:50,650 --> 00:05:53,340
データをもっと集める、というのは役に立つ事も確かにあるが、いつもそうだという訳じゃない、というのを見てきた。

179
00:05:54,600 --> 00:05:55,810
そして多くの機械学習の問題において、

180
00:05:56,430 --> 00:05:57,280
パフォーマンスを改善する為に

181
00:05:57,620 --> 00:05:59,780
考えられる選択肢は他にもたくさんある。

182
00:06:00,970 --> 00:06:02,130
スパムに関しては、一つ考えられる手としては、

183
00:06:02,230 --> 00:06:03,420
e-mailについてもっと洗練された

184
00:06:03,960 --> 00:06:05,620
フィーチャーを開発する、というのが考えられる、

185
00:06:05,820 --> 00:06:08,070
例えばe-mailのルーティング情報に基づいたりとか。

186
00:06:09,850 --> 00:06:11,920
これはe-mailのヘッダに含まれている情報だ。

187
00:06:13,130 --> 00:06:14,820
スパマーがe-mailを送る時には、

188
00:06:15,250 --> 00:06:16,420
彼らはよく、どこから送ってるかを

189
00:06:16,690 --> 00:06:18,110
ごまかそうとする。

190
00:06:18,340 --> 00:06:20,260
だから偽物のe-mailヘッダを

191
00:06:20,470 --> 00:06:21,880
使ったりする。

192
00:06:22,900 --> 00:06:24,060
またはとても普通でない

193
00:06:24,410 --> 00:06:26,360
コンピューターサービス群を通して、

194
00:06:27,060 --> 00:06:29,880
とても普通で無いルートを通してスパムが届くようにする。

195
00:06:30,490 --> 00:06:33,690
そしてこれらの情報の幾らかはe-mailのヘッダに反映される。

196
00:06:35,000 --> 00:06:36,600
だからこんな風に考えられる。

197
00:06:38,070 --> 00:06:39,300
e-mailヘッダを見て、

198
00:06:39,410 --> 00:06:41,060
この種のe-mailのルーティング情報を

199
00:06:41,510 --> 00:06:42,760
うまくとらえるような、もっと洗練されたフィーチャーを

200
00:06:43,010 --> 00:06:45,770
開発して、それがスパムかどうかを判定する、という事を試みるという事を。

201
00:06:46,650 --> 00:06:47,890
他に考えられる事としては

202
00:06:48,380 --> 00:06:49,300
e-mailのメッセージのボディ、

203
00:06:49,640 --> 00:06:50,860
つまりはe-mailのテキストを見て、

204
00:06:51,100 --> 00:06:54,350
もっと洗練したフィーチャーを構築しようと試みる、というのがある。

205
00:06:55,320 --> 00:06:56,310
例えば、discountとdiscountsは

206
00:06:56,500 --> 00:06:57,560
同じ単語と

207
00:06:57,690 --> 00:06:59,340
みなした方がいいだろうか？

208
00:06:59,550 --> 00:07:01,810
とか、

209
00:07:02,240 --> 00:07:04,120
dealとdealerは同じ単語とみなすべきだろうか？など。

210
00:07:04,380 --> 00:07:05,610
この例では片方は大文字で

211
00:07:06,130 --> 00:07:08,020
片方は小文字だけれども。

212
00:07:08,740 --> 00:07:10,530
または句読点などの記号についてのもっと複雑なフィーチャーが良いかもしれない。何故ならスパムは

213
00:07:12,740 --> 00:07:14,110
びっくりマーク（！）をよりたくさん使う傾向にあるかもしれないから。

214
00:07:14,450 --> 00:07:14,730
知らないけどね。

215
00:07:15,580 --> 00:07:16,850
同じような考えとして、

216
00:07:17,170 --> 00:07:18,560
故意のミススペルを検出する為の

217
00:07:18,750 --> 00:07:20,380
もっと洗練されたアルゴリズムを

218
00:07:21,120 --> 00:07:22,700
開発したい、と思うかもしれない。

219
00:07:23,360 --> 00:07:24,700
m0rtgage, med1cine, w4tchesなど。

220
00:07:25,700 --> 00:07:26,890
何故ならスパマーは実際にこれをやってるから。

221
00:07:27,150 --> 00:07:28,400
何故ならwatchesに4が

222
00:07:29,420 --> 00:07:31,060
入っていると、

223
00:07:31,450 --> 00:07:32,720
今話した単純なテクニックでは

224
00:07:32,840 --> 00:07:34,760
スパム分類器は

225
00:07:35,090 --> 00:07:36,280
これを"watches"と

226
00:07:36,800 --> 00:07:38,170
同じ物だとはみなせないかもしれない。

227
00:07:38,230 --> 00:07:40,260
だからこれらのような

228
00:07:40,390 --> 00:07:41,430
わざとミススペルしたような物を

229
00:07:42,000 --> 00:07:43,930
スパムと判断するのは、難しいかもしれない。

230
00:07:44,830 --> 00:07:45,940
そしてだからこそスパマーはそれをするのだ。

231
00:07:48,230 --> 00:07:49,280
機械学習の問題にとりくんでいる時には、

232
00:07:49,630 --> 00:07:51,370
あなたはしょっちゅう

233
00:07:51,480 --> 00:07:54,690
これらのように試してみたい事のリストをブレインストーミングする事が出来る。

234
00:07:55,170 --> 00:07:56,560
ところで、実のところ私は

235
00:07:56,790 --> 00:07:58,480
スパムの問題に

236
00:07:58,900 --> 00:08:00,000
しばらく従事していた事がある。

237
00:08:00,650 --> 00:08:01,610
私はかなりの時間、それに費やした。

238
00:08:01,770 --> 00:08:03,040
そして私はスパムの問題を

239
00:08:03,360 --> 00:08:04,350
かなり理解しているのだけれども、

240
00:08:04,820 --> 00:08:05,820
それについてかなり知っているのだけれども、

241
00:08:06,470 --> 00:08:07,380
それでもあなたに

242
00:08:07,600 --> 00:08:09,160
この四つの選択肢のうち

243
00:08:09,290 --> 00:08:10,790
どれにあなたの時間を使うのが

244
00:08:10,980 --> 00:08:12,190
ベストな選択なのか、と言うのは、凄く難しい。

245
00:08:12,670 --> 00:08:14,180
そこで何が起こるかというと、

246
00:08:14,320 --> 00:08:15,790
率直に言って、

247
00:08:16,040 --> 00:08:17,240
リサーチグループはプロダクトを作ってるグループで

248
00:08:17,350 --> 00:08:20,330
凄くしょっちゅう起こってしまう事は、これらの選択肢からランダムに一つを選んで、それに固執してしまう、という事。

249
00:08:21,290 --> 00:08:22,870
そして時には、

250
00:08:23,250 --> 00:08:24,350
誰かがランダムに

251
00:08:24,580 --> 00:08:25,610
これらの選択肢のどれに固執し始めたかに応じて

252
00:08:25,740 --> 00:08:27,700
あなたがそれに時間を費やすのが

253
00:08:27,900 --> 00:08:30,400
実り多いかどうかが決まってしまうという事になる。

254
00:08:31,350 --> 00:08:32,670
ところで、実のところ、

255
00:08:32,800 --> 00:08:33,780
試すべき様々な選択肢を

256
00:08:34,150 --> 00:08:35,710
ブレインストーミングする所まで

257
00:08:35,900 --> 00:08:37,100
来ていたら、あなたはたぶん

258
00:08:37,250 --> 00:08:38,740
他人よりは前に進んでいる。

259
00:08:39,390 --> 00:08:41,190
残念な事に、多くの人が代わりにやる事は、

260
00:08:41,420 --> 00:08:42,160
試すべき選択肢を

261
00:08:42,230 --> 00:08:43,010
リストに書き出そうとはせず、

262
00:08:43,240 --> 00:08:44,510
その代わりに多くの人々が

263
00:08:44,810 --> 00:08:46,100
やってしまう事は、

264
00:08:46,210 --> 00:08:47,380
ある朝起きて、何らかの理由で、

265
00:08:47,580 --> 00:08:48,850
例えば妙な

266
00:08:49,110 --> 00:08:50,440
ガッツフィーリングで、

267
00:08:51,290 --> 00:08:52,670
「よし、巨大なハニーポットのプロジェクトを立ち上げて、

268
00:08:53,190 --> 00:08:54,570
もっと大量のデータを集めよう！」とか思い立ったりとか、

269
00:08:55,320 --> 00:08:56,860
とにかく何かしら変な理由で、

270
00:08:57,570 --> 00:08:58,540
ある朝起きてランダムに

271
00:08:59,050 --> 00:09:00,330
一つに決めてしまって、

272
00:09:00,540 --> 00:09:02,340
それに六ヶ月とか費やしてしまう。

273
00:09:03,520 --> 00:09:04,170
だが、きっと我らはもっとマシなやり方が出来る。

274
00:09:04,760 --> 00:09:06,130
具体的には、

275
00:09:06,270 --> 00:09:07,130
次のビデオで

276
00:09:07,310 --> 00:09:08,410
私が話すのは

277
00:09:08,680 --> 00:09:09,890
エラー分析という概念で、

278
00:09:11,160 --> 00:09:12,530
そしてもっとシステマティックな方法で

279
00:09:13,270 --> 00:09:15,150
さまざまな異なる選択肢から

280
00:09:15,360 --> 00:09:16,830
うまく行きそうな方法を

281
00:09:17,360 --> 00:09:18,640
選ぶ事を試みようと

282
00:09:18,960 --> 00:09:19,950
する時に使える方法で、

283
00:09:20,010 --> 00:09:21,730
つまりは実際に

284
00:09:21,860 --> 00:09:23,430
続く数週間、

285
00:09:23,640 --> 00:09:24,820
数日、または数ヶ月もの時間を

286
00:09:25,070 --> 00:09:26,070
あなたが費やすのに

287
00:09:26,200 --> 00:09:28,920
より良さそうな選択を行う方法だ。