Nos próximos vídeos eu gostaria de falar sobre design de sistemas de aprendizado de máquina. Esses vídeos se referem aos principais problemas que você pode enfrentar ao projetar um sistema complexo de aprendizado de máquina e tem o objetivo de ajudá-lo em como criar estratégias, ao juntar complexos sistemas de aprendizado de máquina. No caso desse próximo conjunto de vídeos parecer um pouco desconectado, é porque esses vídeos referirão a uma gama dos diferentes problemas que você pode encontrar ao projetar sistemas de aprendizado de máquina complexos. E mesmo que o próximo conjunto de vídeos possa parecer de alguma maneira menos matemático, eu acho que esse material pode ser muito útil e potenciais economizadores de tempo quando você estiver construindo grandes sistemas de aprendizado de máquina. Sendo assim, eu gostaria de começar com a questão de priorizar como gastar seu tempo no que tiver que trabalhar e eu começarei com um exemplo de classificação de spams. Digamos que você queira construir um classificador de spam. Aqui estão alguns exemplos de e-mails spam e não spam, onde o da esquerda tenta vender algumas coisas. E note como os spammers deliberadamente soletram errado as palavras, como em "Med1cina" com 1 aqui, e "Hip0tecas". E do lado direito um exemplo óbvio de email não spam, na verdade um email do meu irmão mais novo. Digamos que temos um conjunto de treino rotulado de uma quantidade de emails de spam e um outro tanto de emails de não spam indicados com rótulos "y" iguais a 1 ou 0. Como nós construimos um classificador usando aprendizado supervisionado para distinguir entre spam e não spam? Para aplicar o aprendizado supervisionado, a primeira decisão que precisamos fazer é como queremos representar "x", que são as característica do email. Dados os parâmetros "x" e os rótulos "y" no nosso conjunto de treinamento, nós podemos então treinar um classificador, por exemplo, usando regressão logística. Aqui está uma maneira de escolher um conjunto de caracteristicas para nossos emails. Podemos criar uma lista de uma centena de palavras que nós achamos que sejam indicativas de se o e-mail é spam ou não. Por exemplo, se uma parte do e-mail contém a palavra "deal" (acordo), talvez seja mais provável ser um spam. Se o email contém a palavra "buy" (comprar), é mais provável que seja spam. Uma palavra como "discount" (desconto) é mais provável que seja spam, enquanto que, se uma parte do e-mail contém meu nome, "Andrew", talvez isso signifique que a pessoa saiba quem eu sou, o que poderia significar uma chance menor de ser spam. E talvez, por alguma razão, eu acho que a palavra "now" (agora) pode ser indicativo de não spam porque eu recebo um monte de e-mails urgentes, e assim por diante. Assim, nós escolhemos uma centena de palavras mais ou menos. Dado uma parte do e-mail, nós podemos pegar essa parte do e-mail e codificá-la em um vetor de características como se segue. Eu vou pegar minha lista de centenas de palavras e ordená-las em ordem alfabética. Não há necessidade de ordenar mas, aqui está minha lista de palavras: "desconto" e vai descendo até "agora" e assim por diante. Dado uma parte do e-mail como aquela mostrada na direita, eu vou checar e ver se cada uma dessa palavras aparece no e-mail e, então, eu vou definir um vetor de características "x". Na parte do e-mail a direita, meu nome não aparece, então eu vou colocar um zero lá. A palavra "buy" (comprar) aparece, então eu vou colocar o 1 ali e continuo colocando 1 ou 0. Eu vou colocar 1, mesmo que a palavra "buy" ocorra duas vezes. Eu não vou contar quantas vezes a palavra aparece. A palavra "deal" (negócio) aparece, eu coloco 1 la. A palavra "discount" (desconto) não aparece, pelo menos não nesse pequeno e-mail, e assim por diante. A palavra "now" (agora) aparece, e assim por diante. Assim, eu coloco 1s e 0s nesse vetor de características, dependendo se uma palavra, em particular, aparece ou não. Nesse exemplo, meu vetor de características teria de mencionar uma centena, se eu tiver uma centena, se eu escolher uma centena de palavras para usar nessa representação e cada uma das características "Xj" será basicamente 1 se você tiver uma determinada palavra "j" que aparece no e-mail e "Xj" seria zero, em caso contrário. OK, então a primeira coisa que você quer fazer é contar Então isso me dá a representação das características de uma parte do email. Aliás, mesmo que eu tenha descrito esse processo pegando manualmente uma centena de palavras, na prática o que é mais comumente feito é olhar para um conjunto de trainamento e detectar nesse conjunto as n palavras de maior ocorrência, onde n está geralmente entre 10 mil e 50 mil, e usar essas palavras como suas características. Assim, ao invés de pegar manualmente uma centena de palavras, aqui você observa os exemplos de treinamento e seleciona as palavras que ocorrem com maior frequência, de 10 mil a 50 mil palavras e essas formam as características do que você vai usar para representar o seu e-mail na classificação de spam. Se você estiver construindo um classificador de spam, uma questão que você pode enfrentar é: "Qual é a melhor maneira de usar seu tempo com o objetivo de fazer seu classificador de spam ter uma alta precisão com baixo erro?" Uma tendência natural é coletar um monte de dados. OK? De fato, existe essa tendência de pensar que, quanto mais dados tivermos, melhor para o algoritmo. E, de fato, no domínio de e-mails spams, existem atualmente ótimos projetos, como o chamado "Projeto Honeypot", que cria falsos endereços de email e tenta colocar esses falsos endereços nas mãos de spammers e usar isso para tentar coletar toneladas de e-mails com spam e, desse modo, ter acesso a um monte de dados de spam para treinar os algoritmos de aprendizagem. Mas nós já vimos nos vídeos anteriores que ao pegar um monte de dados, normalmente vai ajudar mas nem sempre. Para a maioria dos problemas de aprendizado de máquina, há um monte de outras coisas que você poderia fazer para melhorar a performance. Para spams, uma coisa que você pode pensar é desenvolver recursos mais sofisticados do e-mail, talvez com base no roteamento de informações do e-mail, e isso seria a informação contida no cabeçalho do e-mail. Assim, quando os spammers enviam e-mails, frequentemente eles tentarão ocultar as origens do e-mail e, talvez usarão cabeçalhos com e-mails falsos ou enviarão e-mails através de um conjunto incomum de serviços de informática, através de rotas incomuns, a fim de entregar o spam para você. Algumas dessas informações serão refletidas no cabeçalho do e-mail e assim alguém pode se imaginar olhando para os cabeçalhos de e-mail e tentando desenvolver atributos mais sofisticados que capturem esse tipo de informação de roteamento no e-mail para identificar se algo é spam. Outra coisa que você pode fazer é olhar para o corpo da mensagem do email, que é o texto do e-mail, e tentar desenvolver atributos mais sofisticados. Por exemplo, poderíamos tratar a palavra "discount" (desconto) e a palavra "discounts" (descontos) como sendo a mesma palavra ou poderíamos tratar as palavras "deal" (negócio) e "Dealer" (Negociador) como a mesma palavra? Mesmo que uma seja minúscula e a outra maiúscula, como nesse exemplo. Ou queremos características mais complexas sobre a pontuação porque talvez o spam esteja usando mais exclamação. "Eu não sei o que está acontecendo!" E nessa linha de idéias, talvez queiramos desenvolver algoritmos mais sofisticados para detetar e talvez corrigir os erros deliberados de ortografia como "segur0", "med1cina" ou "r3logios". Porque spammers realmente fazem isso, se você tiver "relógios" com um "3" no lugar do "e", com essa simples técnica que falamos há pouco, o classificador de spam pode não identificar isso como sendo a mesma coisa que a palavra "relógios" e, assim, pode ter mais dificuldades para identificar isso como um spam, porque contém erros de ortografia de propósito. E é por isso que spammer fazem isso. Enquanto você trabalha com problemas de aprendizado de máquina, você pode pensar em tentar diferentes coisas como essa. A propósito, eu trabalhei no problema de spam por um tempo e já gastei um bom tempo com isso. E embora eu entenda desse tipo de problema de spam, na verdade, eu sei um pouco sobre isso. Eu teria uma certa dificuldade para falar pra você qual dessas quatro opções seria "Qual é a melhor maneira de usar seu tempo Assim, o que acontece, sinceramente, é que, com frequência, um grupo de pesquisa ou grupo de produtos irá fixar aleatoriamente uma dessas opções. E, as vezes, isso se torna no caminho menos útil para gastar seu tempo, dependendo de qual dessas opções alguém acaba se fixando. De qualquer maneira, se você chega ao ponto de gerar uma lista com diferentes opções para serem tentadas, você provavelmente, já está a frente da média Infelizmente, o que muitas pessoas fazem é, ao invés de tentar listar as opções das coisas poderiam ser tentadas, o que muitas pessoas fazem é acordar de manhã e, por alguma razão, ter uma estranha sensação do tipo, "vamos fazer um projeto Honeypot gigante coletar toneladas de dados" e por alguma estranha razão acordar uma manhã e, aleatoriamente, se fixar em uma coisa e trabalhar nela por 6 meses. Mas eu acho que podemos fazer melhor e, em particular, o que eu gostaria de fazer no próximo vídeo é lhe falar sobre o conceito de análise de erros e conversar sobre a forma como você deve tentar ter uma forma mais sistemática de escolher entre opções dentre as diferentes coisas que você pode trabalhar e, por consequência, ser mais propenso a escolher o que é, atualmente, uma boa maneira de gastar seu tempo para as próximas semanas, dias, ou meses.
Tradução: Carlos Lacerda | Revisão: Caio H. K. Miyashiro