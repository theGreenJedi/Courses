在上几节视频中 我们谈到了协同过滤算法 本节视频中我将会 讲到有关 该算法的向量化实现 以及说说有关该算法你可以做的其他事情 举一个例子 其中一个你可以做得是 当给出一件产品时 你能否找到与之相关的其它产品 我们不妨再举一个例子 一位用户最近看上一件产品 有没有其它相关的产品 你可以推荐给他 好的 让我们看看我们能做什么 我将要做的是 实现一种选择的方法 写出协同过滤算法的预测情况 首先 我们有关于五部电影 的数据集 我将要做的是 将这些用户的电影评分 进行分组并存到 一个矩阵中 看这里我们有五部电影 以及四位用户 那么 这个矩阵 Y 就是一个5行4列的矩阵 它将这些电影的用户评分数据都存在矩阵里 包括问号标注出的 将这些数据分组到这个矩阵中 当然 矩阵中的这些元素 在(i, j)位置的元素 其实是 我们先前写的 y(i, j) 这个评分是用户 j 对电影 i 给出的评分 由这个矩阵 Y 中所有的 评分数据 就可以选择用另一种方法 写出我们对于所有的预测评分来 具体来说 如果你看到某位 用户预测 某部电影的评分 这个公式就是用户 j 对电影 i 的预测评分 所以 如果你有 预测评分矩阵 你就会有 以下的这个 有着(i, j)位置数据的矩阵 它对应的评分是 我们对用户j 对电影 i 的评分的预测值 准确说来其值等于 θ(j)转置乘x(i) 你应该也要明白 这个矩阵中的第一个元素 即我们第一行第一列的元素 是第一位用户 对第一部电影的预测分数 这个第一行第二列的 元素的预测评分 是第二位用户 对第一部电影的打分等等 下面的这个 预测评分是第一位用户 对最后一部电影的评分 你应该知道 这个评分 是我们之前对于这个值预测的结果 同时这个评分 是我们对另外一个值预测的结果 等等 现在 我们给出 预测评分矩阵 这里给出一个更简化的向量化的方法 具体来说 如果我定义这个矩阵 X 这就会有点 类似我们先前在线性回归里面的矩阵 x(1)转置 x(2)转置一直到 x(nm)的转置 我会把这些所有 有关电影的特征 按行堆叠起来 所以 你可以把 每一部电影想象成一个范例 把这些范例即特征 按行堆叠起来 每一部电影就是一行 然后我们要做的是 定义一个大写的Θ矩阵 接下来我要做的是将 接下来我要做的是将 每一位用户的参数向量θ(j) 像这样按行堆叠起来 这是θ(1) 是第一位用户的参数向量 这个是θ(2) 所以你需要 像这样将这些用户的参数向量按行堆叠 以定义这个大写Θ矩阵 在这个矩阵里 我们有nu个参数向量都像这样按行堆叠起来 现在我们已经给出了 针对大写X矩阵以及 大写Θ矩阵的定义 为了能有 一个向量化的方法以计算 这些矩阵的预测值 你可以计算大写X矩阵乘 大写Θ矩阵的转置 这样就给出了一种向量化的方法 以计算这个矩阵 我们用的这个协同过滤 算法还有另外一个名字 我们现在正在使用的这个算法 也被称作是 低秩矩阵分解 所以如果你听到 人们说道低秩矩阵分解 准确说来 就应该是我们现在正在讲的这个算法 这一项来自 这个矩阵 乘Θ的转置 其有一个数学属性 在代数中被称为 低秩矩阵 同时 这也是对于这个算法给出 这个低秩矩阵分解名字的原因 因为这个 矩阵X乘Θ的转置的低秩属性 如果你不懂什么是 低秩或者低秩矩阵 也不用担心 你真的不需要为了使用这个算法而知道这些 但若你对 线性代数很熟悉 那你就会知道这个算法是如何给出的 以及有关低秩矩阵分解的含义 最后 在运行了协同过滤算法后 仍有一些你可以去做的事 比如说 为了找到某部相关的电影来学习特征 准确说来 对于每一个产品 好比每一部电影 我们有特征向量x(i) 那么 你就会知道 当你 学习某个特征 其实并不需要知道 这些不同的特征将会变成什么样的 但如果你运行这个算法 这些特征将会完美地捕获 这些重要的方面 在你对不同电影或者产品的打分上面 到底什么是造成 某些用户 喜欢某些电影以及 是什么造成了这些电影其它不同的电影呢 也许你刚进行完 特征参数学习 你有爱情指数x1 动作指数x2 这与之前我们的视频内容类似 或许你的参数特征里有x3 是一个表现喜剧程度的指数 还有特征x4等其它参数特征 这时你就有了 n 个 参数特征 在你完成了这些参数特征的学习后 实际中参数特征的学习 是比较困难的 并提出一个人类能理解 对于这些特征实际是什么的解释更困难 但在实践中 这些特征是很难以可视化的 也很难计算出这些特征到底是什么 通常来说 特征学习对于 捕获哪些是 电影的重要或显著的属性 是很有意义的 也正是这样才有了你对某些电影的喜欢或不喜欢 现在我们来解决下面这个问题 你有一部电影 i 你想找到 与电影 i 相关的 其它某部电影 j 那么是什么原因让你想用这个方法呢 可能有一位用户 正在浏览一些电影 他们当前看的电影是 i 一个什么样的理由才能让 他们看完电影 i 之后被推荐另一部电影 j 呢 或者说某人最近买了一部电影 一部什么样的其它电影 我们有理由推荐他们进行下一次购买呢 现在既然你已经 对特征参数向量进行了学习 那么我们就会有一个很方便的方法 来度量两部电影之间的相似性 例如说 电影i有一个特征向量x(i) 你是否能找到一部 不同的电影 j 保证两部电影的特征向量 之间的距离x(i)和x(j)很小 那就能 很有力地表明 电影 i 和电影 j 在某种程度上有相似 至少在某种意义上 某些人喜欢电影 i 或许更有可能也对电影 j 感兴趣 总结一下 当用户在看 某部电影 i 的时候 如果你想找5部 与电影 非常相似的电影 为了能给用户推荐 5部新电影 你需要做的是 找出电影 j 在这些不同的电影中 与我们要找的电影 i 的距离最小 这样你就能给你的用户推荐几部不同的电影了 通过这个方法 希望你能知道 如何进行一个向量化的计算来 对所有的用户和所有的电影 进行评分计算 同时希望你也能掌握 通过学习特征参数 来找到相关电影 和产品的方法 【教育无边界字幕组】翻译：Yuens 校对/审核：所罗门捷列夫