Para ahora, ya han visto todas las piezas principales del algoritmo del sistema de recomendación o el algoritmo de filtrado colaborativo. En este video quiero compartir un último detalle de implementación, la normalización media, que a veces puede simplemente hacer que el algoritmo funcione un poco mejor. Para motivar la idea de la normalización de la media, vamos a considerar un ejemplo en el que hay un usuario que no ha calificado ninguna película. Así que, además de nuestros cuatro usuarios, Alice, Bob, Carol, y Dave, he agregado un quinto usuario, Eve, que no ha calificado ninguna película. Veamos lo que nuestro algoritmo de filtrado colaborativo hará con este usuario. Digamos que n es igual a 2, así que vamos a aprender dos variables y tendremos que conocer un vector de parámetros teta 5, que estará en R2 -- recuerden que estos son ahora vectores en Rn, no Rn+1 -- vamos a conocer el vector de parámetro theta 5 para nuestro usuario número 5, Eve. De modo que si vemos el primer término en este objetivo de optimización, bueno, el usuario Eve no ha calificado ninguna película, por lo que no hay películas para las que r(i,j) sea igual a 1 para el usuario Eve, así que este primer término no desempeña papel alguno en la determinación de «theta» 5 porque no hay películas que haya calificado Eve. Así que el único término que afecta «theta» 5 es este término. Por tanto, lo que estamos diciendo es que deseamos elegir el vector «theta» 5 de manera que el último término de regularización sea lo más pequeño posible. En otras palabras, queremos minimizar esta lambda sobre 2 «theta» 5 subíndice 1 al cuadrado más «theta» 5 subíndice 2 al cuadrado, de modo que ese es el componente del término de regularización que corresponde al usuario 5, y por supuesto, si su objetivo es minimizar este término, entonces con lo que van a terminar es sólo con «theta» 5 es igual a 0 0, porque el término de regularización nos anima a establecer parámetros cercanos a 0, y si no hay datos para tratar de alejar los parámetros de 0, debido a que este primer término no afecta «theta» 5, sólo terminamos con  «theta» 5 es igual al vector de todos los ceros. Así que cuando vamos a predecir cómo va a calificar el usuario 5 alguna película, tenemos que «theta» 5 que transpone xi, para cualquier i eso sólo va a ser igual a cero porque «theta» 5 es 0 para cualquier valor de x, este producto interior va a ser igual a 0. Y lo que vamos a tener, por lo tanto, es que vamos a predecir que Eve va a calificar cada una de la películas con cero estrellas. Pero esto no parece muy útil ¿verdad? Quiero decir, si observamos las diferentes películas, Love at Last, esta primera película, un par de personas la calificaron con 5 estrellas. Y hasta para Swords vs. Karate, alguien la calificó con 5 estrellas. Así que a algunas personas sí les gustan algunas películas. No parece útil sólo predecir que Eve va a calificar todo con 0 estrellas. Y de hecho, si estamos prediciendo que Eve va a calificar todo con 0 estrellas. tampoco tenemos ninguna manera adecuada para recomendarle ninguna película porque, ya saben, todas estas películas están obteniendo exactamente la misma calificación predicha para Eve, así que no hay una película con una calificación predicha más alta que le podamos recomendar a ella, así que eso no es muy bueno. La idea de la normalización de la media nos permitirá solucionar este problema. Así que aquí está cómo funciona. Como antes, voy a agrupar todas mis calificaciones de las películas en esta matriz «Y», así que sólo tomamos todas estas calificaciones y las agrupamos en la matriz «Y». Y esta columna por aquí de todos los signos de interrogación, corresponde al hecho de que Eve no ha calificado ninguna película. Ahora bien, para llevar a cabo la normalización de la media, lo que voy a hacer es calcular la calificación promedio que obtuvo cada película, y voy a almacenar eso en un vector que llamaremos «mu». Así que la primera película consiguió dos de 5 estrellas y dos calificaciones de 0 estrellas, de manera que esa es una calificación de 2.5 estrellas. La segunda película tuvo un promedio de 2.5 estrellas, y así sucesivamente. Y la última película tiene 0, 0, 5, 0, y el promedio de 0, 0, eso promedia a una calificación promedio de 1.25. Y lo que voy a hacer, es observar todas las calificaciones de las películas y voy a restar la calificación media. De modo que de este primer elemento 5 voy a restar 2.5 y eso me da 2.5. Y al segundo elemento 5 le resto 2.5, obtengo un 2.5. Y después el 0, 0, le resto 2.5 y obtengo -2.5, -2.5. En otras palabras, lo que voy a hacer es tomar mi matriz de calificaciones de películas, tomar esta matriz «Y» y restar de cada fila la calificación promedio  para esa película. Así que lo que estoy haciendo es simplemente normalizar cada película para tener una calificación promedio de cero. Así que sólo un último ejemplo. Si observan esta última fila 0 0 5 0, vamos a restar 1.25, así que termino con estos valores por aquí. Así que ahora, desde luego, los signos de interrogación se quedan como signos de interrogación. De manera que cada película en esta nueva matriz Y tiene una calificación promedio de cero. lo que voy a hacer entonces es tomar este grupo de calificaciones y usarlo con el algoritmo de filtrado colaborativo. Así que voy a pretender que estos eran los datos que había obtenido de mis usuarios, o pretender que éstas son las calificaciones reales que había obtenido de los usuarios, y voy a usar esto como mi conjunto de datos para conocer mis parámetros «theta» j y mis variables xi a partir de estas calificaciones de las películas normalizadas de la media. Cuando quiero hacer predicciones de las calificaciones de las películas, lo que voy a hacer es lo siguiente: para el usuario j en la película i voy a predecir «theta» j transpone xi, en donde x y «theta» son los parámetros que hemos aprendido de este grupo de datos normalizados de la media. Pero, debido a que en el conjunto de datos resté los promedios a fin de hacer una predicción sobre la película «i», voy a tener que agregar de nuevo la media, así que la voy a añadir de nuevo en mu i. Así que esa va a ser mi predicción, en mis datos de entrenamiento resté todas las medias así que cuando hacemos predicciones, necesitamos agregar nuevamente estas medias «mu i» para la película «i».  Así que específicamente, si su usuario 5, que es Eve -todavía aplica el mismo argumento que en la diapositiva anterior, en el sentido de que Eve no había calificado ninguna película- así que el parámetro aprendido para el usuario 5 todavía va a ser igual a 0, 0. Así que lo que vamos a obtener es que en una película «i» en  particular, vamos a predecir para Eve «theta» 5 transpone xi, más, agregar de nuevo «mu i», y este primer componente va a ser igual a cero, si «theta» cinco es igual a cero. Así que en la película «i» vamos a terminar prediciendo «mu i». Y esto realmente tiene sentido. Significa que en la película 1 vamos a predecir que Eve la califica con 2.5. En la película 2, vamos a predecir que Eve la califica con 2.5. En la película 3, vamos a predecir que Eve la califica con 2., y así sucesivamente. Esto realmente tiene sentido, porque nos dice que si Eve no ha calificado ninguna película y simplemente no sabemos nada acerca de este nuevo usuario Eve; lo que vamos a hacer es sólo predecir para cada una de las películas, que son las calificaciones promedio que obtuvieron esas películas. Por último, como una nota aparte, en este vídeo hablamos de la normalización de la media, en donde normalizamos cada fila de la matriz «y», para obtener el promedio 0. En caso de que tengan algunas películas sin calificaciones, de modo que sea análogo a un usuario que no ha calificado nada, pero en caso de que tengan algunas películas sin ninguna calificación, también pueden jugar con versiones del algoritmo, en donde normalizan las diferentes columnas para tener media de 0, en lugar de normalizar las filas para tener media de cero, aunque eso es probablemente menos importante, ya que si realmente tienen una película sin calificación, tal vez simplemente no deberían recomendar esa película a nadie, de todas formas. Así que, prestar atención al caso de un usuario que no ha calificado nada, podría ser más importante que cuidar del caso de una película que no ha obtenido una sola clasificación. Así que, para resumir, así es como pueden hacer la normalización de la media, como una especie de etapa de pre-procesamiento para el filtrado colaborativo. Dependiendo de su conjunto de datos, esto pudiera hacer que, algunas veces, su implementación funcione un poquito mejor.