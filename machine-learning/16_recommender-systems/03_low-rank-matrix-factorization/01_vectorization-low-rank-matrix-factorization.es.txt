En los últimos vídeos, hemos hablado de un algoritmo de filtrado colaborativo. En este vídeo voy a platicar un poco acerca de la implementación de vectorización de este algoritmo. Y también hablaré un poco acerca de otras cosas que pueden hacer con este algoritmo. Por ejemplo, uno de las cosas que puedes hacer es, dado un producto, ¿se pueden encontrar otros productos relacionados a éste? de modo que, por ejemplo, si un usuario ha estado observando recientemente un producto, ¿hay otros productos relacionados que le pudieran recomendar a este usuario? Así que veamos lo que podemos hacer al respecto. Lo que me gustaría hacer es elaborar una manera alternativa de escribir las predicciones del algoritmo de filtrado colaborativo. Para empezar, aquí está nuestro conjunto de datos con nuestras cinco películas y lo que voy a hacer es tomar todas las calificaciones por parte de todos los usuarios y agruparlos en una matriz. Así pues, aquí tenemos cinco películas y cuatro usuarios, así que esta matriz y será una matriz de 5 por 4. Sólo se toman todos los elementos, todos estos datos, incluyendo los signos de interrogación, y se agrupan en esta matriz. Y por supuesto, los elementos de esta matriz, el elemento (i, j) de esta matriz es lo que  realmente estuvimos escribiendo  anteriormente como y superíndice i, j. Es la calificación que se dio a la película i por el usuario j. Dada esta matriz Y de todas las calificaciones que tenemos, hay alternativa de escribir esta todas las calificaciones predictivas del algoritmo. Y, en particular, si observan lo que cierto usuario predice sobre alguna película, lo que el usuario j predice sobre la película i se da mediante esta fórmula. Así que si tiene una matriz de las calificaciones predichas, lo que tendrían es la siguiente matriz, en la entrada i, j. Así que esto corresponde a la calificación que predijimos que el usuario j, le dará a la película i es exactamente igual a esa «theta» que transpone j, x(1), y por eso, esta es una matriz en donde este primer elemento, el elemento uno-uno, es una calificación predictiva del usuario uno o la película uno, y este elemento, este elemento uno-dos es la calificación predicha del usuario dos para la película uno, y así sucesivamente, y esta es la calificación predicha del usuario uno sobre la última película, y si lo desean, ya saben, esta calificación es lo que habríamos predicho para este valor, y esta calificación es la que habríamos predicho para ese valor, y así sucesivamente, Ahora, dada esta matriz de calificaciones predictivas,  existe entonces una manera más sencilla o vectorizada de escribir éstas. En particular, si defino la matriz x, y ésta va a ser justo como la matriz que teníamos anteriormente para la regresión lineal de modo que x1 transpone x2 transponer hacia abajo hasta x de (nm) transpone. Así que voy a tomar las variables para mis películas y las voy a apilar en filas. Así es que si piensa en cada película como un ejemplo y apilan todas las variables de las diferentes películas y filas, y si también definimos una matriz, «theta» mayúscula, Lo que voy a hacer hacer es tomar cada uno de los vectores de parámetros por usuario y apilarlos en filas, de esta manera. Así que eso es «theta» 1, que es el vector de parámetros para el primer usuario. Y, ya saben, «theta» 2, así que deben apilarlos en filas de esta forma, para definir una matriz «theta» mayúscula así que tengo los vectores de parámetros nu todos apilados en filas así. Ahora, dada esta definición para la matriz x, y esta definición para la matriz  «theta», a fin de tener una forma vectorizada para calcular la matriz de todas las predicciones, simplemente pueden calcular x veces la transpuesta de la matriz «theta», y eso les da una manera vectorizada para calcular esta matriz por aquí. Para darle al algoritmo de filtrado colaborativo que han estado usando, otro nombre, el algoritmo que estamos usando también se llama factorización de matriz de bajo rango. Así que si escuchan hablar a las personas acerca de la factorización de matriz de bajo rango, ese es en esencia exactamente el algoritmo del que hemos estado hablando. Y este término proviene de la propiedad que esta matriz «theta» transpone x veces tiene una propiedad matemática en la álgebra lineal que se llama matriz de bajo rango y así que eso es lo que hizo surgir el nombre, factorización de matriz de bajo rango para estos algoritmos, debido a esta propiedad de bajo rango de esta matriz «theta» transpone a x. En caso de que no sepan qué significa bajo rango, o en caso de que no sepan qué es una matriz de bajo rango, no se preocupen por eso. Realmente no necesitan saber eso para poder utilizar este algoritmo. Pero si son expertos en álgebra lineal, eso es lo que produce este algoritmo, este otro nombre de factorización de matriz de bajo rango. Por último, después de ejecutar el algoritmo de filtrado colaborativo, aquí está otra cosa que pueden hacer, que es usar las variables aprendidas a fin de encontrar películas relacionadas. Específicamente, para cada producto i, realmente para cada película i, hemos aprendido un vector de dirección x(i) Así que, cuando conocen ciertas variables realmente no saben por adelantado cuáles van a ser las diferentes variables, pero si ejecutan el algoritmo y, de manera empírica, las variables tenderán a captar cuáles son los aspectos importantes de estas diferentes películas o diferentes productos o lo que sea. Cuáles son los aspectos importantes que provocan que a algunos usuarios les gusten ciertas películas y que hacen que a algunos usuarios les gusten diferentes grupos de películas. Así que tal vez terminen conociendo una variable, ya saben, en donde x1 es igual a romance, x2 es igual a acción -similar a un video anterior- y tal vez conocieron una variable diferente x3 que se trata de una comedia, después alguna variable x4 que es alguna otra cosa. Y tienen N variables en conjunto, y después de que hayan aprendido variables es en realidad bastante difícil entender las variables aprendidas y llegar a una interpretación humana comprensible de lo que estas variables son en realidad. Pero en la práctica, las variables, aunque esas variables sean difíciles de visualizar, --puede ser difícil de averiguar exactamente que son estas variables-- por lo general, aprenderemos variables que son muy significativas para capturar las que son las propiedades más importantes o más sobresalientes de una película que hace que te guste o te disguste. Así que ahora digamos que deseamos abordar el siguiente problema. Digamos que tienen alguna película específica i y desean encontrar otras películas j que están relacionados con esa película. así es que, ¿por qué querrían hacer esto? Bien, tal vez tienen un usuario que está navegando por las películas, y que actualmente están viendo la película j, entonces ¿cuál es una película razonable para recomendarle que vea después de que haya terminado con la película j? O si alguien ha adquirido recientemente la película j, bueno, ¿cuál sería una película diferente que sería razonable recomendarles para que consideren la compra?. Así que ahora que han aprendido estos vectores de dirección, esto nos da una forma muy conveniente para medir qué tan parecidas son dos películas. En particular, la película i tiene un vector de dirección x(i) así que si pueden encontrar una película diferente, j, de modo que la distancia entre x(i) y x(j) es pequeña, entonces esta es una indicación bastante fuerte de que las películas j e i son de alguna manera similares. Al menos en el sentido de que a algunos de ellos les gusta la película i, tal vez sea más probable que  les guste la película j también. Solo por recapitular, si su usuario está viendo alguna película i, y si quieren encontrar las 5 películas más parecidas a esa película a fin de recomendarles 5 películas nuevas, lo que hacen es encontrar las cinco películas j, con la distancia más pequeña entre las variables entre estas películas diferentes. Y esto les podría dar algunas películas diferentes para recomendar a su usuario. Así que con eso, con suerte, ahora saben cómo utilizar una aplicación vectorizada para calcular todas las calificaciones predichas de todos los usuarios y todas las películas, y también cómo hacer cosas, como usar las variables aprendidas para encontrar lo que pudieran ser ya sea películas ó productos que están relacionados entre sí.