1
00:00:00,530 --> 00:00:01,650
Nos últimos vídeos,

2
00:00:01,730 --> 00:00:03,890
falamos sobre um algoritmo de filtragem colaborativa.

3
00:00:04,830 --> 00:00:05,890
Nesse vídeo, quero falar

4
00:00:05,970 --> 00:00:07,120
sobre a implementação

5
00:00:07,490 --> 00:00:09,090
vetorizada desse algoritmo,

6
00:00:09,980 --> 00:00:12,670
e sobre outras coisas que podemos fazer com ele.

7
00:00:13,340 --> 00:00:14,520
Por exemplo, uma das coisas

8
00:00:14,600 --> 00:00:15,830
que podemos fazer é:

9
00:00:16,180 --> 00:00:17,390
dado um produto, você pode

10
00:00:17,770 --> 00:00:19,160
encontrar outros produtos

11
00:00:19,270 --> 00:00:20,210
que sejam relacionados?

12
00:00:20,490 --> 00:00:23,140
Por exemplo, se o usuário procurou por um produto recentemente,

13
00:00:23,650 --> 00:00:24,990
há outros produtos relacionados,

14
00:00:25,520 --> 00:00:27,170
que você recomendaria a esse usuário?

15
00:00:27,620 --> 00:00:28,980
Vamos ver como podemos fazer isso.

16
00:00:30,170 --> 00:00:31,190
O que eu quero fazer

17
00:00:31,550 --> 00:00:33,520
é escrever, de forma alternativa,

18
00:00:33,740 --> 00:00:35,710
predições do algoritmo de filtragem colaborativa.

19
00:00:37,370 --> 00:00:38,590
Para começar, aqui está

20
00:00:38,960 --> 00:00:40,440
o nosso conjunto de dados,

21
00:00:40,750 --> 00:00:41,880
com 5 filmes, e eu vou pegar

22
00:00:42,160 --> 00:00:43,150
as avaliações

23
00:00:43,390 --> 00:00:44,520
de todos os usuários

24
00:00:44,850 --> 00:00:46,500
e agrupá-las em uma matriz.

25
00:00:47,080 --> 00:00:48,800
Então, aqui eu tenho

26
00:00:49,200 --> 00:00:51,390
5 filmes e 4 usuários,

27
00:00:51,670 --> 00:00:53,390
e, portanto, essa matriz "Y"

28
00:00:53,670 --> 00:00:54,550

29
00:00:54,910 --> 00:00:57,110
será uma matriz 5x4. Eu estou apenas

30
00:00:57,340 --> 00:00:58,770
pegando todos os dados,

31
00:00:59,820 --> 00:01:02,390
incluindo pontos de interrogação, e agrupando nessa matriz.

32
00:01:03,290 --> 00:01:04,470
O elemento "(i, j)"

33
00:01:04,650 --> 00:01:06,400
dessa matriz é, na verdade,

34
00:01:06,500 --> 00:01:07,860
o que previamente

35
00:01:08,060 --> 00:01:09,710
estávamos escrevendo

36
00:01:10,520 --> 00:01:12,090
como "y⁽ⁱʲ⁾",

37
00:01:12,220 --> 00:01:13,480
A avaliação do filme "i",

38
00:01:14,140 --> 00:01:15,640
dada pelo usuário "j".

39
00:01:16,070 --> 00:01:17,290
Dada a matriz "Y" de todas

40
00:01:17,430 --> 00:01:18,520
as avaliações que temos,

41
00:01:18,700 --> 00:01:20,500
há um modo alternativo

42
00:01:20,880 --> 00:01:23,340
de escrever todas as avaliações estimadas pelo algoritmo.

43
00:01:24,320 --> 00:01:26,210
Se você olhar a predição

44
00:01:26,430 --> 00:01:27,540
de um certo usuário,

45
00:01:27,920 --> 00:01:29,480
para um certo filme,

46
00:01:29,690 --> 00:01:31,250
o que o usuário "j"

47
00:01:31,950 --> 00:01:35,540
prediz para o filme "i", é dado por essa fórmula.

48
00:01:37,010 --> 00:01:38,570
Então, se você tiver

49
00:01:39,440 --> 00:01:40,330
uma matriz

50
00:01:40,910 --> 00:01:42,000
de avaliações preditas,

51
00:01:42,180 --> 00:01:43,600
você terá uma matriz como essa,

52
00:01:45,030 --> 00:01:48,140
onde a avaliação correspondente

53
00:01:49,650 --> 00:01:51,440
à entrada "(i, j)"

54
00:01:52,000 --> 00:01:54,020
é o que estimamos que o usuário "j"

55
00:01:54,460 --> 00:01:55,690
dará para o filme "i",

56
00:01:57,130 --> 00:01:58,440
é exatamente igual a isso:

57
00:01:58,790 --> 00:02:00,680
"(θ⁽ʲ⁾)ᵀ · (x⁽ⁱ⁾)".

58
00:02:00,900 --> 00:02:01,940
Essa é uma matriz

59
00:02:02,520 --> 00:02:04,310
onde o primeiro elemento,

60
00:02:04,750 --> 00:02:05,930
o elemento "(1, 1)"

61
00:02:06,220 --> 00:02:07,450
é uma predição

62
00:02:07,760 --> 00:02:09,360
da avaliação do usuário 1

63
00:02:09,560 --> 00:02:11,070
para o filme 1.

64
00:02:11,430 --> 00:02:12,680
O elemento "(1, 2)"

65
00:02:13,470 --> 00:02:14,640
é a avaliação predita

66
00:02:14,930 --> 00:02:16,070
do usuário 2 para o filme 1.

67
00:02:16,630 --> 00:02:18,670
E essa é a avaliação predita

68
00:02:19,000 --> 00:02:20,130
do usuário 1

69
00:02:20,930 --> 00:02:23,380
para o último filme.

70
00:02:23,640 --> 00:02:25,100
Esta avaliação

71
00:02:25,400 --> 00:02:26,870
é o que nós teríamos

72
00:02:27,020 --> 00:02:28,050
predito para esse valor,

73
00:02:29,050 --> 00:02:32,470
aquela avaliação é o que teríamos

74
00:02:32,650 --> 00:02:33,570
predito para aquele valor,

75
00:02:33,910 --> 00:02:35,080
e assim por diante.

76
00:02:36,180 --> 00:02:37,480
Agora, dada essa matriz

77
00:02:37,560 --> 00:02:39,290
de avaliações preditas, há uma maneira

78
00:02:39,610 --> 00:02:42,670
mais simples, vetorizada, de escrever isso.

79
00:02:43,640 --> 00:02:44,640
Se eu definir

80
00:02:45,120 --> 00:02:46,850
uma matriz "X", muito parecida

81
00:02:46,970 --> 00:02:48,090
com a que tivemos

82
00:02:48,370 --> 00:02:50,980
anteriormente, para regressão linear:

83
00:02:52,070 --> 00:02:53,820
"(X⁽¹⁾)ᵀ",

84
00:02:55,050 --> 00:02:57,060
"(X⁽²⁾)ᵀ" até

85
00:02:58,530 --> 00:03:01,740
"(X⁽ⁿᵐ⁾)ᵀ".

86
00:03:02,420 --> 00:03:03,320
Tomo

87
00:03:04,210 --> 00:03:05,670
todos os atributos dos filmes,

88
00:03:06,140 --> 00:03:07,260
e empilho-los em linhas.

89
00:03:07,950 --> 00:03:08,860
Assim, se pensarmos

90
00:03:08,980 --> 00:03:09,810
em cada filme

91
00:03:10,350 --> 00:03:11,200
como um exemplo,

92
00:03:11,670 --> 00:03:13,460
e empilharmos todos os atributos

93
00:03:14,290 --> 00:03:16,160
de diferentes filmes em linhas,

94
00:03:16,280 --> 00:03:18,550
e encontrarmos uma matriz "Θ",

95
00:03:19,870 --> 00:03:20,840
formada pelo

96
00:03:21,180 --> 00:03:22,490
vetor de parâmetros

97
00:03:22,750 --> 00:03:25,780
de cada usuário, empilhado

98
00:03:26,280 --> 00:03:28,520
em linhas, dessa forma.

99
00:03:28,790 --> 00:03:29,690
Então esse é "(θ⁽¹⁾)ᵀ",

100
00:03:30,220 --> 00:03:31,880
o vetor de parâmetros para o usuário 1,

101
00:03:33,430 --> 00:03:36,100
esse é "(θ⁽²⁾)ᵀ".

102
00:03:37,040 --> 00:03:38,100
Então, você os empilha

103
00:03:38,360 --> 00:03:39,470
em linhas dessa forma,

104
00:03:39,650 --> 00:03:41,530
para definir uma matriz "Θ".

105
00:03:42,070 --> 00:03:43,830
Eu tenho "nᵤ" vetores

106
00:03:45,870 --> 00:03:48,410
de parâmetros, todos empilhados em linhas.

107
00:03:50,000 --> 00:03:51,390
Agora, dada essa definição

108
00:03:52,080 --> 00:03:53,400
para matriz "X" e essa

109
00:03:53,590 --> 00:03:54,870
definição para a matriz "Θ",

110
00:03:55,820 --> 00:03:56,970
para encontrar uma maneira

111
00:03:57,290 --> 00:03:59,330
vetorizada de computar a matriz

112
00:03:59,420 --> 00:04:00,330
de todas as predições,

113
00:04:01,060 --> 00:04:03,570
basta calcular

114
00:04:04,710 --> 00:04:07,050
"X · (Θᵀ)", que é

115
00:04:07,160 --> 00:04:08,380
uma maneira vetorizada

116
00:04:08,570 --> 00:04:10,530
de computar essa matriz acima.

117
00:04:11,680 --> 00:04:12,460
Dando o nome

118
00:04:12,480 --> 00:04:15,220
ao algoritmo de filtragem colaborativa

119
00:04:16,070 --> 00:04:17,190
que estamos utilizando,

120
00:04:17,660 --> 00:04:19,840
ele é também chamado "fatoração de matriz

121
00:04:21,240 --> 00:04:22,540
de baixo posto".

122
00:04:24,280 --> 00:04:25,410
Portanto, se você ouvir

123
00:04:25,620 --> 00:04:26,760
alguém falar sobre

124
00:04:27,210 --> 00:04:29,490
fatoração de matriz de baixo posto, é exatamente

125
00:04:30,390 --> 00:04:32,100
o algoritmo sobre o qual estamos falando.

126
00:04:32,590 --> 00:04:33,900
Esse termo vem

127
00:04:33,990 --> 00:04:36,100
de uma propriedade que essa matriz

128
00:04:36,770 --> 00:04:38,880
"X · (Θᵀ)" tem, uma propriedade

129
00:04:39,110 --> 00:04:40,780
matemática da álgebra linear

130
00:04:41,030 --> 00:04:42,410
chamada "baixo posto".

131
00:04:42,670 --> 00:04:43,820
Daí vem o nome

132
00:04:44,720 --> 00:04:45,800
"fatoração de matriz

133
00:04:46,060 --> 00:04:47,190
de baixo posto"

134
00:04:47,340 --> 00:04:48,570
para esse algoritmo.

135
00:04:48,930 --> 00:04:50,240
Por causa dessa propriedade

136
00:04:50,410 --> 00:04:53,580
de baixo posto da matriz "X · (Θᵀ)".

137
00:04:54,830 --> 00:04:55,640
Caso você não saiba

138
00:04:55,910 --> 00:04:57,310
o que significa "baixo posto",

139
00:04:57,620 --> 00:04:59,770
ou uma "matriz de baixo posto", não se preocupe.

140
00:04:59,970 --> 00:05:02,820
Você não precisa saber isso para usar esse algoritmo.

141
00:05:03,740 --> 00:05:04,790
Mas se você for um

142
00:05:04,890 --> 00:05:06,110
especialista em álgebra linear,

143
00:05:06,320 --> 00:05:07,580
é isso que dá a esse algoritmo

144
00:05:07,850 --> 00:05:12,370
esse outro nome de "fatoração de matriz de baixo posto".

145
00:05:12,620 --> 00:05:14,090
Finalmente, tendo executado

146
00:05:14,300 --> 00:05:16,350
esse algoritmo de filtragem colaborativa,

147
00:05:17,310 --> 00:05:18,160
você pode usar

148
00:05:18,530 --> 00:05:20,060
os atributos aprendidos

149
00:05:20,320 --> 00:05:23,510
para encontrar filmes semelhantes.

150
00:05:25,060 --> 00:05:26,810
Assim, para cada produto "i",

151
00:05:27,050 --> 00:05:27,810
ou filme "i",

152
00:05:28,810 --> 00:05:30,970
nós aprendemos um vetor de atributos "x⁽ⁱ⁾".

153
00:05:31,740 --> 00:05:32,880
Então, quando você aprende

154
00:05:32,930 --> 00:05:34,220
um conjunto de atributos,

155
00:05:34,590 --> 00:05:35,420
você não sabe,

156
00:05:35,610 --> 00:05:37,850
a princípio, quais serão esses atributos.

157
00:05:37,940 --> 00:05:39,550
Mas, quando você roda o algoritmo,

158
00:05:39,990 --> 00:05:41,690
idealmente, essas variáveis vão

159
00:05:41,930 --> 00:05:43,490
capturar os aspectos importantes

160
00:05:43,730 --> 00:05:45,340
desses filmes, desses produtos,

161
00:05:45,480 --> 00:05:47,120
que fazem com que alguns usuários

162
00:05:47,610 --> 00:05:48,600
gostem de certos filmes

163
00:05:48,930 --> 00:05:49,830
e com que outros

164
00:05:50,210 --> 00:05:51,670
gostem de outros filmes.

165
00:05:52,470 --> 00:05:53,380
Assim, talvez você termine

166
00:05:53,540 --> 00:05:55,050
aprendendo um vetor onde

167
00:05:55,260 --> 00:05:56,550
"x₁ = romance", "x₂ = ação",

168
00:05:57,060 --> 00:05:59,180
e, similarmente a um vídeo anterior,

169
00:05:59,460 --> 00:06:00,590
talvez você aprenda

170
00:06:00,710 --> 00:06:02,100
outra variável,

171
00:06:02,210 --> 00:06:04,520
"x₃", que diz se isso é uma comédia,

172
00:06:05,330 --> 00:06:07,000
e outra variável "x₄", que é outra coisa.

173
00:06:07,270 --> 00:06:09,750
Você tem um total de "n" variáveis,

174
00:06:09,940 --> 00:06:11,600
e, depois de aprender esses atributos,

175
00:06:12,610 --> 00:06:14,420
costuma ser difícil

176
00:06:14,750 --> 00:06:16,030
dar a eles

177
00:06:16,420 --> 00:06:18,120
uma interpretação do que

178
00:06:18,390 --> 00:06:19,980
essas variáveis realmente são,

179
00:06:20,810 --> 00:06:22,850
de forma que possamos entender.

180
00:06:22,950 --> 00:06:24,540
Mas na prática,

181
00:06:24,620 --> 00:06:27,480
embora seja difícil visualizar essas variáveis,

182
00:06:28,100 --> 00:06:29,570
é difícil descobrir o que elas são,

183
00:06:31,070 --> 00:06:32,160
normalmente,

184
00:06:32,410 --> 00:06:33,400
as variáveis aprendidas

185
00:06:33,960 --> 00:06:35,250
são muito significativas

186
00:06:35,870 --> 00:06:37,120
para capturar as propriedades

187
00:06:37,880 --> 00:06:39,300
mais importantes de um filme,

188
00:06:39,710 --> 00:06:41,800
que fazem com que você goste ou não desse filme.

189
00:06:41,860 --> 00:06:44,950
Agora, digamos que você queira resolver o seguinte problema:

190
00:06:45,970 --> 00:06:47,410
digamos que você tenha

191
00:06:47,790 --> 00:06:48,980
um filme "i", e você queira

192
00:06:49,120 --> 00:06:50,750
encontrar outros filmes "j" que sejam

193
00:06:51,620 --> 00:06:52,680
relacionados ao filme "i".

194
00:06:53,150 --> 00:06:54,770
Por que você ia querer fazer isso?

195
00:06:54,920 --> 00:06:56,120
Bom, talvez você tenha

196
00:06:56,320 --> 00:06:57,840
um usuário navegando pelos filmes,

197
00:06:58,360 --> 00:07:00,210
que está assistindo ao filme "j",

198
00:07:00,550 --> 00:07:01,820
qual é a recomendação adequada

199
00:07:02,350 --> 00:07:04,110
para ele, após assistir ao filme "j"?

200
00:07:04,530 --> 00:07:06,040
Ou, se alguém comprou o filme "j"

201
00:07:06,330 --> 00:07:07,470
recentemente, que filme seria

202
00:07:07,730 --> 00:07:11,000
razoável recomendar a ele, para que ele considere comprá-lo?

203
00:07:12,190 --> 00:07:13,000
Então, após aprendermos

204
00:07:13,080 --> 00:07:14,540
esses vetores de atributos,

205
00:07:14,640 --> 00:07:16,080
isso nos dá uma maneira conveniente

206
00:07:16,250 --> 00:07:17,930
de medir a similaridade entre filmes.

207
00:07:18,670 --> 00:07:20,530
Se o filme "i" tem um vetor

208
00:07:21,460 --> 00:07:22,340
de atributos "x⁽ⁱ⁾",

209
00:07:23,290 --> 00:07:24,200
e se você puder

210
00:07:24,640 --> 00:07:27,500
encontrar um outro filme "j",

211
00:07:27,710 --> 00:07:29,300
tal que a distância entre

212
00:07:29,780 --> 00:07:30,800
"x⁽ⁱ⁾" e "x⁽ⁱ⁾" seja pequena,

213
00:07:33,080 --> 00:07:34,010
isso é uma

214
00:07:34,430 --> 00:07:36,980
forte indicação de que os filmes

215
00:07:37,830 --> 00:07:41,360
"j" e "i" são similares, pelo menos

216
00:07:42,320 --> 00:07:44,080
no sentido em que alguém

217
00:07:44,200 --> 00:07:46,950
que goste do filme "i" talvez goste também do filme "j".

218
00:07:47,760 --> 00:07:49,940
Então, apenas recapitulando,

219
00:07:50,590 --> 00:07:52,130
se o seu usuário está assitindo

220
00:07:52,510 --> 00:07:53,710
a algum filme "i",

221
00:07:54,150 --> 00:07:55,060
e você quer encontrar

222
00:07:55,310 --> 00:07:56,640
os 5 filmes mais similares

223
00:07:56,900 --> 00:07:57,860
a esse filme,

224
00:07:58,230 --> 00:07:59,590
para recomendar 5 novos filmes

225
00:07:59,690 --> 00:08:00,650
a esse usuário,

226
00:08:00,970 --> 00:08:02,260
você pode encontrar os 5

227
00:08:02,340 --> 00:08:03,880
filmes "j" com as menores distâncias

228
00:08:04,190 --> 00:08:05,680
entre os atributos desses filmes.

229
00:08:06,550 --> 00:08:09,220
Isso sugere alguns filmes para recomendar.

230
00:08:10,010 --> 00:08:11,500
Com isso, espero que

231
00:08:11,680 --> 00:08:13,350
agora você saiba como usar

232
00:08:13,700 --> 00:08:15,930
uma implementação vetorizada para calcular

233
00:08:16,560 --> 00:08:18,130
todas as classificações estimadas

234
00:08:18,210 --> 00:08:20,280
de todos os usuários e todos os filmes,

235
00:08:20,390 --> 00:08:21,720
e também fazer coisas como

236
00:08:21,920 --> 00:08:23,300
usar as variáveis aprendidas

237
00:08:23,930 --> 00:08:25,360
para encontrar quais são os filmes

238
00:08:25,480 --> 00:08:27,490
ou produtos que estão relacionados entre si.
Tradução: Pablo de Morais Andrade