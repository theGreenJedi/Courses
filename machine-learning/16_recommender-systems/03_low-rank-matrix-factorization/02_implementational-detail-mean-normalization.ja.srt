1
00:00:00,400 --> 00:00:01,510
ここまでで、あなたは

2
00:00:01,800 --> 00:00:03,600
リコメンダーシステムのアルゴリズム、または

3
00:00:04,030 --> 00:00:06,760
協調フィルリングのアルゴリズムの全ての主要な要素を見終わった事になる。

4
00:00:07,770 --> 00:00:08,770
このビデオでは、

5
00:00:08,940 --> 00:00:10,620
ちょっとした最後の実装の詳細を共有しておきたい。

6
00:00:12,000 --> 00:00:14,140
それは平均標準化(mean normalize)と呼ばれる物で、

7
00:00:14,350 --> 00:00:15,520
それはときどきアルゴリズムを

8
00:00:15,570 --> 00:00:17,090
ちょっと良く機能させる程度の物。

9
00:00:18,290 --> 00:00:20,820
平均標準化のアイデアのモチベーションを理解する為、

10
00:00:22,130 --> 00:00:24,390
なんの映画もレーティングしていない

11
00:00:24,710 --> 00:00:26,530
ユーザーの例を考えてみよう。

12
00:00:28,050 --> 00:00:29,290
つまり、我らの四人のユーザー、

13
00:00:29,540 --> 00:00:30,790
Alice, Bob, Carol, Daveに

14
00:00:31,060 --> 00:00:32,710
加えて、さらに5番目のユーザー、

15
00:00:32,870 --> 00:00:35,110
Eveを足したとしよう。彼女は一つの映画もレーティングしていないとする。

16
00:00:36,470 --> 00:00:37,920
我らの協調フィルリングのアルゴリズムが

17
00:00:38,350 --> 00:00:39,570
このユーザーに何をするのか見てみよう。

18
00:00:41,020 --> 00:00:43,140
n = 2としよう、

19
00:00:43,390 --> 00:00:44,420
つまり学習するフィーチャーは2つ。

20
00:00:45,410 --> 00:00:46,470
そしてパラメータベクトルの

21
00:00:46,630 --> 00:00:47,890
シータ5を学習したい。

22
00:00:48,140 --> 00:00:50,420
それはR 2だ。

23
00:00:51,130 --> 00:00:52,560
今このベクトルは

24
00:00:52,750 --> 00:00:55,920
R n+1じゃなくてR nとなったのを思い出そう。

25
00:00:57,070 --> 00:00:58,210
ユーザー番号5のEve のパラメータベクトルを学習したい。

26
00:00:59,780 --> 00:01:00,800
最適化の目的関数の

27
00:01:00,960 --> 00:01:02,020
最初の項を

28
00:01:02,200 --> 00:01:04,020
見てみると、

29
00:01:04,220 --> 00:01:05,490
ユーザーEveはなんの映画もレーティングしていないので、

30
00:01:05,730 --> 00:01:07,860
r ijが1となる

31
00:01:08,120 --> 00:01:10,750
映画は、

32
00:01:11,050 --> 00:01:12,810
Eve に関しては

33
00:01:13,130 --> 00:01:14,590
一つも無い。

34
00:01:14,700 --> 00:01:15,840
だからシータ5を決定するのに

35
00:01:16,060 --> 00:01:17,400
この最初の項はまったく寄与しない。

36
00:01:18,610 --> 00:01:19,790
何故ならEveはなんの映画もレーティングしていないのだから。

37
00:01:20,960 --> 00:01:22,120
だからシータ5に影響を与える

38
00:01:22,260 --> 00:01:24,300
唯一の項はこの項だ。

39
00:01:24,880 --> 00:01:25,830
つまり、我らは

40
00:01:25,910 --> 00:01:28,840
ベクトルシータ5 を、

41
00:01:28,950 --> 00:01:33,820
最後の正規化項をなるべく小さくするように

42
00:01:34,540 --> 00:01:35,500
選ぶ、と主張している。

43
00:01:35,920 --> 00:01:38,470
言い換えると、我らが最小化しようとするのは

44
00:01:39,040 --> 00:01:39,610
この ラムダ/2  の シータ5下付き添字1の二乗

45
00:01:40,880 --> 00:01:43,150
足すことの

46
00:01:43,820 --> 00:01:45,840
シータ5下付き添字2の二乗だ。

47
00:01:46,040 --> 00:01:47,170
以上がユーザー5に関する

48
00:01:47,270 --> 00:01:49,460
正規化項の要素だ。

49
00:01:49,740 --> 00:01:51,610
そして当然、

50
00:01:51,850 --> 00:01:53,280
あなたのゴールがこの項を

51
00:01:53,550 --> 00:01:55,540
最小化するなら、

52
00:01:55,900 --> 00:01:56,790
最終的に得られる

53
00:01:56,980 --> 00:01:58,520
シータ5は、イコール 0 0だ。

54
00:01:59,670 --> 00:02:01,550
何故なら正規化項は

55
00:02:01,850 --> 00:02:03,270
パラメータを

56
00:02:03,510 --> 00:02:05,120
0に近くなるように推奨する訳だが、

57
00:02:05,620 --> 00:02:07,580
そこでもし

58
00:02:07,730 --> 00:02:08,820
パラメータを0から引き離す

59
00:02:08,990 --> 00:02:10,210
データが存在しなければ、

60
00:02:10,410 --> 00:02:11,460
何故ならこの最初の項は

61
00:02:12,710 --> 00:02:13,800
シータ5には影響しないので、

62
00:02:13,880 --> 00:02:15,410
結局シータ5としては

63
00:02:15,690 --> 00:02:18,450
全ての要素が0のベクトルを得る事になる。

64
00:02:18,590 --> 00:02:19,610
すると、ユーザー5が

65
00:02:19,730 --> 00:02:20,920
映画をどうレーティングするかを

66
00:02:21,280 --> 00:02:22,570
予測しようとすると、どんな映画に対しても、

67
00:02:22,890 --> 00:02:25,850
シータ5の転置 xiは

68
00:02:26,900 --> 00:02:28,380
いかなるiに対しても、

69
00:02:29,950 --> 00:02:31,060
イコール0となる。

70
00:02:31,570 --> 00:02:33,320
シータ5はどのxに対しても0なので、

71
00:02:33,750 --> 00:02:35,780
内積は0となる。

72
00:02:35,900 --> 00:02:37,160
だから我らは結局、

73
00:02:37,310 --> 00:02:38,780
Eveはどの動画も

74
00:02:39,480 --> 00:02:40,870
0とレーティングする、と

75
00:02:41,170 --> 00:02:42,690
予測する事になる。

76
00:02:44,050 --> 00:02:45,970
でもこの予想はあんまり役に立たない、よね？

77
00:02:46,110 --> 00:02:47,310
つまり別々の映画を見ていくと、

78
00:02:47,770 --> 00:02:49,710
Love at Last、この最初の映画は、

79
00:02:50,130 --> 00:02:52,300
何人かは星5とレーティングした。

80
00:02:54,940 --> 00:02:56,870
そしてSwords vs. Karateですら、誰かは星5とレートしている。

81
00:02:57,410 --> 00:02:58,780
だからある人々はある種の映画を好むのだ。

82
00:02:59,270 --> 00:03:01,030
だからEveは全ての映画を

83
00:03:01,160 --> 00:03:03,750
0と付けると予測するのは、あまり便利では無い。

84
00:03:04,570 --> 00:03:05,850
さらに実際、もし我らが

85
00:03:06,410 --> 00:03:08,340
Eveは全てに星0のレーティングをする、と予測してしまうと、

86
00:03:09,050 --> 00:03:10,100
彼女に推薦する映画を決める

87
00:03:10,280 --> 00:03:11,660
良い方法も無くなってしまう。

88
00:03:11,810 --> 00:03:12,930
何故ならこれら全ての

89
00:03:13,130 --> 00:03:15,320
映画はEveの場合、

90
00:03:15,410 --> 00:03:16,810
完全に同じ予測値となってしまうから。

91
00:03:17,010 --> 00:03:18,500
どの映画も他より

92
00:03:18,660 --> 00:03:20,010
高いレーティングとならないので、

93
00:03:20,210 --> 00:03:22,880
彼女に進める映画が一つも無くなってしまう。それはあまり良くない。

94
00:03:24,520 --> 00:03:27,340
平均標準化法のアイデアはこの問題を修正する。

95
00:03:28,160 --> 00:03:29,410
それはこんな風に機能する。

96
00:03:30,760 --> 00:03:31,720
前と同様、全ての映画のレーティングを

97
00:03:32,370 --> 00:03:33,750
この行列Yにグルーピングする。

98
00:03:34,280 --> 00:03:35,400
つまりこれらのレーティングを

99
00:03:35,460 --> 00:03:36,700
全て持ってきて、この行列Yに

100
00:03:37,240 --> 00:03:38,400
グルーピングする。

101
00:03:38,560 --> 00:03:39,740
そしてこのここにある行の、

102
00:03:39,910 --> 00:03:41,220
全部はてなマークなのは、

103
00:03:41,670 --> 00:03:43,300
Eveがなんの映画もレーティングしていない事に対応している。

104
00:03:44,830 --> 00:03:46,890
ここで平均標準化を実行する為には、

105
00:03:47,140 --> 00:03:48,350
各映画の得たレーティングの

106
00:03:48,720 --> 00:03:50,610
平均を計算する。

107
00:03:51,120 --> 00:03:51,760
そして、それをミューというベクトルに

108
00:03:52,040 --> 00:03:54,780
保存する。

109
00:03:55,210 --> 00:03:57,250
つまり、最初の映画は二つの星5と二つの星0のレーティングを得たのだから、

110
00:03:57,760 --> 00:03:58,960
その平均は星2.5だ。

111
00:03:59,040 --> 00:04:01,470
二番目の映画の平均は

112
00:04:01,620 --> 00:04:04,300
星2.5だ。などなど。

113
00:04:04,470 --> 00:04:06,300
そして最後の映画は、0, 0, 5, 0だから

114
00:04:06,330 --> 00:04:07,440
0, 0, 5, 0の平均は

115
00:04:07,520 --> 00:04:09,190
平均をとると、

116
00:04:09,620 --> 00:04:11,500
平均は1.25レーティング。

117
00:04:12,240 --> 00:04:14,910
そして、全映画の

118
00:04:15,000 --> 00:04:15,900
レーティングを

119
00:04:16,020 --> 00:04:17,610
見ていき、そこから

120
00:04:18,010 --> 00:04:19,550
平均のレーティングを引いていく。

121
00:04:20,110 --> 00:04:22,990
つまりこの最初の要素、5は、2.5を引くから、2.5となる。

122
00:04:26,900 --> 00:04:29,380
二番目の要素5からは2.5を引くから

123
00:04:29,590 --> 00:04:30,000
2.5となる。

124
00:04:30,410 --> 00:04:31,760
そして次に0。

125
00:04:32,040 --> 00:04:34,560
0引く2.5だから、-2.5。 -2.5。

126
00:04:35,450 --> 00:04:36,530
言い換えると、私がやってる事は

127
00:04:36,620 --> 00:04:38,010
映画のレーティングの行列を

128
00:04:38,310 --> 00:04:39,440
もってきて、

129
00:04:39,960 --> 00:04:42,070
この幅の広い行列を持ってきて、

130
00:04:42,730 --> 00:04:45,580
各列から、その映画の平均のレーティングを引く、という事。

131
00:04:46,580 --> 00:04:47,580
つまり、私がやってるのは、

132
00:04:48,010 --> 00:04:49,600
各映画を、平均が0になるように

133
00:04:49,740 --> 00:04:51,610
標準化しているだけ。

134
00:04:52,800 --> 00:04:53,580
そして最後に一つ例を見る。

135
00:04:54,000 --> 00:04:56,010
この最後の列を見ると、0 0 5 0だ。

136
00:04:56,270 --> 00:04:56,940
1.25を引くから、

137
00:04:57,000 --> 00:04:58,590
結局ここの値と

138
00:05:00,950 --> 00:05:02,300
なる。

139
00:05:02,510 --> 00:05:03,730
そして現在、もちろん

140
00:05:03,940 --> 00:05:05,380
このはてなマークは

141
00:05:06,960 --> 00:05:06,960
はてなマークのままだ。

142
00:05:07,880 --> 00:05:09,630
だから、この新しい行列Yにある

143
00:05:09,810 --> 00:05:11,040
各映画も

144
00:05:11,210 --> 00:05:12,780
平均のレーティングは0となる。

145
00:05:13,940 --> 00:05:15,180
そこで次にやる事としては、

146
00:05:15,440 --> 00:05:16,850
このレーティングの集合を使って、

147
00:05:17,590 --> 00:05:20,170
協調フィルタリングアルゴリズムを行う。

148
00:05:20,480 --> 00:05:22,130
つまり、これをユーザーから取った

149
00:05:22,430 --> 00:05:24,200
データのフリをさせて、

150
00:05:24,420 --> 00:05:25,570
言い換えると、これらを

151
00:05:25,810 --> 00:05:27,400
ユーザーから取った実際の

152
00:05:27,530 --> 00:05:28,940
レーティングのフリをさせて、

153
00:05:29,250 --> 00:05:30,130
そしてこれを私のデータセットとして

154
00:05:30,270 --> 00:05:31,730
パラメータのシータjと

155
00:05:32,000 --> 00:05:33,920
フィーチャーのxiを

156
00:05:34,560 --> 00:05:36,540
学習させる。

157
00:05:36,860 --> 00:05:39,320
- これらの平均標準化された映画のレーティングから。

158
00:05:41,280 --> 00:05:42,040
映画のレーティングの

159
00:05:42,660 --> 00:05:43,910
予測をさせたくなったら、

160
00:05:44,070 --> 00:05:44,980
以下のようにする:

161
00:05:45,250 --> 00:05:46,830
ユーザーjの映画iに関しては、

162
00:05:47,130 --> 00:05:49,250
シータj転置 xi と

163
00:05:49,600 --> 00:05:54,730
予測する。

164
00:05:55,070 --> 00:05:55,990
ここでxとシータはこの、

165
00:05:56,590 --> 00:05:58,230
平均標準化したデータセットから学習したパラメータ。

166
00:05:59,180 --> 00:06:00,680
だが、このデータセットは

167
00:06:00,950 --> 00:06:02,260
既に平均が引かれた物だから、

168
00:06:02,330 --> 00:06:04,000
映画iに関して

169
00:06:04,040 --> 00:06:05,210
予測を行いたいなら、

170
00:06:05,510 --> 00:06:07,220
平均を足し戻す必要がある。

171
00:06:08,070 --> 00:06:08,730
だからミューiを

172
00:06:08,840 --> 00:06:10,690
足し戻す。

173
00:06:10,830 --> 00:06:11,780
以上が私の

174
00:06:11,830 --> 00:06:13,350
予測となる。そこでは、トレーニングデータから

175
00:06:13,660 --> 00:06:14,860
平均を全て引いたのだから、

176
00:06:14,930 --> 00:06:16,290
予測を行う時には、

177
00:06:16,440 --> 00:06:20,770
これらの平均、ミューiを

178
00:06:21,770 --> 00:06:23,030
映画iに対して

179
00:06:23,410 --> 00:06:23,880
足し戻さなくてはならない。

180
00:06:24,100 --> 00:06:25,320
特に、もしユーザー5、つまりEveに対して、

181
00:06:25,330 --> 00:06:26,840
前のスライドの議論が

182
00:06:27,010 --> 00:06:28,250
いまだに適用出来て、

183
00:06:28,440 --> 00:06:29,870
Eveはなんの映画も

184
00:06:30,080 --> 00:06:31,600
レーティングしてないので、

185
00:06:31,760 --> 00:06:32,930
だからユーザー5について

186
00:06:33,710 --> 00:06:35,030
学習したパラメータは

187
00:06:35,970 --> 00:06:37,990
まだイコール 0, 0だ。

188
00:06:38,270 --> 00:06:39,910
だから得られる

189
00:06:40,130 --> 00:06:41,320
物は、つまり、

190
00:06:41,690 --> 00:06:42,980
特定の映画iについて

191
00:06:43,130 --> 00:06:44,900
Eveの結果を予測すると、

192
00:06:45,480 --> 00:06:49,930
シータ5転置 xi 足すことの、

193
00:06:51,260 --> 00:06:52,890
ミューiを足し戻す、のだから、

194
00:06:53,010 --> 00:06:54,360
この最初の要素は

195
00:06:54,460 --> 00:06:57,520
シータ5が0なら0となる。

196
00:06:58,290 --> 00:06:59,190
だから映画iに関しては、

197
00:06:59,260 --> 00:07:00,660
ミューiになる、と予測する事になる。

198
00:07:01,090 --> 00:07:03,190
これは納得出来る。

199
00:07:03,380 --> 00:07:03,690
つまり、

200
00:07:03,900 --> 00:07:05,270
映画1に関しては、

201
00:07:05,390 --> 00:07:06,990
Eveが2.5とレーティングするだろう、と予測する訳だ。

202
00:07:07,270 --> 00:07:10,260
映画2はEveは2.5とレーティングするだろう、

203
00:07:10,420 --> 00:07:11,640
映画3はEveは2とレーティングすると

204
00:07:11,880 --> 00:07:13,000
予測することになる、

205
00:07:13,200 --> 00:07:14,510
などなど。

206
00:07:14,780 --> 00:07:15,960
これは実際に筋が通っている、

207
00:07:16,320 --> 00:07:17,730
何故ならEveがまだ

208
00:07:18,020 --> 00:07:18,870
何もレーティングしていないとすると

209
00:07:19,100 --> 00:07:20,180
この新しいユーザーEveについては

210
00:07:20,410 --> 00:07:21,630
我らは何も知らない事になる。
だから我らがする事といえば、

211
00:07:21,810 --> 00:07:23,770
各映画に対して

212
00:07:23,940 --> 00:07:25,140
それらの映画のレーティングの平均と

213
00:07:25,230 --> 00:07:27,520
予測する訳だ。

214
00:07:30,060 --> 00:07:31,480
最後に、ちょっと補足。

215
00:07:31,810 --> 00:07:33,290
このビデオでは、平均標準化について

216
00:07:33,540 --> 00:07:35,220
議論した。そこでは、Y行列の

217
00:07:35,320 --> 00:07:36,450
各列を、平均が0になるように

218
00:07:37,510 --> 00:07:38,100
標準化した。

219
00:07:39,020 --> 00:07:40,730
もし全くレーティングされていない

220
00:07:41,020 --> 00:07:42,330
映画がある場合は、

221
00:07:42,590 --> 00:07:44,320
それは何もレーティングしていないユーザーと似ているが、

222
00:07:44,590 --> 00:07:45,550
レーティングの一切無い

223
00:07:46,250 --> 00:07:47,530
映画がある場合、

224
00:07:47,590 --> 00:07:48,700
各行の平均が

225
00:07:49,320 --> 00:07:50,700
0になるようなバージョンの

226
00:07:50,900 --> 00:07:52,190
アルゴリズムを

227
00:07:52,790 --> 00:07:53,990
使う事も出来る。

228
00:07:54,280 --> 00:07:55,180
列を平均が0になるように標準化する代わりにだ。

229
00:07:55,500 --> 00:07:56,990
でもこちらは比較的

230
00:07:57,240 --> 00:07:58,770
重要では無いパターンかもしれない。何故なら、

231
00:07:58,870 --> 00:07:59,810
実際にレーティングの無い映画があったら、

232
00:08:00,040 --> 00:08:01,390
なんにせよその映画は

233
00:08:01,590 --> 00:08:03,920
誰にも推薦すべきでは無いかもしれないから。

234
00:08:04,700 --> 00:08:08,010
だから、何の映画もレーティングしていない

235
00:08:08,540 --> 00:08:09,980
ユーザーに対応するのは、

236
00:08:10,490 --> 00:08:11,780
何のレーティングも得ていない映画に

237
00:08:12,010 --> 00:08:13,170
対応するよりも、

238
00:08:13,310 --> 00:08:14,550
より重要

239
00:08:14,860 --> 00:08:16,090
かもしれない。

240
00:08:18,930 --> 00:08:20,080
ではまとめだ。

241
00:08:20,360 --> 00:08:21,830
以上が協調フィルタリングの前処理として

242
00:08:22,110 --> 00:08:25,110
平均標準化を行う方法だ。

243
00:08:25,740 --> 00:08:26,670
あなたのデータセットによっては、

244
00:08:26,960 --> 00:08:28,140
この手法はあなたの実装を

245
00:08:28,540 --> 00:08:30,040
ちょっぴり良く振舞わせてくれるかもしれない。