在接下来的一些视频中 我想介绍给你们 有关推荐系统(recommender systems)的内容 我想讨论推荐系统 有两个原因 或者说两方面的动机 第一个原因就是 它是机器学习的一个重要应用 在过去的几年中 我有时会去参观 硅谷的各种科技类公司 我经常在那些公司里 与开发机器学习应用的人交流 然后我问他们 什么才是 机器学习最重要的应用 或者什么样的机器学习的应用 是你最想让它的表现 得到改进的 我最常听到的回答 其中之一就是 现在硅谷有好多个团队 正试图建立更好的推荐系统 于是你想想 这些网站的内容 比如亚马逊 比如 Netflix 比如 eBay 又或者 苹果公司的 iTunes Genius 做的事情 有很多网站 或者很多系统 试图向用户推荐新产品 比如说亚马逊向你推荐新书 Netflix 向你推荐新电影 诸如此类 而这些推荐系统 可能会看看你以前 购买过什么书 或者以前你给哪些电影 进行过评分 这些系统贡献了 现今亚马逊收入的 相当大一部分 而对像 Netflix 这样的公司 他们向用户推荐的电影 占了用户观看的电影的 相当大一部分 于是一个推荐系统 其表现的一些改进 就能带来 显著且即刻产生的影响 这种影响关系到 许多公司的最终业绩 推荐系统在机器学习学术界 是个很有意思的问题 如果我们去参加 一个学术类的机器学习会议 推荐系统的问题 几乎得不到什么关注 至少它是学术界 当前动向里较小的一部分 但如果你看看正在发生的事 对很多科技类公司而言 建立这些推荐系统似乎是优先要办的事 这就是我想在这门课中谈论推荐系统的原因之一 我想谈论推荐系统 第二个原因是 当我们接近 这门课的最后几段视频时 我想谈论 并和你们分享 机器学习中的 一些宏大的想法 或者说 机器学习领域内的宏大想法 我们已经在这门课中看到 对于机器学习来说 特征量是重要的 你选择的特征 对你学习算法的表现有很大影响 在机器学习领域 有这么一个宏大的想法 就是对于一些问题 可能不是所有问题 但是对一些问题而言 存在一些算法 能试图自动地替你学习到一组优良的特征量 这样 与其手动设计 或者手动编写特征 也就是目前 我们一直在做的事 有些情形下 你或许能够采用一种算法 来学习到使用什么特征量 而推荐系统 就是这种情形的一个例子 还有其他很多例子 但通过学习推荐系统 我们将能够 对这种学习特征量的想法 有一点理解 我想你至少会看到一个例子 来说明机器学习中的这个宏大想法 好了 闲话不多说 让我们开始吧 先讨论推荐系统的问题表述 作为我的课堂举例 我将使用 预测电影评分这个时兴的问题 问题是这样的 假想你是一个网站 或是一家公司 销售或出租电影 或是手头别的商品 不难想到 亚马逊 Netflix 还有我想 iTunes 都是 做这种生意的公司的例子 比方说 你让用户使用1至5颗星 给不同的电影评分 用户就可能评出 比如说1、2、3、4或5颗星 为了让这个例子 更漂亮一些 我将允许评分 在0颗星至5颗星之间 只是因为这让数学上的结果更漂亮些 虽然大多数这类网站采用1至5颗星的分级 我这里有5部电影 《爱到最后》 《浪漫永远》 《小爱犬》 《无尽狂飙》 还有 《剑与空手道》 我们有4位用户 名叫 Alice Bob Carol 和 Dave 首字母为A B C和D 我们称他们用户1 2 3和4 比方说 Alice 她非常喜欢 《爱到最后》 把它评为5颗星 她还喜欢 《浪漫永远》 也把它评为5颗星 她没看过 《小爱犬》 也就没评分 这样我们没有这个评分数据 Alice 很不喜欢 《无尽狂飙》 或是 《剑与空手道》 而另一位用户 Bob 2号用户 可能给不同的几部电影评了分 可能他喜欢 《爱到最后》 但没看过 《浪漫永远》 这些电影他评了4 0和0颗星 可能我们的3号用户 给这部电影评了0颗星 但没看这一部 然后这几部0 5和5颗星 我们就这样填进去一些数字 这里再引入一些符号 这些符号 将贯穿使用在我们的课程中 我将用 n_u 表示用户数量 在这个例子中 n_u等于4 下标u 代表用户 n_m 将用来表示电影数量 这里我有5部电影 于是 n_m 等于5 这个例子中我有 这个例子中我差不多 有3部电影 大概算是爱情或爱情喜剧片 还有2部动作片 你看这个例子 似乎 Alice 和 Bob 把高评分给了 这些爱情喜剧片 或者说有关爱情的电影 而给动作片评分很低 对于 Carol 和 Dave 正好相反是吧？ Carol 和 Dave 3号和4号用户 非常喜欢动作片 给了这些电影高评分 但是他们 对浪漫爱情类型的电影 不那么喜欢 说得明确一点 在推荐系统问题中 我们已知这些数据 我们的数据由下面这些组成 我们有这些数值 r(i, j) 如果用户 i 给电影 j 评过分 那么 r(i, j) 等于1 我们的用户 只给这一些电影评过分 而对那些电影 我们没有用户评分 当 r(i, j) 等于1时 也就是当用户 j 给电影 i 评过分时 我们还有这个数值 y(i, j) 它表示用户 j 给电影 i 的评分 这样 y(i, j) 将会是 一个0至5的数 取决于星级评分 也就是那位用户给那部电影 评出的0至5颗星 于是推荐系统问题就是 给定这些数据 给定这些 r(i, j) 和 y(i, j) 数值 然后浏览全部数据 关注所有没有电影评分的地方 并试图预测 这些带问号的地方 应该是什么数值 在这个例子中 电影数量很少 用户数量也很少 因此大多数用户给大多数电影评过分 但在现实情况中 你的用户 他们每个人 可能只给很少一部分电影评过分 但看这里的数据的话 你想如果 Alice 和 Bob 都喜欢爱情电影 我们大概就认为 Alice 会给这部电影评5颗星 我们大概就认为 Bob 会给这部电影评4.5颗星 或者一个高评分 而我们觉得大概 Caro l和 Dave 会给这些电影很低的评分 而 Dave 如果他很喜欢动作片的话 他可能会 给 《剑与空手道》 评4颗星 也可能是5颗星 对吧？ 于是 我们开发一个推荐系统 主要工作就是 想出一种学习算法 能够帮我们自动地 填上这些缺失的数值 这样我们就能 比方说 看一下 用户还没看过哪些电影 然后向用户 推荐新电影 你试图预测 还有什么电影可能会让一位用户感兴趣 这些就是推荐系统问题的正式表述 在下一段视频中 我们将开始开发一种学习算法来解决这个问题 【教育无边界字幕组】翻译：TheWindRider 校对/审核：所罗门捷列夫