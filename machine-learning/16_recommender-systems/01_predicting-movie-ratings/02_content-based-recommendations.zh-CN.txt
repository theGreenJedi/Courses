在过去的视频中 我们谈到 推荐系统的问题 举个例子 假如你有一些电影 还有一些观众 他们每个人都对某些电影 进行了一些评价打分 把电影按照1星到5星 或者0到5星评分 我想做的 是通过这些 用户的评价来预测出 他们会怎样给还没看过的电影打分 在这段视频中 我想介绍第一种构造 推荐系统的方法 这种方法叫做“基于内容的推荐” 这是我们之前的数据集 我想提醒一下 关于这个符号表示 我是用n_u来表示 用户的数量 在这里等于4 n_m来表示电影的数量 这里是5部电影 那么我应该如何预测 这些缺少的值呢？ 我们假设 对这些电影的每一部 我都用一些特征来描述 具体来说 我们假设每部电影有两种特征 分别用x1和x2代表 x1表示这部电影 属于爱情电影的程度 x2表示这部电影 是动作电影的程度 因此 对于电影 《爱到最后》 那么这部电影 是爱情电影的比率为0.9 这是一部绝对的爱情电影 但是它属于动作电影的比率为0 表示几乎没有动作内容 《浪漫永远》 爱情比率1.0 大部分都是爱情内容 动作比率0.01 我也不知道为什么 可能出了一场车祸什么的 所以有一丁点动作成分 我们跳过一些 看最后这个 《剑与空手道》 爱情比率为0 表示没有爱情成分 估计全片都是动作情节 同样的 《无尽狂飙》 可能里面有一丁点爱情 但主要是动作 《小爱犬》 也算爱情电影 基本没有动作成分 所以 如果每部电影 我们有这样的一些特征 那么可以用一个特征矩阵表示 对于电影1 我们暂且用电影1,2,3,4,5来指代这些电影 所以对于电影1 《爱到最后》 我的两个特征值 分别是0.9和0 这就是特征变量 x1 和 x2 我们还是像以前一样 加一个额外的特征变量 截距特征变量 x0 其值为1 把三个特征变量放在一起 这样我就有了特征 x(1) 这个上标括号(1) 表示这是我第一部电影的 特征向量 这个向量内部是这样的 第一个值是截距项1 然后是两个特征值0.9和0 就这样 所以特征x(1) 就是电影《爱到最后》的特征向量 对电影《浪漫永远》 我们有另外一个特征向量 x(2) 等等 以此类推 最后电影《剑与空手道》 有另外一个向量 x(5) 同样地 为了跟 我们之前的符号表达 保持一致 我们仍然用 n 表示特征变量数 不包括 x0 这样 n就等于2 表示两个特征变量x1和x2 分别对应每部电影的 爱情程度 和动作程度 为了进行预测 我们可以这么做 我们可以把对 每个观众打分的预测 当成一个独立的线性回归问题 具体来说 比如每一个用户j 我们都学习出一个参数θ(j) 在这里是一个三维向量 更一般的情况是 θ(j)为一个n+1维向量 n是特征数 不包括截距项x0 然后我们要根据参数向量θ 与特征x(i)的内积 来预测用户j 对电影i的评分 我们来看一个具体的例子吧 我们来看用户1 Alice 与Alice对应的 参数向量 就应该是θ(1) 第二个用户Bob 就是跟第二个向量 θ(2)对应的 Carol则对应 另一个参数向量θ(3) 第四个用户Dave 对应另一个参数向量θ(4) 现在假如我们想预测 Alice对电影 《小爱犬》 是如何评价的 那么这部电影 有一个参数向量x(3) x(3)是等于[1 0.99 0] 其中1是截距项 然后是两个特征 0.99和0 假如说 对于这个例子 你已经知道Alice的 参数向量θ(1) 后面我们还会 详细讲到 这个参数是怎么得到的 但现在就假设 你已经知道了 用某种学习算法得到的 参数向量θ(1) 它的值等于 [0 5 0] 因此 我们对 这一项的预测 就等于θ(1)—— θ(1)是Alice的参数向量 ——的转置 乘以x(3) x(3)是3号电影 《小爱犬》的特征向量 因此 这两个 向量的内积 就等于 5 × 0.99 等于4.95 因此我对这个值的预测 其结果将为4.95 这看起来算是一个 比较合理的预测 对于参数向量θ(1)来说 因此 我们做的事情 实际上就是对每个用户 应用不同的线性回归模型 并且我们预测 Alice 会做的是 Alice 对应一个参数θ(1) 我们要用这个参数 来预测Alice 对这部电影的评价 这个评价和电影的 爱情程度和动作程度是相关的 然后Bob Carol 和 Dave 他们每个人 都有一个不同的线性方程 来算出电影的爱情性和动作性 或者说某部电影的爱情程度 和动作程度 这就是预测它们评分结果的方法 我们可以把这个问题 写成如下更正式一些的形式 我们用r(i,j)=1 来表示用户j 对电影i进行了评分 y(i,j)则表示用户j 对电影i的评分值 如果这个用户 对这部电影进行过评价 在前面的幻灯片中 我们还定义了θ(j) 表示用户j对应的参数向量 x(i)是某部电影i的 特征向量 那么某个用户对 某部电影的评分就是这样的 现在 我临时介绍一个 额外的表示符号 m(j) 我们用m(j) 来表示用户j评价过的电影数 我们只在这一页中 使用m(j)这个符号 为了学习参数向量θ(j) 我们应该怎么做呢？ 这是一个基本的线性回归问题 因此我们要做的 就是选择一个参数向量θ(j) 使得预测的结果 这里 尽可能接近 我们在训练集中的观测值 我们来写一下 为了学习出 参数向量θ(j) 我们要关于θ(j)最小化 下面这个求和值 这个求和值 是用户j 对电影的所有评价 所以求和范围是所有的i值 即r(i,j)=1时的所有i 这个求和序列的读法是 对所有满足 r(i,j)=1的这些i 进行求和运算 这样就求出了所有用户j 所评价过的电影 然后我要计算的内容 是θ(j)的转置 乘以x(i) 这就是用户j 对电影i评分的预测值 减去y(i,j) 这是实际观测到的评分值 然后平方 在求和式前面 除以用户j评价过的 所有电影的数量 也就是乘上1/2m(j) 这其实就很像 最小二乘回归 或者线性回归 我们要选择一个 最佳的参数θ(j)来最小化这个平方误差项 当然如果你愿意的话 你也可以加上正则化项 加上λ/2m 实际上应该是2m(j) 因为我们有m(j)个样本对吧？ 因为如果用户j 对这么多电影进行了评分的话 那么我们就需要这么多数据点 来拟合参数θ(j) 然后 我还是加上 我一般使用的正则化项 θk(j)的平方关于k求和 同样地 这里的求和是从k等于1到n 所以这里的θ(j) 将是一个 n+1维的向量 在我们之前那个例子中n为2 但更一般地 n应该是每一部电影的特征数 按照惯例 我们还是不对θ(0)进行正则化 我们不对偏差项 进行正则化 因为这个求和是从k等于1到n 因此 如果你对这个式子 关于θ(j)求最小值的话 你会得到一个解 你会得到一个很好的θ(j)的估计值 预测出用户j 对电影的评分值 对于推荐系统 我要把符号稍微变化一下 为了让数学更简单 我要去掉这个m(j) 这就一个常数 我可以去掉这一项 不改变θ(j)的 最优化结果 所以你可以把这个式子 看成是算出整个表达式 然后乘以一个m(j)项 然后去掉这个常数项 当我最小化的时候 我还是会得到同样的θ(j) 再重复一下 我们前一页写的 这是我们的最优化目标 为了学习θ(j) θ(j)是用户j对应的参数向量 我们要关于θ(j)最小化 这个最优化目标 这是我们通常的 平方误差项 这是我们的正则化项 当然 在构建 推荐系统的时候 我们也不想只对某一个用户 学习出参数向量 我们想对所有的用户都学习出θ 因为我有n_u个用户 所以我希望学习出 所有的参数 那么我要做的是 将这个最优化目标 另外再加上一个求和 所以 这里的表达式 前面是1/2 这实际上就跟 我们上面的一样 唯一不同的是 现在不是只对一个θ(j) 现在我要对所有的用户 求这个目标函数的和 然后对整个优化目标 求最小值 最小化整个这个代价函数 当我关于θ(1) θ(2) 一直到θ(n_u) 最小化 这个函数时 我就会得到对每个用户 不同的参数向量 然后我可以用它们 来对所有的用户 所有这n_u个用户 来作出预测了 把所有这些放在一起 最上面的就是 我们的最优化目标 给这个项 起一个名字吧 就叫它J(θ(1), ... ,θ(n_u)) 同样地 J还是我们要最小化的最优化目标函数 接下来 为了 求出这个最小值 如果你想要用 梯度下降来更新的话 你可能会用到这些式子 你可能会用 θ(j)k 减去学习速率α 乘以右边这一项 对于k=0和k≠0的情况 我们的式子有一点点区别 因为我们的正则化项 只对k不为0的θ(j)k 进行正则化 因此 我们不对 θ0进行正则化 因此这里在更新的时候 k=0和k≠0会有一点区别 这里这一项 这实际上是 你的最优化目标函数 对你的参数 求偏微分 对吧？ 因此 这实际上就是 梯度下降法 我已经算出了偏微分然后放在这里了 如果你觉得这个 梯度下降的更新 看起来跟之前 线性回归差不多的话 那是因为这其实就是线性回归 唯一的一点区别 是在线性回归中 我们有1/m项 实际上这里我们也有 1/m(j)项 但在前面我们 推导最优化目标函数时 我们忽略了这个项 因此这里就没有了 除此之外 实际上就是 对所有的训练样本求和 预测误差乘以 xk 加上正则化项 组成了这个导数项 所以 如果你用 梯度下降法的话 你可以这样 最小化代价函数J 来学习出所有的参数 当然 用这些微分项 如果你愿意的话 你也可以把它们用在 更高级的优化算法里 比如聚类下降 或者L-BFGS(Limited-memory Broyden–Fletcher–Goldfarb–Shanno Algorithm) 或者别的方法 来最小化代价函数J 通过这节课 你应该知道了 怎样应用一种 事实上是线性回归的一个变体 来预测不同用户对不同电影的评分值 这种具体的算法叫 ”基于内容的推荐“ 或者”基于内容的方法“ 因为我们假设 我们有不同电影的特征 我们有了电影 内容的特征 比如电影的爱情成分有多少？ 动作成分有多少？ 我们就是用电影的这些特征 来进行预测 但事实上 对很多电影 我们并没有这些特征 或者说 很难得到 所有电影的特征 很难知道 我们要卖的产品 有什么样的特征 所以在下一段视频中 我们将谈到 一种不基于内容的推荐系统 我们应该如何处理 也就是 没有别人 给我们这些电影数据的特征信息 【教育无边界字幕组】翻译：所罗门捷列夫 校对：竹二个 审核：Naplessss