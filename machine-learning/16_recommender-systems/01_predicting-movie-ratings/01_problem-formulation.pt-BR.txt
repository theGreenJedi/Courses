Neste próximo conjunto de vídeos eu gostaria de falar sobre Sistemas Recomendadores. Existem dois motivos para falar sobre Sistemas Recomendadores. O primeiro é apenas que trata-se de uma importante aplicação de Aprendizagem de Máquina. Nos últimos anos, eu tenho visitado diferentes companias de tecnologia aqui no Vale do Silício e eu frequentemente converso com pessoas que trabalham com aplicações de Aprendizagem de Máquina e eu tenho perguntado às pessoas quais são as mais importantes aplicações de Aprendizagem de Máquina ou quais são as aplicações de Aprendizagem de Máquina que você mais gostaria de obter uma melhoria de desempenho. E uma das mais frequentes respostas que eu ouvi é que existem vários grupos além do Vale do Silício agora, tentando construir Sistemas Recomendadores melhores. Assim, se você pensa sobre o que os portais da Web como Amazon, ou Netflix ou Ebay, ou iTunes Genius, produzido pela Apple, fazem, existem vários portais ou sistemas que tentam recomendar novos produtos. Assim, a Amazon recomenda novos livros pra você, Netflix tenta recomendar novos filmes, e assim por diante. E esses Sistemas Recomendadores, que observam quais livros você poderia ter comprado no passado ou que filmes você  classificou no passado, são os sistemas que são responsáveis hoje, por uma fração substancial da receita da Amazon e por uma empresa como Netflix, as recomendações que realizam para os usuários, é também responsável por uma fração substancial dos filmes assistidos pelos seus usuários. E então uma melhoria em desempenho de um Sistema Recomendador pode ter um substancial e imediato impacto nos resultados de muitas dessas companias. Sistemas Recomendadores consiste um problema divertido, dentro de Aprendizagem de Máquina que poderíamos tratar em uma conferência acadêmica sobre Aprendizagem de Máquina. O problema de Sistemas Recomendadores, realmente recebe atenção relativamente baixa, ou pelo menos é uma das menores porções do que é tratado na Academia. Mas ao olhar para o que está acontecendo, para muitas empresas de tecnologia, a habilidade de construir esses sistemas tem tido alto prioridade. E esta é uma das razões pelas quais vou falar deles nesta aula. O segundo motivo que eu quero falar sobre Sistemas Recomendadores é que como abordamos nos últimos vídeos recentes desta aula eu queria falar sobre algumas das grandes ideias em Aprendizagem de Máquina e conversar sobre estas ideias. E já temos visto nesta aula que características são importantes para Aprendizagem de Máquina. A característica escolhida terá um grande efeito no desempenho do seu Algoritmo de Aprendizagem. Assim, há esta grande ideia em Aprendizagem de Máquina, a qual  para alguns problemas, talvez não todos problemas, mas alguns problemas, existem algoritmos que podem tentar descobrir, automaticamente, um bom conjunto de características pra você. Então, em vez de tentar projetar ou codificar manualmente as características, como estamos fazendo, existem alguns cenários em que você pode ser capaz de ter um algoritmo, apenas para aprender qual característica usar e os Sistemas Recomendadores são apenas um desses cenários. Há muitos outros, mas ao estudarmos Sistemas Recomendadores, poderemos ir um pouco nesta ideia de aprender as características e você será capaz de ver pelo menos um exemplo disto, eu penso, da mesma forma, a grande ideia em aprendizagem de máquina. Então, sem demoras, vamos começar a falar sobre a formulação de problema em Sistema Recomendador. Como meu exemplo corrente, eu vou usar o problema moderno de prever classificações de filme. Então, aqui está o problema. Imagine que você é um website ou uma compania que vende ou aluga filmes. E então, você sabe Amazon, Netflix, e eu penso iTunes são todos exemplos de companias que fazem isso, e digamos que você deixe os seus usuários classificarem diferentes filmes, usando de 1 a 5 estrelas. Então,usuários podem, você sabe, dar 1, 2, 3, 4 ou 5 estrelas. Apenas para tornar este exemplo um pouco melhor, eu vou permitir de 0 a 5 estrelas, pois isto tornará alguns dos cálculos mais interessantes. Porém, a maioria destes websites usam a escala de 1 a 5. Então eu tenho aqui 5 filmes: Love That Lasts, Romance Forever, Cute Puppies of Love, Nonstop Car Chases e Swords vs. Karate. E temos 4 usuários os quais se chamam Alice, Bob, Carol e Dave, com iniciais A, B, C e D, vamos chamá-los de usuários 1, 2, 3 e 4. Então, digamos que Alice realmente gosta de Love That Lasts e o qualifica com 5 estrelas, gosta de Romance Forever e o qualifica com 5 estrelas. Ela não assistiu Cute Puppies of Love e não deu nota, então não temos uma qualificação para ele e Alice realmente não aprecia Nonstop Car Chases ou Swords versus Karate. E um outro usuário, Bob, usuário 2, talvez qualificou um conjunto diferente de filmes, talvez ela goste de Love That Lasts, não assistiu Romance Forever, apenas temos uma nota 4, uma 0, outra 0, e talvez nosso 3º usuário, qualifica este com 0, não assistiu aquele um, 0,5,5 e vamos apenas preencher alguns dos números. E então, apenas introduzir um pouco de notação, esta notação que estaremos usando, vou usar nu para denotar o número de usuários. Então, neste exemplo, nu será igual a 4. Assim, o u subescrito representa usuários e Nm, usaremos para denotar o número de filmes, então aqui eu tenho 5 filmes com Nm igual a 5. E, para este exemplo, eu tenho para este exemplo, eu tenho talvez 3  filmes românticos ou comédias românticas e 2 filmes de ação e, se você olha para este pequeno exemplo, ele parece Alice e Bob dando altas notas para estas comédias românticas ou filmes sobre amor e dando muito notas baixas para filmes de ação e, para Carol e Dave, é o oposto, certo? Carol e Dave, usuários três e quatro, realmente gostam de filmes de ação e atribuem notas altas, mas não gostam muito de filmes do tipo romance e amor. Especificamente, em problemas de Sistemas Recomendadores, temos os seguintes dados. Nossos dados envolvem o seguinte: temos estes valores r(i,j) e r(i,j) é 1 se o usuário j tiver classificado o filme i. Então nossos usuários classificam somente alguns dos filmes, e então, não temos classificações para aqueles filmes. E sempre r(i,j) for igual a 1, sempre que o usuário j tiver classificado o filme i, também obtemos estenúmero y(i,j) o qual é a classificação dada pelo usuário J ao filme i. E assim, y(i,j) seria um número de 0 a 5, dependendo da classificação de estrelas, 0 a 5 estrelas que o usuário deu àquele filme em particular. Então, ao problema de Sistemas Recomendadores possui este dado que tem estes r(i,j) e os y(i,j) para observar por meio dos dados e olhar para todas as classificações de filmes que estão ausentes e tentar predizer o que estes valores de interrogação deveriam ser. No exemplo específico, eu tenho um número bem pequeno de filmes e um número bem pequeno de usuários e então a maioria dos usuários têm classificado a maioria dos filmes, mas em cenários realísticos, seus usuários, cada um dos seus usuários pode ter classificado somente uma fração minúscula dos seus filmes, mas olhando para este dado, se Alice e Bob gostam de filmes românticos talvez pensemos que Alice teria dado a este um 5. Talvez pensemos que Bob teria dado a este um 4.5 ou algum valor mais alto, como pensamos que talvez Carol e Dave estavam fazendo essas classificações bem baixas. E Dave, bem, se Dave realmente gosta de filmes de ação, talvez ele teria dado a Swords and Karate uma classificação 4 ou, talvez, uma classificação 5. Ok? Assim, o nosso trabalho em desenvolver um Sistema Recomendador inicia com um algorítmo de aprendizagem que possa, automaticamente, preencher esses valores que nos faltam, que podemos olhar e dizer os filmes que os usuários ainda não assistiram e recomendar novos filmes para eles assistirem. Você tenta predizer o que mais possa ser interessante para um usuário. Então, este é o formalismo do problema de Systemas Recomendadores. No próximo vídeo, começaremos a desenvolver um algorítmo de aprendizagem para resolver este problema.
Tradução: Osvandre Martins