1
00:00:00,080 --> 00:00:01,060
次に続く一連のビデオで

2
00:00:01,180 --> 00:00:01,970
リコメンダーシステムについて

3
00:00:02,300 --> 00:00:03,700
お話したい。

4
00:00:04,730 --> 00:00:05,810
そこには2つほど理由が、、、

5
00:00:05,940 --> 00:00:08,590
私がリコメンダーシステムについて扱いたいと思うのは、2つほど理由がある。

6
00:00:09,640 --> 00:00:10,670
1つ目は単に、それが

7
00:00:10,830 --> 00:00:13,830
機械学習の重要な適用例だからだ。

8
00:00:14,160 --> 00:00:15,680
ここ数年、しばしば

9
00:00:15,810 --> 00:00:16,840
ここ、シリコンバレーにある、

10
00:00:17,510 --> 00:00:18,720
テクノロジーの会社をいくつか訪れたが、

11
00:00:18,820 --> 00:00:20,040
そこで機械学習を応用している人たちと

12
00:00:20,390 --> 00:00:21,270
しばしば話す機会があるのだが、

13
00:00:21,370 --> 00:00:23,010
そういう時に私は

14
00:00:23,200 --> 00:00:24,120
機械学習の一番重要な

15
00:00:24,260 --> 00:00:26,840
応用は何か、または

16
00:00:27,450 --> 00:00:28,530
何に機械学習を応用すると

17
00:00:28,550 --> 00:00:29,520
もっともあなたのパフォーマンスが上がると思うか？と

18
00:00:29,790 --> 00:00:31,130
問うている。

19
00:00:31,890 --> 00:00:32,690
そこでもっとも良く聞く回答は

20
00:00:33,020 --> 00:00:34,240
レコメンダーシステムだ。

21
00:00:34,590 --> 00:00:35,710
ここシリコンバレーでは現在

22
00:00:36,020 --> 00:00:38,250
より良いレコメンダーシステムを作ろうとしているグループがたくさんある。

23
00:00:39,570 --> 00:00:40,460
ここで以下のようなwebサイト

24
00:00:40,800 --> 00:00:42,390
例えば

25
00:00:42,540 --> 00:00:44,100
アマゾンとかNetflixとか

26
00:00:44,840 --> 00:00:46,100
eBayとか

27
00:00:46,830 --> 00:00:48,230
Appleの作ったiTunes Geniusとかについて考えてみると

28
00:00:48,480 --> 00:00:49,450
世の中のたくさんのwebサイトや

29
00:00:50,050 --> 00:00:51,520
システムが新製品を使うように

30
00:00:51,670 --> 00:00:53,140
リコメンド（推薦）しようとしている。

31
00:00:53,360 --> 00:00:54,380
Amazonは新しい本をあなたにリコメンドするし、

32
00:00:54,630 --> 00:00:55,840
Netflixは新しい映画をあなたに

33
00:00:56,230 --> 00:00:58,090
薦めようとする、などなど。

34
00:00:58,430 --> 00:00:59,560
そしてこれらの種類のリコメンダーシステムは

35
00:01:00,130 --> 00:01:01,480
過去にどんな本とかを購入したか、

36
00:01:01,560 --> 00:01:02,430
どんな映画を過去にレーティングしたか、

37
00:01:02,890 --> 00:01:03,820
などを調べたりするが、

38
00:01:04,010 --> 00:01:05,100
だがこれらのシステムは

39
00:01:05,140 --> 00:01:06,390
今日についてのシステムだ。

40
00:01:07,470 --> 00:01:09,410
アマゾンの収益のかなりの割合、

41
00:01:09,620 --> 00:01:10,630
そしてNetflixのような会社の場合、

42
00:01:10,710 --> 00:01:12,520
ユーザーが見ている映画の

43
00:01:13,950 --> 00:01:14,710
かなりの割合は

44
00:01:15,180 --> 00:01:16,610
彼らが行っているレコメンドに

45
00:01:16,830 --> 00:01:18,250
依存している。

46
00:01:18,520 --> 00:01:20,700
だからレコメンダーシステムの

47
00:01:20,780 --> 00:01:22,410
パフォーマンスを改善する事は

48
00:01:22,520 --> 00:01:24,070
これらの会社の

49
00:01:24,680 --> 00:01:26,340
基本となるラインに

50
00:01:26,880 --> 00:01:28,010
かなりの大きさの直接的な

51
00:01:28,370 --> 00:01:31,380
インパクトを与える。

52
00:01:31,710 --> 00:01:32,660
レコメンダーシステムは機械学習学界において

53
00:01:32,870 --> 00:01:34,530
いわゆる可笑しい問題なので

54
00:01:34,870 --> 00:01:35,890
学界の機械学習カンファレンスに

55
00:01:35,980 --> 00:01:37,230
行くと、

56
00:01:38,430 --> 00:01:39,950
レコメンダーシステムの問題は

57
00:01:40,190 --> 00:01:41,560
実際にはほとんど注意を引かないか、

58
00:01:42,430 --> 00:01:43,680
せいぜい学界のちょっとの割合に

59
00:01:43,960 --> 00:01:46,200
過ぎない程度だ。

60
00:01:47,140 --> 00:01:48,010
だが何が起きているかを見てみると、

61
00:01:48,570 --> 00:01:50,200
多くのテクノロジーの会社にとって、

62
00:01:50,700 --> 00:01:53,500
これらのシステムを構築する能力は多くの会社にとって優先度が高い。

63
00:01:54,430 --> 00:01:56,460
そしてそれがそれらをこのクラスで扱いたい理由の一つだ。

64
00:01:58,280 --> 00:01:59,420
レコメンダーシステムを扱いたい

65
00:01:59,520 --> 00:02:00,570
2つ目の理由は

66
00:02:01,170 --> 00:02:02,460
クラスの終わりまで

67
00:02:02,910 --> 00:02:04,080
あと少しのビデオとなってきたので

68
00:02:05,120 --> 00:02:06,300
機械学習において全般的に重要な

69
00:02:06,700 --> 00:02:07,740
考え方を話して

70
00:02:08,410 --> 00:02:09,410
あなたと共有しておきたい。

71
00:02:09,510 --> 00:02:11,560
機械学習において全般的に重要な物のいくつかを。

72
00:02:12,400 --> 00:02:13,840
そして、このクラスで既に見て来たように

73
00:02:14,070 --> 00:02:15,870
機械学習において、フィーチャーは

74
00:02:15,990 --> 00:02:17,000
重要だ、

75
00:02:17,640 --> 00:02:19,170
あなたがフィーチャーとして何を選ぶかは

76
00:02:19,400 --> 00:02:22,340
学習アルゴリズムのパフォーマンスに大きな影響を与える。

77
00:02:23,290 --> 00:02:24,320
だから機械学習には

78
00:02:24,620 --> 00:02:25,890
いくつかの問題、全てでは無いが、

79
00:02:25,990 --> 00:02:27,630
いくつかの問題については、

80
00:02:27,790 --> 00:02:29,690
良いフィーチャーのセットを自動的に学習してくれることに

81
00:02:29,910 --> 00:02:31,610
挑戦するアルゴリズムが

82
00:02:31,950 --> 00:02:34,860
存在する。

83
00:02:35,210 --> 00:02:35,970
つまりフィーチャーをお手製でデザインしたり

84
00:02:36,660 --> 00:02:37,840
お手製でコーディングする代わりに

85
00:02:38,100 --> 00:02:39,120
それは我らがここまでやってきた

86
00:02:39,340 --> 00:02:40,350
方法だが、その代わりに

87
00:02:40,430 --> 00:02:41,790
いくつかのシチュエーションでは

88
00:02:42,050 --> 00:02:42,650
どのフィーチャーを使うべきかを

89
00:02:42,770 --> 00:02:43,780
学習出来るアルゴリズムがあるかもしれない。

90
00:02:43,920 --> 00:02:45,200
そしてレコメンダーシステムはそんなシチュエーションの

91
00:02:45,580 --> 00:02:47,690
一例となっている。

92
00:02:47,880 --> 00:02:49,250
他にもこの例となってる物はあるが、

93
00:02:49,690 --> 00:02:51,150
レコメンダーシステムを通して

94
00:02:51,320 --> 00:02:52,770
フィーチャーを学習するというアイデアを

95
00:02:53,090 --> 00:02:54,380
ちょっと深く理解出来るだろうし、

96
00:02:54,710 --> 00:02:56,450
少なくとも一つ、実例を

97
00:02:56,540 --> 00:02:57,320
見る事になる、

98
00:02:58,170 --> 00:03:00,120
私が思うに機械学習においても重要なアイデアである所の。

99
00:03:01,220 --> 00:03:02,800
では能書きはこの位にして、

100
00:03:02,990 --> 00:03:04,220
レコメンダーシステムの問題の定式化を

101
00:03:04,400 --> 00:03:06,120
議論していこう。

102
00:03:08,110 --> 00:03:09,690
実行可能な例として、

103
00:03:09,870 --> 00:03:11,210
モダンな映画のレーティングの予測を

104
00:03:11,390 --> 00:03:13,230
使っていこう。

105
00:03:14,150 --> 00:03:14,640
問題はこうだ:

106
00:03:15,100 --> 00:03:16,520
あなたはwebsiteなり会社なりで、

107
00:03:16,660 --> 00:03:18,140
映画を売るかレンタルするかするとしよう、

108
00:03:18,910 --> 00:03:21,340
別に映画以外でも構わないが。

109
00:03:21,560 --> 00:03:22,880
つまり、AmazonもNetflixも

110
00:03:23,610 --> 00:03:24,930
そしてたぶんiTunesも、これをやってる会社たちの

111
00:03:26,540 --> 00:03:28,180
具体例となる。

112
00:03:28,750 --> 00:03:30,450
そしてあなたはユーザーに

113
00:03:30,930 --> 00:03:32,610
様々な映画を

114
00:03:33,560 --> 00:03:34,130
1から5の星でレーティングさせるとしよう。

115
00:03:34,560 --> 00:03:36,300
つまりユーザーは、

116
00:03:36,400 --> 00:03:39,070
星一つとか、2つとか、3つとか、4つとか、星5つをつけられる。

117
00:03:40,420 --> 00:03:41,440
この例をもう少し

118
00:03:41,980 --> 00:03:43,170
良い物にする為に、

119
00:03:43,360 --> 00:03:44,860
0も許すことにして、星0から

120
00:03:45,180 --> 00:03:46,720
5までとする。

121
00:03:47,300 --> 00:03:49,170
こうすると必要になる数学に関する所で、ちょっと良くなるから。

122
00:03:49,360 --> 00:03:51,580
これらのwebサイトの多くは星1から5を使ってるんだけれども。

123
00:03:53,000 --> 00:03:54,520
ではここに、5つの映画があるとする。

124
00:03:55,110 --> 00:03:56,600
Love That Last、

125
00:03:56,710 --> 00:03:58,050
Romance Forever、Cute Puppies of Love、

126
00:03:58,160 --> 00:04:00,230
Nonstop Car Chases、

127
00:04:01,040 --> 00:04:03,340
そして Swordsvs Karateだ。

128
00:04:03,550 --> 00:04:04,380
そしてユーザーは四人とする、

129
00:04:05,020 --> 00:04:06,190
アリス、ボブ、キャロル、そしてデイブで、

130
00:04:06,410 --> 00:04:07,610
それぞれイニシャルがA、B、C、Dだ。

131
00:04:07,690 --> 00:04:09,790
彼らをユーザー1、2、3、4と呼ぶ事にする。

132
00:04:10,390 --> 00:04:11,940
ここではアリスは本当に

133
00:04:12,190 --> 00:04:13,360
Love That Lastsが好きで

134
00:04:13,460 --> 00:04:15,680
それを星5個にレーティングし、

135
00:04:16,070 --> 00:04:17,220
Romance Foreverも好きで星5個とレーティングするとする。

136
00:04:18,060 --> 00:04:19,050
Cute Puppies of Loveは見てなくて、

137
00:04:19,370 --> 00:04:20,810
だからレートもしていない。

138
00:04:20,950 --> 00:04:22,190
だからそれのレーティングは無し。

139
00:04:23,120 --> 00:04:24,400
そしてアリスはNonstop Car Chasesが

140
00:04:24,590 --> 00:04:27,170
だいっ嫌いで、Swords vs. Karateも大嫌い。

141
00:04:27,240 --> 00:04:29,330
そして別のユーザーBob、

142
00:04:29,720 --> 00:04:31,390
二番目のユーザーは

143
00:04:31,630 --> 00:04:32,680
異なる映画の組をレーティングするかもしれない。

144
00:04:32,850 --> 00:04:33,580
Love That  Lastsは気に入って、

145
00:04:34,300 --> 00:04:35,520
Romance Foreverは見てないとする、

146
00:04:36,130 --> 00:04:37,960
これのレーティングは4で、そして0、0と。

147
00:04:38,360 --> 00:04:42,530
そして三番目のユーザーは

148
00:04:43,170 --> 00:04:44,280
これを0、これは見てない、

149
00:04:44,550 --> 00:04:45,610
0、5、5と。

150
00:04:45,980 --> 00:04:48,150
こんな感じで数字を埋めておく。

151
00:04:52,150 --> 00:04:53,910
そしてちょっとした記法を導入しておく。

152
00:04:53,970 --> 00:04:55,090
この記法をこの課全体で

153
00:04:55,600 --> 00:04:57,200
使っていく。

154
00:04:57,400 --> 00:04:59,650
nのuでユーザーの数を示す。

155
00:05:00,260 --> 00:05:02,800
この例だとnのuは4となる訳だ。

156
00:05:03,550 --> 00:05:04,750
つまりuの下添字はユーザーのuという事。

157
00:05:05,040 --> 00:05:07,290
そしてnのmで

158
00:05:07,770 --> 00:05:08,900
映画の数を表す。

159
00:05:09,090 --> 00:05:11,210
この例では5つの映画がある。

160
00:05:11,610 --> 00:05:12,960
だからnのmは5となる。

161
00:05:13,320 --> 00:05:15,320
そしてこの例では、

162
00:05:15,950 --> 00:05:17,640
みての通り、おおまかにいって

163
00:05:18,920 --> 00:05:20,440
たぶん3つのロマンティック、または

164
00:05:20,700 --> 00:05:24,020
ロマンティックコメディを、

165
00:05:24,260 --> 00:05:25,750
そして2つのアクションムービーがある。

166
00:05:25,960 --> 00:05:27,460
この小さな例で考えると、

167
00:05:27,580 --> 00:05:29,430
アリスとボブは

168
00:05:29,550 --> 00:05:31,360
これらロマンティックコメディ、または

169
00:05:32,170 --> 00:05:33,650
恋愛映画に高いレーティングを与えていて

170
00:05:33,960 --> 00:05:34,850
アクションムービーには

171
00:05:35,140 --> 00:05:36,790
とても低い評価を与えている。

172
00:05:37,060 --> 00:05:39,470
そしてキャロルとデイブは正反対だ。でしょ？

173
00:05:39,620 --> 00:05:40,800
キャロルとデイブ、つまりユーザー3と4は

174
00:05:41,010 --> 00:05:42,170
アクションムービーが大好きで

175
00:05:42,350 --> 00:05:43,390
それらには高いレーティングを与えているが、

176
00:05:43,490 --> 00:05:45,020
ロマンスや恋愛の類の

177
00:05:45,510 --> 00:05:46,910
映画はそんなに

178
00:05:47,060 --> 00:05:48,440
好きではない。

179
00:05:50,330 --> 00:05:51,720
具体的には、レコメンダーシステムの問題では

180
00:05:52,120 --> 00:05:54,170
以下のようなデータが与えられる。

181
00:05:54,700 --> 00:05:56,230
我らのデータは以下で構成される。

182
00:05:56,390 --> 00:05:58,780
まずこれらr(i, j)がある。ここで

183
00:05:58,910 --> 00:06:00,080
ユーザーjが映画iをレーティングしていたら

184
00:06:00,350 --> 00:06:01,580
r(i, j)は1となる。

185
00:06:01,950 --> 00:06:02,920
ユーザーは映画の一部しか

186
00:06:03,180 --> 00:06:04,200
レーティングしていないので

187
00:06:04,820 --> 00:06:06,050
だからこれらの映画の

188
00:06:06,190 --> 00:06:08,140
レーティングは存在しない。

189
00:06:08,310 --> 00:06:09,890
そしてr(i, j)が1の時はいつでも

190
00:06:10,450 --> 00:06:11,790
つまりユーザーjが映画iをレーティングしている時にはいつでも

191
00:06:11,980 --> 00:06:13,150
これらの値、

192
00:06:13,660 --> 00:06:15,310
y (i, j)もまた得られる。

193
00:06:16,090 --> 00:06:17,520
これはユーザーjによる

194
00:06:17,740 --> 00:06:18,870
映画iのレート。

195
00:06:19,030 --> 00:06:20,370
つまりy(i, j)は

196
00:06:20,540 --> 00:06:22,890
0から5までの数字で、

197
00:06:23,090 --> 00:06:24,360
それはユーザーが

198
00:06:24,790 --> 00:06:25,810
その映画につけた星の

199
00:06:26,160 --> 00:06:28,470
星0個から星5個に対応する。

200
00:06:30,240 --> 00:06:31,700
さて、レコメンダーシステムというのは、

201
00:06:32,200 --> 00:06:33,540
このデータ、

202
00:06:33,900 --> 00:06:35,210
これらr(i, j)とy(i, j)が

203
00:06:35,440 --> 00:06:38,540
与えられた時に、

204
00:06:38,820 --> 00:06:40,150
これらのデータを見て

205
00:06:40,320 --> 00:06:41,700
レーティングが欠けてる映画を探し出して

206
00:06:41,860 --> 00:06:42,940
これらのクエスチョンマークの値が

207
00:06:43,220 --> 00:06:44,590
いくつとなるかを予測する問題、と

208
00:06:45,110 --> 00:06:47,290
言う事が出来る。

209
00:06:47,520 --> 00:06:48,710
この例では

210
00:06:48,840 --> 00:06:49,920
映画の数もユーザーの数も

211
00:06:50,210 --> 00:06:51,250
すごく少ないので

212
00:06:51,620 --> 00:06:52,790
ほとんどのユーザーがほとんどの映画にレートをつけているが

213
00:06:53,020 --> 00:06:53,820
実際の場では

214
00:06:54,190 --> 00:06:55,870
あなたのユーザーの多くは

215
00:06:56,040 --> 00:06:57,120
あなたの提供する映画の

216
00:06:57,600 --> 00:06:58,940
とても少しの割合しかレートしないだろう。

217
00:06:59,200 --> 00:07:00,170
さて、このデータを見ると、

218
00:07:00,310 --> 00:07:01,430
AliceとBobは

219
00:07:01,730 --> 00:07:02,990
二人ともロマンティック映画が好きなようで

220
00:07:03,740 --> 00:07:05,810
Aliceはきっとこれに星5つを、

221
00:07:06,160 --> 00:07:07,290
Bobはこれに4.5とかそんな感じの高い値を

222
00:07:07,430 --> 00:07:08,570
つけるだろう、と

223
00:07:08,750 --> 00:07:10,560
思われる。同様に

224
00:07:10,690 --> 00:07:11,710
CarolとDaveは

225
00:07:12,590 --> 00:07:15,050
これらにとても低いレートを与えていて、

226
00:07:15,610 --> 00:07:16,520
Daveは、うーん、彼はとてもアクション映画が好きなようだね。

227
00:07:16,740 --> 00:07:17,790
彼はきっと Sword and Karate (ソードと空手 )に

228
00:07:18,490 --> 00:07:19,540
4とか5のレートを

229
00:07:20,020 --> 00:07:22,080
与えるに違いない。オーケー？

230
00:07:22,590 --> 00:07:23,700
つまり、レコメンダーシステムを作る時に

231
00:07:24,330 --> 00:07:25,950
我らのやるべき事は、

232
00:07:26,460 --> 00:07:28,120
これらの欠けた値を

233
00:07:28,360 --> 00:07:29,440
自動的に埋めてくれる

234
00:07:30,380 --> 00:07:31,490
アルゴリズムを見つけ出す事で、

235
00:07:31,880 --> 00:07:33,260
それによって我らは

236
00:07:33,390 --> 00:07:34,380
ユーザーがまだ見てない映画を

237
00:07:34,490 --> 00:07:35,630
ユーザーに

238
00:07:35,870 --> 00:07:37,370
勧める事が

239
00:07:38,230 --> 00:07:39,570
出来る。

240
00:07:39,860 --> 00:07:42,500
そのユーザーが好みそうな映画を予測しようとする訳だ。

241
00:07:45,210 --> 00:07:47,890
以上がレコメンダーシステムの問題の定式化となる。

242
00:07:49,290 --> 00:07:50,450
次のビデオでは

243
00:07:50,770 --> 00:07:53,360
この問題に取り組む学習アルゴリズムを開発する。