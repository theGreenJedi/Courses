En este video definiré cuál
es posible que sea el problema más común un enfoque para construir un sistema de recomendación llamado filtrado colaborativo. El algoritmo del que estamos hablando tiene una propiedad muy interesante que hace lo que se llama aprendizaje de variables y con esto quiero decir que este será un algoritmo que puede empezar a aprender por sí mismo cuáles variables usar. Aquí tenemos el conjunto de datos que teníamos y habíamos supuesto que para cada película, alguien había venido y dicho qué tan romántica era esa película era y cuánta acción hubo en esa película. Pero como se pueden imaginar, puede ser muy difícil y se consume tiempo y dinero si se trata en realidad que alguien, ya saben, vea cada película y les diga que tan romántica es cada película y cuánta acción tiene cada película, y muchas veces ustedes querrán aún más variables que sólo estas dos. Así que, ¿de dónde obtienen estas variables? Cambiemos un poco el problema y supongamos que tenemos un conjunto de datos en donde no sabemos los valores de estas variables. Así que tenemos el conjunto de datos de las películas y de qué forma las calificaron los usuarios, pero no tenemos idea de lo romántica que es cada película y no tenemos idea de cuánta acción tiene cada película, por lo que reemplacé todas estos asuntos con signos de interrogación. Pero ahora vamos a hacer una suposición un poco diferente. Digamos que hemos ido con cada uno de nuestros usuarios, y que cada uno de nuestros usuarios nos ha dicho cuánto le gustan las películas románticas y cuánto le gustan las películas llenas de acción. Así que Alice está asociada con un vector de parámetros teta 1, Bob, teta 2, Carol, teta 3, Dave, teta 4. Y digamos que también usamos esta y que Alice nos dice que a ella realmente le gustan las películas románticas, así que hay un cinco aquí, que es el multiplicador asociado con x1, y digamos que Alice nos dice que en realidad no le gustan las películas de acción, así que hay un 0 allí. Y Bob nos dice algo similar así que tenemos teta 2 aquí, mientras Carol nos dice que a ella realmente le gustan las películas de acción, por lo que hay un 5 allí, es el multiplicador asociado con x2, y recuerden que también hay x0 que es igual a 1, y digamos que Carol nos dice que no le gustan las películas románticas y así sucesivamente, de manera similar para Dave. Así que supongamos que de alguna manera, podemos ir a los usuarios y cada usuario j nos dice cuál es el valor de teta j para ellos. Así que básicamente nos especifica lo mucho que les gustan los diferentes tipos de películas. Si podemos obtener estos parámetros teta de nuestros usuarios, entonces resulta que se hace posible tratar de inferir cuáles son los valores de x1 y x2 para cada película. Veamos un ejemplo. Veamos la película 1. Así que esa película 1 está asociada con un vector de dirección x(1) Y ya saben, esta película se llama Love at last, pero vamos a ignorar eso. Hagamos de cuenta que no sabemos de qué se trata esta película, así que vamos a ignorar el título de esta película. Todo lo que sabemos es que a Alice le encantó esta película. A Bob le encantó esta película. Carol y Dave odiaron esta película. Así que, ¿qué podemos deducir? Bueno, sabemos por los vectores de variables, que a Alice y a Bob les encantan las películas románticas porque nos dijeron que hay un 5 aquí. En cuanto a Carol y Dave, sabemos que ellos odian las películas románticas y que les encantan las películas de acción. De modo que debido a que esos son los vectores de parámetros que los usuarios 3 y 4, Carol y Dave, nos dieron. Así que basados en el hecho de que la película 1 les encantó a Alice y a Bob, y Carol y Dave la odiaron, podríamos concluir de manera razonable que esta es probablemente una película romántica, probablemente no sea una película con mucha acción. Este ejemplo es un poco matemáticamente simplificado, pero lo que realmente estamos preguntando es qué vector de dirección debería ser x1 de manera que teta 1 que transpone x(1) es aproximadamente igual a 5; esa es la calificación de Alice, y teta 2 que transpone x(1) también es aproximadamente igual a 5, y teta 3 que transpone x(1) es aproximadamente igual a 0, por lo que esta sería la calificación de Carol, y teta 4 que transpone x(1) es aproximadamente igual a 0. Y de esto, parece que x(1) es igual a uno, que es el término de intercepción, y luego 1.0, 0.0, eso tiene sentido ya que sabemos las preferencias de Alice, Bob, Carol, y Dave por las películas, y la forma en la que calificaron esa película. Así, de manera más general, podemos revisar esta lista y tratar de averiguar cuáles podrían ser variables razonables para estas otras películas también. Vamos a formular este problema para conocer las variables x(1). Digamos que nuestros usuarios nos han dado sus preferencias. Así que digamos que nuestros usuarios vinieron y nos dijeron estos valores para teta 1 hasta teta nu y queremos saber el vector de dirección x(1) para la película número i. Lo que podemos hacer es, por lo tanto, plantear el siguiente problema de optimización. Así que queremos sumar sobre todos los índices de j para los que tenemos una calificación para la película i porque estamos tratando de conocer las variables para la película i que es este vector de dirección x(1). Así que a continuación, lo que queremos es minimizar este error al cuadrado, así que queremos elegir las variables x(i), de manera que, el valor predictivo de cómo el usuario j califica la película i será similar, no estará muy alejado en el sentido del error cuadrado del valor real y(i,j) que observamos en realidad en la calificación del usuario j sobre la película i.
Así, sólo para resumir lo que hace este término, es que trata de elegir las variables x(i) de modo que para todos los usuarios j que calificado esa película, el algoritmo también predice un valor para cómo habría calificado ese usuario esa película; eso no está demasiado alejado, en el sentido del error cuadrado, del valor real con el que el usuario calificó esa película. Así que ese es el término de error al cuadrado. Como de costumbre, podemos añadir también este tipo de término de regularización para prevenir que las variables se hagan demasiado grandes. De modo que así es cómo conoceríamos las variables para una película específica, pero lo que queremos hacer es conocer todas las variables para todas las películas, así que lo que voy a hacer es añadir esta suma adicional aquí, así voy a sumar sobre todas las películas nm, películas n subíndice m, y voy a minimizar este objetivo en la parte superior que suma todas las películas. Y si si hacen esto, terminan con el siguiente problema de optimización. Y si minimizan esto, con suerte tendrán un conjunto razonable de variables para todas sus películas. Así que juntando todo, el algoritmo del que hablamos en el vídeo anterior y el algoritmo del que acabamos de hablar en este video, en el vídeo anterior, lo que mostramos es que, si tienen un conjunto de calificaciones de películas, --sí tienen los datos r(i,j) y tienen los datos y(i,j)-- así que tenemos las calificaciones de películas, entonces, dadas las variables para sus diferentes películas, podemos conocer estos parámetros teta. Así que si conocieran las variables podrían saber los parámetros teta para sus diferentes usuarios. Y lo que mostramos anteriormente en este vídeo es que si los usuarios están dispuestos a darles los parámetros, entonces ustedes pueden calcular las variables para las diferentes películas. Así que esto es una especie de problema del huevo y la gallina. ¿Cuál fue primero? Ya saben, si podemos obtener los tetas, podemos conocer las x’s. Si tenemos las x’s, podemos conocer los tetas. Lo que pueden hacer es, y esto realmente funciona, lo que pueden hacer es, de hecho, adivinar al azar algún valor para las tetas. Con base en su conjetura aleatoria inicial para las tetas, pueden seguir adelante y usar el procedimiento del que acabamos de hablar a fin de conocer las variables para sus diferentes películas. Ahora, dado algún conjunto inicial de variables para sus películas, pueden usar entonces este primer método del que hablamos en el vídeo anterior, para tratar de obtener un estimado aún mejor para sus parámetros teta. Ahora que tienen una mejor configuración de los parámetros teta para sus usuarios, podemos usar eso para, tal vez, incluso obtener un mejor conjunto de variables y así sucesivamente. Podemos seguir iterando, yendo y viniendo y optimizando teta, x, teta, x, teta, y esto realmente funciona, y si hacen esto, esto en realidad va a causar que su algoritmo converja en un conjunto razonable de variables para sus películas y un conjunto razonable de parámetros para sus diferentes usuarios. Así que este es un algoritmo básico de filtrado colaborativo. Esto no es en realidad el algoritmo final que vamos a usar. En el siguiente vídeo, vamos a poder mejorar en este algoritmo y hacerlo un poco más computacionalmente eficaz. Pero espero que éste les haya dado una idea sobre cómo pueden formular un problema en el que pueden conocer de manera simultánea los parámetros y al mismo tiempo conocer las variables de las diferentes películas. Y para este problema, para el el sistema de recomendación, esto es posible sólo porque cada usuario califica varias películas y, con suerte, cada película es calificada por varios usuarios. Así que pueden hacer esto un proceso de ida y venida para calcular teta y x. 
De modo que para resumir, en este vídeo hemos visto un algoritmo de filtrado colaborativo inicial. El término filtrado colaborativo se refiere a la observación de que, cuando ejecutan este algoritmo con un gran conjunto de usuarios, lo que todos estos usuarios están haciendo efectivamente es una especie de colaboración - o colaboran para obtener mejores calificaciones de películas para todos, porque con cada usuario que califica un subconjunto de películas, cada usuario le está ayudando al el algoritmo un poco a conocer mejores variables, y luego al ayudar - al calificar algunas películas yo mismo, estaré ayudando al sistema a conocer mejores variables, y entonces estas variables pueden ser usadas por el sistema para hacer mejores predicciones de películas para todos los demás. Así que hay un sentido de colaboración en el que cada usuario está ayudando al sistema a conocer mejores variables para el bien común. Esto es filtrado colaborativo. En el siguiente vídeo, lo que vamos a hacer es tomar las ideas que han funcionado, y tratar de desarrollar un mejor algoritmo, una técnica un poco mejor para el filtrado colaborativo.