इस वीडियो में हम बात करेंगे एक अप्रोच / विधि की बनाने के लिए एक रेकोम्मेंडेर सिस्टम जिसे कहते हैं कलैबरटिव फ़िल्टरिंग. अल्गोरिद्म जिसके बारे में हम बात कर रहे हैं उसका है एक दिलचस्प गुण वह करता हैं जिसे कहते हैं फ़ीचर लर्निंग और उससे मेरा मतलब है कि यह होगा एक अल्गोरिद्म जो कर सकता हैं शुरू सीखना अपने लिए कि कौन से फ़ीचर्ज़ इस्तेमाल करने हैं. यह था डेटा सेट जो हमारे पास था और हमने मान लिया था कि प्रत्येक मूवी के लिए, कोई आया था और उसने बताया था हमें कि कितनी रूमानी वह मूवी थी और कितना ऐक्शन था उस मूवी में. लेकिन जैसा कि आप सोच सकते हैं यह हो सकता हैं काफ़ी कठिन और समय लगाने वाला और महँगा वास्तव में कोशिश करना किसी से करवाना कि, आप जानते हैं, प्रत्येक मूवी देखे और बताए आपको कि कितनी रूमानी प्रत्येक मूवी थी और कितना ऐक्शन था प्रत्येक मूवी में, और अक्सर आप चाहेंगे इससे भी ज़्यादा फ़ीचर्ज़ न कि सिर्फ़ ये दो. तो कहाँ से मिलेंगे आपको ये सब फ़ीचर्ज़? तो चलिए प्रॉब्लम को बदलते हैं थोड़ा और मान लीजिए कि हमारे पास है एक डेटा सेट जहाँ हमें नहीं पता इन फ़ीचर्ज़ की वैल्यूज़. तो, हमें दिया गया है डेटा सेट मूवीज़ का और कैसे यूज़र्ज़ ने उन्हें रेट किया है, लेकिन हमें कोई अनुमान नहीं है कितनी रूमानी प्रत्येक मूवी है और हमें नहीं है कोई अनुमान कि कितना ऐक्शन है प्रत्येक मूवी में इसलिए मैंने बदल दिया है इन चीज़ों को प्रश्न चिन्हो से. लेकिन अब लेते हैं एक थोड़ी अलग असम्प्शन / धारणा. मान लीजिए हम गए हैं हमारे प्रत्येक यूज़र के पास, और हमारे प्रत्येक यूज़र ने हमें बताया है कि कितनी अच्छी लगती हैं उन्हें रूमानी मूवीज़ और कितनी अच्छी लगती हैं उन्हें ऐक्शन मूवीज़. अत: ऐलिस को संबन्धित किया है पेरामिटर वेक्टर थीटा 1 से. बॉब थीटा 2. कैरल थीटा 3. डेव थीटा 4. और मान लीजिए हम यह भी प्रयोग करते हैं और यह कि ऐलिस हमें बताती है कि उसे वास्तव में अच्छी लगती हैं रूमानी मूवीज़ और इसलिए वहाँ एक पाँच है जो है मल्टीप्लायर संयुक्त एक्स 1 के साथ और मान लीजिए कि ऐलिस हमें बताती है उसे ऐक्शन मूवीज़ बिलकुल पसंद नहीं है और इसलिए वहाँ एक 0 है. और बॉब बताता है हमें कुछ ऐसा ही अत: हमारे पास है थीटा 2 यहाँ पर. जबकि कैरल बताती है हमें कि उसे बहुत अच्छी लगती हैं ऐक्शन मूवीज़ इसलिए वहाँ एक 5 है, जो है मल्टीप्लायर संयुक्त एक्स 2 के साथ, और याद करें कि वहाँ एक्स 0 ईक्वल्ज़ 1 भी है और मान लीजिए कैरल बताती है हमें कि उसे पसंद नहीं है रूमानी मूवीज़ और इसी प्रकार आगे, ऐसा ही डेव के लिए भी. तो मान लेते हैं कि किसी प्रकार हम जा सकते हैं यूज़र्ज़ के पास और प्रत्येक यूज़र जे सिर्फ़ बताता है हमें कि क्या वैल्यू है थीटा जे की उनके लिए. और इसलिए मूलत: स्पष्ट करता है हमें कि कितनी उन्हें पसंद हैं विभिन्न प्रकार की मूवीज़. यदि हमें मिल सकते हैं ये पेरमिटर्स थीटा हमारे यूज़र्ज़ से तब ऐसा होता है कि यह सम्भव हो जाता है अनुमान लगाना कि क्या हैं वैल्यूज़ एक्स 1 और एक्स 2 की प्रत्येक मूवी के लिए. चलिये एक उदाहरण पर नज़र डालते हैं. चलिए देखते हैं मूवी 1. तो उस मूवी 1 के साथ संयुक्त है एक फ़ीचर वेक्टर एक्स 1. और आप जानते हैं इस मूवी को कहते हैं लव ऐट लास्ट लेकिन उसे अनदेखा करते हैं. ऐसा दिखाते हैं कि हमें नहीं पता है कि किस बारे में है यह मूवी, इसलिए इस मूवी का शीर्षक अनदेखा करते हैं. हमें सिर्फ़ पता हैं कि ऐलिस को यह मूवी बहुत अच्छी लगी. बॉब को यह मूवी अच्छी लगी. कैरल और डेव को इस मूवी से नफरत हुई. तो हम क्या निष्कर्ष निकाल सकते हैं? अच्छा, हम जानते हैं फ़ीचर वेक्टर्ज़ से कि ऐलिस और बॉब को पसंद हैं रूमानी मूवीज़ क्योंकि उन्होंने हमें बताया वहाँ एक 5 है यहाँ. जबकि कैरल और डेव, हम जानते हैं कि वे नफ़रत करते हैं रूमानी मूवीज़ से और यह कि उन्हें पसंद हैं ऐक्शन मूवीज़. अत: क्योंकि वे है पेरमिटर वेक्टर्ज़ जो आप जानते हैं, लेते हैं 3 और 4,  कैरल और डेव ने हमें दिए. और इसलिए आधारित इस तथ्य पर कि मूवी 1 पसंद की जाती है ऐलिस और बॉब के द्वारा और नफ़रत की जाती है कैरल तथा डेव द्वारा, हम शायद यथोचित निष्कर्ष निकाल सकते हैं कि यह शायद एक रूमानी मूवी है, यह शायद उतनी ऐक्शन मूवी नहीं हैं. यह उदाहरण है थोड़ा बहुत गणितीय रूप से सरल किया हुआ लेकिन क्या वास्तव में हम पूछ रहें हैं कि क्या होना चाहिए फ़ीचर वेक्टर एक्स 1 ताकि थीटा 1 ट्रैन्स्पोज़ एक्स 1 है लगभग बराबर 5 के, और वह है ऐलिस की रेटिंग, और थीटा 2 ट्रैन्स्पोज़ एक्स 1 भी है लगभग बराबर 5 के, थीटा 3 ट्रैन्स्पोज़ एक्स 1 है लगभग बराबर 0 के, तो यह होगी कैरल की रेटिंग, और थीटा 4 ट्रैन्स्पोज़ एक्स 1 है लगभग बराबर 0 के, और इससे यह दिखता है कि, आप जानते है, एक्स 1 ईक्वल्ज़ एक, और तब 1.0, 0.0 जो सही लगता है दिया होने पर जो हम जानते हैं ऐलिस, बॉब, कैरल और डेव के पसंद / चुनाव के बारे में मूवीज़ के लिए और जिस प्रकार से उन्होंने इस मूवी को रेट किया. अत: साधारणतया, हम जा सकते हैं नीचे इस लिस्ट में और कोशिश कर सकते हैं समझने की कि क्या शायद उचित फ़ीचर्ज़ होंगे इन दूसरी मूवीज़ के लिए भी. चलिए एक निश्चित रूप देते हैं इस प्रॉब्लम को लर्निंग करने की फ़ीचर्ज़ एक्स 1. मान लेते हैं कि हमारे यूज़र्ज़ ने दी है हमें उनकी प्राथमिकताएँ. अत: मान लेते हैं कि हमारे यूज़र्ज़ आए और, आप जानते हैं, हमें बताया इन वैल्यूज़ को फॉर थीटा 1 से थीटा एन यू तक और चाहते हैं लर्न करना फ़ीचर वेक्टर एक्स 1 मूवी नम्बर 1 के लिए. हम क्या कर सकते हैं इसलिए कि प्रस्तुत करें निम्नलिखित ऑप्टिमाइजेशन प्रॉब्लम. अत: हम सम करना चाहते हैं सारे इंडिसीज़ जे जिनके लिए हमारे पास एक रेटिंग है मूवी 1 के लिए क्योंकि हम कर रहे हैं कोशिश लर्न करने की फ़ीचर्ज़ मूवी 1 के लिए जो है यह फ़ीचर वेक्टर एक्स 1. इसलिए और तब हम क्या चाहते हैं कि मिनमायज़ / न्यूनतम करें यह स्क्वेर्ड एरर, अत: हम चुनना चाहते हैं फ़ीचर्ज़ एक्स 1, ताकि, आप जानते हैं, प्रिडिक्टेड वैल्यू कि कैसे यूज़र जे रेट करता हैं मूवी I  होगी वैसी ही, ज़्यादा दूर नहीं होगी स्क्वेर्ड एरर मायने में असल वैल्यू वाय आइ जे जो हम असल में देखते हैं यूज़र जे की रेटिंग में मूवी I पर. अत:, केवल सारांश में यह टर्म क्या करती है कि यह कोशिश करती है चुनाव करने की फ़ीचर्ज़ एक्स 1 का ताकि सारे यूज़र्ज़ जे के लिए जिन्होंने रेट किया है उस मूवी को, अल्गोरिद्म प्रिडिक्ट भी करता है एक वैल्यू कि कैसे यूज़र्ज़ ने रेट की होगी वह मूवी जो ज़्यादा दूर नहीं हैं स्क्वेर्ड एरर मायने में, असल वैल्यू से जो यूज़र ने रेट दिया है उस मूवी को. तो वह है स्क्वेर्ड एरर टर्म. हमेशा की तरह, हम कर सकते हैं जोड़ना भी इस प्रकार की रेग्युलराईज़ेशन टर्म का रोकने के लिए फ़ीचर्ज़ को बहुत ज़्यादा होने से. तो, ऐसे हम लर्न करेंगे फ़ीचर्ज़ एक विशेष मूवी के लिए लेकिन हम चाहते हैं करना कि लर्न करें सारे फ़ीचर्ज़ सारी मूवीज़ के लिए और इसलिए क्या करूँगा मैं कि जोड़ूँगा यह अतिरिक्त समेशन यहाँ अत: मैं सम करूँगा सारे एन एम मूवीज़, एन सबस्क्रिप्ट एम मूवीज़, और मिनमायज़ / न्यूनतम करेंगे यह अब्जेक्टिव ऊपर जो समज़ सारी मूवीज़ के. और यदि आप यह करते हैं, आपको मिलती है निम्नलिखित ऑप्टिमाइजेशन प्रॉब्लम. और यदि आप न्यूनतम करते हैं इसे, आपके पास है, आशा पूर्वक एक उचित सेट फ़ीचर्ज़ का आपकी सारी मूवीज़ के लिए. अत: सब कुछ एक साथ रखते हुए, क्या हम, अल्गोरिद्म हमने बात की जिसके बारे में पिछले विडीओ में और अल्गोरिद्म जिसके बारे में हमने  बात की इस विडीओ में. पिछले वीडियो में, हमने क्या दिखाया था कि आप जानते हैं, कि यदि आपके पास है एक सेट मूवी रेटिंग्स का, इसलिए यदि आपके पास है डेटा आरआइजे का और तब आपके पास हैं वाय आइ जे जो होंगी मूवी रेटिंग्स. तब दिये होने पर फ़ीचर्ज़ आपकी विभिन्न मूवीज़ के लिए हम लर्न कर सकते हैं ये पेरमिटर्स थीटा. अत: यदि आप जानते होते फ़ीचर्ज़, आप लर्न कर सकते हैं  पेरमिटर्स थीटा आपके विभिन्न यूज़र्ज़ के लिए. और जो हमने पहले दिखाया था इस विडीओ में कि यदि आपके यूज़र्ज़ राज़ी हैं देने के लिए आपको पेरमिटर्स, तब आप अनुमान लगा सकते हैं फ़ीचर्ज़ का विभिन्न मूवीज़ के लिए. तो यह एक प्रकार से एक मुर्ग़ी और अंडे टाईप समस्या है. कौन पहले आया? आप जानते हैं, क्या हम चाहते हैं यदि हमें मिल जाएँ थीटास, हम जान सकते हैं एक्स. यदि हमारे पास हैं एक्स, हम लर्न कर सकते हैं थीटास. और आप क्या कर सकते हैं, और तब यह सचमुच में काम करता हैं, आप क्या कर सकते हैं कि वास्तव में क्रमरहित / रेंडम ढंग से अनुमानित कर सकते हैं कुछ वैल्यू थीटास के लिए. अब निर्भर करते हुए आपके इनिशियल रेंडम अनुमान थीटास के लिए, आप तब आगे बढ़ सकते हैं और इस्तेमाल कर सकते हैं विधि जिसकी हमने अभी बात की करने के लिए लर्न फ़ीचर्ज़ आपकी विभिन्न मूवीज़ के लिए. अब दिया होने पर कुछ ईनिशीयल सेट फ़ीचर्ज़ का आपकी मूवीज़ के लिए आप तब प्रयोग कर सकते हैं यह पहला मेथड जिसकी हमने बात की थी पिछले विडीओ में कोशिश करने के लिए कि लगा सके एक इससे भी बेहतर अनुमान आपके पेरमिटर्स थीटा का. अब जब आपके पास है एक बेहतर सेट्टिंग पेरमिटर्स की आपके यूज़र्ज़ के लिए, हम उसे इस्तेमाल कर सकते हैं शायद पा सकते हैं एक उससे भी बेहतर एक सेट फ़ीचर्ज़ का और इसी प्रकार आगे. हम एक प्रकार से करते रह सकते हैं दोहराना, जाके पीछे और आगे और ऑप्टिमायज़ कर सकते हैं थीटा, एक्स थीटा, एक्स थीटा, और यह सचमुच में काम करता हैं और यदि आप करते हैं यह, यह वास्तव में करेगा आपकी एल्बम को कन्वर्ज एक उचित सेट पर फ़ीचर्ज़ का आपकी मूवीज़ के लिए और एक उचित सेट पेरमिटर्स का आपके विभिन्न यूज़र्ज़ के लिए. तो यह है एक बेसिक / मौलिक कलैबरटिव फ़िल्टरिंग अल्गोरिद्म. यह नहीं है वास्तव में अंतिम अल्गोरिद्म जो हम इस्तेमाल करेंगे. अगले विडीओ में हम कर पाएँगे बेहतर इस अल्गोरिद्म को और बनाएँगे इसे काफ़ी कॉम्प्यूटेशनली एफ़्फ़िशिएँट. लेकिन, आशा है इससे आपको मिलती है एक समझ कि कैसे आप कर सकते हैं फ़ॉर्म्युलेट एक प्रॉब्लम को जहाँ आप कर सकते हैं साथ-साथ लर्न पेरमिटर्स को और साथ में लर्न कर सकते हैं फ़ीचर्ज़ को विभिन्न मूवीज़ से. और इस प्रॉब्लम के लिए, रेकोम्मेंडेर सिस्टम प्रॉबलम के लिए, यह है सम्भव सिर्फ़ इसलिए क्योंकि प्रत्येक यूज़र रेट करता है एक से अधिक मूवीज़ और आशा पूर्वक प्रत्येक मूवी रेट की जाती है एक से ज़्यादा यूज़र्ज़ द्वारा. और इसलिए आप कर सकते हैं यह पीछे और आगे जाने की प्रक्रिया अनुमानित करने के लिए थीटा और एक्स. अत: सारांश में, इस विडीओ में हमने देखा एक ईनिशीयल कलैबरटिव फ़िल्टरिंग अल्गोरिद्म. टर्म कलैबरटिव फ़िल्टरिंग सूचित करती है अवलोकन / ऑब्ज़र्वेशन को कि जब आप रन करते हैं इस अल्गोरिद्म को एक यूज़र्ज़ के बड़े सेट के साथ, क्या सब ये यूज़र्ज़ सफलतापूर्वक कर रहे है वह एक प्रकार से कलैबरटिव है - या कलैबरेट कर रहे है पाने के लिए बेहतर मूवी रेटिंग्स सबके लिए क्योंकि प्रत्येक रेट कर रहा है कोई सबसेट मूवीज़ का, प्रत्येक यूज़र सहायता कर रहा है अल्गोरिद्म को थोड़ी बहुत लर्न करने की बेहतर फ़ीचर्ज़, और उसके बाद सहायता करके- रेट करके कुछ मूवीज़ को मैं ख़ुद, मैं भी सहायता करूँगा सिस्टम की लर्न करने में बेहतर फ़ीचर्ज़ और तब ये फ़ीचर्ज़ प्रयोग किए जा सकते हैं सिस्टम के द्वारा करने के लिए बेहतर मूवी प्रिडिक्शंज़ बाक़ी सब लोगों के लिए. अत: इसलिए वहाँ एक आभास है कलैबरेशन का जहाँ हर यूज़र सहायता कर रहा है सिस्टम की लर्न करने में बेहतर फ़ीचर्ज़ सर्व हित में. यह है कलैबरटिव फ़िल्टरिंग. और, अगले वीडियो में हम क्या करेंगे कि लेंगे सुझाव / आयडीयज़ जो अभी तैयार किए है, और कोशिश करेंगे डिवेलप करने की एक बेहतर उससे भी बेहतर अल्गोरिद्म, एक थोड़ी बेहतर टेक्नीक कलैबरटिव फ़िल्टरिंग के लिए.