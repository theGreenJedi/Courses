では線形代数の復習を始めよう。 この動画で私は 行列とは何か、ベクトルとは何かを教えたい。 行列とは 大カッコの間に書かれた 長方形型に並んだ数字の配列だ。 だから、例えばこれは まさにその行列で、開き大カッコに 中にたくさんの数字を書く。 これらは学習している問題からの 特性かもしれないし、または どこか別の場所からの値かもしれない。 具体的に値がなんなのかは重要では無い。 そして右側に閉じ大カッコで閉じる。 以上で一つの行列となる。 ここで、もう一つ行列の例を見よう。 3、4、5、6と書こう。 つまり、行列とは単なる、 2Dまたは二次元配列の もう一つの呼び方に過ぎない。 その他に必要な知識としては、 行列の 次元は 以下のように 書く。つまり 行列の 行の数 掛ける 列の数、と。 具体的に言うと、 この左の例では、 1、2、3、4行と 2列なので、 つまりこの左の例では、 4掛ける2行列ー 行の数 掛ける 列の数だ。 つまり、四行で二列。 この右側の場合、この行列は二行。 これが一行目、 これが二行目。そして三列ある。 これが一列目、 これが二列目、 これが三列目。この二番目の行列は、 2掛ける3の行列 と言う。 つまりこの行列の次元は2掛ける3と言う。 たまにここに書いてあるような事を 見ることもあるだろう。 左側のケースだと、 Rの4掛ける2と書いてある。 または具体的に この行列は集合Rの4掛ける2の 要素の行列だ、とも言う。 つまりこれの 意味する所は、 次元が4掛ける2の行列の全てを表す集合で そしてこの右側は 時々、これは Rの3掛ける2の行列と書かれる事もある。 だからもし2掛ける3とか 他にも4掛ける2などを 見かける事があっても、 この4掛ける2とか2掛ける3というのは ある特定の次元の 行列をさしているだけ。 次に、行列の特定の要素をどう参照するかを お話しよう。 行列では無く行列の要素という場合、 私は単にエントリを さす。つまり行列の中の数字の事だ。 標準的なノーテーション（記法）では、 Aをこの 行列とすると、Aに下つきの添え字で ijとつけると、i,jにある要素を 参照する事になる。 その意味する所は、 行列のi行j/列にある要素という事。 例えば1、1なら 一行目の中の 一列目の要素を 参照する事になるので、それは 最初の行の最初の列だ。 だから1、1は 1402と イコールだ。 もう一つ例。Aの1、2は、 最初の行の 二番目の列の エントリを参照する事なので、 つまりAの1、2は イコール191となる。 簡単な例をもう少し。 では、 Aの3、2とすると、 三番目の行、二番目の列の エントリを参照する事になる。 だって3、2だから。 つまり、それはイコール1437。 そして最後にAの4、1は これを参照する事に なる。四行目、 最初の列なので、イコール 147。そしてもし そんな事は無いと願いたいのだが、万が一 Aの4、3と書いて、 これは何を参照するか、と問えば それは四行目の 三列の所を 参照する訳だが、知っての通り、 この行列に三列目なんて無い。 これは未定義。 またはそれをエラーと考えても良い。 Aの4、3なんて要素は 無い。だから、 Aの4、3なんて参照しちゃいけない。 行列は あなたに、たくさんのデータを素早く 構成して、インデックス付けして、アクセスする手段を提供する。 私がたくさんの コンセプトやたくさんの新しい記法を とても早くいろいろ押し付けてきたと 感じた時には、 それらを全部覚える必要は無い。 しかしコースのウェブサイト、 レクチャーノートをポストしてある所ですが、そこに、 これらの定義も全て書いておきました。 だからいつでも見直せる。 これらのスライドや コースの課題や、この動画やレクチャーノートなど。 もしAの4、1がどこを指すか忘れてしまっても どの行の、どの列だったっけ？ 全てを記憶しなきゃ！と心配する必要はありません。 いつでもコースのwebサイトの 書かれた教材を見直す事が出来、それをリファレンスとして使えます。 以上が行列とは何か、です。 次に、ベクトルとは何かについて話しましょう。 ベクトルは行列の特別なケースに過ぎない。 ベクトルとは行列のうち 列が1の物だ。 つまりN✕1行列の事。 思い出してくれ。 Nは行が幾つあるかで、 そしてこの1は 列の数。だから つまり列が一つしか無い行列を ベクトルと呼ぶのです。 だからこれは ベクトルの一例で、 たぶんN=4個の要素がある。 だからこれを 他の用語で これは四次元ベクトルとも呼ぶ。 その意味する所は単に、 これは4つの要素のベクトルだ、という事だ。 その中に4つの数字があるという事。 そして前と同様、 行列の時に見たこの記法、 Rの3掛ける2。 それは3掛ける2行列を表す物だった。 このベクトルの場合は、 これを今後は 集合R4のベクトルと呼ぶ事にする。 このR4の意味する所は、 四次元ベクトルの集合だ。 次に、ベクトルの要素をどう参照するか見てみよう。 我らはyのiという記法を ベクトルyの i番目の要素を 参照する為に使う。 たとえばもしyがこのベクトルとすると、yの添字iはi番目の要素となる。 故にy1は、最初の要素、 460となる。 y2（ワイ二）は二番目の要素で 232となる。これが最初の要素で、 これが二番目の要素。 Yの3は 315と等しい、などなど。 そしてy1からy4までだけが 4次元ベクトルではちゃんと定義出来る。 また、実際に ベクトルをどうインデックスづけするかには 二通りの習慣が ある。これがそれだ。 人々は、ある時は 1からのインデックスを使い、またある時は0からのインデックスを使う事がある。 たとえばこの左にある例は、 1からのインデックスのベクトルで、 その場合は要素を y1, y2, y3, y4と書き、 そしてこの右側の例は、 0からのインデックスのベクトルで、 この場合は 要素のインデックスを0から始める。 つまり要素は0から始まってy3まで。 これはちょっと 主流のプログラミング言語の配列みたい。 配列は 1からインデックスが始まる言語、 配列の 最初の要素がy1の物、 これはたぶん数列の記法だろうが、それと、 ゼロインデックスの時が、 使ってるプログラミング言語によって異なる。 数学の多くの場では、 1からのインデックスが より一般的で、 機械学習を適用する時は、 多くの場合、0インデックスのベクトルが より便利なノーテーションである事が分かる。 だから普段は、 特別に何か指定が無い限り 1インデックスのベクトルを使っている、と想定すべき。 実際、ここより後の 線形代数の復習の動画の続きでは、 私は1インデックスのベクトルを使っていきます。 しかし気を付けて。 機械学習の適用について話す時には 時々私は 明示的に 0インデックスの ベクトルの使用に切り替えるべき時には そう言います。 最後に、コンベンションとして、 行列やベクトルを書く時は ほとんどの人は行列を参照する時は 大文字を使う。 だから 大文字の、例えば A、B、Cとか、Xとかは 行列を参照するのに使う。 そして普通は、小文字、 a、b、x、yとかは 数字とか生の数字とか スカラーとかベクトルを参照するのに使う。 これはいつも真、という訳では無いが それでもやはり、小文字の「y」と言ったら ベクトルを参照するという 記法の方が一般的で、 大文字は 普通は行列に使う。 今やあなたは行列とベクトルが何なのかを知った。 次回はそれを使って 何が出来るかを話します。