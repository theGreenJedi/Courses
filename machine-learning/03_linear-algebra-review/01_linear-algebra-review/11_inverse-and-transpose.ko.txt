이 영상에서 저는 여러분들에서 2개의 특별한 행렬 연산자를 이야기 하려고 합니다. . 바로 역행렬과 전치 행렬입니다 우선은 역행렬부터 이야기 하겠습니다. 우리는 평소와 같이 실수와 어떻게 연관되어 있는지 생각하면 시작하겠습니다. 어떻게 연관되어 있는지 생각하면 시작하겠습니다. 저번 영상에서, 실수에서 항등원 역할을 하는 1 대해 이야기 했습니다. 1은 어떠한 수와 곱해도 항상 같기 때문입니다. 실수의 각 숫자는 각 역수를 가지고 있다는 특징을 가지고 있습니다. 3이라는 숫자가 주어지면, 이 값을 항등원 1로 바꿔주는 바꿔주는 3의 역수가 있습니다. 3의 역수가 있습니다. 여기서 3의 역수는 1/3입니다. 여러분이 다른 수를 받으면, 만약 12를 받으면 12의 역수는 12-1라고 쓸 수 있습니다. 이것 1/12입니다. 이 2개의 값을 곱 할 때 그 결과 같은 다시 항등원 1입니다. 실수 영역에서 모든 값이 역수를 가지는 것은 아닙니다. 예를 들어 0은 역수를 가지지 않습니다. 왜냐하면 0의 역수는 0-1입니다. 하지만 이 값은 정의 되지 않습니다. 이 슬라이드 나머지 부분에서 우리가 하려는 것은 행렬의 역행렬을 계산하는 것이 무엇을 의미하는 것인지 알아내는 것입니다. 하나의 아이디어가 있습니다. 만약 A는 n x n 행렬이고, 이건 역행렬을 가집니다. 이건 역행렬을 가집니다. 나중에 좀 더 자세히 이야기 하겠지만, 역행렬은 다음과 같이 A-1로 표기합니다. 그리고 A행렬과 역행렬을 곱하게 되면 A x A-1 은 A x A-1 은 항등 행렬을 만듭니다. 항등 행렬을 만듭니다. 알겠죠? 오직 m x m 행렬만이 역행렬을 가질 수 있습니다. 이 행렬은 M x M 행렬입니다. 또한 우리는 이것은 정방 행렬이라고도 부릅니다. 왜냐하면 행과 열의 수가 같기 때문입니다. 맞습니다. 오직 정방 행렬만이 역행렬을 가질 수 있습니다. A 행렬은 정방 행렬이기 때문에 m x m행렬을 이고 역행렬 수식은 이거와 같습니다. 좀 더 구체적인 예를 보겠습니다. 여기 (3 4 2 6) 으로 구성된 행렬이 있습니다. 이건 2x2 행렬입니다. 그래서 정방행렬이면서 이건 역행렬을 이건 역행렬을 가질 수 있습니다. 가질 수 있습니다. 역행렬을 구하면 역행렬을 구하면 다음과 위와 같습니다. 다음과 위와 같습니다. 그리고 2개의 행렬을 곱하게 되면 2x2 항등행렬을 얻을 것입니다. I2x2 알겠죠? 이 슬라이드에서, 행렬 A 와 A의 역행렬이 있습니다. 만약 여러분이 A행렬과 A의 역행렬을 곱하게 되면, 여러분은 항등 행렬을 얻는다는 것을 알았습니다. 어떻게 역행렬을 찾고, 계산하는지 알겠나요?, 여러분은 직접 손으로 역행렬을 구할 수 있지만 최근에 그런 적은 없을 것입니다. 그 이유는 매우 좋은 계산 프로그램들이 행렬과 역행렬을 계산해주기 때문입니다. 다시 말해, 이건 여러분이 수많은 인기 있는 프로그래밍 언어를 이용하며, 역행렬을 계산해주는 수많은 오픈 소스 라이브러리 중 하나입니다. 간단한 예제를 하나 보여드리겠습니다. 역행렬을 구할 때 어떻게 계산하는지, 제가 Optive 소프트웨어를 이용해서 보여드리겠습니다. 우선 창을 가져옵니다. 우리는 Optive 프로그램에 대해 나중에 많이 볼 것입니다. 우선은 간단한 예제를 빠르게 보여드리겠습니다. 왼쪽에 있는 행렬과 같은 행렬을 A행렬 이라고 하겠습니다. 이 행렬은 (3 4 2 16)으로 구성되어 있습니다. 이게 행렬 A입니다. 이 행렬은 왼쪽 아래 있는 (3 4 2 16) 행렬입니다. 그래서 소프트웨어를 이용하여. A의 역행렬을 간단히 구해보겠습니다 위와 같이 명령어를 사용하겠습니다. 그래서, 행렬의 결과는 위와 같습니다. 그래서, 행렬의 결과는 위와 같습니다. 그래서, 행렬의 결과는 위와 같습니다. 이것은 A의 역행렬이 무엇인지 수학적 정답을 제공해줍니다. 이제 저는 inverseofA = P (A) 라고 명령어를 칩니다. 이제 저는 inverseofA = P (A) 라고 명령어를 칩니다. 이제 저는 inverseofA = P (A) 라고 명령어를 칩니다. 이제 저는 inverseofA = P (A) 라고 명령어를 칩니다. 그리고 저는 A와 A의 역행렬의 곱이 그리고 저는 A와 A의 역행렬의 곱이 항등행렬이 나오는지 확인 할 수 있습니다. 항등행렬이 나오는지 확인 할 수 있습니다. 항등행렬이 나오는지 확인 할 수 있습니다. A행렬과 A의 역행렬을 곱해보겠습니다. A행렬과 A의 역행렬을 곱해보겠습니다. 그 결과 이 행렬이 나옵니다. 이 행렬은 대각선 성분은 1입니다. 하지만 다른 성분들은 위와 같습니다. 각각의 수가 나타내는 것은 수의 정확도를 표기하는 방법입니다. 컴퓨터는 최적화 행렬을 계산하였고 대각선이 아닌 요소들의 거의 0에 가깝기 때문에 이 행렬은 항등 행렬입니다. A행렬과 A역행렬의 행렬 곱셈의 결과가 항등행렬이라는 것을 확인 할 수 있습니다. 대각 요소들은 1이고 나머지 요소들은 약간의 오차를 제외하고 거의 0입니다. 역행렬의 정의에는 우선은 정방행렬이어야 한다는 것입니다. 이 행렬은 역이 있고, 그건 A가 역행렬이 있다는 것입니다. 이 내용은 linear algebra의 범위를 벗어납니다. 그래서 여러분의 직관적으로 알기 어렵습니다. 숫자 0은 역이 없습니다. 이것처럼 만약 A의 행렬이 모두 0인 경우 역행렬이 없습니다. 왜냐하면 행렬이 없기 때문에 역행렬이 없고, 행렬과 다른 행렬을 곱해 항등 행렬을 만들어주는 행렬이 없습니다. 이러한 유사한 특징을 가지는 행렬이 몇 개 있습니다. 그것들은 역행렬을 가지지 않습니다. 그러나 이 리뷰에서는 행렬이 역행렬을 가진다는 의미가 무엇인지 자세히 공부하지는 않습니다. 우리의 기계학습 응용 프로그램에는 문제가 되지 않고, 학습 알고리즘에 대해 정확히 알 수 있습니다. 여기에 역행렬이 있든, 없든 상관없습니다. 저는 여러분들이 역행렬을 가지거나 없는 것이 알고리즘에서 무엇을 의미하는지 에 대해 이야기 할 것입니다. 각 경우 어떻게 해결하는지 에 대해 말입니다. 역행렬이 없는 행렬을 가지고 진행합니다. 역행렬이 없는 행렬을 가지고 진행합니다. 여러분이 행렬이 역행렬을 가지는지. 대해 생각할 수 있는 직관적 사고는 거의 0에 가깝습니다 그래서 용어를 정리하려고 합니다. 역행렬을 가지지 않는 행렬은 singular matrix 또는 degenerate matrix이라고 합니다. 여기서 예제는 (0 0 0 0) 행렬입니다. 이 예제 행렬은 singular matrix 또는 degenerate matrix 라고 합니다. 마지막으로 특별한 행렬 연산자를 소개하고 싶습니다. 바로 전치행렬입니다. A 행렬이 있다고 가정합시다. 저는 이 행렬을 전치시키려고 합니다. 그 결과는 오른쪽에 있습니다. 이게 전치입니다. AT 라고 표기합니다. 다음은 행렬의 전치 행렬을 계산하는 방법입니다. 전치를 위해 우리는 A행렬의 첫 번째 행을 가져옵니다. 이것이 전치행렬의 첫 번째 열이 됩니다. 그리고 A행렬의 2번째 행 (3 5 9)을 가져옵니다. 이것이 전치 행렬의 2번째 열이 됩니다. 그리고 전치 행렬을 계산하는 다른 방법이 있습니다. 여러분이 45축을 정리하려고 하면, 여러분은 mirroring과 flipping을 이용할 것입니다. 여기에 전치행렬의 공식화된 정의가 있습니다. A를 m x n행렬이라고 합시다. 그리고 B는 A의 전치행렬이라고 합시다. 행렬 B는 n x m 행렬이고 여기 2x3의 반대인 차원수를 가질 것입니다. 그래서 전치 행렬은 3x2의 행렬이 됩니다. 게다가 Bij = Aji가 성립합니다. 그래서 Bij는 원래 Aji였습니다. 그래서 Bij는 원래 Aji였습니다. 그래서 Bij는 원래 Aji였습니다. 그래서 Bij는 원래 Aji였습니다. 예를 보면 B12는 행렬에서 보면 원래 1행 2열 값 3입니다. 그리고 이건 A21과 같고 A행렬의 2행 1열의 값입니다. B32는 9이고 B32는 9이고 이건 A23이랑 같습니다. 이건 A23이랑 같습니다. 이건 A23이랑 같습니다. 그래서 전치 행렬이 무엇을 의미하는지에 대한 정의를 요약했습니다. 이것으로 linear algebra review를 마칩니다. 이제 지금까지 잘 진행 했으면, 여러분들은 행렬의 사칙연산을 어떻게 . 하는지 알 것입니다. 역행렬과 전치 행렬의 정의가 무엇인지, 그리고 그것들이 linear algebra에서 사용되는 주요 연산자라는 것도 말입니다 이 자료를 처음 보는 경우 일 것입니다. 저도 압니다. 이 강의는 linear algebra를 간략하게 전체를 빠르게 확인한 것입니다. 이 내용들은 중요하지만 전부 암기해야 하는 것은 아닙니다. 또한 여러분들은 . 웹사이트를 통해 강의 노트나 슬라이드를 다운 받을 수도 있습니다 정의가 필요한 경우 이 강의노트나 슬라이드들을 이용하세요. 여러분이 행렬 곱셈, 전치와 같은 정의를 다시 참조할 때 이용하시면 됩니다. 웹사이트 에 올라와 있는  강의 노트는 linear algebra에 대한 추가적인 자료입니다 여러분이 좀 더 공부하고 싶으시면 참고하세요. 다음 수업은 새로운 프로그램 툴에 대한 것입니다. 다음 영상에서 우리는 linear regression의 좀 더 강력한 방식을 개발할 수 있습니다. 이 방식은 더 많은 데이터, 특징, training 세트를 다룰 수 있으며, 우리는 더 강력한 학습 알고리즘을 유도하기 위해 지속적으로 linear algebra 툴을 이용할 것입니다. 이용할 것입니다.