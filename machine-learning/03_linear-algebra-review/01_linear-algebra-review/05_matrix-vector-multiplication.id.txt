Di video ini, saya ingin mulai bicara tentang bagaimana mengalikan dua matriks sekaligus. Kita mulai dengan satu kasus khusus dari perkalian vektor matriks - mengalikan satu matriks dengan satu vektor. Mari mulai dengan satu contoh. Ini satu matriks, dan ini satu vektor, dan katakanlah kita mau mengalikan matriks ini dengan vektor ini bersama, apa hasilnya? Biar saya kerjakan contoh ini lalu kita bisa kembali lagi dan melihat apa saja langkahnya. Tampaknya hasil perkalian ini akan jadi sebuah vektor. Dan pertama saya akan kerjakan ini dan nanti kita kembali lagi dan lihat apa yang saya kerjakan di sini. Untuk mendapatkan elemen pertama dari vektor ini saya akan mengambil dua angka ini dan mengalikannya dengan baris pertama matriks dan menambahkan hasilnya bersama. Ambil satu dikalikan dengan satu, dan ambil tiga dan kalikan dengan lima, dan itu berapa, itu satu tambah lima belas jadi enam belas. Saya akan tulis enam belas di sini. Lalu untuk baris kedua, elemen kedua, saya akan ambil baris kedua dan mengalikannya dengan vektor ini, jadi saya punya empat kali satu, tambah nol kali lima, yang sama dengan empat, jadi Anda punya empat di sana. Dan akhirnya untuk yang terakhir saya punya dua satu kali satu lima, jadi dua kali satu, tambah satu kali lima, yang sama dengan tujuh, dan jadi saya punya 7 di sana. Tampaknya hasil perkalian matriks 3x2 dengan matriks 2x1 adalah vektor 2-dimensi. Hasilnya menjadi matriks 3x1, jadi itulah mengapa matriks 3x1, kata lainnya vektor tiga dimensi. Saya menyadari saya mengerjakannya sangat cepat, dan Anda mungkin tidak yakin kalau Anda bisa mengulang proses ini sendiri, tapi mari lihat lebih detil apa yang baru saja terjadi dan bagaimana tampaknya proses perkalian matriks ini dengan vektor. Ini detil bagaimana mengalikan matriks dengan vektor. Katakanlah saya punya matriks A dan ingin mengalikannya dengan vektor x. Hasilnya akan jadi vektor y. Jadi matriks A adalah matriks m x n dimensi, jadi m baris dan n kolom dan kita akan mengalikannya dengan matriks n x 1, dengan kata lain vektor n dimensi. Tampaknya "n" di sini harus sama dengan "n" di sini. Dengan kata lain, jumlah kolom dalam matriks ini, jadi itu jumlah n kolom. Jumlah kolom di sini harus sama dengan jumlah baris di sini. Itu harus sama dengan dimensi vektor ini. Dan hasil perkalian ini menjadi vektor y n dimensi. Baris di sini. "m" akan sama dengan jumlah baris matriks "A" ini. Jadi bagaimana Anda menghitung vektor "y" ini? Tampaknya untuk menghitung vektor "y" ini, proses mendapatkan "yi", mengalikan baris "A" ke-i dengan elemen vektor "x" dan menjumlahkan hasilnya. Jadi ini maksud saya. Untuk mendapatkan elemen pertama "y", angka pertama itu --apapun itu jadinya-- kita akan ambil baris pertama matriks "A" dan mengalikan mereka satu-satu dengan elemen vektor "x" ini. Jadi saya ambil angka pertama ini mengalikannya dengan angka pertama ini. Lalu ambil angka kedua kalikan dengan angka kedua ini. Ambil angka ketiga ini berapapun itu, kalikan dengan dengan angka ketiga dan seterusnya hingga selesai. Dan saya akan menjumlahkan hasil perkalian ini dan hasilnya elemen "y" pertama ini. Lalu saat kita ingin mendapatkan elemen "y" kedua, katakanlah elemen ini. Caranya adalah ambil baris kedua A dan kita ulangi prosesnya. Jadi kita ambil baris kedua A dan mengalikannya per elemen, jadi elemen x dan tambahkan hasil perkaliannya dan itu menghasilkan elemen kedua y. Dan teruskan untuk mendapat dan kita ambil baris ketiga A, kalikan per elemen dengan vektor x jumlahkan hasilnya lalu saya dapatkan elemen ketiga dan seterusnya, hingga saya mencapai baris terakhir seperti itu, okey? Jadi itulah prosedurnya. Mari kerjakan satu contoh lagi. Ini contohnya. Mari lihat pada dimensinya. Di sini, ini adalah matriks 3x4 dimensi. Ini vektor 4-dimensi, atau matriks 4x1, dan hasilnya, hasil perkaliannya akan jadi vektor 3-dimensi. Tulis vektornya, dalam ruang untuk tiga elemen. Mari kerjakan perkaliannya. Jadi untuk elemen pertama, saya ambil empat angka ini dan mengalikannya dengan vektor x. Jadi saya punya 1x1, tambah 2x3, tambah 1x2, tambah 5x1, yang sama dengan 1+6, tambah 2+6, yang hasilnya 14. Lalu untuk elemen kedua, saya akan ambil baris ini dan mengalikannya dengan vektor ini. Baiklah, jadi 0x1 tambah 3x3 tambah 0x2 tambah 4x1, yang sama dengan, mari lihat itu 9+4, yakni 13. Dan terakhir, untuk elemen terakhir, saya akan ambil baris terakhir ini, jadi saya punya -1x1. -2, sudah ada + di sebelah 2 saya pikir, kali 3 tambah 0x2 tambah 0x1, dan itu jadi -1 -6, yang hasilnya negatif 7, jadi itu negatif tujuh. Oke? Jadi jawaban akhirnya adalah vektor empat belas, mau menulisnya tanpa warna, empat belas, tiga belas, negatif tujuh. Dan sesuai yang dijanjikan, hasil ini adalah matriks 3x1. Jadi itu caranya Anda mengalikan matriks dan vektor. Saya tahu banyak yang terjadi di slide ini, jadi jika Anda tidak begitu yakin menuju kemana semua angka ini, Anda bebas menghentikan sementara videonya, Jadi perhatikan perlahan-lahan seluruh perhitungan yang baru kita kerjakan ini dan cobalah pastikan Anda mengerti langkah-langkah apa yang baru terjadi untuk memperoleh angka ini, empat belas, tiga belas, dan negatif tujuh. Terakhir, mari saya tunjukkan Anda trik cerdik. Katakanlah kita punya sekumpulan empat rumah, jadi 4 rumah dengan 4 ukuran seperti ini. Dan katakanlah saya punya hipotesis untuk memprediksi berapa harga rumah, dan katakanlah saya ingin menghitung, h(x) dari setiap empat rumah saya di sini. Tampaknya ada cara cerdik menampilkan ini, menerapkan hipotesis ini ke seluruh rumah saya sekaligus. Tampaknya ada cara cerdik menampilkan ini sebagai perkalian matriks vektor. Jadi, begini saya akan mengerjakannya. Saya akan menyusun matriks seperti berikut. Matriks saya akan jadi 1111 kali, saya akan menulis ukuran keempat rumah saya di sini dan saya akan menyusun vektor juga, dan vektor saya adalah vektor dua elemen ini, yaitu -40 dan 0.25. Itu dua koefisien ini, theta0 dan theta1. Dan apa yang akan saya lakukan adalah mengambil matriks dan vektor itu dan mengalikannya bersama, tanda kali itu adalah simbol perkalian. Jadi apa yang saya dapatkan? Ini matriks 4x2. Ini matriks 2x1. Hasilnya vektor 4x1, baiklah. Jadi, biar saya, jadi ini matriks 4x1 hasilnya benar-benar vektor 4-dimensi, biar saya tulis itu sebagai satu dari empat elemen saya dalam empat angka riil saya di sini. Sekarang tampaknya elemen pertama dari hasil ini, cara saya mendapatkan itu, saya akan ambil ini dan mengalikannya dengan vektor. Dan ini jadinya -40 x 1 + 4.25 x 2104. Ngomong-ngomong, pada slide awal saya menulis 1 x -40 dan 2104 x 0.25, tapi urutannya tidak masalah, bukan? -40 x 1 sama saja dengan 1 x -40. dan elemen pertama ini, tentu saja, adalah "h" yang diterapkan untuk 2104. Itu benar-benar prediksi harga untuk rumah pertama saya. Bagaimana dengan elemen kedua? Semoga Anda bisa melihat dimana saya akan mendapatkan elemen kedua. Betul? Saya akan ambil ini dan mengalikannya dengan vektor saya. Dan itu jadi -40 x 1 + 0.25 x 1416. Jadi ini "h" untuk 1416. Betul? Begitu seterusnya untuk elemen ketiga dan keempat dari vektor 4x1 ini. Dan hanya untuk menerangkan bagian ini di sini yang saya gambar dengan kotak hijau sekeliling, itu angka riil, oke? Itu angka riil tunggal, dan ini yang saya gambar kotak magenta sekeliling - yang ungu, kota berwarna magenta sekeliling - itu angka riil, kan? Jadi bagian ini di kanan - semua bagian di kanan ini, ini matriks dimensi 4x1, adalah vektor 4 dimensi. Dan yang cerdiknya di sini adalah saat Anda mengimplementasikan ini di software, saat Anda punya empat rumah dan saat Anda ingin menggunakan hipotesis Anda untuk memprediksi harga "y" dari seluruh empat rumah ini. Maksudnya adalah, Anda bisa menulis ini dalam satu baris kode. Ketika kita bicara tentang Octave dan bahasa pemrograman nanti, Anda dapat menulis ini dalam satu baris kode. Anda tulis prediksi sama dengan DataMatrix kali parameters, benar? Dimana DataMatrix adalah bagian ini, dan parameters adalah bagian ini, dan tanda kali ini adalah perkalian matriks vektor. Dan jika Anda mengerjakan ini maka variabel prediksi ini - maaf tulisan tangan saya jelek - maka implementasikan saja satu baris kode ini dengan asumsi Anda punya pustaka yang tepat untuk mengerjakan perkalian matriks vektor. Jika Anda mengerjakan ini, maka prediksi menjadi vektor berdimensi 4x1 ini, di kanan, yang memberi Anda semua prediksi harga. Dan alternatif bagi Anda mengerjakan perkalian matriks vektor ini adalah menulis sesuatu seperti, for i sama dengan 1 sampai 4, benar? Dan Anda punya katakanlah seribu rumah itu akan jadi for i sama dengan 1 sampai seribu atau apapun. Lalu Anda harus menulis prediksi(i) sama dengan. Lalu mengerjakan lebih banyak perkerjaan di sana dan tampaknya saat Anda punya sejumlah besar rumah, jika Anda coba memprediksi harganya bukan hanya empat tapi mungkin seribu rumah maka saat Anda mengimplementasikan ini di komputer, seperti ini, dalam berbagai bahasa pemrograman. Ini tidak hanya bekerja pada Octave, tapi juga untuk C++, Java, Python, atau bahasa tingkat tinggi lainnnya. Tampaknya dengan menulis kode dengan gaya ini di kiri, itu membolehkan Anda tidak hanya menyederhanakan kodenya, karena, sekarang, Anda hanya menulis satu baris kode daripada suatu bentuk dengan banyak hal didalamnya. Tapi, untuk alasan cerdik, yang kita akan lihat nanti, tampaknya perhitungannya jauh lebih efisien untuk memprediksi semua harga rumah Anda dengan mengerjakannya seperti cara di kiri daripada cara yang di kanan atau jika Anda menulis sendiri rumusnya. Saya akan bicara lebih tentang ini nanti saat kita bicara tentang vektorisasi, tapi, dengan menampilkan prediksi seperti ini, Anda tidak hanya mendapat potongan kode yang lebih sederhana, tapi lebih efisien juga. Jadi itu saja untuk perkalian matriks vektor dan kita akan menggunakan operasi ini selagi kita membangun regresi linier dalam model lain selanjutnya. Tapi, dalam video berikut, kita akan mengambil ini dan menyamaratakan ini pada kasus perkalian matriks matriks.