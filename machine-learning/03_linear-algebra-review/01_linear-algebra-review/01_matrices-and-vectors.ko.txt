지금부터 선형대수에 대해서 다시 알아보도록 하죠 이 비디오에서 우리는 행렬-Matrices-과 벡터-Vectors-가 무엇인지 알아볼겁니다 행렬이란 각 괄호-square brackets-들 안에 네모꼴로 나열된 숫자들의 배열-array-을 말합니다 예를 들어보죠 여기 행렬이 하나 있어요 먼저 왼쪽에서 각 괄호를 열고 그리고 몇몇의 숫자들을 그 안에 적습니다 이는 학습하기 위한 문제들을 다룰수도 있으며 또한 다른곳으로부터 나온 데이터일 수 있습니다. 하지만 이는 전혀 상관이 없는 특정한 값들입니다 그리고 우측 각 괄호를 적어서 괄호를 닫습니다 그러면 여기에 하나의 행렬이 완성됩니다 그러면 여기에 행렬의 다른 예시를 하나 들어보죠 1, 2, 3, 4, 5, 6을 각각 적어주세요 이런 행렬은 다른식으로 2D 또는 2차원 배열이라고도 부릅니다 그리고 우리가 알아야 하는 또 다른 지식으로는 그 행렬의 줄의 숫자와 컬럼의 숫자의 곱으로 쓸 수 있는 행렬의 차원이 있습니다 구체적으로 이 예제로 알아보자면 왼쪽의 행렬을 보면 1, 2, 3, 4개의 줄과 그리고 2개의 컬럼을 가지고 있습니다 그러므로 왼쪽에 있는 이 예제는 4 X 2 행렬입니다 각 줄의 숫자와 각 컬럼의 숫자의 곱과 같이 말입니다 그러면 4개의 행들과 2개의 열을 가지고 있겠네요 나머지 오른쪽의 예제를 보면, 이 행렬은 2개의 줄을 가지고 있네요 이것이 첫번째 줄이고 이것이 두번째 줄이네요, 그리고 3개의 컬럼을 가지고 있습니다 이것이 첫번째 컬럼이고 이것이 두번째 컬럼, 이것이 세번째 컬럼입니다 그러므로 이 두번째 행렬을 우리는 2 X 3 행렬이라고 할 수 있습니다 그러므로 우리는 이 행렬의 차원을 2 x 3라고 할 수 있습니다 종종 우리는 이와는 다른 방식으로 표현할 수도 있습니다 왼쪽의 경우를 보면 우리는 이를 R^(4x2)라고 쓰기도 해요 구체적으로 어떤 사람들은 종종 이런 행렬이 집합 R^(4x2)의 한 원소라고 이야기합니다 따라서, 이것은 4x2 차원을 가지는 행렬의모든 집합을 의미하고, 오른쪽의 이것은 종종 행렬 R (2x3)로 표기됩니다. 따라서, 2x3, 따라서, 이와 같이 4x2같은 표기 혹은  2x3과 같은 표기를 본다면, 그건 특정 차원을 가지는 행렬을 의미하는 것입니다. 다음으로, 매트릭스 내의 특정 원소를 지칭하는 방법을 알아보도록 하겠습니다. 그리고 원소라고 하는 것은, 행렬 그 자체가 아니라 그 안의 숫자를 의미합니다. 따라서, 일반적인 표기로서 A가 이 행렬을 가리키고 A 에 아래첨자로 i j가 표기되었다면, 이것은 i, j번째 원소 즉 행렬의 i 행 j열에 위치한 원소를 지칭합니다. 예를 들어 A_11은 행렬의 원소 중 첫번쨰 줄과 첫번쨰 열의 원소를 나타내고, 그건 이곳 첫줄과 첫 열을 나타내어 A_11은 1402가 됩니다. 다른 예시를 들어보죠, A_12는 행렬 중에 첫번째 줄 두 번째 열에 있는 원소를 의미하고, 따라서 A_12는 191이 됩니다. 다른 예를 들어보죠 A_32라고 한다면, A_32는 행렬 중에 3번째 행, 두 번째 열에 있는 여기, 3, 2, 그럼 1437이 되지요. 마지막으로, A_41은 여기, 4번째 행 첫번째 열의 147이 되고, 만약에, 물론 그러지 않으시겠지만, 만약, 어, A_43이라고 적는다면, 만약, 어, A_43이라고 적는다면, 이것은 4번째 행 3번째 칼럼, 즉 이 행렬에는 세번째 열이 없으므로 정의되지 않습니다. 보시면 아시겠지만, 에러가 되겠지요. 여기엔 A_43이라는 원소가 없으므로, 여러분은 A_43이라는 원소를 지시하시면 안됩니다. 그래서, 행렬은 여러분이 많은 자료들을 정리하고 인덱싱하기 위한 방법입니다. 만약 제가 너무 많은 개념과 많은 새 notation을 사용하고 있다면, 여러분은 전부 기억하실 필요는 없습니다. 대신 이 강의노트가 있는 웹사이트에 대신 이 강의노트가 있는 웹사이트에 모든 정의를 적어 놓았으니 모든 정의를 적어 놓았으니 언제나 참고하실 수 있습니다. 음, 이 슬라이드나 다른 코스웍 혹은 강의자료를 보고 notation들, A_41이 뭐였더라? 뭐가 행이고 뭐가 열이었지? 지금 당장 전부 기억하실 필요는 없습니다. 언제나 웹사이트에서 자료를 볼 수 있고, 참고할 수 있습니다. 자, 이게 행렬입니다. 다음으로, 벡터를 알아보죠 벡터는 특수한 형태의 행렬이라고 볼 수 있습니다. 벡터는 행렬이지만 하나의 열만을 가지고, 이건 Nx1 행렬 기억하시죠? N은 행의 갯수, 여기 1은 열의 갯수 여기 1은 열의 갯수 즉, 한 개의 열만을 가진 행렬을 벡터라고 부릅니다. 벡터의 예시를 볼까요. 여기, N=4인 벡터, 네 개의 원소가 있죠? 그래서 이 벡터는 다른 말로 4차원 벡터라고 불리는데 다른 말로 4차원 벡터라고 불리는데 이것은 4개의 원소로 이루어진 이것은 4개의 원소로 이루어진 벡터를 의미합니다. 그리고, 앞의 행렬에서 보았듯이 그리고, 앞의 행렬에서 보았듯이 R 3x2 로 3x2 행렬을 나타낼 수 있었는데, R 3x2 로 3x2 행렬을 나타낼 수 있었는데, R 3x2 로 3x2 행렬을 나타낼 수 있었는데, 이 벡터는 R4로 나타낼 수 있습니다. 이 벡터는 R4로 나타낼 수 있습니다. 이 R4는 4차원 벡터를 의미하는 것이죠 이 R4는 4차원 벡터를 의미하는 것이죠 다음으로, 벡터 내의 원소를 지칭하는 방법을 얘기해봅시다. 다음과 같은 notation을 사용할텐데요, y_i로 벡터 y의 i번째 원소를 지칭합니다. y_i로 벡터 y의 i번째 원소를 지칭합니다. 따라서, y가 이 벡터라면 y_i는 i번쨰 원소를 지칭하고 y_1은 첫번째 원소, 460이 되고, y_2는 두번쨰 원소, 232 - 여기가 첫번째, 여기가 두번째죠. 232 - 여기가 첫번째, 여기가 두번째죠. y_3는 315, 그리고 y_3는 315, 그리고 y_1부터 y_4까지만 이 벡터 내에서 정의되죠. y_1부터 y_4까지만 이 벡터 내에서 정의되죠. 그리고 벡터 내의 원소를 표시하는 방법은 그리고 벡터 내의 원소를 표시하는 방법은 다음과 같이 두 가지가 있습니다. 다음과 같이 두 가지가 있습니다. 어떨 땐 1-indexed vector를 쓰고 어떨 땐 0-indexed를 쓰죠. 이 왼쪽의 예시가 1-indexed vector고, 이 왼쪽의 예시가 1-indexed vector고, 원소들은 y_1, y_2, y_3, y_4로 표시되죠. 원소들은 y_1, y_2, y_3, y_4로 표시되죠. 그리고 이 오른쪽의 예시가 0-indexed vector고 이 경우에는 index가 0부터 시작하죠. 이 경우에는 index가 0부터 시작하죠. 따라서, 원소들은 y_0부터 y_3까지가 됩니다. 이건 어떤 프로그래밍 언어들에서 이건 어떤 프로그래밍 언어들에서 행렬이 0이나 1부터 시작하는 것과 유사하죠. 행렬을 0이나 1부터 시작하는 것과 유사하죠. 행렬의 첫번째 원소가 어떨 때는 y[1] 이게 아마 행렬의 notation였죠? 혹은 어떨때는 y[0] 사용하는 프로그래밍 언어에 따라 말이죠. 실제 수학에서는 1-indexed 버전을 실제 수학에서는 1-indexed 버전을 많이 사용하고, 기계학습에서는 0-indexed 버전이 기계학습에서는 0-indexed 버전이 좀 더 사용하기 편합니다. 따라서, 특별히 표시되지 않으면 우리는 1-indexed vector를 사용하는 것으로 간주하면 됩니다. 실제로, 나머지 선형대수 리뷰 강의에서는 1-indexed vectof를 사용할 것입니다. 1-indexed vectof를 사용할 것입니다. 하지만, 기계학습의 적용에서 사용할 때에는 하지만, 기계학습의 적용에서 사용할 때에는 가끔 제가 직접적으로 다른 notation을 사용할 것이라고 언급할 것이고, 다른 notation을 사용할 것이라고 언급할 것이고, 그 떄 사용하는 벡터는 0-indexed 벡터로 이해하시면 됩니다. 마지막으로, 전통적으로 행렬을 표시할 때는 사람들은 보통 대문자를 사용하므로, 사람들은 보통 대문자를 사용하므로, 앞으로 A, B, C와 같은 대문자를 사용한다면, X라든가, 행렬을 뜻하는 것입니다. 그리고 소문자를 사용한다면, a, b, x, y, 일반적인 숫자, 자료값, 스칼라값, 혹은 벡터를 지칭하는 것입니다. 일반적인 숫자, 자료값, 스칼라값, 혹은 벡터를 지칭하는 것입니다. 언제나 이렇다는건 아니지만, 소문자 y를 사용하는 방식이 벡터를 지칭하고, 소문자 y를 사용하는 방식이 벡터를 지칭하고, 대문자를 사용하는 것이 행렬을 의미하는 것이 일반적이죠. 행렬을 의미하는 것이 일반적이죠. 이제 행렬과 벡터에 대해 다시 알아봤습니다. 다음은, 이걸로 뭘 할 수 있는지 알아보도록 하지요.