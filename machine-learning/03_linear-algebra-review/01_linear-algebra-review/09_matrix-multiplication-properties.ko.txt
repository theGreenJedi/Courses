행렬 곱셈은 매우 유용합니다. 여러분은 여러 개의 계산식을 하나의 행렬 곱셈으로 표현할 수 있기 때문입니다. 그러나 여러분은 행렬 곱셈을 사용할 때 주의해야 합니다. 이 영상에서는 저는 여러분들에게 행렬의 몇 가지 속성에 대해 이야기 하려고 합니다. 실수를 계산할 때나, scalars, 곱셈 할 때 교환법칙이 성립합니다. 제가 말하는 것은 3×5 와 5×3이 동일하다는 것입니다. 제가 말하는 것은 3×5 와 5×3이 동일하다는 것입니다. 곱셈의 순서는 중요하지 않습니다. 우리는 이것을 교환법칙이라고 부립니다. 실수의 곱셈에서 말입니다. 이 속성은 여러분이 곱셈을 할 때 순서를 바꿀 수 있다는 뜻입니다. 하지만 이건 행렬의 곱셈에서는 적용되지 않습니다. 구체적으로 A, B 행렬이 있다고 하면 A×B와 B×A는 같지 않다는 것입니다. 그래서 이것을 주의해야 합니다. 임의로 행렬의 곱셈의 순서를 바꾸면 안 됩니다. 행렬의 곱셈에서는 교환법칙이 성립하지 않습니다. 구체적으로 예시를 들겠습니다. 2개의 행렬이 있습니다. 행렬 (1 1 0 0) 행렬 (0 0 2 0)을 곱합니다. 여러분이 이 행렬을 곱하면 오른쪽과 같은 결과를 얻습니다. 이제 2개의 행렬의 위치를 바꿔서 계산하겠습니다. 2개의 행렬을 가지고, 순서를 바꾸면 이 순서의 행렬의 계산을 하면 여러분은 오른쪽과 같은 2번째 결과 값을 얻습니다. 이 2개의 행렬은 서로 같지 않습니다. 일반적으로 여러분은 A × B 연산자를 사용했습니다. A는 m×n 행렬이고 B는 n×m 행렬입니다. 한 예를 보면 행렬 A 곱하기 B를 해보면 이 행렬은 m×m 행렬의 결과 값으로 나올 것입니다. 반대로 B×A 순으로 계산을 하면  결과 값은 n×n 행렬이 나올 것입니다. 결과로 나온 2개의 행렬의 차원 수가 다릅니다. 만약 AxB 그리고 BxA 의 차원 수가 다르게 나온다면 왼쪽에 예제를 보겠습니다. 우리는 2개의 행렬을 가지고 있습니다. 2개의 행렬은 차원 수가 같습니다. 그러나 일반적으로, 행렬의 곱셈 순서를 바꾸게 되면 결과 값의 차원 수도 바뀌게 됩니다. 결국 행렬의 곱셈에서는 교환 법칙이 성립하지 않는 것입니다. 다음으로 소개하고 싶은 속성은 이것입니다. 우리는 실수나 scalars 에 대해 이야기 했을 때 우리는 3×5×2 이런 식으로 이야기 합니다. 먼저 5×2를 먼저 계산합니다. 그리고 3×10을 계산합니다. 저는 3×5를 먼저 계산해서 15×2를 계산할 수도 있습니다. 두 가지 방법은 모두 같은 결과 값을 말해 줍니다. 두 개 모두 30입니다. 제가 어떤 것을 먼저 곱하는가는 문제가 되지 않습니다. 왜냐하면 수식으로 표현 하면 다음과 같기 때문입니다. 3x(5x2) = (3x5)x2 우리는 이것을 실수의 결합 법칙이라고 합니다. 행렬 곱셈은 서로 상관이 있습니다. 구체적으로 저는 3개의 행렬을 곱하려고 합니다. 저는 다음과 같은 순서로 행렬의 곱셈을 계산할 수 있고 Ax(BxC), 이 순서 말고 다음과 같은 순서로도 계산을 할 수 있습니다. (AxB)xC , 그리고 2개의 계산순서는 동일한 결과 값을 가집니다. 저는 이것을 증명할 수 없습니다. 하지만 여러분들에게 저의 추측은 이야기 해드릴 수 있습니다. 저는 이 2개의 케이스가 이야기 하는 것은 명백합니다. 첫 번째를 보겠습니다. 이것이 1번 케이스입니다. 이것을 보고 제가 말하고 싶은 것은 여러분이 A×B×C를 계산하고 싶어 한다면 여러분이 할 수 있는 일은 B×C를 먼저 계산할 수 있다는 것입니다. 그래서 D = B×C 라고 하고 나중에 A×D를 계산하는 것입니다. 그리고 여기 실제 A×B×C를 계산한 것입니다. 2번째 경우는, 여러분은 이 식을 계산하기 위해, 여러분은 먼저 E =A×B를 계산하고 E와 C를 곱할 수 있습니다. 그러면 이것은 A×B×C와 같은 결과 값을 가집니다. 2개의 선택사항은 같은 결과값이 나온다는 것을 알려줍니다. 우리는 곱셈 행렬에서 결합법칙을 이용할 수 있다고 말할 수 있습니다. 알겠죠? 그리고 결합법칙과 교환법칙에 대한 정확한 정의에 대해 걱정 마세요 우리가 이렇게 부르는 것이지, 그러나 이 수업에서는  용어들을 기억하려고 너무 애쓰지 마세요 마지막으로 저는 여러분들에게 항등행렬이라는 특별한 행렬에 대해 이야기 하겠습니다. 자, 다시 한번 우리가 실수에 대해 무엇을 알고 있는지 비유로 알아보겠습니다. 우리가 실수나 scalars 값을 다룰 때, 여러분들은 숫자 1을 곱셈의 항등 값으로 생각 할 수 있습니다. 항등 값이 의미하는 것은 어떠한 수 z에 대해서 다음수식 1xz = zx1 만족한다는 내용입니다. 어떠한 실수 z 에 대해도 항상 동일합니다. 그래서 숫자 1은 항등 값이고 이것은 위 수식을 만족시킵니다. 우리는 행렬 차원에서 우리는 항등 행렬을 보통 i로 표기합니다. 때때로  I행렬을 n×n행렬로 표기하고  차원수를 명확히 표기합니다. I nxn 으로 표시하는 것은 n ×n 항등행렬을 뜻합니다. 서로 다른 항등행렬은 다른 차원수를 가집니다. 여기 몇 가지 예제가 있습니다. 이건 2×2 항등행렬입니다. 이건 3×3 항등 행렬입니다. 이건 4×4 행렬입니다. 그래서 항등 행렬이 가지는 속성은 대각선 성분들이 1이라는 것입니다. 모두 그렇습니다. 다음을 보면 나머지 모두 0입니다. 그래서 1×1 항등행렬은 단지 숫자 1 한 개를 가집니다. 그리고 이것이 숫자 1을 하나를 가지는 1×1행렬입니다. 이건 재미없는 항등 행렬입니다. 비공식적으로, 저 또는 다른 사람들은 종종 귀찮아서, 항등행렬은 다음과 같이 사용합니다. 우선은 큰 대괄호를 그리고 1 1 1 ....... 1을 씁니다. 그리고 나머지 공간에는 귀찮아서 큰 0을 씁니다. 이 0들은 큰 0으로 대체합니다. 이것입니다. 이것이 의미하는 것은 행렬 대각선을 제외하고 모든 곳이 0으로 채워져 있다는 것을 의미합니다. 이건 단지 항등 행렬을 어떻게 표기하는가에 대해 설명한 것입니다. 항등 행렬이 가지는 속성은 바로 A행렬 × 항등행렬 = 항등행렬 × A행렬 이라는 수식이 만족 된다는 것입니다. 그렇지 않습니까? 1×z = 1×z가 같은 것처럼 I×A = A×I인 것 과 같습니다. 단지 우리는 차원 수를 정확히 확인 합니다. 만약 A 행렬이 m×n 행렬이면, 여기서 항등 행렬은 n×n 행렬일 것입니다. 만약 그렇다면, 이것이 항등행렬 일 것입니다. 행렬 곱셈이 만족하려고 한다면 이 행렬은 m×m 이어야 합니다. 왜냐하면 이 m과 이m은 매칭 되어야 합니다. 과정의 결과 행렬 A는 m×n 행렬입니다. 우리가 이제 항등행렬을 쓸 때마다, 여러분 행렬의 차원에 대해 종종 이야기 할 것입니다. 이것은 다음 내용을 함축합니다. 그래서 이 2개의 I는 사실 다른 차원의 행렬입니다. 하나는 n×n 이고 다른 하나는 m×m입니다. 그러나 우리는 이 행렬의 차원수를 확인하려고 하면 우리는 아까같이 Inxn으로 표기합니다. 그러나 종종우리는 차원 수는 생략합니다. 마지막으로 우리는 미리 이야기 했듯이 AB= BA는 성립하지 않습니다. 그렇지 않습니까? 대부분의 행렬 A,B에서는 위 수식은 성립하지 않습니다. 하지만 B가 항등행렬일 때 이 수식은 성립합니다. A 곱하기 항등행렬은 항등행렬 곱하기 A 와 같습니다. 이건 다른 일발적인 B행렬에서는 성립하지 않는 것입니다. 그래서 행렬곱셈의 특징, 항등행렬과 같은 특별한 행렬에 대해서 여러분들에게 이야기 하였습니다. 다음 마지막 선형 대수 영상에서는, 저는 여러분들에게 2개의 특별한 행렬 연산에 대해 이야기 할 것이고, 이거들은 linear algebra 수업에서 여러분들이 알아야 하는 것들입니다.