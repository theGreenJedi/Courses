1
00:00:00,230 --> 00:00:01,364
В этом видео я начну

2
00:00:01,364 --> 00:00:02,699
говорить об умножении

3
00:00:02,699 --> 00:00:05,020
матриц.

4
00:00:05,020 --> 00:00:06,618
Мы начнем с частного случая –

5
00:00:06,618 --> 00:00:08,347
умножения матрицы на

6
00:00:08,350 --> 00:00:12,530
вектор.

7
00:00:12,530 --> 00:00:13,975
Начнем с примера.

8
00:00:13,975 --> 00:00:15,722
Вот матрица, вот

9
00:00:15,722 --> 00:00:17,283
вектор, и, предположим,

10
00:00:17,283 --> 00:00:18,351
мы хотим умножить

11
00:00:18,351 --> 00:00:21,281
эту матрицу на этот вектор.

12
00:00:21,281 --> 00:00:24,202
Что получится?

13
00:00:24,202 --> 00:00:25,209
Давайте я сначала решу этот

14
00:00:25,210 --> 00:00:27,058
пример, а затем

15
00:00:27,058 --> 00:00:29,886
вернусь назад и разберу процесс в подробностях.

16
00:00:29,886 --> 00:00:31,104
Оказывается, что результатом

17
00:00:31,104 --> 00:00:32,912
умножения тоже будет

18
00:00:32,912 --> 00:00:34,554
вектор.

19
00:00:34,560 --> 00:00:35,931
И я сперва вычислю его, а затем

20
00:00:35,931 --> 00:00:37,108
мы возвратимся и посмотрим,

21
00:00:37,108 --> 00:00:39,650
что именно я сделал.

22
00:00:39,652 --> 00:00:41,228
Чтобы получить первый элемент

23
00:00:41,228 --> 00:00:42,445
вектора, я возьму

24
00:00:42,445 --> 00:00:44,840
эти два числа, умножу их на

25
00:00:44,849 --> 00:00:47,682
элементы первого ряда

26
00:00:47,682 --> 00:00:49,463
строку матрицы A и умножить

27
00:00:49,463 --> 00:00:51,884
произведения.

28
00:00:51,884 --> 00:00:54,223
Я возьму один и умножу на

29
00:00:54,223 --> 00:00:57,430
один, возьму три и умножу на пять,

30
00:00:57,430 --> 00:00:58,616
и получится один

31
00:00:58,616 --> 00:01:01,557
плюс пятнадцать, то есть

32
00:01:01,580 --> 00:01:04,542
шестнадцать.

33
00:01:04,542 --> 00:01:06,879
Здесь я напишу шестнадцать.

34
00:01:06,880 --> 00:01:09,926
Затем для второй строки,

35
00:01:09,926 --> 00:01:12,555
вернее, для второго

36
00:01:12,555 --> 00:01:14,022
элемента я

37
00:01:14,022 --> 00:01:15,255
возьму вторую строку и умножу

38
00:01:15,255 --> 00:01:17,762
на этот вектор, будет четырежды один

39
00:01:17,800 --> 00:01:20,554
плюс ноль на пять, что

40
00:01:20,554 --> 00:01:21,894
равно четырем, поэтому здесь

41
00:01:21,894 --> 00:01:25,625
будет четыре.

42
00:01:25,625 --> 00:01:28,168
И, наконец, последний

43
00:01:28,168 --> 00:01:30,015
элемент вектора

44
00:01:30,015 --> 00:01:31,540
равен дважды один

45
00:01:31,540 --> 00:01:33,791
плюс один умножить на пять, то

46
00:01:33,791 --> 00:01:36,361
есть семь, и

47
00:01:36,361 --> 00:01:39,422
здесь я

48
00:01:39,422 --> 00:01:43,145
записываю семь.

49
00:01:43,810 --> 00:01:45,464
Получается, что результатом

50
00:01:45,464 --> 00:01:48,102
умножения матрицы

51
00:01:48,102 --> 00:01:50,750
3x2 на матрицу

52
00:01:51,030 --> 00:01:53,498
2x1, то есть просто

53
00:01:53,498 --> 00:01:55,504
на двухмерный вектор,

54
00:01:55,504 --> 00:01:57,034
будет матрица размерности

55
00:01:57,040 --> 00:02:01,975
3 на 1. Вот почему

56
00:02:01,980 --> 00:02:03,945
получается

57
00:02:03,960 --> 00:02:05,737
матрица 3x1,

58
00:02:05,750 --> 00:02:07,534
иначе говоря, трехмерный

59
00:02:07,550 --> 00:02:13,141
вектор.

60
00:02:13,170 --> 00:02:14,359
Я понимаю, что проделал

61
00:02:14,359 --> 00:02:16,072
вычисления довольно

62
00:02:16,072 --> 00:02:17,078
быстро, и вы, возможно,

63
00:02:17,078 --> 00:02:18,530
не уверены, что сможете провести их

64
00:02:18,530 --> 00:02:20,196
самостоятельно, так что давайте разберем

65
00:02:20,196 --> 00:02:22,019
подробнее, что произошло и как

66
00:02:22,020 --> 00:02:26,618
устроен процесс умножения матрицы на вектор.

67
00:02:26,618 --> 00:02:28,478
Вот детальное описание умножения

68
00:02:28,478 --> 00:02:30,532
матрицы на вектор.

69
00:02:30,540 --> 00:02:32,014
Допустим, у меня есть

70
00:02:32,014 --> 00:02:33,355
матрица A, и я хочу умножить

71
00:02:33,355 --> 00:02:35,637
её на вектор x.

72
00:02:35,637 --> 00:02:37,220
Результатом этого будет какой-то

73
00:02:37,220 --> 00:02:39,569
вектор y.

74
00:02:39,569 --> 00:02:41,334
Размерность матрицы

75
00:02:41,334 --> 00:02:43,388
A — m на n, то есть в

76
00:02:43,388 --> 00:02:45,062
ней m строк и n

77
00:02:45,062 --> 00:02:46,570
столбцов. Умножать мы ее будем на

78
00:02:46,570 --> 00:02:49,651
матрицу размерности n на 1, иначе говоря, на n-мерный вектор.

79
00:02:49,651 --> 00:02:51,203
Оказывается, что "n" вот здесь должно

80
00:02:51,203 --> 00:02:54,694
совпадать с "n" вот тут.

81
00:02:54,694 --> 00:02:55,933
Другими словами, количество столбцов этой

82
00:02:55,933 --> 00:02:58,560
матрицы — вот столбцы матрицы, их

83
00:02:58,580 --> 00:03:01,821
здесь n —

84
00:03:01,821 --> 00:03:03,457
это количество должно совпадать

85
00:03:03,457 --> 00:03:06,442
с количеством строк здесь,

86
00:03:06,442 --> 00:03:09,274
должно совпадать с размерностью вектора.

87
00:03:09,280 --> 00:03:10,645
И тогда в результате умножения

88
00:03:10,645 --> 00:03:15,681
мы получим m-мерный

89
00:03:15,761 --> 00:03:19,858
вектор y.Другими словами, количество строк здесь,

90
00:03:19,858 --> 00:03:23,009
"m", совпадает с

91
00:03:23,010 --> 00:03:24,972
количеством строк

92
00:03:24,972 --> 00:03:28,237
матрицы A.

93
00:03:28,250 --> 00:03:31,082
Итак, как же вычисляется вектор y?

94
00:03:31,082 --> 00:03:32,110
Чтобы получить вектор y, мы должны

95
00:03:32,110 --> 00:03:34,280
вычислить его элементы

96
00:03:34,280 --> 00:03:36,860
y_i, умножив элементы i-й строки

97
00:03:37,200 --> 00:03:38,799
матрицы A на соответствующие

98
00:03:38,799 --> 00:03:40,218
элементы вектора x и сложив

99
00:03:40,218 --> 00:03:41,623
произведения.

100
00:03:41,625 --> 00:03:42,464
Вот что я имею в виду.

101
00:03:42,470 --> 00:03:45,035
Чтобы получить первый

102
00:03:45,060 --> 00:03:47,847
элемент вектора y, число в

103
00:03:47,847 --> 00:03:49,980
первой строке, сначала

104
00:03:49,980 --> 00:03:51,424
нам нужно взять первую

105
00:03:51,424 --> 00:03:53,012
строку матрицы A и умножить

106
00:03:53,020 --> 00:03:55,486
ее элементы

107
00:03:55,486 --> 00:03:57,680
на элементы

108
00:03:57,680 --> 00:03:59,842
вектора x.

109
00:03:59,842 --> 00:04:01,755
То есть я беру первое число здесь и

110
00:04:01,760 --> 00:04:03,912
умножаю на первое число здесь,

111
00:04:03,912 --> 00:04:07,331
затем беру второе число здесь и умножаю на второе число здесь,

112
00:04:07,331 --> 00:04:09,264
затем третье число здесь умножаю на

113
00:04:09,264 --> 00:04:10,603
третье число здесь и так

114
00:04:10,603 --> 00:04:12,871
далее, до конца строки.

115
00:04:13,320 --> 00:04:14,578
Теперь я складываю все эти

116
00:04:14,578 --> 00:04:16,289
произведения и получаю первый

117
00:04:16,300 --> 00:04:19,918
элемент вектора y.

118
00:04:19,922 --> 00:04:21,690
Чтобы получить второй элемент

119
00:04:21,690 --> 00:04:25,334
вектора y, вот этот,

120
00:04:25,340 --> 00:04:26,735
мы должны взять вторую строку

121
00:04:26,735 --> 00:04:28,688
матрицы A и повторить

122
00:04:28,688 --> 00:04:30,078
процесс.

123
00:04:30,078 --> 00:04:31,265
То есть мы берем вторую

124
00:04:31,265 --> 00:04:32,994
строку матрицы A, умножаем

125
00:04:32,994 --> 00:04:34,407
ее элемент за элементом

126
00:04:34,407 --> 00:04:35,814
на вектор x и складываем

127
00:04:35,830 --> 00:04:37,460
произведения. Так мы

128
00:04:37,460 --> 00:04:38,402
вычисляем

129
00:04:38,402 --> 00:04:40,107
второй элемент y.

130
00:04:40,107 --> 00:04:41,598
Двигаемся дальше: берем третью

131
00:04:41,600 --> 00:04:42,839
строку A, умножаем

132
00:04:42,850 --> 00:04:44,720
поэлементно на x, складываем,

133
00:04:44,720 --> 00:04:47,558
получаем

134
00:04:47,560 --> 00:04:48,682
третий элемент

135
00:04:48,682 --> 00:04:50,246
y и так далее, до

136
00:04:50,260 --> 00:04:51,600
последней

137
00:04:51,600 --> 00:04:55,139
строки.

138
00:04:55,676 --> 00:04:57,930
Вот и все.

139
00:04:58,340 --> 00:05:00,685
Решим ещё один пример.

140
00:05:00,685 --> 00:05:05,240
Вот он. Разберемся с размерностями.

141
00:05:05,240 --> 00:05:08,428
Размерность этой

142
00:05:08,428 --> 00:05:11,086
матрицы — 3 на 4.

143
00:05:11,086 --> 00:05:13,280
Это четырехмерный вектор — или

144
00:05:13,280 --> 00:05:15,292
матрица 4x1, — таким

145
00:05:15,292 --> 00:05:16,825
образом, в результате

146
00:05:16,825 --> 00:05:18,210
умножения получится

147
00:05:18,220 --> 00:05:20,881
трехмерный вектор.

148
00:05:20,890 --> 00:05:23,169
Здесь я обозначу вектор, где

149
00:05:23,180 --> 00:05:26,531
поместится три элемента.

150
00:05:26,531 --> 00:05:30,256
Давайте вычислим произведения.

151
00:05:30,256 --> 00:05:32,915
Чтобы получить первый элемент, я возьму

152
00:05:32,915 --> 00:05:35,068
четыре этих числа и

153
00:05:35,068 --> 00:05:36,272
умножу их на элементы

154
00:05:36,272 --> 00:05:38,873
вектора x. У меня получится 1 на

155
00:05:38,873 --> 00:05:42,227
1 плюс 2 на

156
00:05:42,568 --> 00:05:47,301
3 плюс 1 на 2 плюс 5

157
00:05:47,301 --> 00:05:49,994
на 1, то есть

158
00:05:50,050 --> 00:05:55,602
1 + 6 + 2 + 5, а это равно 14.

159
00:05:55,630 --> 00:05:58,156
Чтобы получить второй элемент,

160
00:05:58,156 --> 00:05:59,754
я умножу на вектор эту строку:

161
00:05:59,754 --> 00:06:01,422
0 на 1

162
00:06:01,422 --> 00:06:04,604
плюс...

163
00:06:04,604 --> 00:06:06,196
3 на 3 плюс 0 на 2

164
00:06:06,243 --> 00:06:12,764
плюс 4 на 1,

165
00:06:12,764 --> 00:06:19,958
что равняется

166
00:06:20,840 --> 00:06:22,974
9 + 4, то есть

167
00:06:22,974 --> 00:06:26,105
13.

168
00:06:26,105 --> 00:06:28,093
И для последнего

169
00:06:28,093 --> 00:06:29,455
элемента я беру

170
00:06:29,455 --> 00:06:30,847
последнюю строку,

171
00:06:30,847 --> 00:06:33,978
то есть -1 на 1,

172
00:06:34,110 --> 00:06:38,068
минус два... хотя по сути здесь плюс, а потом -2,

173
00:06:38,080 --> 00:06:40,656
умноженное на 3,

174
00:06:40,656 --> 00:06:42,441
плюс 0 на 2 плюс 0

175
00:06:42,441 --> 00:06:44,047
на 1, и это равно

176
00:06:44,047 --> 00:06:45,496
минус один минус шесть,

177
00:06:45,496 --> 00:06:46,474
то есть -7, я записываю в

178
00:06:46,474 --> 00:06:49,636
вектор -7.

179
00:06:49,636 --> 00:06:50,136
Понятно?

180
00:06:50,136 --> 00:06:51,097
Таким образом, окончательный результат

181
00:06:51,097 --> 00:06:54,033
таков: вектор 14 — я

182
00:06:54,033 --> 00:06:56,117
просто переписываю без

183
00:06:56,117 --> 00:06:59,843
цветов — 13, -7.

184
00:07:01,190 --> 00:07:03,567
Как и было заявлено, в результате получилась

185
00:07:03,567 --> 00:07:07,775
матрица 3 на 1.

186
00:07:07,775 --> 00:07:11,147
Теперь вы умеете умножать матрицу на вектор.

187
00:07:11,170 --> 00:07:12,309
Я понимаю, что на этом слайде

188
00:07:12,309 --> 00:07:13,710
много действий, и

189
00:07:13,710 --> 00:07:14,662
если вы не

190
00:07:14,680 --> 00:07:16,228
вполне разобрались,

191
00:07:16,228 --> 00:07:17,260
откуда взялись все

192
00:07:17,280 --> 00:07:18,345
эти числа, остановите

193
00:07:18,345 --> 00:07:19,980
видео, внимательно просмотрите

194
00:07:19,980 --> 00:07:21,195
все шаги произведенных

195
00:07:21,195 --> 00:07:22,318
нами

196
00:07:22,318 --> 00:07:23,755
вычислений и попытайтесь

197
00:07:23,760 --> 00:07:25,144
понять, как

198
00:07:25,144 --> 00:07:29,570
появились эти 14, 13 и -7.

199
00:07:29,650 --> 00:07:31,959
Наконец, позвольте показать вам один ловкий прием.

200
00:07:31,959 --> 00:07:33,939
Представьте, что у нас

201
00:07:33,940 --> 00:07:36,462
есть четыре дома, и вот

202
00:07:36,462 --> 00:07:38,650
их площади.

203
00:07:38,650 --> 00:07:39,908
Пусть также у нас есть

204
00:07:39,908 --> 00:07:41,418
гипотеза, предсказывающая

205
00:07:41,420 --> 00:07:43,885
цену дома, и я хочу

206
00:07:43,890 --> 00:07:45,861
вычислить h(x)

207
00:07:45,861 --> 00:07:49,347
для каждого из этих четырех домов.

208
00:07:49,347 --> 00:07:51,039
Оказывается, можно быстро

209
00:07:51,039 --> 00:07:52,979
вычислить цены всех домов

210
00:07:52,980 --> 00:07:56,780
разом,

211
00:07:56,780 --> 00:07:57,795
если представить эту задачу

212
00:07:57,795 --> 00:07:59,509
как умножение матрицы на

213
00:07:59,509 --> 00:08:01,798
вектор.

214
00:08:02,240 --> 00:08:03,672
Вот как я это сделаю.

215
00:08:03,672 --> 00:08:06,717
Я построю матрицу таким образом:

216
00:08:06,717 --> 00:08:08,122
я напишу столбец из

217
00:08:08,122 --> 00:08:11,892
четырех единиц,

218
00:08:11,892 --> 00:08:15,495
а во второй

219
00:08:15,510 --> 00:08:19,935
столбец

220
00:08:19,935 --> 00:08:21,249
перенесу площади

221
00:08:21,249 --> 00:08:23,354
четырех домов. Вектор я

222
00:08:23,354 --> 00:08:25,609
построю так: он будет

223
00:08:25,609 --> 00:08:30,072
состоять из двух

224
00:08:30,072 --> 00:08:32,182
элементов, -40 и 0,25,

225
00:08:32,182 --> 00:08:34,607
двух коэффициентов отсюда, тета

226
00:08:34,607 --> 00:08:35,432
нулевого и тета первого.

227
00:08:35,432 --> 00:08:36,835
И теперь я перемножу

228
00:08:36,835 --> 00:08:38,048
эту матрицу и этот

229
00:08:38,060 --> 00:08:39,708
вектор. Поставлю

230
00:08:39,708 --> 00:08:42,465
здесь знак умножения.

231
00:08:42,465 --> 00:08:43,288
Что я получу?

232
00:08:43,288 --> 00:08:46,412
Размерность этой

233
00:08:46,420 --> 00:08:48,228
матрицы — 4 на 2,

234
00:08:48,228 --> 00:08:52,005
этой — 2 на 1,

235
00:08:52,005 --> 00:08:53,952
так что в результате

236
00:08:53,952 --> 00:08:55,355
получится четырехмерный

237
00:08:55,355 --> 00:08:59,506
вектор.

238
00:08:59,520 --> 00:09:02,860
Итак, здесь у

239
00:09:02,870 --> 00:09:05,334
меня будет

240
00:09:05,334 --> 00:09:06,188
матрица 4x1, то есть четырехмерный

241
00:09:06,188 --> 00:09:06,957
вектор, и я

242
00:09:06,957 --> 00:09:10,035
запишу четыре

243
00:09:10,035 --> 00:09:11,562
элемента, четыре

244
00:09:11,562 --> 00:09:15,991
вещественных числа.

245
00:09:16,010 --> 00:09:17,202
Чтобы получить первый

246
00:09:17,202 --> 00:09:18,952
элемент, я беру

247
00:09:18,952 --> 00:09:20,497
эту строку и

248
00:09:20,497 --> 00:09:21,505
умножаю её

249
00:09:21,505 --> 00:09:25,526
на вектор.

250
00:09:25,526 --> 00:09:29,381
Таким образом,

251
00:09:29,381 --> 00:09:33,053
получится -40 на 1

252
00:09:33,053 --> 00:09:37,645
плюс 0,25 на 2104.

253
00:09:37,645 --> 00:09:38,998
Кстати, раньше я

254
00:09:38,998 --> 00:09:40,915
записывал 1 на -40 и 2104 на 0,25,

255
00:09:40,915 --> 00:09:42,257
но порядок

256
00:09:42,260 --> 00:09:44,405
ведь

257
00:09:44,405 --> 00:09:46,570
не важен, верно?

258
00:09:46,580 --> 00:09:49,637
-40 x 1 – то же самое, что и  1 x (-40).

259
00:09:49,637 --> 00:09:52,115
И этот первый элемент, конечно

260
00:09:52,115 --> 00:09:55,288
же, равен h(2104).

261
00:09:55,288 --> 00:09:57,395
То есть предсказанной

262
00:09:57,395 --> 00:09:59,969
цене первого дома.

263
00:09:59,969 --> 00:10:02,351
Что насчет второго элемента?

264
00:10:02,390 --> 00:10:04,089
Надеюсь, вы уже понимаете,

265
00:10:04,089 --> 00:10:07,912
как он у меня получится.

266
00:10:07,912 --> 00:10:08,750
Верно?

267
00:10:08,750 --> 00:10:11,052
Я беру вторую строку и умножаю на вектор.

268
00:10:11,052 --> 00:10:13,154
Получится -40 на 1 плюс

269
00:10:13,180 --> 00:10:15,038
0,25 на 1416.

270
00:10:15,038 --> 00:10:23,037
И это равно h(1416).

271
00:10:23,110 --> 00:10:23,110
Верно?

272
00:10:25,810 --> 00:10:27,024
И так же для третьего

273
00:10:27,024 --> 00:10:30,720
и четвертого элементов этого

274
00:10:30,760 --> 00:10:33,797
четырехмерного вектора.

275
00:10:33,800 --> 00:10:37,142
На всякий случай уточню:

276
00:10:37,142 --> 00:10:39,239
это выражение, которое

277
00:10:39,239 --> 00:10:41,131
я только что обвел зеленой рамкой,

278
00:10:41,131 --> 00:10:42,752
на самом деле — число,

279
00:10:42,752 --> 00:10:44,169
просто одно число. И то,

280
00:10:44,180 --> 00:10:45,673
что я обвел

281
00:10:45,680 --> 00:10:47,812
пурпурной рамкой,

282
00:10:47,812 --> 00:10:49,826
это тоже просто число,

283
00:10:49,850 --> 00:10:50,908
верно?

284
00:10:50,920 --> 00:10:52,683
Таким образом, эта

285
00:10:52,683 --> 00:10:54,104
скобка справа от знака

286
00:10:54,104 --> 00:10:55,200
равенства — матрица размерности 4 на 1, то есть

287
00:10:55,220 --> 00:10:59,288
четырехмерный вектор.

288
00:10:59,288 --> 00:11:00,728
И суть трюка в том, что

289
00:11:00,728 --> 00:11:02,128
когда вы будете писать

290
00:11:02,130 --> 00:11:04,613
программу, выполняющую эти

291
00:11:04,613 --> 00:11:06,344
вычисления, — то есть, когда вы

292
00:11:06,350 --> 00:11:08,525
захотите предсказать цену четырех домов,

293
00:11:08,525 --> 00:11:12,308
значение "y" для четырех домов, —

294
00:11:12,308 --> 00:11:13,553
вы сможете выполнить все эти

295
00:11:13,553 --> 00:11:16,130
вычисления одной строкой кода.

296
00:11:16,140 --> 00:11:17,878
Когда мы будем говорить об

297
00:11:17,878 --> 00:11:19,782
Octave и других языках

298
00:11:19,790 --> 00:11:22,120
программирования, вы увидите, как это можно записать одной строкой кода.

299
00:11:22,120 --> 00:11:24,879
Запишем: наша оценка равна

300
00:11:24,879 --> 00:11:29,697
матрице данных, умноженной на

301
00:11:30,582 --> 00:11:33,888
вектор параметров.

302
00:11:33,890 --> 00:11:36,994
DataMatrix, матрица данных, —

303
00:11:36,994 --> 00:11:38,661
вот эта матрица, parameters,

304
00:11:38,661 --> 00:11:40,447
параметры, — этот вектор, а знак «*» обозначает

305
00:11:40,447 --> 00:11:44,138
умножение матрицы на вектор.

306
00:11:44,138 --> 00:11:45,834
И, если вы просто сделаете так,

307
00:11:45,834 --> 00:11:47,579
то переменная prediction (прошу прощения за почерк) при помощи

308
00:11:47,579 --> 00:11:49,270
всего одной строки кода — если, конечно, у вас есть

309
00:11:49,270 --> 00:11:50,942
библиотека для

310
00:11:50,942 --> 00:11:52,357
матрично-векторного

311
00:11:52,357 --> 00:11:55,328
умножения, —

312
00:11:55,328 --> 00:11:56,518
будет ссылаться на этот

313
00:11:56,518 --> 00:11:58,965
четырехмерный вектор, который

314
00:11:58,965 --> 00:12:00,714
содержит все четыре предсказанные

315
00:12:00,714 --> 00:12:04,655
цены.

316
00:12:04,655 --> 00:12:07,163
Иначе вам придется умножать

317
00:12:07,163 --> 00:12:09,286
матрицу на вектор

318
00:12:09,310 --> 00:12:11,241
как-то так: написать

319
00:12:11,241 --> 00:12:13,542
for i = 1 to 4...

320
00:12:13,542 --> 00:12:15,150
А если у вас тысяча домов, то i будет меняться от

321
00:12:15,160 --> 00:12:17,451
одного до тысячи, или сколько вам потребуется...

322
00:12:17,451 --> 00:12:18,772
А в цикле вы напишете: i-й элемент

323
00:12:18,772 --> 00:12:21,898
prediction равен —

324
00:12:21,910 --> 00:12:23,123
и проведете какие-то еще вычисления.

325
00:12:23,130 --> 00:12:25,645
Но оказывается, что если у вас есть много

326
00:12:25,645 --> 00:12:27,188
домов, если

327
00:12:27,188 --> 00:12:28,549
вы предсказываете

328
00:12:28,549 --> 00:12:29,928
цену не

329
00:12:29,930 --> 00:12:31,033
четырех домов, а, скажем,

330
00:12:31,033 --> 00:12:33,230
тысячи, то программа,

331
00:12:33,410 --> 00:12:35,175
написанная таким образом, на

332
00:12:35,175 --> 00:12:36,118
любом языке

333
00:12:36,118 --> 00:12:40,087
программирования,

334
00:12:40,087 --> 00:12:41,535
не только на Octave, но и на C++, Java,

335
00:12:41,535 --> 00:12:43,022
Python или каком-то еще

336
00:12:43,030 --> 00:12:46,252
языке высокого уровня, —

337
00:12:46,252 --> 00:12:48,045
в общем, программа, написанная в

338
00:12:48,045 --> 00:12:49,811
матричном стиле, как

339
00:12:49,811 --> 00:12:51,552
слева, не только проще

340
00:12:51,552 --> 00:12:53,283
выглядит, ведь вы

341
00:12:53,283 --> 00:12:54,677
пишете всего одну строку

342
00:12:54,677 --> 00:12:55,857
кода, а не цикл с какими-то

343
00:12:55,870 --> 00:12:58,427
вычислениями внутри,

344
00:12:58,450 --> 00:12:59,727
но и, по некоторым глубоким

345
00:12:59,730 --> 00:13:01,398
причинам, о которых мы

346
00:13:01,400 --> 00:13:03,392
узнаем позже, гораздо эффективнее

347
00:13:03,392 --> 00:13:05,617
вычислительно. То есть расчет

348
00:13:05,617 --> 00:13:06,583
прогноза цены для всех домов сразу, как в коде

349
00:13:06,583 --> 00:13:08,348
слева, выполняется быстрее,

350
00:13:08,360 --> 00:13:09,693
чем если вы пишете свой

351
00:13:09,693 --> 00:13:13,334
цикл for.

352
00:13:13,334 --> 00:13:14,596
Мы обсудим причины

353
00:13:14,596 --> 00:13:15,978
этого позже,

354
00:13:15,978 --> 00:13:17,684
когда будем говорить о

355
00:13:17,684 --> 00:13:19,145
векторизации и

356
00:13:19,145 --> 00:13:20,511
матричных

357
00:13:20,511 --> 00:13:23,200
вычислениях.

358
00:13:23,200 --> 00:13:25,151
машинном обучении это не

359
00:13:25,151 --> 00:13:27,063
матрицы на вектор. Мы обязательно

360
00:13:27,063 --> 00:13:28,432
будем использовать эту операцию,

361
00:13:28,432 --> 00:13:30,352
изучая линейную регрессию и другие

362
00:13:30,370 --> 00:13:32,888
модели.

363
00:13:32,910 --> 00:13:34,259
А в следующем видео мы разберем

364
00:13:34,259 --> 00:13:36,150
более общий случай:

365
00:13:36,150 --> 00:13:39,527
умножение двух матриц.