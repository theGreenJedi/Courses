このビデオでは、幾つかの 特別な行列演算の話を していきたい、それらは 行列の逆(インバース)と転置と呼ばれる物だ。 行列のインバースから始めよう。 いつも通り それが実数の場合と どう関係するかを考える事から始めます。 前回のビデオで、 数字の1は実数空間での 単位(アイデンティティー)としての役割を果たすと 言いました。 何故なら1を何をかけても、その数字自身と等しいからです。 実数には、様々な実数にそれぞれ 逆数が存在する、という 性質がある事が 分かります。 例えば、3という数字には ある数字が存在して、 それは3の逆数という物で その数と掛けると 単位の要素の1を返す、 という物です。 この場合はもちろん、逆数は単なる1/3です。 それ以外の数でもそれがひとたび与えられれば、 たとえば12とかなら そこにはある12の逆数なる数が 存在し、それは 12のマイナス1乗と書かれるが、 これは実際には単なる1/12の事だ。 つまりこれら2つの数を掛け合わせると、 その積は これもまた単位要素である1となる。 ここで、実数空間では 全てに逆数がある訳では無い事が分かる。 例えば、数字の0。 これは逆数が無い。でしょ？ 何故ならゼロの逆数は、1/0は未定義だ。 こんな風に、1/0は定義されない。 さて、このスライドの残りで やりたい事は 行列の インバースを求めるとは どういう事かを探りたい。 つまりこんな概念だ。 Aをmかけるm行列として、 逆行列が存在するとする、 それについては 後で補足する。そして 逆行列をAのマイナス1乗と 書く事にすると、 A掛ける Aの逆行列、つまり Aのマイナス1乗は Aの逆行列掛けるAと等しくなり それは単位行列を 返す。 分かりましたか。 行列の中でも、 m掛けるm、ここでmはなんらかの値の時だが、その時だけ逆行列を持つ。 m掛けるmの 行列はまた 正方行列とも呼ばれる。 これが正方と呼ばれるのは 行の数と列の数が等しいからだ。 そして正方行列だけが 逆行列を持つ事が知られている。 だから、Aが正方行列として m掛けるmとして、 逆行列はこの式を満たす物だ。 具体例を見てみよう。 例として、 こんな行列、3、4 2、16 というのがあるとしよう。 つまりこれは2x2行列だ。 だからそれは 正方行列で、 だからこれは逆行列を持つかもしれなくて、 実は私は、 偶然この逆行列を知っていて、 それは0.4、 -0.1、 -0.05、 0.075だ。 この行列を これらと掛け合わせると、 結果として得られるのは 2x2の 単位行列、I、 これはIの2x2。 分かりましたか。 だからこのスライドで この行列は行列Aで、 この行列はAの逆行列だ。 そして結局、 もしA掛けるAのインバースを 計算して、 さらにAのインバース掛けるAを計算すると、 これも単位行列を返す事が判明する。 では、どうやって この逆行列を見つけたのか？ この逆行列にどうやって辿り着いたのか？ 時には逆行列を 手で計算する事も出来るが、 昨今ではほとんど誰も手計算ではやらない。 そして行列を扱い、 逆行列を計算する とても良い数値計算ソフトがある。 つまり、これもまた、 たくさんのオープンソースのライブラリがある 分野であり、 有名どころの言語なら大抵 リンクして逆行列を計算させる事が出来る。 簡単に例をお見せしよう、 私がこの逆行列をどう計算したのかを。 私が使ったソフトはOctaveだ。 まずそれを前に持ってくる。 Octaveについては後ほどたくさん見ていく。 簡単に例を見てみよう。 行列Aに 左のこの行列をセットする、 3、4、2、16とタイプして、 これが行列Aだ。 これは行列3 4、 2 16 で、それはこの 左にある物だ。 そしてこのソフトウェアで私は とても簡単にAのインバースが計算出来る。 それはpinv(A)だ。 これが、、、 ここの行列と一致してるでしょ。 0.4、0.1、、、って。 これはAの逆行列の 数値的な解を 与える。 だからこう、inversOfA イコール pinv(A)と書くと、 そして、 A掛けるAのインバースが、 単位行列になる事を確認出来る。 A掛けるinversOfAと タイプすると、 結果はこの 行列となる。 これは対角成分に1と1が、 そして実質的には、 10のマイナス17乗とか 10のマイナス16乗とか 数値解析の精度で出来る限り ちょっとの丸め誤差の所まで 私のコンピュータは この行列を見つける事が出来ていて、 これらの、非対角成分は 実質0だ。 つまり、A掛けるそのインバースは、本質的には単位行列となっている。 また、inverseOfA 掛ける A が、 またこれも単位行列になる事も 確認出来る。 対角成分には1があり、 ちょっとの丸め誤差を除いたら 実質0となる数が 非対角成分にある。 行列の逆行列の定義で 私はこんな注意書きを、 一つ目は行列は常に 正方行列でなくてはならず、 またもう一つ注意として、 Aが逆行列を持つなら、も書いてある。 実際にどの行列が逆行列を持つかは この線形代数の補講の範囲を 越える物だが、 直感的には 数字の0は 逆数を持たない、という事だ。 もしAが ずべて要素が0の行列だと この行列Aもまた 逆行列を持たない、 何故ならこのAと掛けて 単位行列となるような そんな行列は どこにも無い、 存在しないからだ。 だからこの要素が全て0の 行列や、また、 この行列と似たような性質を持つ行列が他にもいくらかあるが、 それらもまた逆行列を持たない。 だがK-Meansは 行列が逆を持たない、という事の 意味について、 あんまり深入りしたくない。 結局我らの 機械学習の応用では これらの問題は 起こってはならない、より正確に言うと 機械学習において 逆行列が持たない、という事が 起こる学習アルゴリズムが出てきたら それらの学習アルゴリズムが出てきた時に そのアルゴリズムにとって 逆行列を持つ、とか持たない、 という事が それぞれ何を意味するのか、 そしてその場合にどう修正すべきかを議論する。 逆行列を持たない行列を 扱っている時に。 だが直感的には 逆行列を持たない行列というのは ある意味0に近すぎるような物だ、 と思ってもらって 構わない。 では用語を まとめよう。 逆行列を持たない行列は、たまに 特異行列とか、縮退した行列などと呼ばれる。 たとえばこの ここにある行列 0、0、0な行列の例とか。 これは特異行列、または縮退行列の例だ。 最後に、説明したい 行列の特殊演算としては 行列の転置がある。 行列Aがあるとして、 Aの転置を計算すると、 この右に書いた結果が得られる。 これは転置と呼ばれて、 Aの上付き添字Tと書く。 そして行列の 転置を計算する方法は、以下の通り。 転置を得る為に、 まずは最初の行を取り、 これは1 2 0だが、 これが転置の最初の列となる。 そしてAの 二番目の行を取り、 これは3 5 9で、これがAの転置の 二番目の列となる。 転置を計算する もう一つの考え方としては、 こんな45度の軸を 考えて、 行列をこの45度軸に対して、 鏡像を取る、またはフリップすれば良い。 よりフォーマルに 行列の転置を定義するとこうなる。 Aを m掛けるn 行列とする。 そしてBをAの転置とする。 だからここもB イコール Aの転置。 するとBは n掛けるm行列となり、、、 つまり次元が反転してて、 ここでは2x3行列なので、 転置は3x2行列となり さらに、 BのijはAのjiと等しくなる。 つまりこの行列Bのij成分は 先の行列、Aの ji成分となる。 だから、例えば B の1 2は、 イコール、 この行列Bを見ると Bの1 2は、イコール 要素3となる。一番目の行の、二番目の列。 そしてそれはイコール、 Aの2 1だから、 二行目の最初の列で、うん、 イコール2 だ。(訳注: 3の間違い) もっと例を見てみよう。 Bの3 2は、 Bの3 2は要素9だ。 そしてそれはイコール Aの2 3、それは ここのこの要素で、9だ。 以上で行列の転置を取る、 と言った時に何を意味するのか、 その定義のまとめとなる。 そしてそれは我らの 線形代数の復習を締めくくりでもある。 ここまでで、あなたは今や 行列の足し算と引き算のやり方、 掛け算や 逆行列の定義や 行列の定義を 知っている、 といいな。 これらがこのコースで使う 主な線形代数の 演算だ。 この題材について、もし、あなたはこれが初めて見るなら これは、たくさんの 線形代数の話題を含んでいて、 それら全部をとても早く説明してきたのだから たくさん吸収しなきゃいけない事があると思う。 だが、その場合は、別にここまで見てきた 全部の定義を 暗記しなきゃいけない、って訳じゃない。 コースのwebサイトから これらのスライドのコピーをダウンロードするなり レクチャーノートをダウンロードして スライドかレクチャーノートを リファレンスとして使えば いつでも定義に 立ち戻る事が出来て これら行列の積とは何か、 転置とは何か、などの定義を知る事が出来る。 そしてコースのwebサイトにあるレクチャーノートには さらなる線形代数の資料への ポインタがあり、 独学で線形代数をさらに学ぶことも出来る。 これら新たなツールを手に、次は 次の一連のビデオで より強力な線形回帰の 形式を開発する事が出来る。 それはもっとたくさんのデータを 見る事が出来て もっとたくさんのフィーチャー、 もっとたくさんのトレーニング手本を見る事が出来る。 さらにその後では、新たな回帰の学習の後にも これら線形代数のツールを使い続けて より強力な学習アルゴリズムを 導入していく。