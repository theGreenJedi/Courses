1
00:00:00,100 --> 00:00:01,850
では線形代数の復習を始めよう。

2
00:00:02,880 --> 00:00:03,850
この動画で私は

3
00:00:03,910 --> 00:00:06,210
行列とは何か、ベクトルとは何かを教えたい。

4
00:00:09,280 --> 00:00:10,770
行列とは

5
00:00:11,020 --> 00:00:12,590
大カッコの間に書かれた

6
00:00:13,570 --> 00:00:14,810
長方形型に並んだ数字の配列だ。

7
00:00:16,070 --> 00:00:17,250
だから、例えばこれは

8
00:00:17,280 --> 00:00:20,180
まさにその行列で、開き大カッコに

9
00:00:22,000 --> 00:00:24,660
中にたくさんの数字を書く。

10
00:00:27,020 --> 00:00:29,100
これらは学習している問題からの

11
00:00:29,550 --> 00:00:30,660
特性かもしれないし、または

12
00:00:30,800 --> 00:00:33,740
どこか別の場所からの値かもしれない。

13
00:00:35,080 --> 00:00:36,900
具体的に値がなんなのかは重要では無い。

14
00:00:37,440 --> 00:00:40,470
そして右側に閉じ大カッコで閉じる。

15
00:00:40,680 --> 00:00:41,440
以上で一つの行列となる。

16
00:00:41,930 --> 00:00:43,520
ここで、もう一つ行列の例を見よう。

17
00:00:44,290 --> 00:00:46,360
3、4、5、6と書こう。

18
00:00:46,810 --> 00:00:48,020
つまり、行列とは単なる、

19
00:00:48,300 --> 00:00:49,630
2Dまたは二次元配列の

20
00:00:49,690 --> 00:00:51,540
もう一つの呼び方に過ぎない。

21
00:00:53,260 --> 00:00:54,920
その他に必要な知識としては、

22
00:00:55,260 --> 00:00:56,320
行列の

23
00:00:56,650 --> 00:00:57,740
次元は

24
00:00:57,810 --> 00:00:58,980
以下のように

25
00:00:59,110 --> 00:01:01,070
書く。つまり

26
00:01:01,170 --> 00:01:04,750
行列の 行の数 掛ける 列の数、と。

27
00:01:05,480 --> 00:01:07,190
具体的に言うと、

28
00:01:07,830 --> 00:01:09,700
この左の例では、

29
00:01:09,900 --> 00:01:11,000
1、2、3、4行と

30
00:01:11,290 --> 00:01:13,370
2列なので、

31
00:01:14,540 --> 00:01:15,950
つまりこの左の例では、

32
00:01:16,110 --> 00:01:17,850
4掛ける2行列ー

33
00:01:18,640 --> 00:01:23,320
行の数 掛ける 列の数だ。

34
00:01:23,600 --> 00:01:24,380
つまり、四行で二列。

35
00:01:25,290 --> 00:01:27,740
この右側の場合、この行列は二行。

36
00:01:28,330 --> 00:01:29,790
これが一行目、

37
00:01:30,040 --> 00:01:32,580
これが二行目。そして三列ある。

38
00:01:35,430 --> 00:01:36,890
これが一列目、

39
00:01:37,070 --> 00:01:38,350
これが二列目、

40
00:01:38,610 --> 00:01:41,340
これが三列目。この二番目の行列は、

41
00:01:41,670 --> 00:01:42,800
2掛ける3の行列

42
00:01:42,970 --> 00:01:44,660
と言う。

43
00:01:45,700 --> 00:01:48,230
つまりこの行列の次元は2掛ける3と言う。

44
00:01:50,460 --> 00:01:51,690
たまにここに書いてあるような事を

45
00:01:51,850 --> 00:01:53,480
見ることもあるだろう。

46
00:01:53,740 --> 00:01:54,510
左側のケースだと、

47
00:01:55,000 --> 00:01:56,360
Rの4掛ける2と書いてある。

48
00:01:56,460 --> 00:01:58,090
または具体的に

49
00:01:58,470 --> 00:02:00,280
この行列は集合Rの4掛ける2の

50
00:02:00,930 --> 00:02:02,840
要素の行列だ、とも言う。

51
00:02:03,060 --> 00:02:04,270
つまりこれの

52
00:02:04,410 --> 00:02:05,180
意味する所は、

53
00:02:05,790 --> 00:02:07,020
次元が4掛ける2の行列の全てを表す集合で

54
00:02:07,520 --> 00:02:08,960
そしてこの右側は

55
00:02:09,100 --> 00:02:10,650
時々、これは

56
00:02:10,880 --> 00:02:12,800
Rの3掛ける2の行列と書かれる事もある。

57
00:02:13,130 --> 00:02:16,080
だからもし2掛ける3とか

58
00:02:16,560 --> 00:02:17,460
他にも4掛ける2などを

59
00:02:17,570 --> 00:02:18,700
見かける事があっても、

60
00:02:18,880 --> 00:02:19,960
この4掛ける2とか2掛ける3というのは

61
00:02:20,320 --> 00:02:21,450
ある特定の次元の

62
00:02:21,900 --> 00:02:23,830
行列をさしているだけ。

63
00:02:26,760 --> 00:02:28,240
次に、行列の特定の要素をどう参照するかを

64
00:02:28,590 --> 00:02:31,370
お話しよう。

65
00:02:31,980 --> 00:02:32,850
行列では無く行列の要素という場合、

66
00:02:33,020 --> 00:02:34,090
私は単にエントリを

67
00:02:34,360 --> 00:02:35,930
さす。つまり行列の中の数字の事だ。

68
00:02:37,200 --> 00:02:38,270
標準的なノーテーション（記法）では、

69
00:02:38,890 --> 00:02:40,110
Aをこの

70
00:02:40,290 --> 00:02:41,860
行列とすると、Aに下つきの添え字で

71
00:02:42,830 --> 00:02:44,050
ijとつけると、i,jにある要素を

72
00:02:44,420 --> 00:02:46,060
参照する事になる。

73
00:02:46,950 --> 00:02:48,490
その意味する所は、

74
00:02:48,570 --> 00:02:50,690
行列のi行j/列にある要素という事。

75
00:02:51,880 --> 00:02:54,200
例えば1、1なら

76
00:02:54,530 --> 00:02:55,660
一行目の中の

77
00:02:56,220 --> 00:02:57,510
一列目の要素を

78
00:02:57,600 --> 00:02:58,900
参照する事になるので、それは

79
00:02:58,960 --> 00:02:59,720
最初の行の最初の列だ。

80
00:03:00,090 --> 00:03:02,600
だから1、1は

81
00:03:02,640 --> 00:03:03,920
1402と

82
00:03:04,240 --> 00:03:05,880
イコールだ。

83
00:03:06,420 --> 00:03:07,620
もう一つ例。Aの1、2は、

84
00:03:07,780 --> 00:03:10,020
最初の行の

85
00:03:10,160 --> 00:03:11,160
二番目の列の

86
00:03:11,660 --> 00:03:13,860
エントリを参照する事なので、

87
00:03:14,290 --> 00:03:16,170
つまりAの1、2は

88
00:03:16,270 --> 00:03:19,000
イコール191となる。

89
00:03:20,430 --> 00:03:21,190
簡単な例をもう少し。

90
00:03:22,430 --> 00:03:24,360
では、

91
00:03:24,530 --> 00:03:26,970
Aの3、2とすると、

92
00:03:27,350 --> 00:03:29,240
三番目の行、二番目の列の

93
00:03:30,040 --> 00:03:32,340
エントリを参照する事になる。

94
00:03:33,750 --> 00:03:35,030
だって3、2だから。

95
00:03:35,470 --> 00:03:41,270
つまり、それはイコール1437。

96
00:03:41,490 --> 00:03:42,480
そして最後にAの4、1は

97
00:03:43,370 --> 00:03:44,540
これを参照する事に

98
00:03:45,320 --> 00:03:47,320
なる。四行目、

99
00:03:47,710 --> 00:03:49,220
最初の列なので、イコール

100
00:03:49,520 --> 00:03:53,150
147。そしてもし

101
00:03:53,770 --> 00:03:54,600
そんな事は無いと願いたいのだが、万が一

102
00:03:54,660 --> 00:03:55,560
Aの4、3と書いて、

103
00:03:55,660 --> 00:03:57,540
これは何を参照するか、と問えば

104
00:03:57,870 --> 00:03:59,200
それは四行目の

105
00:03:59,610 --> 00:04:01,130
三列の所を

106
00:04:01,230 --> 00:04:02,730
参照する訳だが、知っての通り、

107
00:04:02,850 --> 00:04:03,940
この行列に三列目なんて無い。

108
00:04:04,190 --> 00:04:05,420
これは未定義。

109
00:04:06,640 --> 00:04:08,280
またはそれをエラーと考えても良い。

110
00:04:08,830 --> 00:04:10,720
Aの4、3なんて要素は

111
00:04:10,840 --> 00:04:12,540
無い。だから、

112
00:04:12,950 --> 00:04:14,500
Aの4、3なんて参照しちゃいけない。

113
00:04:14,620 --> 00:04:17,120
行列は

114
00:04:17,640 --> 00:04:19,070
あなたに、たくさんのデータを素早く

115
00:04:19,380 --> 00:04:22,280
構成して、インデックス付けして、アクセスする手段を提供する。

116
00:04:22,670 --> 00:04:24,200
私がたくさんの

117
00:04:24,320 --> 00:04:25,140
コンセプトやたくさんの新しい記法を

118
00:04:25,440 --> 00:04:26,110
とても早くいろいろ押し付けてきたと

119
00:04:26,570 --> 00:04:27,920
感じた時には、

120
00:04:28,140 --> 00:04:29,230
それらを全部覚える必要は無い。

121
00:04:29,530 --> 00:04:31,500
しかしコースのウェブサイト、

122
00:04:31,700 --> 00:04:33,340
レクチャーノートをポストしてある所ですが、そこに、

123
00:04:33,700 --> 00:04:35,960
これらの定義も全て書いておきました。

124
00:04:36,650 --> 00:04:37,740
だからいつでも見直せる。

125
00:04:38,160 --> 00:04:39,200
これらのスライドや

126
00:04:39,560 --> 00:04:40,950
コースの課題や、この動画やレクチャーノートなど。

127
00:04:41,260 --> 00:04:44,060
もしAの4、1がどこを指すか忘れてしまっても

128
00:04:44,290 --> 00:04:45,320
どの行の、どの列だったっけ？

129
00:04:45,650 --> 00:04:47,160
全てを記憶しなきゃ！と心配する必要はありません。

130
00:04:47,470 --> 00:04:48,960
いつでもコースのwebサイトの

131
00:04:49,100 --> 00:04:51,590
書かれた教材を見直す事が出来、それをリファレンスとして使えます。

132
00:04:52,500 --> 00:04:53,740
以上が行列とは何か、です。

133
00:04:54,160 --> 00:04:57,000
次に、ベクトルとは何かについて話しましょう。

134
00:04:57,300 --> 00:04:59,400
ベクトルは行列の特別なケースに過ぎない。

135
00:04:59,890 --> 00:05:01,170
ベクトルとは行列のうち

136
00:05:02,070 --> 00:05:03,590
列が1の物だ。

137
00:05:03,740 --> 00:05:04,650
つまりN✕1行列の事。

138
00:05:04,850 --> 00:05:07,330
思い出してくれ。

139
00:05:07,820 --> 00:05:08,970
Nは行が幾つあるかで、

140
00:05:09,190 --> 00:05:10,750
そしてこの1は

141
00:05:10,870 --> 00:05:12,540
列の数。だから

142
00:05:12,710 --> 00:05:13,760
つまり列が一つしか無い行列を

143
00:05:14,720 --> 00:05:15,730
ベクトルと呼ぶのです。

144
00:05:16,700 --> 00:05:17,950
だからこれは

145
00:05:18,310 --> 00:05:19,800
ベクトルの一例で、

146
00:05:20,120 --> 00:05:22,700
たぶんN=4個の要素がある。

147
00:05:23,860 --> 00:05:25,090
だからこれを

148
00:05:25,370 --> 00:05:26,560
他の用語で

149
00:05:26,660 --> 00:05:28,300
これは四次元ベクトルとも呼ぶ。

150
00:05:30,130 --> 00:05:31,410
その意味する所は単に、

151
00:05:32,880 --> 00:05:34,410
これは4つの要素のベクトルだ、という事だ。

152
00:05:34,800 --> 00:05:36,400
その中に4つの数字があるという事。

153
00:05:36,870 --> 00:05:38,130
そして前と同様、

154
00:05:38,510 --> 00:05:39,520
行列の時に見たこの記法、

155
00:05:39,740 --> 00:05:40,960
Rの3掛ける2。

156
00:05:41,120 --> 00:05:42,340
それは3掛ける2行列を表す物だった。

157
00:05:42,340 --> 00:05:43,770
このベクトルの場合は、

158
00:05:44,660 --> 00:05:46,340
これを今後は

159
00:05:46,500 --> 00:05:48,270
集合R4のベクトルと呼ぶ事にする。

160
00:05:49,640 --> 00:05:50,900
このR4の意味する所は、

161
00:05:51,020 --> 00:05:53,480
四次元ベクトルの集合だ。

162
00:05:56,350 --> 00:05:59,230
次に、ベクトルの要素をどう参照するか見てみよう。

163
00:06:01,790 --> 00:06:02,970
我らはyのiという記法を

164
00:06:03,730 --> 00:06:06,030
ベクトルyの

165
00:06:06,310 --> 00:06:07,620
i番目の要素を

166
00:06:07,690 --> 00:06:08,650
参照する為に使う。

167
00:06:08,810 --> 00:06:11,470
たとえばもしyがこのベクトルとすると、yの添字iはi番目の要素となる。

168
00:06:12,050 --> 00:06:13,080
故にy1は、最初の要素、

169
00:06:13,450 --> 00:06:16,320
460となる。

170
00:06:16,540 --> 00:06:18,670
y2（ワイ二）は二番目の要素で

171
00:06:19,690 --> 00:06:21,030
232となる。これが最初の要素で、

172
00:06:21,380 --> 00:06:21,780
これが二番目の要素。

173
00:06:22,570 --> 00:06:24,840
Yの3は

174
00:06:24,970 --> 00:06:26,380
315と等しい、などなど。

175
00:06:26,760 --> 00:06:28,240
そしてy1からy4までだけが

176
00:06:28,650 --> 00:06:31,600
4次元ベクトルではちゃんと定義出来る。

177
00:06:32,940 --> 00:06:33,990
また、実際に

178
00:06:34,560 --> 00:06:35,950
ベクトルをどうインデックスづけするかには

179
00:06:36,320 --> 00:06:37,590
二通りの習慣が

180
00:06:37,730 --> 00:06:39,250
ある。これがそれだ。

181
00:06:39,560 --> 00:06:41,020
人々は、ある時は

182
00:06:41,630 --> 00:06:43,820
1からのインデックスを使い、またある時は0からのインデックスを使う事がある。

183
00:06:44,770 --> 00:06:45,620
たとえばこの左にある例は、

184
00:06:46,090 --> 00:06:47,980
1からのインデックスのベクトルで、

185
00:06:48,180 --> 00:06:49,240
その場合は要素を

186
00:06:49,650 --> 00:06:51,870
y1, y2, y3, y4と書き、

187
00:06:53,540 --> 00:06:54,710
そしてこの右側の例は、

188
00:06:54,870 --> 00:06:56,340
0からのインデックスのベクトルで、

189
00:06:56,840 --> 00:06:58,380
この場合は

190
00:06:58,730 --> 00:07:00,460
要素のインデックスを0から始める。

191
00:07:01,520 --> 00:07:04,620
つまり要素は0から始まってy3まで。

192
00:07:05,450 --> 00:07:07,170
これはちょっと

193
00:07:07,380 --> 00:07:08,780
主流のプログラミング言語の配列みたい。

194
00:07:09,940 --> 00:07:11,080
配列は

195
00:07:11,440 --> 00:07:12,740
1からインデックスが始まる言語、

196
00:07:13,140 --> 00:07:14,390
配列の

197
00:07:14,510 --> 00:07:15,590
最初の要素がy1の物、

198
00:07:16,160 --> 00:07:17,480
これはたぶん数列の記法だろうが、それと、

199
00:07:17,940 --> 00:07:20,580
ゼロインデックスの時が、

200
00:07:21,260 --> 00:07:22,860
使ってるプログラミング言語によって異なる。

201
00:07:23,640 --> 00:07:25,000
数学の多くの場では、

202
00:07:25,190 --> 00:07:26,680
1からのインデックスが

203
00:07:27,120 --> 00:07:28,390
より一般的で、

204
00:07:28,570 --> 00:07:30,150
機械学習を適用する時は、

205
00:07:30,380 --> 00:07:32,640
多くの場合、0インデックスのベクトルが

206
00:07:33,680 --> 00:07:35,400
より便利なノーテーションである事が分かる。

207
00:07:36,810 --> 00:07:37,650
だから普段は、

208
00:07:37,970 --> 00:07:39,580
特別に何か指定が無い限り

209
00:07:40,630 --> 00:07:43,070
1インデックスのベクトルを使っている、と想定すべき。

210
00:07:43,680 --> 00:07:44,750
実際、ここより後の

211
00:07:44,890 --> 00:07:46,380
線形代数の復習の動画の続きでは、

212
00:07:46,770 --> 00:07:49,190
私は1インデックスのベクトルを使っていきます。

213
00:07:50,210 --> 00:07:51,170
しかし気を付けて。

214
00:07:51,280 --> 00:07:52,150
機械学習の適用について話す時には

215
00:07:52,390 --> 00:07:53,980
時々私は

216
00:07:54,220 --> 00:07:55,340
明示的に

217
00:07:55,480 --> 00:07:56,640
0インデックスの

218
00:07:56,740 --> 00:07:57,760
ベクトルの使用に切り替えるべき時には

219
00:07:59,020 --> 00:07:59,280
そう言います。

220
00:08:00,240 --> 00:08:02,470
最後に、コンベンションとして、

221
00:08:02,940 --> 00:08:04,470
行列やベクトルを書く時は

222
00:08:05,060 --> 00:08:06,710
ほとんどの人は行列を参照する時は

223
00:08:06,900 --> 00:08:08,450
大文字を使う。

224
00:08:09,000 --> 00:08:09,750
だから

225
00:08:09,930 --> 00:08:12,030
大文字の、例えば

226
00:08:12,260 --> 00:08:13,840
A、B、Cとか、Xとかは

227
00:08:14,100 --> 00:08:15,370
行列を参照するのに使う。

228
00:08:16,630 --> 00:08:17,910
そして普通は、小文字、

229
00:08:18,660 --> 00:08:19,630
a、b、x、yとかは

230
00:08:21,140 --> 00:08:22,460
数字とか生の数字とか

231
00:08:23,060 --> 00:08:25,400
スカラーとかベクトルを参照するのに使う。

232
00:08:26,150 --> 00:08:27,860
これはいつも真、という訳では無いが

233
00:08:28,110 --> 00:08:29,210
それでもやはり、小文字の「y」と言ったら

234
00:08:29,460 --> 00:08:30,610
ベクトルを参照するという

235
00:08:30,940 --> 00:08:31,870
記法の方が一般的で、

236
00:08:32,020 --> 00:08:33,360
大文字は

237
00:08:34,150 --> 00:08:35,460
普通は行列に使う。

238
00:08:37,200 --> 00:08:39,820
今やあなたは行列とベクトルが何なのかを知った。

239
00:08:40,800 --> 00:08:42,310
次回はそれを使って

240
00:08:42,500 --> 00:08:44,330
何が出来るかを話します。