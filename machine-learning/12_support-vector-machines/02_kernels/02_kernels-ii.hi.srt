1
00:00:00,530 --> 00:00:01,550
पिछले वीडियो में, हमने शुरू किया

2
00:00:01,950 --> 00:00:03,230
बात करना कर्नल के बारे में

3
00:00:03,710 --> 00:00:04,590
और कैसे यह इस्तेमाल किया जा सकता है

4
00:00:04,860 --> 00:00:07,900
परिभाषित करने के लिए नए फ़ीचर्ज़ सपोर्ट वेक्टर मशीन के लिए.

5
00:00:08,100 --> 00:00:08,910
इस विडीओ में, मैं चाहूँगा डालना

6
00:00:09,230 --> 00:00:10,670
कुछ विवरण जो मिसिंग था और,

7
00:00:11,020 --> 00:00:12,070
बताऊँगा भी थोड़ा कि

8
00:00:12,270 --> 00:00:14,100
कैसे इस्तेमाल करना है इन सुझावों को व्यवहार में.

9
00:00:14,650 --> 00:00:15,850
जैसे कि, कैसे वे सम्बंधित हैं

10
00:00:16,340 --> 00:00:20,120
उदाहरण के लिए, बाइयस वेरीयन्स ट्रेड-ऑफ़ से सपोर्ट वेक्टर मशीन्स में.

11
00:00:22,690 --> 00:00:23,680
पिछले विडीओ में, मैंने बात की थी

12
00:00:24,000 --> 00:00:25,970
कुछ लैंडमार्क्स को चुनने की प्रक्रिया की.

13
00:00:26,660 --> 00:00:28,890
आप जानते हैं, l1, l2, l3 और उससे

14
00:00:29,150 --> 00:00:30,220
हम कर पाए परिभाषित

15
00:00:30,300 --> 00:00:31,900
समानता फ़ंक्शन जिन्हें कहते हैं

16
00:00:32,200 --> 00:00:33,500
कर्नल्स भी या इस

17
00:00:33,690 --> 00:00:34,830
उदाहरण में यदि आपके पास है

18
00:00:35,070 --> 00:00:37,410
यह समानता फ़ंक्शन यह है एक गॉशियन कर्नल.

19
00:00:38,610 --> 00:00:40,370
और उससे हम बना पाए

20
00:00:40,660 --> 00:00:42,070
यह फ़ॉर्म हायपॉथिसस फ़ंक्शन की.

21
00:00:43,180 --> 00:00:44,880
लेकिन कहाँ से मिलते हैं हमें ये लैंडमार्क्स ?

22
00:00:45,150 --> 00:00:45,670
लेकिन कहाँ से मिलते हैं हमें l1, l2, l3?

23
00:00:45,690 --> 00:00:49,080
और ऐसा लगता है, इसके अलावा, कि जटिल लर्निंग

24
00:00:49,610 --> 00:00:50,830
प्राब्लम्ज़ के लिए, शायद हम चाहते हैं

25
00:00:50,920 --> 00:00:53,060
बहुत अधिक लैंडमार्क्स बजाय केवल तीन के जो हम हाथ से चुन सकते हैं.

26
00:00:55,160 --> 00:00:56,450
तो व्यावहारिक दृष्टि से यह है

27
00:00:56,580 --> 00:00:57,730
कि कैसे चुने जाते हैं लैंडमार्क्स

28
00:00:57,830 --> 00:00:59,910
जो है कि दी होने पर

29
00:01:00,150 --> 00:01:01,110
मशीन लर्निंग प्रॉब्लम, हमारे पास है कुछ

30
00:01:01,370 --> 00:01:02,230
डेटा सेट जिसमें कुछ पॉज़िटिव

31
00:01:02,710 --> 00:01:04,460
और नेगेटिव इग्ज़ाम्पल्ज़ हैं. तो, यह है सुझाव यहाँ

32
00:01:05,310 --> 00:01:06,270
जो है कि हम लेंगे

33
00:01:06,630 --> 00:01:08,200
इग्ज़ाम्पल्ज़ और प्रत्येक

34
00:01:08,470 --> 00:01:09,780
ट्रेनिंग इग्ज़ाम्पल के लिए जो हमारे पास है,

35
00:01:10,490 --> 00:01:11,430
हम कहेंगे इसे

36
00:01:11,980 --> 00:01:13,270
ही. हम बस

37
00:01:13,440 --> 00:01:14,850
रखेंगे लैंडमार्क्स बिल्कुल

38
00:01:15,490 --> 00:01:17,600
उन्हीं स्थानों पर जहाँ हमारे ट्रेनिंग इग्ज़ाम्पल हैं.

39
00:01:18,930 --> 00:01:20,360
तो यदि मेरे पास एक ट्रेनिंग

40
00:01:20,680 --> 00:01:21,880
इग्ज़ाम्पल है यदि वह है x1,

41
00:01:22,120 --> 00:01:23,460
ठीक है, तो मैं

42
00:01:23,670 --> 00:01:24,550
लूँगा इसे मेरा पहला लैंडमार्क

43
00:01:25,100 --> 00:01:26,470
ठीक उसी स्थान पर

44
00:01:27,250 --> 00:01:28,170
जहाँ मेरा पहला ट्रेनिंग इग्ज़ाम्पल है.

45
00:01:29,260 --> 00:01:30,180
और यदि मेरे पास एक भिन्न ट्रेनिंग

46
00:01:30,470 --> 00:01:32,340
इग्ज़ाम्पल x2 है. ठीक है, हम

47
00:01:32,500 --> 00:01:33,980
करेंगे सेट दूसरा लैंडमार्क

48
00:01:35,060 --> 00:01:37,300
मेरे दूसरे ट्रेनिंग इग्ज़ाम्पल के स्थान पर.

49
00:01:38,480 --> 00:01:39,320
दाईं तरफ़ के चित्र में, मैंने

50
00:01:39,480 --> 00:01:40,480
ली हैं लाल और नीली डॉट्स

51
00:01:40,820 --> 00:01:41,930
सिर्फ़ स्पष्टिकरण के लिए, रंग

52
00:01:42,420 --> 00:01:44,320
इस चित्र का, रंग

53
00:01:44,370 --> 00:01:46,030
डॉट्स का दाईं तरफ़ के चित्र में महत्वपूर्ण नहीं है.

54
00:01:47,120 --> 00:01:47,930
लेकिन मुझे क्या मिलेगा

55
00:01:48,110 --> 00:01:49,660
इस विधि के इस्तेमाल से कि मुझे

56
00:01:49,790 --> 00:01:51,450
मिलेंगे m

57
00:01:52,160 --> 00:01:53,690
लैंडमार्क्स l1, l2

58
00:01:54,950 --> 00:01:56,320
l(m) तक यदि मेरे

59
00:01:56,380 --> 00:01:58,180
पास हैं m ट्रेनिंग इग्ज़ाम्पल्ज़ जिनमें है

60
00:01:58,420 --> 00:02:00,500
एक लैंडमार्क्स प्रत्येक स्थान पर

61
00:02:00,810 --> 00:02:02,680
स्थान पर मेरे प्रत्येक

62
00:02:02,860 --> 00:02:04,810
ट्रेनिंग इग्ज़ाम्पल के. और यह है

63
00:02:04,950 --> 00:02:05,920
अच्छा क्योंकि यह कह रहा है कि

64
00:02:06,120 --> 00:02:07,630
मेरे फ़ीचर्ज़ मूलत:

65
00:02:07,700 --> 00:02:09,300
मापेंगे कितना नज़दीक एक

66
00:02:09,380 --> 00:02:10,800
इग्ज़ाम्पल है किसी एक

67
00:02:10,970 --> 00:02:13,150
चीज़ के जो मैंने देखी मेरे ट्रेनिंग सेट में.

68
00:02:13,440 --> 00:02:14,180
तो, सिर्फ़ लिखने के लिए यह रूपरेखा

69
00:02:14,350 --> 00:02:16,270
थोड़ी और स्पष्ट, दिए होने पर m

70
00:02:16,470 --> 00:02:17,870
ट्रेनिंग इग्ज़ाम्पल, मैं

71
00:02:18,050 --> 00:02:19,100
लूँगा / चुनुंगा स्थान

72
00:02:19,310 --> 00:02:20,430
मेरे लैंडमार्क्स का बिल्कुल

73
00:02:21,190 --> 00:02:23,920
नज़दीक उन्हीं स्थानों के जहाँ मेरे m ट्रेनिंग इग्ज़ाम्पल हैं.

74
00:02:25,430 --> 00:02:26,600
जब आपको दिया है इग्ज़ाम्पल x,

75
00:02:26,920 --> 00:02:28,090
और इस उदाहरण में x हो सकता है

76
00:02:28,230 --> 00:02:29,260
कुछ भी ट्रेनिंग सेट में,

77
00:02:29,570 --> 00:02:30,800
यह हो सकता है कुछ क्रॉस वैलिडेशन

78
00:02:31,490 --> 00:02:32,470
सेट में, या हो सकता है कुछ टेस्ट सेट में.

79
00:02:33,320 --> 00:02:34,090
दिया होने पर एक इग्ज़ाम्पल x, हम

80
00:02:34,320 --> 00:02:35,470
करेंगे कम्प्यूट, आप जानते हैं,

81
00:02:35,750 --> 00:02:37,220
ये फ़ीचर्ज़ जैसे f1,

82
00:02:37,560 --> 00:02:39,180
f2 और इसी प्रकार आगे.

83
00:02:39,580 --> 00:02:41,120
जहाँ l1 वास्तव में बराबर है

84
00:02:41,490 --> 00:02:42,850
x1 के और इसी प्रकार आगे.

85
00:02:43,570 --> 00:02:46,080
और ये तब मुझे देते हैं एक फ़ीचर वेक्टर.

86
00:02:46,840 --> 00:02:49,540
तो मैं लिखता हूँ f को फ़ीचर वेक्टर के जैसे.

87
00:02:50,270 --> 00:02:52,090
मैं लूँगा ये f1, f2 और

88
00:02:52,290 --> 00:02:53,370
आगे, और सिर्फ़ ग्रुप करूँगा

89
00:02:53,580 --> 00:02:55,330
उन्हें एक फ़ीचर वेक्टर में.

90
00:02:56,330 --> 00:02:58,000
लूँगा वे fm तक.

91
00:02:59,320 --> 00:03:01,080
और, आप जानते हैं, सिर्फ़ कन्वेन्शन के हिसाब से,

92
00:03:01,610 --> 00:03:02,870
यदि हम चाहते हैं, हम जोड़ सकते हैं एक

93
00:03:02,990 --> 00:03:06,250
अतिरिक्त फ़ीचर f0, जो है हमेशा बराबर 1.

94
00:03:06,450 --> 00:03:08,530
तो यह अदा करता है एक भूमिका समान उसके जो हमारे पास पहले था.

95
00:03:09,480 --> 00:03:11,200
x0 के लिए, जो हमारा इंटर्सेप्टर था.

96
00:03:13,200 --> 00:03:14,450
तो, उदाहरण के लिए, यदि हमारे

97
00:03:14,580 --> 00:03:16,550
पास है एक ट्रेनिंग इग्ज़ाम्पल x(i), y(i),

98
00:03:18,270 --> 00:03:19,300
फ़ीचर्ज़ जो हम कम्प्यूट करेंगे

99
00:03:20,080 --> 00:03:21,330
इस ट्रेनिंग इग्ज़ाम्पल के लिए होंगे

100
00:03:21,440 --> 00:03:23,440
निम्नलिखित: दिया होने पर x(i), हम

101
00:03:23,640 --> 00:03:26,560
करेंगे तब मैप इसे, आप जानते हैं f1(i) को.

102
00:03:27,980 --> 00:03:29,670
जो है समानता. मैं लिखूँगा

103
00:03:29,960 --> 00:03:31,980
संक्षेप में उसे SIM, बजाय लिखने के पूरा

104
00:03:32,090 --> 00:03:33,380
शब्द

105
00:03:35,540 --> 00:03:35,540
समानता, ठीक है.

106
00:03:37,050 --> 00:03:39,180
और f2(i) बराबर है समानता

107
00:03:40,090 --> 00:03:42,780
x(i) और l2 में,

108
00:03:43,140 --> 00:03:45,050
और इसी तरह आगे,

109
00:03:45,230 --> 00:03:48,370
नीचे fm(i) तक बराबर है

110
00:03:49,600 --> 00:03:54,480
समानता x(i) और l(m) में.

111
00:03:55,700 --> 00:03:58,700
और कहीं मध्य में,

112
00:03:59,160 --> 00:04:01,320
कहीं इस लिस्ट में, आप जानते है,

113
00:04:01,480 --> 00:04:03,930
i-थ कम्पोनेंट पर, मेरे

114
00:04:04,230 --> 00:04:05,740
वास्तव में होगा एक फ़ीचर

115
00:04:06,150 --> 00:04:07,590
कम्पोनेंट जो है f सबस्क्रिप्ट

116
00:04:08,170 --> 00:04:09,930
i(i), जो

117
00:04:10,050 --> 00:04:11,180
होगा समानता

118
00:04:13,080 --> 00:04:14,550
x(i) और l(i) में.

119
00:04:15,680 --> 00:04:16,990
जहाँ l(i) है बराबर

120
00:04:17,190 --> 00:04:18,560
x(i) के, और इसलिए आप जानते हैं

121
00:04:19,140 --> 00:04:20,320
fi(i) सिर्फ़ होगा

122
00:04:20,410 --> 00:04:22,250
समानता x और उसके ख़ुद के बीच में.

123
00:04:23,960 --> 00:04:25,380
और यदि आप इस्तेमाल कर रहे हैं गॉशियन कर्नल यह है

124
00:04:25,620 --> 00:04:26,720
वास्तव में e की पॉवर माइनस 0

125
00:04:27,170 --> 00:04:29,440
ओवर 2 सिग्मा स्क्वेर्ड और इसलिए, यह होगा बराबर 1 और वह सही है.

126
00:04:29,790 --> 00:04:31,060
तो मेरे फ़ीचर्ज़ में से एक इस

127
00:04:31,370 --> 00:04:32,940
ट्रेनिंग इग्ज़ाम्पल के होगा बराबर 1.

128
00:04:34,290 --> 00:04:35,570
और इसी प्रकार जैसे मैंने किया है

129
00:04:35,990 --> 00:04:36,940
मैं ले सकता हूँ सारे ये

130
00:04:37,870 --> 00:04:39,910
m फ़ीचर्ज़ और ग्रूप कर सकता हूँ उन्हें एक फ़ीचर वेक्टर में.

131
00:04:40,340 --> 00:04:41,730
तो बजाय दर्शाने के मेरा इग्ज़ाम्पल,

132
00:04:42,710 --> 00:04:44,200
इस्तेमाल करके, आप जानते हैं, x(i) से जो है यह

133
00:04:44,430 --> 00:04:46,970
R(n) प्लस वन डिमेन्शनल वेक्टर.

134
00:04:48,290 --> 00:04:49,590
निर्भर करते हुए कि आप कर सकते हैं या नहीं

135
00:04:49,990 --> 00:04:51,120
सेट इंटर्सेप्टर को, यह है या R(n)

136
00:04:52,070 --> 00:04:52,750
R(n) प्लस 1.

137
00:04:53,440 --> 00:04:55,140
हम दर्शा सकते हैं इसके स्थान पर मेरा

138
00:04:55,300 --> 00:04:56,700
ट्रेनिंग इग्ज़ाम्पल इस फ़ीचर

139
00:04:56,980 --> 00:04:58,810
वेक्टर f से. मैं

140
00:04:58,920 --> 00:05:01,240
लिखूँगा इसे f सूपरस्क्रिप्ट i से. जो

141
00:05:01,400 --> 00:05:03,060
लेगा ये सभी

142
00:05:03,300 --> 00:05:06,010
चीज़ें और स्टैक करेगा उन्हें एक वेक्टर में.

143
00:05:06,540 --> 00:05:09,180
तो, f1(i) से

144
00:05:09,430 --> 00:05:12,740
fm(i) तक और यदि आप चाहते हैं और

145
00:05:13,030 --> 00:05:15,160
आमतौर पर हम जोड़ते हैं यह

146
00:05:15,420 --> 00:05:16,990
f0(i) भी, जहाँ

147
00:05:17,130 --> 00:05:19,370
f0 (i) बराबर है 1 के.

148
00:05:19,370 --> 00:05:20,970
और इसलिए यह वेक्टर

149
00:05:21,300 --> 00:05:23,260
यहाँ देता है मुझे मेरा

150
00:05:23,430 --> 00:05:25,180
नया फ़ीचर वेक्टर जिससे

151
00:05:25,480 --> 00:05:28,310
दर्शा सकते हैं मेरा ट्रेनिंग इग्ज़ाम्पल.

152
00:05:29,040 --> 00:05:30,980
तो दिए होने पर ये कर्नल्स

153
00:05:31,530 --> 00:05:33,160
और समानता फ़ंक्शन्स, यहाँ है कैसे

154
00:05:33,400 --> 00:05:35,030
हम इस्तेमाल करते हैं एक सपोर्ट वेक्टर मशीन.

155
00:05:35,720 --> 00:05:37,100
यदि आपने लर्न कर लिए हैं एक

156
00:05:37,300 --> 00:05:39,040
एक सेट पेरमिटर्स थीटा का, तब यदि आपको दी जाए एक वैल्यू x की और आप चाहते हैं करना एक प्रिडिक्शन.

157
00:05:41,680 --> 00:05:42,850
हम क्या करते हैं कि हम कम्प्यूट करते हैं

158
00:05:43,060 --> 00:05:44,170
फ़ीचर्ज़ f, जो है अब

159
00:05:44,450 --> 00:05:46,920
एक R(m) प्लस 1 डिमेन्शनल फ़ीचर वेकटर.

160
00:05:49,040 --> 00:05:50,640
और हमारे पास है m यहाँ क्योंकि हमारे पास हैं

161
00:05:51,610 --> 00:05:53,190
m ट्रेनिंग इग्ज़ाम्पल्ज़ और इसलिए

162
00:05:53,570 --> 00:05:56,370
m लैंडमार्क्स और क्या

163
00:05:57,330 --> 00:05:58,310
हम करते हैं कि हम प्रिडिक्ट करते हैं

164
00:05:58,600 --> 00:06:00,180
1 यदि थीटा ट्रान्स्पोज़ f

165
00:06:00,780 --> 00:06:01,860
है बड़ा या बराबर 0 के.

166
00:06:02,230 --> 00:06:02,430
सही 

167
00:06:02,640 --> 00:06:03,770
तो, यदि थीटा ट्रान्स्पोज़ f, निश्चय ही,

168
00:06:04,090 --> 00:06:07,200
वह है सिर्फ़ थीटा0 , f0 और प्लस थीटा1

169
00:06:07,900 --> 00:06:08,990
f1 प्लस डॉट डॉट

170
00:06:09,120 --> 00:06:11,200
डॉट, प्लस थीटा m

171
00:06:12,170 --> 00:06:13,900
f(m). और इसलिए मेरा

172
00:06:14,050 --> 00:06:15,720
पेरामिटर वेक्टर थीटा भी अब

173
00:06:16,170 --> 00:06:17,730
होगा एक m

174
00:06:17,990 --> 00:06:21,260
प्लस 1 डिमेन्शनल वेक्टर.

175
00:06:21,780 --> 00:06:23,100
और हमारे पास है m यहाँ क्योंकि यहाँ

176
00:06:23,260 --> 00:06:25,030
संख्या लैंडमार्क्स की है बराबर

177
00:06:25,450 --> 00:06:26,600
ट्रेनिंग सेट साइज़ के.

178
00:06:26,910 --> 00:06:28,190
तो m था ट्रेनिंग सेट का साइज़ और अब,

179
00:06:29,100 --> 00:06:31,950
पेरामिटर वेक्टर थीटा होगा n प्लस एक डिमेन्शनल.

180
00:06:32,990 --> 00:06:33,990
तो ऐसे आप करते हैं एक प्रिडिक्शन

181
00:06:34,360 --> 00:06:36,870
यदि आपके पास पहले है एक सेट पेरमिटर्स थीटा का.

182
00:06:37,840 --> 00:06:39,160
कैसे मिलते हैं आपको पेरमिटर्स थीटा?

183
00:06:39,680 --> 00:06:40,650
ठीक है आप करते हैं वह इस्तेमाल करके

184
00:06:40,920 --> 00:06:43,040
SVM लर्निंग अल्गोरिद्म, और ख़ासतौर पर

185
00:06:43,850 --> 00:06:46,460
आप क्या करते है कि आप हल करेंगे यह मिनमायज़ेशन प्रॉब्लम.

186
00:06:46,690 --> 00:06:48,170
आप मिनमायज़ करते हैं पेरमिटर्स

187
00:06:48,540 --> 00:06:51,630
थीटा ऑफ़ C टाइम्ज़ यह कॉस्ट फ़ंक्शन जो हमारे पास था पहले.

188
00:06:52,430 --> 00:06:54,770
केवल अब, देखने के

189
00:06:55,040 --> 00:06:56,650
वहाँ बजाय करने के

190
00:06:56,970 --> 00:06:59,300
प्रिडिक्शन इस्तेमाल करके थीटा ट्रान्स्पोज़

191
00:07:00,020 --> 00:07:01,410
x(i) इस्तेमाल करके हमारे प्रारम्भिक

192
00:07:01,720 --> 00:07:03,320
फ़ीचर्ज़ x(i). इसके स्थान पर हमने

193
00:07:03,520 --> 00:07:04,840
लिए हैं फ़ीचर्ज़ x(i)

194
00:07:05,090 --> 00:07:06,260
और बदल दिया है उन्हें एक नए फ़ीचर्ज़ से

195
00:07:07,270 --> 00:07:09,080
तो हम ले रहे हैं थीटा ट्रान्स्पोज़

196
00:07:09,380 --> 00:07:10,840
f(i) करने के लिए एक

197
00:07:11,130 --> 00:07:12,480
प्रिडिक्शन ट्रेनिंग

198
00:07:12,860 --> 00:07:13,860
इग्ज़ाम्पल्ज़ पर और हम देखते हैं कि, आप जानते हैं,

199
00:07:14,230 --> 00:07:16,580
कि दोनो जगह यहाँ और

200
00:07:16,700 --> 00:07:18,270
हल करने से यह मिनीमाइज़ेशन प्रॉब्लम

201
00:07:18,760 --> 00:07:22,130
कि आपको मिलते हैं पेरमिटर्स आपके सपोर्ट वेक्टर मशीन के लिये.

202
00:07:23,240 --> 00:07:24,640
और एक आख़िरी जानकारी है

203
00:07:24,870 --> 00:07:26,880
क्योंकि इस ऑप्टिमायज़ेशन

204
00:07:27,510 --> 00:07:29,580
प्रॉब्लम में हमारे पास वास्तव में हैं

205
00:07:30,570 --> 00:07:32,300
n बराबर m फ़ीचर्ज़.

206
00:07:32,860 --> 00:07:33,650
मतलब यहाँ.

207
00:07:34,520 --> 00:07:36,010
संख्या फ़ीचर्ज़ की जो हमारे पास है.

208
00:07:37,100 --> 00:07:38,240
वास्तव में, वास्तविक संख्या

209
00:07:38,410 --> 00:07:39,390
फ़ीचर्ज़ की जो हमारे पास हैं, डिमेन्शन

210
00:07:39,670 --> 00:07:41,020
f की है. तो वह n

211
00:07:41,730 --> 00:07:42,690
वास्तव में होगा बराबर

212
00:07:42,900 --> 00:07:44,470
m के. तो, यदि आप चाहते हैं, आप

213
00:07:44,610 --> 00:07:45,530
सोच सकते हैं इसे एक जोड़ की तरह,

214
00:07:46,340 --> 00:07:47,280
यह वास्तव में है एक जोड़

215
00:07:47,590 --> 00:07:48,680
j बराबर 1 से

216
00:07:49,490 --> 00:07:50,390
m तक. और सोचने का एक ढंग

217
00:07:50,470 --> 00:07:51,500
उसे हैं, कि आप

218
00:07:51,620 --> 00:07:53,250
सोच सकते हैं इसे कि n है

219
00:07:53,550 --> 00:07:55,060
बराबर m के, क्योंकि यदि

220
00:07:55,570 --> 00:07:57,320
f नहीं है एक नया फ़ीचर, तब

221
00:07:57,970 --> 00:07:59,650
हमारे पास हैं m प्लस 1

222
00:08:00,120 --> 00:08:02,920
फ़ीचर्ज़, जहाँ प्लस 1 आता है इंटर्सेप्टर से.

223
00:08:05,090 --> 00:08:06,760
और यहाँ, हम अभी भी करते हैं जोड़

224
00:08:06,990 --> 00:08:08,110
j बराबर 1 से n तक,

225
00:08:08,440 --> 00:08:10,070
क्योंकि जिस प्रकार से हमारे

226
00:08:10,380 --> 00:08:11,700
पिछले वीडियो में रेगुलराइज़ेशन पर,

227
00:08:12,580 --> 00:08:14,110
हम अभी भी रेगुलराइज़ नहीं करते हैं

228
00:08:14,180 --> 00:08:15,650
पेरमिटर्स थीटा ज़ीरो को, जो है

229
00:08:15,780 --> 00:08:16,560
कारण कि यह है एक जोड़

230
00:08:16,740 --> 00:08:17,930
j बराबर 1 से m तक

231
00:08:18,880 --> 00:08:19,840
बजाय j बराबर 0 से

232
00:08:20,000 --> 00:08:22,200
m तक. तो वह है

233
00:08:22,580 --> 00:08:23,760
सपोर्ट वेक्टर मशीन लर्निंग अल्गोरिद्म.

234
00:08:24,660 --> 00:08:26,260
वह है एक तरह से, गणितीय

235
00:08:27,160 --> 00:08:28,310
विस्तृत जानकारी को एक तरह करते हुए मुझे

236
00:08:28,440 --> 00:08:29,840
बताना चाहिए, जो है

237
00:08:29,930 --> 00:08:30,780
कि जिस तरह से सपोर्ट

238
00:08:31,310 --> 00:08:33,020
वेक्टर मशीन इम्प्लमेंट की जाती है, यह आख़िरी

239
00:08:33,320 --> 00:08:34,750
टर्म वास्तव में की जाती है थोड़े अलग ढंग से.

240
00:08:35,680 --> 00:08:36,730
तो आपको वास्तव में जरूरत नहीं है

241
00:08:36,770 --> 00:08:38,080
जानने की यह आख़िरी जानकारी

242
00:08:38,190 --> 00:08:39,190
इस्तेमाल कर सकने के लिए सपोर्ट वेक्टर मशीन्स,

243
00:08:39,700 --> 00:08:41,330
और वास्तव में इक्वेज़न्स जो

244
00:08:41,450 --> 00:08:42,500
लिखी हैं यह उन्हें दे पाना चाहिए

245
00:08:42,620 --> 00:08:45,160
आपको सभी जानकारी जो आपको चाहिए.

246
00:08:45,310 --> 00:08:46,190
लेकिन जिस तरह से सपोर्ट वेक्टर मशीन

247
00:08:46,450 --> 00:08:48,450
इम्प्लमेंट की जाती है, आप जानते हैं, वह टर्म,

248
00:08:48,570 --> 00:08:50,960
सम ऑफ़ j ऑफ़ थीटा j स्क्वेर्ड ठीक है?

249
00:08:53,110 --> 00:08:54,780
और एक अन्य ढंग लिखने का इसे हो सकता हैं कि इसे

250
00:08:55,580 --> 00:08:57,660
लिख सकते हैं थीटा ट्रान्स्पोज़

251
00:08:58,500 --> 00:08:59,530
थीटा, यदि हम अनदेखा करते हैं

252
00:09:00,120 --> 00:09:02,730
पेरमिटर्स थीटा 0 को.

253
00:09:03,570 --> 00:09:05,640
तो थीटा 1 से

254
00:09:05,800 --> 00:09:10,090
थीटा m तक, छोड़ते हुए थीटा 0.

255
00:09:11,130 --> 00:09:13,790
तब यह सम

256
00:09:14,510 --> 00:09:15,900
ऑफ़ j ऑफ़ थीटा j स्क्वेर्ड उसे

257
00:09:16,040 --> 00:09:18,870
लिख सकते हैं थीटा ट्रान्स्पोज़ थीटा.

258
00:09:19,930 --> 00:09:21,520
और क्या अधिकतर सपोर्ट वेक्टर

259
00:09:21,730 --> 00:09:23,380
मशीन की इम्प्लमेंटेशन करती हैं कि वास्तव में

260
00:09:23,720 --> 00:09:25,520
बदल देती हैं यह थीटा ट्रैन्स्पोज़ थीटा को,

261
00:09:26,280 --> 00:09:28,270
इसके स्थान पर, थीटा ट्रान्स्पोज़ टाइम्ज़

262
00:09:28,590 --> 00:09:30,140
कोई मेट्रिक्स अंदर, जो निर्भर करता है

263
00:09:30,820 --> 00:09:33,930
कर्नल पर जो आप इस्तेमाल करते हैं, टाइम्ज़ थीटा.

264
00:09:34,160 --> 00:09:35,500
और इसलिए वह देता है हमें एक थोड़ी भिन्न दूरी की मेट्रिक.

265
00:09:36,140 --> 00:09:37,770
हम इस्तेमाल करेंगे एक थोड़ा अलग

266
00:09:38,070 --> 00:09:40,050
माप बजाय मिनमायज़ करने के यथार्थत:

267
00:09:41,320 --> 00:09:43,250
नॉर्म थीटा का स्क्वेर्ड मतलब

268
00:09:43,790 --> 00:09:45,990
कि मिनमायज़ करेंगे कुछ जो लगभग समान है इसके.

269
00:09:46,140 --> 00:09:47,610
वह है जैसे एक दोबारा स्केल किया वर्ज़न

270
00:09:47,770 --> 00:09:50,150
पेरामिटर वेक्टर थीटा का जो निर्भर करता है कर्नल पर.

271
00:09:50,950 --> 00:09:52,440
लेकिन यह है एक प्रकार से गणितीय विस्तार.

272
00:09:53,210 --> 00:09:54,360
वह करने देता हैं सपोर्ट वेक्टर

273
00:09:54,650 --> 00:09:56,350
मशीन के सॉफ़्टवेयर को रन अधिक कुशलता से.

274
00:09:58,300 --> 00:09:59,410
और कारण कि सपोर्ट वेक्टर मशीन

275
00:09:59,700 --> 00:10:01,500
करता है इसे इस बदलाव से.

276
00:10:02,020 --> 00:10:03,250
यह करने देता है इसे

277
00:10:03,300 --> 00:10:05,740
स्केल बहुत बड़े ट्रेनिंग सेट्स के लिए.

278
00:10:06,370 --> 00:10:07,800
क्योंकि, उदाहरण के लिए, यदि आपके पास है

279
00:10:07,970 --> 00:10:11,530
एक ट्रेनिंग सेट जिसमें 10000 ट्रेनिंग इग्ज़ाम्पल्ज़ हैं.

280
00:10:12,590 --> 00:10:13,560
तब, आप जानते हैं, जिस तरह से हम परिभाषित करते हैं

281
00:10:13,950 --> 00:10:15,750
लैंडमार्क्स, हमें मिलते हैं 10,000 लैंडमार्क्स.

282
00:10:16,780 --> 00:10:18,060
और इसलिए थीटा बन जाता हैं 10,000 डिमेन्शनल.

283
00:10:18,490 --> 00:10:20,450
और शायद वह काम करे, लेकिन जब m

284
00:10:20,450 --> 00:10:21,710
हो जाता हैं बहुत ही अधिक बड़ा

285
00:10:22,470 --> 00:10:24,020
तब हल करना सब

286
00:10:24,150 --> 00:10:25,480
इन पेरमिटर्स के लिए, आप जानते हैं, यदि m होता

287
00:10:25,590 --> 00:10:26,590
50,000 या एक 100,000

288
00:10:26,880 --> 00:10:28,170
तब हल करना

289
00:10:28,340 --> 00:10:29,660
इन सब पेरमिटर्स के लिए हो सकता है

290
00:10:29,890 --> 00:10:31,240
महँगा सपोर्ट

291
00:10:31,420 --> 00:10:33,690
वेक्टर मशीन के ऑप्टिमायज़ेशन सॉफ़्टवेयर के लिए, इसलिए

292
00:10:33,870 --> 00:10:35,750
हल करना मिनमायज़ेशन प्रॉब्लम जो मैंने यहाँ बनाई है.

293
00:10:36,490 --> 00:10:37,570
तो एक प्रकार से गणितीय

294
00:10:37,860 --> 00:10:39,580
विस्तार, जिसे आपको जानने की वास्तव में ज़रूरत नहीं है.

295
00:10:41,000 --> 00:10:43,070
यह बदल देता है वास्तव में वह आख़िरी

296
00:10:43,350 --> 00:10:44,380
टर्म थोड़ा बहुत

297
00:10:44,500 --> 00:10:45,940
ऑप्टिमायज़ करने के लिए कुछ भिन्न चीज़ बजाय

298
00:10:46,080 --> 00:10:48,560
सिर्फ़ ऑप्टिमायज़ करने के नॉर्म ऑफ़ थीटा स्क्वेर्ड.

299
00:10:49,370 --> 00:10:50,600
लेकिन यदि आप चाहें,

300
00:10:51,080 --> 00:10:52,450
आप सोच सकते हैं इसे

301
00:10:52,710 --> 00:10:54,880
एक प्रकार से इम्प्लमेंटेशन का विस्तार

302
00:10:55,340 --> 00:10:56,750
जो निश्चय ही बदल देता है अब्जेक्टिव

303
00:10:56,880 --> 00:10:58,260
थोड़ा सा, लेकिन यह करते हैं मुख्यत:

304
00:10:58,930 --> 00:11:01,590
कम्प्यूटेशनल दक्षता के कारणों से,

305
00:11:02,260 --> 00:11:04,390
तो अक्सर आपको वास्तव में इसकी चिंता करने की आवश्यकता नहीं हैं.

306
00:11:07,640 --> 00:11:09,460
और वैसे भी, यदि आप

307
00:11:09,560 --> 00:11:10,730
सोच रहे हैं कि क्यों हम नहीं करते अप्लाई

308
00:11:11,100 --> 00:11:12,210
कर्नल्स का विचार अन्य

309
00:11:12,570 --> 00:11:13,690
अल्गोरिद्म्स को भी जैसे लॉजिस्टिक

310
00:11:14,040 --> 00:11:15,450
रेग्रेशन, ऐसा होता है

311
00:11:15,670 --> 00:11:16,770
कि यदि आप चाहें, आप

312
00:11:16,900 --> 00:11:18,120
वास्तव में अप्लाई कर सकते हैं कर्नल का

313
00:11:18,550 --> 00:11:19,850
सिद्धांत और परिभाषित कर सकते हैं उद्ग़म

314
00:11:19,990 --> 00:11:22,920
फ़ीचर्ज़ का लेकर लैंडमार्क्स और ऐसा ही कुछ लॉजिस्टिक रेग्रेशन में.

315
00:11:23,880 --> 00:11:25,860
लेकिन कॉम्प्यूटेशन की तरकीब जो अप्लाई होती हैं

316
00:11:26,440 --> 00:11:28,110
सपोर्ट वेक्टर मशीन के लिए नही होती

317
00:11:28,430 --> 00:11:30,700
जनरलाइज सही ढंग से अन्य अल्गोरिद्म्स के लिए जैसे लॉजिस्टिक रेग्रेशन.

318
00:11:31,310 --> 00:11:33,110
और इसलिए, कर्नल्स के इस्तेमाल से

319
00:11:33,260 --> 00:11:34,390
लॉजिस्टिक रिग्रेशन होगा

320
00:11:34,580 --> 00:11:36,330
बहुत धीमा, जबकि, वजह से

321
00:11:36,440 --> 00:11:37,940
कम्प्यूटेशनल तरकीब से, जैसे

322
00:11:38,150 --> 00:11:39,490
सन्निहित है और यह कैसे बदलता है

323
00:11:39,900 --> 00:11:41,130
और इसे और विस्तृत जानकारी कि कैसे

324
00:11:41,320 --> 00:11:43,140
सपोर्ट वेक्टर मशीन सॉफ़्टवेयर

325
00:11:43,240 --> 00:11:44,990
करते हैं इम्प्लमेंट, सपोर्ट वेक्टर मशीन्स और

326
00:11:45,300 --> 00:11:47,090
कर्नल्स काम करते हैं सही एक साथ.

327
00:11:47,930 --> 00:11:49,450
जबकि लॉजिस्टिक रिग्रेशन और कर्नल्स,

328
00:11:50,250 --> 00:11:51,990
आप जानते हैं, आप कर सकते हैं इसे, लेकिन यह बहुत धीरे चलेगा.

329
00:11:52,890 --> 00:11:53,670
और यह नहीं ले पाएगा

330
00:11:53,750 --> 00:11:55,420
लाभ एडवांसड ऑप्टिमायज़ेशन

331
00:11:56,040 --> 00:11:57,360
तकनीक का जो लोगों ने निकाला है

332
00:11:57,530 --> 00:11:58,530
ख़ास केस के लिए

333
00:11:59,140 --> 00:12:00,950
चलाने के लिए एक सपोर्ट वेक्टर मशीन एक कर्नल के साथ.

334
00:12:01,540 --> 00:12:03,340
लेकिन यह सब केवल संबंधित है

335
00:12:03,710 --> 00:12:04,850
कि कैसे आप वास्तव में इम्प्लमेंट करते हैं

336
00:12:05,230 --> 00:12:06,900
सॉफ़्टवेयर न्यूनतम / मिनमायज़ करने के लिए इस कॉस्ट फ़ंक्शन को.

337
00:12:07,870 --> 00:12:08,940
इस बारे में मैं और बात करूँगा बाद में,

338
00:12:09,040 --> 00:12:09,950
अगले वीडियो में, लेकिन आपको वास्तव में नहीं है

339
00:12:10,150 --> 00:12:11,530
ज़रूरत जानने की कि

340
00:12:12,200 --> 00:12:13,520
कैसे लिखना है सॉफ़्टवेयर

341
00:12:13,670 --> 00:12:14,890
न्यूनतम / मिनमायज़ करने के लिए इस कॉस्ट फ़ंक्शन को क्योंकि

342
00:12:15,170 --> 00:12:17,560
आपको मिल सकते हैं बहुत अच्छे ऑफ़ द शेल्फ़ सॉफ़्टवेयर वह करने के लिए.

343
00:12:18,670 --> 00:12:19,890
और बस जैसे, आप जानते हैं, मैं नहीं

344
00:12:20,140 --> 00:12:21,340
सलाह दूँगा लिखने की कोड इन्वर्ट करने के लिए

345
00:12:21,850 --> 00:12:22,960
एक मैट्रिक्स या कम्प्यूट करने के लिए एक

346
00:12:23,150 --> 00:12:24,490
स्क्वेर रूट, मैं वास्तव में

347
00:12:24,660 --> 00:12:26,420
नहीं सलाह देता लिखने की सॉफ़्टवेयर

348
00:12:26,560 --> 00:12:27,750
न्यूनतम / मिनमायज़ करने के लिए इस कॉस्ट फ़ंक्शन को ख़ुद से,

349
00:12:28,240 --> 00:12:29,610
लेकिन बजाय इस्तेमाल करने के ऑफ़

350
00:12:29,780 --> 00:12:31,490
द शेल्फ़ सॉफ़्टवेयर पैकिज जो लोगों ने

351
00:12:31,740 --> 00:12:33,240
विकसित की हैं और इसलिए

352
00:12:33,540 --> 00:12:35,140
उन सॉफ़्टवेयर पैकिज में पहले से ही सन्निहित है

353
00:12:35,790 --> 00:12:37,720
ये नूमेरिकल ऑप्टिमायज़ेशन तरकीबें,

354
00:12:39,540 --> 00:12:41,770
तो आपको वास्तव में इसकी चिंता करने की आवश्यकता नहीं हैं.

355
00:12:41,950 --> 00:12:42,920
लेकिन एक चीज़ जो है

356
00:12:43,180 --> 00:12:45,200
जानने योग्य कि जब

357
00:12:45,350 --> 00:12:46,400
आप अप्लाई कर रहे हैं एक सपोर्ट वेक्टर

358
00:12:46,640 --> 00:12:47,730
मशीन, कैसे आप

359
00:12:47,820 --> 00:12:50,220
चुनते हैं पेरमिटर्स सपोर्ट वेक्टर मशीन के?

360
00:12:51,520 --> 00:12:52,300
और अंतिम बात जो मैं चाहता हूँ

361
00:12:52,400 --> 00:12:53,290
बताना इस वीडियो में कि बताऊँ

362
00:12:53,450 --> 00:12:54,680
थोड़ा से बाइयस और

363
00:12:54,840 --> 00:12:57,070
वेरीयन्स ट्रेड ऑफ़ का जब इस्तेमाल कर रहे हैं सपोर्ट वेक्टर मशीन.

364
00:12:57,900 --> 00:12:59,230
जब इस्तेमाल कर रहे हैं एक SVM, एक

365
00:12:59,390 --> 00:13:00,670
चीज़ जो आपको चुनने की ज़रूरत है वह है

366
00:13:00,960 --> 00:13:03,850
पेरामिटर C जो

367
00:13:04,090 --> 00:13:05,880
था ऑप्टिमायज़ेशन अब्जेक्टिव में, और

368
00:13:05,980 --> 00:13:07,690
आप याद करें कि C अदा करता है एक

369
00:13:07,770 --> 00:13:09,800
भूमिका समान 1 ओवर

370
00:13:10,050 --> 00:13:11,750
लैम्डा के, जहाँ लैम्डा था रेगुलराइज़ेशन

371
00:13:12,520 --> 00:13:13,970
पेरामिटर हमारे पास लॉजिस्टिक रेग्रेशन के लिए.

372
00:13:15,360 --> 00:13:16,760
अत:, यदि आपके पास है एक

373
00:13:16,930 --> 00:13:18,760
बड़ी वैल्यू C की, यह कॉरेस्पॉंड करता हैं

374
00:13:19,520 --> 00:13:20,560
जो हमारे पास था लॉजिस्टिक

375
00:13:21,270 --> 00:13:22,260
रेग्रेशन में, एक छोटी

376
00:13:22,670 --> 00:13:25,080
वैल्यू से लैम्डा की मतलब नहीं कर रहे ज़्यादा रेगुलराइज़ेशन.

377
00:13:25,980 --> 00:13:26,960
और यदि आप करते हैं वह, आप को

378
00:13:27,050 --> 00:13:29,330
मिलती है एक हायपॉथिसस जिसमें बाइयस कम है और वेरीयन्स ज़्यादा है.

379
00:13:30,570 --> 00:13:31,420
जबकि यदि आप लेते हैं एक छोटी

380
00:13:31,630 --> 00:13:33,050
वैल्यू C की तब यह

381
00:13:33,240 --> 00:13:34,510
कॉरेस्पॉंड करता हैं जब

382
00:13:34,660 --> 00:13:36,450
कर रहे थे लॉजिस्टिक रिग्रेशन एक

383
00:13:36,620 --> 00:13:38,090
बड़ी वैल्यू से लैम्डा की और वह कॉरेस्पॉंड करता है

384
00:13:38,690 --> 00:13:40,180
एक हायपॉथिसस से जिसमें अधिक

385
00:13:40,470 --> 00:13:41,760
बाइयस है और कम वेरीयन्स है.

386
00:13:42,580 --> 00:13:44,520
और इसलिए, हायपॉथिसस जिसमें बड़ा

387
00:13:45,000 --> 00:13:46,870
C है उसमें एक अधिक

388
00:13:47,450 --> 00:13:48,380
वेरीयन्स हैं और इसकी अधिक सम्भावना है

389
00:13:48,580 --> 00:13:50,290
ओवरफ़िट करने की, जबकि हायपॉथिसस जिसमें

390
00:13:50,450 --> 00:13:52,820
छोटा C है उसमें अधिक बाइयस है

391
00:13:52,910 --> 00:13:54,900
और उसकी अधिक सम्भावना है अंडरफ़िट होने की.

392
00:13:56,710 --> 00:13:59,870
तो यह C है पेरामिटर जो हमें चुनना है.

393
00:14:00,210 --> 00:14:01,280
दूसरी चीज़ है पेरामिटर

394
00:14:02,280 --> 00:14:04,580
सिग्मा स्क्वेर्ड की, जो आता हैं गॉशियन कर्नल में.

395
00:14:05,760 --> 00:14:07,080
तो यदि गॉशियन कर्नल का

396
00:14:07,750 --> 00:14:09,370
सिग्मा स्क्वेर्ड है बड़ा, तब

397
00:14:09,640 --> 00:14:11,350
समानता फ़ंक्शन में, जो

398
00:14:11,530 --> 00:14:12,710
था यह आप जानते हैं e की पॉवर

399
00:14:13,390 --> 00:14:14,710
माइनस x माइनस लैंडमार्क

400
00:14:16,280 --> 00:14:17,950
वेरी करता है स्क्वेर्ड ओवर 2 सिग्मा स्क्वेर्ड.

401
00:14:20,130 --> 00:14:21,290
इस एक उदाहरण में; यदि मेरे

402
00:14:21,480 --> 00:14:23,330
पास है केवल एक फ़ीचर, x1, यदि

403
00:14:23,570 --> 00:14:25,390
मेरे पास है एक लैंडमार्क वहाँ

404
00:14:25,490 --> 00:14:27,710
उस स्थान पर, यदि सिग्मा

405
00:14:27,960 --> 00:14:29,230
स्क्वेर्ड है बड़ा, तब, आप जानते हैं,

406
00:14:29,480 --> 00:14:30,600
गॉशियन कर्नल की प्रवृति होगी

407
00:14:30,690 --> 00:14:32,940
नीचे आने की अपेक्षाकृत धीरे से

408
00:14:33,960 --> 00:14:34,740
और इसलिए यह होगा मेरा फ़ीचर

409
00:14:35,210 --> 00:14:36,690
f(i), और इसलिए यह

410
00:14:36,880 --> 00:14:38,970
होगा एक निर्बाध फ़ंक्शन जो बदलता है

411
00:14:39,060 --> 00:14:40,640
अधिक निर्बाध रूप से, और इसलिए यह

412
00:14:40,760 --> 00:14:42,750
देगा आपको एक हायपॉथिसस जिसमें हैं अधिक

413
00:14:43,030 --> 00:14:44,170
बाइयस और कम वेरीयन्स, क्योंकि

414
00:14:44,550 --> 00:14:46,000
गॉशियन कर्नल जो नीचे आता है निर्बाध रूप से

415
00:14:46,840 --> 00:14:48,240
आपको मिलती है एक हायपॉथिसस जो

416
00:14:48,520 --> 00:14:50,060
कम ज़्यादा होती है धीरे धीरे या कम ज़्यादा होती है निर्बाध,

417
00:14:50,130 --> 00:14:51,860
जैसे आप बदलते हैं

418
00:14:52,050 --> 00:14:53,680
इनपुट x को. जबकि इसके विपरीत,

419
00:14:54,030 --> 00:14:55,330
यदि सिग्मा स्क्वेर्ड होता

420
00:14:55,660 --> 00:14:57,430
कम और यदि वह है मेरा

421
00:14:57,540 --> 00:14:58,830
लैंडमार्क दिया होने पर मेरा 1

422
00:14:58,960 --> 00:15:01,440
फ़ीचर x1, आप जानते हैं, मेरा गॉशियन

423
00:15:01,820 --> 00:15:04,630
कर्नल, मेरा समानता फ़ंक्शन, कम ज़्यादा होगा एकाएक.

424
00:15:05,310 --> 00:15:07,520
और दोनो केस में में लूँगा

425
00:15:07,580 --> 00:15:08,550
1, और इसलिए यदि सिग्मा स्क्वेर्ड

426
00:15:08,870 --> 00:15:11,730
छोटा है, तब मेरे फ़ीचरज़ कम ज़्यादा होगें कम समता से.

427
00:15:12,190 --> 00:15:13,740
तो यदि यह है सिर्फ़ अधिक स्लोप

428
00:15:14,250 --> 00:15:15,300
या बड़े डेरिवेटिव यहाँ.

429
00:15:16,020 --> 00:15:17,170
और इसे इस्तेमाल करके, आप कर पाते हैं

430
00:15:17,330 --> 00:15:19,620
फ़िट हायपॉथिसस जिसमें कम

431
00:15:19,840 --> 00:15:21,870
बाइयस है और आपको मिल सकता है अधिक वेरीयन्स.

432
00:15:23,030 --> 00:15:24,460
और यदि आप देखें इस

433
00:15:24,680 --> 00:15:26,240
सप्ताह का अभ्यास, आप वास्तव में कर पायेंगे

434
00:15:26,450 --> 00:15:27,230
अभ्यास कुछ

435
00:15:27,330 --> 00:15:29,480
इन सिद्धांतो का स्वयं और देख पायेंगे ये असर स्वयं.

436
00:15:31,590 --> 00:15:34,430
तो, वह था सपोर्ट वेक्टर मशीन कर्नल अल्गोरिद्म के साथ.

437
00:15:35,320 --> 00:15:36,450
और उम्मीद है इस चर्चा से

438
00:15:37,090 --> 00:15:39,170
बाइयस और वेरीयन्स की

439
00:15:39,310 --> 00:15:40,380
आपको मिली होगी समझ कि कैसे आप

440
00:15:40,460 --> 00:15:42,600
उम्मीद कर सकते हैं कि यह अल्गोरिद्म सही काम करेगा.