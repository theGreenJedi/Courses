बहुत से सूपर्वायज़्ड लर्निंग अल्गोरिद्म्स हमने देखे, जैसे लिनीअर रेग्रेशन, लॉजिस्टिक रेग्रेशन इत्यादि, सभी इन अल्गोरिद्म्स में है एक ऑप्टिमायज़ेशन अब्जेक्टिव या कुछ कॉस्ट फ़ंक्शन जो अल्गोरिद्म प्रयास करता है मिनमायज़ करने का. ऐसा होता है कि K मीन्स में भी एक ऑप्टिमायज़ेशन अब्जेक्टिव या एक कॉस्ट फ़ंक्शन है जो यह मिनमायज़ कर रहा है. इस वीडियो में मैं आप को बताना चाहता हूँ क्या वह ऑप्टिमायज़ेशन अब्जेक्टिव है. और कारण कि मैं यह करना चाहता हूँ क्योंकि यह हमारे लिए उपयोगी होगा दो उद्देश्यों के लिये. पहला, जानने से कि क्या ऑप्टिमायज़ेशन अब्जेक्टिव है K मीन्स का हमारी सहायता होगी डीबग करने में लर्निंग अल्गोरिद्म को और तय करने में कि K मीन्स सही चल रहा है. और दूसरा, और शायद अधिक महत्वपूर्ण, बाद के वीडियो में हम बात करेंगे कि कैसे हम इस्तेमाल कर सकते हैं इसका कि K मीन्स खोज पाए बेहतर कॉस्ट इसके लिए 
और बच पाए लोकल ऑप्टिमा से. लेकिन हम करेंगे वह एक बाद के वीडियो में जो इसके बाद है. सिर्फ़ एक जल्दी से याद कराने के लिए, जब Kमीन्स चल रहा है हम रखेंगे ट्रैक दो तरह कि वेरीयबल्स का. पहले हैं c(i) जो ट्रैक रखता हैं इंडेक्स या क्लस्टर के नम्बर का, जिसको एक इग्ज़ाम्पल अभी असाइन हुआ है. और फिर दूसरा सेट वेरीयबल्स का जो हम लेते हैं वह है म्यू सबस्क्रिप्ट k, जो है स्थान क्लस्टर सेंट्रोईड k का. फिर से, K मीन्स में हम लेते हैं कैपिटल K डिनोट करने के लिए कुल संख्या क्लस्टर्स की. और यहाँ लोअर केस k होगा एक इंडेक्स क्लस्टर सेंट्रोईड का और इसलिए, लोअरकेस k होगा एक नम्बर 1 और K के बीच में. अब यहाँ है थोड़ी और नोटेशन, जो है कि मैं लूँगा म्यू सबस्क्रिप्ट c(i) डिनोट करने के लिए क्लस्टर सेंट्रोईड उस क्लस्टर का जिसे इग्ज़ाम्पल x(i) असाइन हुआ है, ठीक है? और समझाने के लिए वह नोटेशन थोड़ा और, मान लो कि x(i) असाइन हुआ हुआ है क्लस्टर संख्या पाँच को. और उसका क्या मतलब है कि c(i) जो है इंडेक्स x(i) का, वह है बराबर पाँच. ठीक? क्योंकि करेंगे c(i) पाँच, यदि वह है इसका मतलब कि इग्ज़ाम्पल x(i) असाइन हुआ हुआ है क्लस्टर संख्या पाँच को. और इसलिए, म्यू सबस्क्रिप्ट c(i) होगा बराबर म्यू सबस्क्रिप्ट 5. क्योंकि c(i) है पाँच. और इसलिए यह म्यू सबस्क्रिप्ट c(i) है क्लस्टर सेंट्रोईड क्लस्टर संख्या पाँच का. जो है क्लस्टर जिसे मेरा इग्ज़ाम्पल x(i) असाइन हुआ है. अब इस नोटेशन के बाद, हम अब लिख सकते हैं क्या है ऑप्टिमायज़ेशन अब्जेक्टिव K मीन्स क्लस्टरिंग अल्गोरिद्म का और यहाँ है यह. कॉस्ट फ़ंक्शन जो K मीन्स मिनमायज़ कर रहा है एक फ़ंक्शन J है सारे इन पेरमिटर्स का, c1 से cm तक और म्यू 1 से म्यू K तक. जो K मीन्स बदलता है जैसे जैसे अल्गोरिद्म चलता है. और ऑप्टिमायज़ेशन अब्जेक्टिव दिखाया दाईं तरफ़, है औसत 1 ओवर m सम का i बराबर 1 से m तक इस टर्म का यहाँ. जिसके आस पास मैंने लाल बॉक्स बनाया है, ठीक है? स्क्वेर दूरी का प्रत्येक इग्ज़ाम्पल xi और स्थान में क्लस्टर सेंट्रोईड के जिसे इग्ज़ाम्पल x(i) असाइन हुआ है. तो चलो बनाते है इसे और मैं समझाता हूँ इसे. ठीक है, तो यह है स्थान मेरे ट्रेनिंग इग्ज़ाम्पल xi का और यहाँ है स्थान क्लस्टर सेंट्रोईड का जिसे इग्ज़ाम्पल x(i) असाइन हुआ है. तो इसे चित्रण से समझाने के लिए, यदि यहाँ है x1, x2 और यदि एक पोईँट यहाँ है मेरा इग्ज़ाम्पल xi, तो यदि वह है बराबर मेरे इग्ज़ाम्पल xi के, और यदि xi असाइन हुआ है किसी क्लस्टर सेंट्रोईड को, मैं करूँगा डिनोट मेरे क्लस्टर सेंट्रोईड को एक क्रॉस से, तो यदि वह है स्थान म्यू 5 का, मान लो. यदि xi असाइन हुआ है क्लस्टर सेंट्रोईड पाँच को जैसे मेरे उदाहरण में ऊपर यहाँ, तब यह स्क्वेर दूरी, वह है स्क्वेर दूरी का बीच में पोईँट xi और इस क्लस्टर सेंट्रोईड के जिसे xi असाइन हुआ है. और क्या K मीन्स दिखाया जा सकता है कि कर रहा है वह है कि यह परिभाषित करना चाह रहा है पेरमिटर्स ci और म्यू i. जानना चाह रहा है c और म्यू न्यूनतम / मिनमायज़ करने के लिए इस कॉस्ट फ़ंक्शन जे को. इस कॉस्ट फ़ंक्शन को कभी कभी कहते हैं डिस्टॉर्शन कॉस्ट फ़ंक्शन भी, या डिस्टॉर्शन K मीन्स अल्गोरिद्म का. और थोड़ी और विस्तृत जानकारी देने के लिए, यहाँ है K मीन्स अल्गोरिद्म. यह है बिल्कुल वही अल्गोरिद्म जो हमने लिखा था पिछली स्लाइड पर. और यह पहला स्टेप इस अल्गोरिद्म का क्या है, यह था क्लस्टर असायन्मेंट स्टेप जहाँ हमने असाइन किया था प्रत्येक पोईँट को सबसे नज़दीकी सेंट्रोईड को. यह सम्भव है दिखा पाना गणितीय रूप में कि क्या क्लस्टर असायन्मेंट स्टेप वास्तव में कर रहा कि मिनमायज़ कर रहा है J, विद रिस्पेक्ट टु वेरीयबल्स c1, c2 इत्यादि, cm तक, रखते हुए सेंट्रोईड म्यू 1 से म्यू K तक निर्धारित. तो क्या क्लस्टर असायन्मेंट स्टेप करता है कि यह बदलता नहीं है क्लस्टर सेंट्रोईड्स को, लेकिन यह क्या करता है कि यह सिर्फ़ चुनाव करता है वैल्यूज़ का c1, c2, cm तक का. जो मिनमायज़ करती हैं कॉस्ट फ़ंक्शन, या डिस्टॉर्शन फ़ंक्शन J को. यह सम्भव है साबित करना गणितीय रूप में, लेकिन मैं करूँगा नहीं यहाँ. लेकिन इसका काफ़ी सहज अर्थ भी है, चलो असाइन करते हैं प्रत्येक पोईँट को एक क्लस्टर सेंट्रोईड जो इसके सबसे नज़दीक है, क्योंकि वह है जो मिनमायज़ करता है स्क्वेर दूरी का पोईँट और क्लस्टर सेंट्रोईड के बीच की. और फिर दूसरा स्टेप K मीन्स का, यह दूसरा स्टेप यहाँ. दूसरा स्टेप था मूव सेंट्रोईड स्टेप. और एक बार फिर, मैं साबित नहीं करूँगा, लेकिन यह 
दिखाया जा सकता है गणितीय रूप से कि क्या मूव सेंट्रोईड स्टेप करता है कि यह चुनता है वैल्यूज़ म्यू की जो न्यूनतम करती हैं J, तो यह मिनमायज़ करता है कॉस्ट फ़ंक्शन J विद रिस्पेक्ट टु, wrt है मेरी संक्षिप्त फ़ॉर्म विद रिस्पेक्ट टु के लिए, जब यह मिनमायज़ करता है J wrt स्थान के क्लस्टर सेंट्रोईड के म्यू 1 से म्यू K तक. तो यह वास्तव में क्या कर रहा है कि यह ले रहा है ये दो सेट वेरीयबल्स के और विभाजित करता हैं उन्हें दो हिस्सों में यहाँ. पहले c सेट वेरीयबल्स का और फिर आपके पास है म्यू सेट वेरीयबल्स का. और यह क्या करता है कि यह पहले मिनमायज़ करता है J wrt वेरीयबल c और फिर यह मिनमायज़ करता है J wrt वेरीयबल म्यू और फिर यह इसे करता रहता है. और, वह है सिर्फ़ जो K मीन्स करता है. और अब जब हमने समझ लिया है K मीन्स को कि यह मिनमायज़ कर रहा है इस कॉस्ट फ़ंक्शन J को, हम कर सकते हैं इस्तेमाल इसका डीबग करने के लिए 
किसी अल्गोरिद्म को और सिर्फ़ सुनिश्चित करें कि हमारा इम्प्लमेंटेशन K मीन्स का सही चल रहा है. तो, अब हम समझते है K मीन्स अल्गोरिद्म को प्रयास करते हुए ऑप्टिमायज़ करने के इस कॉस्ट फ़ंक्शन J को, जिसे डिस्टॉर्शन फ़ंक्शन भी कहते हैं. हम इस्तेमाल कर सकते हैं उसका डीबग करने के लिए K मीन्स को 
और सुनिश्चित करने के लिए कि K मीन्स कन्वर्ज हो रहा है और सही चल रहा है. और अगले वीडियो में हम देखेंगे कि कैसे हम इसका इस्तेमाल कर सकते हैं ताकि K मीन्स ढूँढ पाए बेहतर क्लस्टर्स और बचा पाए लोकल ऑप्टिमा.