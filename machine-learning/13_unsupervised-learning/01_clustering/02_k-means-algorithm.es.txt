En el problema de agrupamiento, o clustering, tenemos datos sin valor asignado y nos gustaría que un algoritmo agrupara los datos automáticamente en subgrupos coherentes o en agrupamientos coherentes. El algoritmo K-means es, por mucho, el algoritmo de agrupamiento más popular y el más utilizando. En este video me gustaría hablarles de qué es algoritmo K-means y de cómo funciona. El algoritmo de agrupamiento K-means se explica mejor con imágenes. Digamos que quieres tomar un conjunto de datos sin valor asignado como el que se muestra aquí, y quieres agruparlo en dos grupos. Si ejecuto el algoritmo de agrupamiento K-means, esto es lo que tengo que hacer. El primer paso es iniciar aleatoriamente dos puntos llamados centroides del agrupamiento. A estas dos cruces se les llama centroides del agrupamiento y son dos porque quiero agrupar mis datos en dos agrupamientos. K-means es un algoritmo iterativo y hace dos cosas: La primera es la asignación de agrupamiento y la segunda es el movimiento del centroide. Ahora les diré qué significa esto. El primero de los dos pasos en el ciclo de K-means es la asignación de agrupamiento. Esto significa que tomará cada ejemplo o cada uno de estos puntos verdes que se muestran aquí y, dependiendo de si están cerca al centroide del agrupamiento rojo o al centroide del agrupamiento azul, asignará cada punto de datos a uno de los centroides de los agrupamientos. A lo que me refiero con esto, específicamente, es a que va a tomar tu conjunto de datos y colorear cada uno de los puntos ya sea en rojo o en azul dependiendo de si está más cerca del centroide de agrupamiento, rojo o al centroide de agrupamiento azul. Ya lo hice en este diagrama. Este fue el paso de asignación de agrupamiento. La otra parte del ciclo de K-means es el movimiento del centroide. Lo que haremos es tomar estos dos centroides de agrupamiento; es decir, la cruz roja y la cruz azul, y los moveremos al promedio de los puntos pintados del mismo color. Lo que vamos a hacer es observar todos los puntos rojos y calcular el promedio o la media de la ubicación de todos los puntos rojos y pondremos el centroide ahí. Lo mismo pasará con el centroide azul. Observaremos los puntos azules y calcularemos su media para mover el centroide a ella. Lo haré ahora mismo. Moveremos los centroides de los agrupamiento como sigue. Ya los moví a su nueva media. El azul se movió a la izquierda y el rojo hacia la derecha. Luego volvemos al paso de asignación de agrupamiento. De nuevo veremos todos los ejemplos sin valor asignado y, dependiendo de si están cerca al centroide rojo o al azul, los colorearé ya sea de rojo o de azul. Asignaré cada punto a uno de los centroides. Permítanme hacerlo. El color de algunos puntos cambió. Luego regresaré al paso del movimiento del centroide. Calcularé el promedio de todos los puntos azules y de todos los puntos rojos y moveré los centroides de ambos agrupamientos ahí. Hagámoslo de nuevo. Haré otra asignación de agrupamiento y pintaré cada punto de azul o rojo en base a su cercanía y luego otra vez realizaré el paso de movimiento del centroide. Y terminamos. De hecho, si ejecutas iteraciones adicionales de K-means a partir de este punto, los centroides no cambiarán más y los colores de los puntos tampoco. En este punto, K-menas convergió y realizó un excelente trabajo encontrando los dos conjuntos en estos datos. Escribamos el algoritmo k-means formalmente. El algoritmo K-means toma dos entradas. Una es el parámetro “K”, que es el número de agrupamiento que queremos encontrar en los datos. Después hablaré acerca de cómo elegir “K”. Por ahora sólo diremos que queremos un número de agrupamientos y le diremos a nuestro algoritmo cuántos agrupamiento creemos que hay en este conjunto de datos. “K” también toma como entrada este conjunto de entrenamiento sin valores asignados, solamente con "x". Debido a que este es un aprendizaje no supervisado, ya no tenemos los valores “y”. Para el aprendizaje no supervisado de K-means utilizaré la convención de que “x(i)” es un factor de “Rn” dimensiones. Esta es la razón por la que mis ejemplos de entrenamiento son vectores “n” dimensionales en vez de “n” más 1 dimensionales. Esto es lo que hace el algoritmo K-means. El primer paso es iniciar aleatoriamente los centroides de los agrupamiento “K”, a los que llamaremos “µ1”, “µ2” hasta “µK”. En un diagrama anterior, los centroides de los agrupamientos correspondían a la ubicación de la cruz roja y de la cruz azul. Aquí tenemos dos centroides de agrupamiento de los que el rojo es “µ1” y el azul es “µ2”. En general tendríamos más centroides “k” en vez de sólo 2. El ciclo interno de K-means hace lo siguiente repetidamente: Primero, para cada uno de mis ejemplos de entrenamiento, fijaré la variable “C(i)” con el índice 1 hasta “k” del centroide más cercano a “x(i)”. Este es el paso de asignación de agrupamiento donde tomamos cada uno de los ejemplos y lo pintamos ya sea rojo o azul dependiendo de qué centroide estuviera más cerca. “C(i)” será un número del 1 a “K” que nos dice si está más cerca a la cruz roja o a la cruz azul. Otra manera de expresar esto es, para calcular “C(i)” tomaré mi ejemplo i"" que es “x(i)” y mediré su distancia a cada uno de mis centroides de agrupamiento. Este es “µ” y luego k minúscula. Entonces “K” mayúscula es el total de centroides y “k” minúscula será el índice de centroides. Entones, minimizaré los valores de “k” y encontraré el valor de “k” que minimiza esta distancia entre “x(i)” y el centroide del agrupamiento y luego, el valor de “k” minimiza estoy es lo que obtenemos para “C(i)”. Esta es otra manera de escribir qué es “C(i)”. Si escribo la norma de “x(i)”, menos “µk”, entonces esta la distancia entre mi ejemplo de entrenamiento “x(i)” y el centroide del agrupamiento “µ” subíndice “k” minúscula. La “K” mayúscula la utilizaremos para denotar el número total de centroides y la “k” minúscula será un número entre el 1 y el radical “K” mayúscula. Estoy utilizando “k” con minúscula para indexar mis centroides. Esto es con “k” minúscula. Entonces, esta es la distancia entre el ejemplo y el centroide. Lo que haré a continuación será encontrar el valor de “k” minúscula que minimice esto. El valor de “k” que minimice esto será lo que determinaré como “C(i)”. Por costumbre escribí la distancia entre “x(i)” y el centroide del agrupamiento. En la práctica se suele escribir como la distancia al cuadrado. “C(i)” entonces es la elección del centroide con la distancia cuadrada más pequeña a mi ejemplo de entrenamiento “x(i)”. Por supuesto, minimizar la distancia cuadrada o la distancia debe arrojar el mismo valor de “C(i)”, aunque usualmente ponemos los exponentes cuadrados como una costumbre que se usa para K-means. Bueno, ese fue el primer paso de la asignación de agrupamiento. El siguiente ciclo de K-means es de movimientos. Lo que pasará con esto es que para cada uno de mis centroides; es decir, para “k” minúscula igual a 1 por “K”, determina “µk” como igual al promedio de los puntos asignados al agrupamiento. Como ejemplo de esto digamos que uno de los centroides de agrupamientos, digamos el centroide 2, tiene asignados los ejemplos de entrenamiento 1, 5, 6, y 10 asignados. Esto significa que “C(1) s igual 2, “C(5)” que es igual a 2, “C(6) que a su vez es igual a 2 y “C(0) que es igual a 2. ¿Sí? Si obtuvimos esto del paso de asignación de agrupamiento, quiere decir que los ejemplos 1, 5, 6 y 10 fueron asignados al centroide del agrupamiento 2. En este paso de movimiento del centroide lo que haré es calcular el promedio de estas cuatro cosas. “x(1)" más “x(5)”, mas “x(6)” más “x(10)”. Ahora obtendré el promedio. Tengo cuatro puntos asignados al centroide del agrupamiento y tomaré un cuarto de esto. Ahora “µ2” será un vector “n” dimensional porque cada uno de estos ejemplos “x1”, “x5”, “x6”, “x10” es un vector “n” dimensional. Sumaré estas cuatro cosas y las dividiré entre cuatro porque tengo cuatro puntos asignados a este centroide. Con esto termino el paso de movimiento del centroide para el agrupamiento “µ2”. Esto tiene como efecto mover “µ2” al promedio de los 4 puntos enlistados aquí. Una cosa que me han preguntado mucho es, cuando movemos “µk” al promedio de los cuatro puntos asignados al agrupamiento, pero ¿qué pasa si tenemos un centroide de agrupamiento sin puntos asignados? Lo que se hace generalmente es eliminar el centro de ese agrupamiento. Si haces esto, quedas con “k” menos 1 agrupamientos en vez de con “k” agrupamientos. A veces, si realmente necesitas “k” agrupamientos. Otra cosa que puedes hacer es tener un centroide sin puntos asignados e iniciar aleatoriamente ese centroide de agrupamiento, pero es más común simplemente eliminar el agrupamiento si durante el algoritmo K-means no se le asignan puntos. Esto puede suceder, aunque en la práctica no pasa seguido. Esto fue el algoritmo K-means. Antes de dar por terminado este video, quiero contarles de otra aplicación práctica de K-means en problemas con agrupamientos que no están bien separados. Esto es lo que quiero decir. Hasta el momento hemos trazado K-means lo hemos aplicado a los conjuntos de datos que se muestran aquí, donde tenemos tres agrupamientos bien separados, y nos gustaría que el algoritmo encontrara los 3 agrupamientos por nosotros. Pero sucede que, seguido, K-means también se aplica a conjuntos de datos que lucen como este, donde los agrupamientos pueden no estar relativamente juntos. Aquí tenemos un ejemplo práctico con tallas de camisetas. Supongamos que eres un fabricante de camisetas y que obtuviste de la población a la que le quiere vender camisetas una variedad de ejemplos del peso y la altura de las personas en tu población. Supongo que el peso y la altura tienden a estar relacionados positivamente así que quizá terminarás con un conjunto de datos como este, con un conjunto o muestra de ejemplos de la altura y el peso de diferentes personas. Digamos que quieres poner la talla a tus camisetas. Digamos que quiero diseñar y vender camisetas de tres tallas: chica, mediana y grande. ¿Qué tan grande sería la pequeña? ¿de qué tamaño sería la mediana? y ¿qué tamaño haría mis camisetas grandes? Una manera de saberlo es ejecutando mi algoritmo de agrupamiento K-means en este conjunto de datos que muestro a la derecha. Lo que hará K-means será agrupar todos estos puntos en un agrupamiento y todos estos puntos en un segundo agrupamiento y todos estos otros en un tercer agrupamiento. Aunque estos datos no parecieran tres agrupamientos bien separados, K-means separará los datos en muchos agrupamientos. Y lo que puedes hacer es es tomar la primera población y analizar su peso y talla para diseñar una camiseta pequeña que le quede a esta primera población. Luego puedes diseñar una talla mediana y luego una talla grande. Este es un ejemplo de la segmentación de mercados, en la que utilizamos K-means para separar el mercado en 3 segmentos distintos. Puedes diseñar un producto de manera independiente para intentar cubrir las necesidades de cada uno de tus tres sub poblaciones. Este es el algoritmo K-means. para este momento debes saber implementar el algoritmo K-means y hacerlo funcionar en algunos problemas. En los siguientes videos quiero ahondar más en los elementos básicos de K-means y hablar más acerca de cómo hacerlo funcionar bien.