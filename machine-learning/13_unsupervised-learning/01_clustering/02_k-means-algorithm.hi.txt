क्लस्टरिंग प्रॉब्लम में हमें दिया जाता है एक अनलेबल्ड डेटा सेट और हम चाहते हैं एक अल्गोरिद्म जो स्वचालित रूप से ग्रूप करे डेटा को सामंजस्यपूर्ण सबसेट्स में या सामंजस्यपूर्ण क्लस्टर्स में हमारे लिए. K मीन्स अल्गोरिद्म है अब तक सबसे लोकप्रिय, अब तक सबसे व्यापक रूप से इस्तेमाल किया जाने वाला क्लस्टरिंग अल्गोरिद्म, और इस वीडियो में मैं बताना चाहता हूँ आपको कि क्या है K मीन्स अल्गोरिद्म और यह कैसे काम करता है. K मीन्स क्लस्टरिंग अल्गोरिद्म अच्छे से समझाया जा सकता हैं चित्रों से. मान लो मैं चाहता हूँ लेना एक अनलेबल्ड डेटा सेट जैसे कि यहाँ दिखाया है, और मैं चाहता हूँ ग्रूप करना डेटा को दो क्लस्टर्स में. यदि मैं चलाता हूँ K मीन्स क्लस्टरिंग अल्गोरिद्म, यहाँ है जो मैं करूँगा. पहला स्टेप है रैंडम ढंग से लेना प्रारम्भिक दो पोईँट्स, जिन्हें कहते हैं क्लस्टर सेंट्रोईड्स. तो, ये दो क्रॉस यहाँ, इन्हें कहते हैं क्लस्टर सेंट्रोईड्स और मेरे पास दो हैं क्योंकि मैं चाहता हूँ ग्रूप करना मेरे डेटा को दो क्लस्टर्स में. K मीन्स हैं एक इटरेटिव अल्गोरिद्म और यह दो काम करता हैं. पहला है एक क्लस्टर असायन्मेंट स्टेप और दूसरा है एक मूव सेंट्रोईड स्टेप. तो चलो मैं बताता हूँ उनका क्या मतलब है. पहला स्टेप दो में से है K मीन्स का, यह क्लस्टरिंग असायन्मेंट स्टेप. इसका क्या मतलब है कि, यह जाता है प्रत्येक इन इग्ज़ाम्पल्ज़ में से, प्रत्येक इन हरी डॉट्स में से जो यहाँ दिखाई हैं और निर्भर करते हुए कि यह नज़दीक है लाल क्लस्टर सेंट्रोईड् के या नीले क्लस्टर सेंट्रोईड के, यह करेगा असाइन प्रत्येक डेटा पोईँट को दो में से एक क्लस्टर सेंट्रोईड को. विशेष रूप से, मेरा क्या मतलब है उससे, कि जाओ आपके डेटा सेट में से और रंग करो प्रत्येक पोईँट को या लाल या नीला निर्भर करते हुए कि यह क़रीब है लाल क्लस्टर सेंट्रोईड के, या नीले क्लस्टर सेंट्रोईड के, और मैंने किया है वह इस चित्र में यहाँ. तो वह था क्लस्टर असायन्मेंट स्टेप. दूसरा हिस्सा K मीन्स का है, K मीन्स के लूप में, है मूव सेंट्रोईड सटेप, और क्या हम करेंगे कि, हम लेंगे दोनो क्लस्टर सेंट्रोईड्स, अर्थात्, लाल क्रॉस और नीला क्रॉस, और हम करेंगे मूव उन्हें औसत पर पोईँट्स की जो उसी रंग से रंग किए हैं. तो हम क्या करेंगे कि देखेंगे सारे लाल पोईँट्स और कम्प्यूट करेंगे औसत, वास्तव में मीन सभी लाल पोईँट्स के स्थानों की, और हम करेंगे मूव लाल क्लस्टर सेंट्रोईड वहाँ. और वही चीज़ करेंगे नीले क्लस्टर सेंट्रोईड के लिए, देखेंगे सारे नीले डॉट्स को और कम्प्यूट करेंगे उनकी मीन, और फिर हम करेंगे मूव नीला क्लस्टर सेंट्रोईड वहाँ. तो, मैं करता हूँ वह अब. हम करेंगे मूव क्लस्टर सेंट्रोईड इस प्रकार और मैंने अब मूव कर दिया है उन्हें नई मीन्ज़ पर. लाल वाला गया इस प्रकार और नीले रंग का गया इस प्रकार और लाल वाला गया इस प्रकार. और फिर हम वापिस जाते हैं एक और क्लस्टर असायन्मेंट स्टेप पर, तो हम फिर से देखेंगे सारे मेरे अनलेबल्ड इग्ज़ाम्पल्ज़ को और निर्भर करते हुए कि यह क़रीब हैं लाल या नीले क्लस्टर सेंट्रोईड के, मैं करूँगा रंग उन्हें या लाल या नीला. मैं करूँगा असाइन प्रत्येक पोईँट को दो में से एक क्लस्टर सेंट्रोईड को, तो मैं करता हूँ अब वह. और इसलिए रन कुछ पोईँट्स का बदल गया है. और फिर मैं करुँगा एक और मूव क्लस्टर सेंट्रोईड स्टेप. तो मैं कम्प्यूट करूँगा औसत सारे नीले पोईँट्स का, कम्प्यूट करूँगा औसत सारे लाल पोईँट्स का और मूव करूँगा मेरे क्लस्टर सेंट्रोईड्स को इस तरह, और इसलिए, चलो करते हैं वह फिर से. मैं करता हूँ एक और क्लस्टर असायन्मेंट स्टेप. तो रंग करते हैं प्रत्येक पोईँट को लाल या नीला, निर्भर करते हुए किसके यह नज़दीक है और फिर करते हैं एक और मूव सेंट्रोईड स्टेप और फिर हो गया. और वैसे भी यदि आप चलाते रहते हैं अतिरिक्त इटरेशन्स K मीन्स की यहाँ से आगे क्लस्टर सेंट्रोईड्स नहीं बदलेंगे इसके आगे और रंग पोईँट्स का नहीं बदलेगा इसके आगे. और इसलिए, यह है इस पोईँट पर, K मीन्स कन्वर्ज हो गया है और इसने अच्छे से ढूँढे है दो क्लस्टर्स इस डेटा में. चलो लिखते हैं K मीन्स और नियमित रूप में. K मीन्स अल्गोरिद्म लेता है दो इन्पुट्स. एक है पेरामिटर K, जो है संख्या क्लस्टर्स की आप चाहते हैं ढूँढना डेटा में. बाद में मैं बताऊँगा कैसे हम कर सकते हैं चुनाव K का, लेकिन अभी के लिए मान लो कि हमने तय किया है कि हम चाहते हैं एक निश्चित संख्या क्लस्टर्स की और हम बताएँगे अल्गोरिद्म को कि कितने क्लस्टर्स हम सोचते हैं डेटा में हैं. और फिर K मीन्स लेता है इनपुट इस तरह का अनलेबल्ड ट्रेनिंग सेट भी जिसमें सिर्फ़ x हैं और क्योंकि यह है अनसुपरवाईज्ड लर्निंग, हमारे पास नहीं हैं लेबल्ज़ y अब. और अनसुपरवाईज्ड लर्निंग के लिए K मीन्स की, मैं करूँगा इस्तेमाल कन्वेन्शन का कि XI है एक Rn डिमेन्शनल / आयामों वाला वेक्टर. और इसलिए मेरे ट्रेनिंग इग्ज़ाम्पल्ज़ हैं अब n डिमेन्शनल बजाय n + 1 डिमेन्शनल वेक्टर. यहाँ है कि K मीन्स अल्गोरिद्म क्या करता है. पहला स्टेप है कि यह रैंडम ढंग से प्रारम्भिक वैल्यू देता है K क्लस्टर सेंट्रोईड्स को जिन्हें हम कहेंगे mu1, mu2, आगे mu k तक. और इसलिए पहले चित्र में, क्लस्टर सेंट्रोईड्स कॉरेस्पॉंड कर रहे थे स्थान को लाल क्रॉस के और ब्लू क्रॉस के स्थान को. तो वहाँ हमारे पास थे दो क्लस्टर सेंट्रोईड्स, इसलिए शायद लाल क्रॉस था mu1 नीला क्रॉस था mu 2, और अधिक सामान्य रूप में हमारे पास होंगे K क्लस्टर सेंट्रोईड्स बजाय सिर्फ़ 2 के. तब इनर लूप K मीन्स का करता है निम्नलिखित, हम बार-बार करेंगे निम्नलिखित. पहले, प्रत्येक मेरे ट्रेनिंग इग्ज़ाम्पल के लिए, मैं करूँगा यह वेरीयबल c(i) को इंडेक्स 1 से K तक क्लस्टर सेंट्रोईड का जो x1 के सबसे नज़दीक है. तो यह था मेरा क्लस्टर असायन्मेंट स्टेप, जहाँ हमने लिया प्रत्येक मेरा इग्ज़ाम्पल और रंग किया इसे या लाल या नीला निर्भर करते हुए कि किस क्लस्टर सेंट्रोईड के यह सबसे नज़दीक है. तो c(i) होगा एक नम्बर 1 से K तक जो बताता है हमें, आप जानते हैं, क्या यह नज़दीक है लाल क्रॉस के या यह नज़दीक है नीले क्रॉस के, और एक अन्य ढंग लिखने का इसे है मैं करूँगा, कम्प्यूट c(i), मैं लूँगा मेरा i-थ इग्ज़ाम्पल x(i) और मैं मापूँगा इसकी दूरी प्रत्येक मेरे क्लस्टर सेंट्रोईड से, यह mu और फिर लोअर केस k, ठीक है, तो कैपिटल K है कुल संख्या सेंट्रोईड्स की और मैं इस्तेमाल करूँगा लोअर केस k यहाँ इंडेक्स करने के लिए भिन्न सेंट्रोईड्स. लेकिन इसलिए, c(i) होगा, मैं करूँगा मिनमायज़ मेरी वैल्यूज़ पर k की और लूँगा वह वैल्यू k की जो मिनमायज़ करती है इस दूरी को x(i) और क्लस्टर सेंट्रोईड के बीच, और फिर आप जानते हैं, वह वैल्यू k की जो मिनमायज़ करती है इसे, वह सेट हो जाती है c(i) में. तो, यहाँ है और एक अन्य ढंग लिखने का कि क्या है c(i). यदि मैं लिखता हूँ नॉर्म x(i) - mu k का, तब यह है दूरी दोनो मेरे i-थ ट्रेनिंग इग्ज़ाम्पल x(i) और क्लस्टर सेंट्रोईड mu सबस्क्रिप्ट k में, यह है - यह यहाँ, वह है एक लोअरकेस k. तो अपर केस K करेंगे इस्तेमाल डिनोट करने के लिए कुल संख्या क्लस्टर सेंट्रोईड्स की, और यह लोअरकेस k है एक संख्या एक और कैपिटल K के बीच में. मैं सिर्फ़ इस्तेमाल कर रहा हूँ लोअरकेस k इंडेक्स करने के लिए मेरे भिन्न क्लस्टर सेंट्रोईड्स में. वह है लोअरकेस k. तो वह है दूरी इग्ज़ाम्पल और क्लस्टर सेंट्रोईड में और इसलिए मैं क्या करूँगा कि जानूँगा वैल्यू k की, लोअरकेस k की जो मिनमायज़ करती है इसे, और इसलिए वैल्यू k की जो मिनमायज़ करती है आप जानते हैं, वह है जो मैं सेट करूँगा c(i) को, और कन्वेन्शन से यहाँ मैंने लिखा है दूरी x(i) और क्लस्टर सेंट्रोईड के बीच, कन्वेन्शन से लोग वास्तव में इसे लिख देते हैं स्क्वेर्ड दूरी की तरह. तो हम सोचते हैं c(i) को लेने के लिए क्लस्टर सेंट्रोईड की तरह जो है सबसे कम स्क्वेर्ड दूरी पर मेरे ट्रेनिंग इग्ज़ाम्पल x(i) से. लेकिन निश्चित रूप से न्यूनतम करता हुआ स्क्वेर्ड दूरी को, और न्यूनतम करता हुआ दूरी को जिससे आपको मिलनी चाहिए समान वैल्यू c(i) की, लेकिन आम तौर पर हम कर देते हैं स्क्वेर वहाँ, सिर्फ़ कन्वेन्शन से जब लोग इस्तेमाल करते हैं K मीन्स. तो वह था क्लस्टर असायन्मेंट स्टेप. दूसरा स्टेप लूप में K मीन्स का करता है मूव क्लस्टर सेंट्रोईड स्टेप. और वह क्या करता है कि प्रत्येक मेरे क्लस्टर सेंट्रोईड के लिए, तो लोअरकेस k बराबर 1 से K तक, यह सेट करता है mu-k बराबर औसत पोईँट्स की जो असाइन किए हैं क्लस्टर को. एक ठोस उदाहरण के जैसे, मान लो कि एक मेरा क्लस्टर सेंट्रोईड, मान लो क्लस्टर सेंट्रोईड दो, में हैं ट्रेनिंग इग्ज़ाम्पल्स, आप जानते हैं, 1, 5, 6, और 10 असाइन किए हुए इसे. और इसका क्या मतलब है, वास्तव में इसका मतलब है कि c(1) बराबर है c(5) बराबर है c(6) बराबर है और इसी प्रकार c(10) बराबर है दो, सही है? यदि हमें वह मिलता है क्लस्टर असायन्मेंट स्टेप से, तब उसका मतलब है कि इग्ज़ाम्पल्ज़ 1, 5, 6 और 10 असाइन किए गए थे क्लस्टर सेंट्रोईड दो को. तब इस मूव क्लस्टर सेंट्रोईड स्टेप में, मैं क्या करुंगा कि मैं सिर्फ़ कम्प्यूट करूँगा औसत इन चार चीज़ों का. तो x1 प्लस x5 प्लस x6 प्लस x10. और अब मैं करूँगा औसत उनका तो यहाँ मेरे पास हैं चार पोईँट्स असाइन किए इस क्लस्टर सेंट्रोईड को, सिर्फ़ लेंगे एक चौथाई उसका. और अब mu2 होगा एक n डिमेन्शनल / आयामों वाला वेक्टर. क्योंकि प्रत्येक ये इग्ज़ाम्पल x1, x5, x6, x10 प्रत्येक उनमें से था एक एन-डिमेन्शनल वेक्टर, और मैं करूँगा योग उनका और, आप जानते हैं, विभाजन करूँगा चार से क्योंकि मेरे पास हैं चार पोईँट्स असाइन किए हुए इस क्लस्टर सेंट्रोईड को, मैं कर पाता हूँ मेरा मूव क्लस्टर सेंट्रोईड स्टेप, मेरे क्लस्टर सेंट्रोईड mu 2 के लिए. इसका प्रभाव है मूव करना mu2 को औसत पर चार पोईँट्स की जो लिखे हैं यहाँ. एक चीज़ जो मैं पूछता हूँ, ठीक है, यहाँ हमने क्या कहा, चलो मान लो mu k है औसत पोईँट्स की जो असाइन किए हैं इस क्लस्टर को. लेकिन क्या हो यदि वहाँ है एक क्लस्टर सेंट्रोईड जिसमें कोई पोईँट्स नहीं है जिसमें ज़ीरो पोईँट्स असाइन लिए गए है. उस मामले में और अधिक आम चीज़ करने की होगी कि सिर्फ़ हटा दें उस क्लस्टर सेंट्रोईड को. और यदि आप वह करते हैं, आपको मिलते हैं K माइनस एक क्लस्टर बजाय K क्लस्टर्स के. कभी-कभी यदि आप वाक़ई में चाहते हैं k क्लस्टर्स, तब एक और चीज़ जो आप कर सकते हैं यदि आपके पास है एक क्लस्टर सेंट्रोईड जिसमें नहीं है कोई पोईँट्स असाइन किए हुए इसे आप दे सकते हैं सिर्फ़ रैंडम ढंग से दोबारा प्रारम्भिक वैल्यू उस क्लस्टर सेंट्रोईड को, लेकिन यह ज़्यादा आम है सिर्फ़ निकाल देना एक क्लस्टर को यदि कभी दौरान K मीन्स के नहीं मिलते पोईँट्स असाइन किए हुए उस क्लस्टर सेंट्रोईड को, और वैसा हो सकता है, यद्यपि व्यवहार में ऐसा अक्सर नहीं होता है. तो वह था K मीन्स अल्गोरिद्म. समाप्त करने से पहले इस वीडियो को मैं सिर्फ़ आपको बताना चाहता हूँ एक अन्य आम ऐप्लिकेशन के बारे में K मीन्स की और वह है समस्या जिसमें सही ढंग से अलग नहीं हैं क्लस्टर्ज़. मेरा मतलब ऐसे है. अभी हम चित्रित कर रहे थे K मीन्स को और अप्लाई कर रहे थे इसे डेटा सेट्स को जैसे यहाँ दिखाए हैं जहाँ हमारे पास है तीन काफ़ी अलग अलग क्लस्टर्ज़, और हमारे पास था अल्गोरिद्म ढूँढने के लिए शायद 3 क्लस्टर्ज़ हमारे लिए. लेकिन ऐसा होता है कि अक्सर K मीन्स किया जाता है अप्लाई उन डेटा सेट्स को भी जो दिखते हैं ऐसे जहाँ शायद नहीं हैं बहुत से अलग अलग क्लस्टर्ज़. यहाँ है एक उदाहरण ऐप्लिकेशन, टी-शर्ट साइज़ की. मान लो आप टी-शर्ट उत्पादक हो. आपने क्या किया है आप गए हैं जनता के पास कि आप बेचना चाहते हैं टी-शर्ट्स जिन्हें, और आपने एकत्र किए है बहुत से इग्ज़ाम्पल्ज़ ऊँचाई और वज़न के इन लोगों के आपकी जनता में और तो, ठीक है मुझे लगता है कि ऊंचाई और वजन होते हैं सही ढंग से दिखाए गए तो शायद आपको मिलता है एक डेटा सेट इस तरह का, आप जानते हैं, जिसमें एक इग्ज़ाम्पल है या एक सेट है इग्ज़ाम्पल्ज़ का भिन्न लोगों की ऊँचाई और वज़न का. मान लो आप तय करना चाहते हैं साइज़ आपकी टी-शर्ट्स का. मान लो मैं चाहता हूँ डिज़ाइन करना बेचना टी-शर्ट्स तीन साइज़ में, स्मॉल, मीडीयम और लार्ज. तो कितनी बड़ी मुझे बनानी चाहिए स्मॉल टी-शर्ट? कितनी बड़ी होनी चाहिए मेरी मीडीयम? और कितनी बड़ी मुझे बनानी चाहिए मेरी लार्ज टी-शर्ट. एक ढंग उसे करने का होगा कि रन करें मेरा K मीन्स क्लस्टरिंग अल्गोरिद्म उस डेटा सेट पर जो मैंने दिखाया है दाईं तरफ़ और शायद क्या K मीन्स करेगा कि ग्रूप करेगा सब इन पोईँट्स को एक क्लस्टर में और ग्रूप सब इन पोईँट्स को एक दूसरे क्लस्टर में और ग्रूप करेगा सारे इन पोईँट्स को एक तीसरे क्लस्टर में. तो, यद्यपि डेटा, आप जानते है, पहले से यह नहीं लगता था जैसे हमारे पास थे 3 अलग अलग क्लस्टर्ज़, K मीन्स करेगा एक तरह से अलग डेटा को बहुत से क्लस्टर्ज़ में आपके लिए. और आप क्या कर सकते हैं फिर कि देखें इस पहले ग्रूप को लोगों के और देखें उन्हें और आप जानते हैं, देखें ऊँचाई और वज़न, और प्रयास करें डिज़ाइन करने का एक स्मॉल टी-शर्ट ताकि यह एक तरह से फ़िट हो इस पहले ग्रूप को लोगों के और फिर डिज़ाइन करें एक मीडीयम टी-शर्ट और डिज़ाइन करें एक लार्ज टी-शर्ट. और यह है वास्तव में एक उदाहरण मार्केट सेग्मेंटेशन का जहाँ आप इस्तेमाल कर रहे हैं K मीन्स अलग करने के लिए आपकी मार्केट 3 भिन्न सेगमेंट्स में. तो आप डिज़ाइन कर सकते हैं एक प्रोडक्ट अलग अलग अर्थात् स्मॉल, मीडीयम, लार्ज टी-शर्ट्स, जो सूट करता है ज़रूरतों को प्रत्येक आपके 3 अलग ग्रूप्स को सही तरह से. तो वह है K मीन्स अल्गोरिद्म. और अब तक आप जानते हैं कैसे इम्प्लमेंट करना चाहिए K मीन्स अल्गोरिद्म और इससे काम करवा सकते हैं कुछ प्राब्लम्ज़ पर. लेकिन अगले कुछ वीडियोज़ में मैं क्या करना चाहता हूँ कि वास्तव में जाऊँगा अधिक गहराई से दाव पेंच में K मीन्स के और बात करेंगे कि कैसे इससे वास्तव में काम करवा सकते हैं बहुत अच्छे से.