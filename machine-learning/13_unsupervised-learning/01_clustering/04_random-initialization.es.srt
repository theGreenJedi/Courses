1
00:00:00,170 --> 00:00:01,340
En este video me gustaría

2
00:00:01,450 --> 00:00:03,230
hablar de cómo iniciar

3
00:00:04,580 --> 00:00:05,970
K-means y esto nos llevará a

4
00:00:06,170 --> 00:00:07,240
una discusión de cómo

5
00:00:07,550 --> 00:00:10,210
podemos evitar las óptimas locales en K-means.

6
00:00:10,740 --> 00:00:12,390
Aquí tenemos el algoritmo de agrupamiento K-means

7
00:00:12,950 --> 00:00:14,420
del que hablamos antes.

8
00:00:15,760 --> 00:00:16,760
Uno de los pasos del que no

9
00:00:17,260 --> 00:00:18,350
hablamos mucho es el

10
00:00:18,820 --> 00:00:21,560
en el que iniciamos aleatoriamente los centroides de los agrupamientos.

11
00:00:22,390 --> 00:00:23,490
Podemos imaginar

12
00:00:23,710 --> 00:00:25,350
maneras distintas de iniciar

13
00:00:25,960 --> 00:00:26,860
aleatoriamente los centroides del agrupamiento,

14
00:00:27,510 --> 00:00:28,580
Pero resulta que la

15
00:00:28,720 --> 00:00:29,820
que hay un método

16
00:00:30,050 --> 00:00:31,700
mucho más recomendable que

17
00:00:32,080 --> 00:00:33,830
la mayoría de las otras opciones que podemos tener en mente.

18
00:00:34,400 --> 00:00:35,250
Permítanme hablarles de esta

19
00:00:35,590 --> 00:00:38,160
opción, ya que seguido es la que funciona mejor.

20
00:00:39,550 --> 00:00:42,210
Así es como yo inicio mis centroides de agrupamientos.

21
00:00:43,300 --> 00:00:44,710
Cuando estamos ejecutando K-means debemos

22
00:00:45,140 --> 00:00:47,160
tener un número de centrodes de agrupamiento “K”

23
00:00:47,430 --> 00:00:48,520
no menor al

24
00:00:48,590 --> 00:00:50,090
número de ejemplos de entrenamiento “m”.

25
00:00:50,170 --> 00:00:51,210
Sería muy raro ejecutar

26
00:00:51,430 --> 00:00:52,600
K-means con un número

27
00:00:52,870 --> 00:00:54,270
de centroides de agrupamientos

28
00:00:54,520 --> 00:00:55,790
igual o mayor que el número de ejemplos que tenemos ¿verdad?

29
00:00:58,080 --> 00:00:59,010
La manera en la que iniciaré

30
00:00:59,150 --> 00:01:00,510
K-means es

31
00:01:00,770 --> 00:01:02,510
eligiendo al azar “k” ejemplos de

32
00:01:02,990 --> 00:01:05,170
entrenamiento. Lo que hago

33
00:01:05,610 --> 00:01:06,730
entonces es determinar “µ1”

34
00:01:06,850 --> 00:01:09,320
de ˝µK” igual a estos “k” ejemplos.

35
00:01:10,610 --> 00:01:11,470
Les mostraré un ejemplo concreto.

36
00:01:12,560 --> 00:01:14,190
Digamos que “k”

37
00:01:14,470 --> 00:01:16,600
es igual a 2 y en

38
00:01:17,070 --> 00:01:19,520
este ejemplo de la derecha digamos que encontramos dos agrupamientos.

39
00:01:21,170 --> 00:01:22,060
Entonces, lo que haré

40
00:01:22,200 --> 00:01:23,350
iniciar mis centroides

41
00:01:23,770 --> 00:01:25,340
de agrupamientos es

42
00:01:25,470 --> 00:01:27,320
elegir al azar un par de ejemplos.

43
00:01:27,760 --> 00:01:28,960
Digamos que elijo este

44
00:01:29,230 --> 00:01:31,060
y este otro de aquí.

45
00:01:31,230 --> 00:01:32,320
La manera en la que iniciaré

46
00:01:32,380 --> 00:01:34,100
los centroides de agrupamiento

47
00:01:34,310 --> 00:01:35,190
será iniciarlos

48
00:01:36,200 --> 00:01:38,930
justo sobre esos ejemplos.

49
00:01:39,530 --> 00:01:40,430
Este es mi primer centroide de

50
00:01:41,410 --> 00:01:43,230
agrupamiento y este es el segundo centroide y

51
00:01:43,390 --> 00:01:45,770
este es un inicio aleatorio de K- means.

52
00:01:48,540 --> 00:01:50,480
El que dibujé parece ser uno particularmente bueno.

53
00:01:50,890 --> 00:01:51,810
Algunas veces puedes resultar

54
00:01:52,040 --> 00:01:53,370
menos suertudo y terminarás

55
00:01:53,510 --> 00:01:54,900
eligiendo este como mi

56
00:01:55,330 --> 00:01:58,420
primer ejemplo inicial aleatorio y este como el segundo.

57
00:01:59,050 --> 00:02:01,380
Aquí estoy eligiendo dos ejemplos porque “K” es igual a 2.

58
00:02:01,590 --> 00:02:03,590
Ya elegimos aleatoriamente dos

59
00:02:03,890 --> 00:02:05,030
ejemplos de entrenamiento y si

60
00:02:05,100 --> 00:02:06,660
elijo entre estos dos,

61
00:02:06,830 --> 00:02:08,040
pondré este como

62
00:02:08,250 --> 00:02:09,200
mi primer centroide de agrupamiento

63
00:02:09,510 --> 00:02:10,980
y este como mi segunda ubicación inicial

64
00:02:11,140 --> 00:02:13,560
para el centroide de agrupamiento.

65
00:02:14,150 --> 00:02:15,690
Así es como puedes iniciar

66
00:02:16,070 --> 00:02:17,560
aleatoriamente los centroides del agrupamiento,

67
00:02:17,810 --> 00:02:19,670
Por lo tanto, al inicio, tu primer

68
00:02:19,860 --> 00:02:21,110
agrupamiento “µ1” será igual

69
00:02:21,270 --> 00:02:23,350
a “x(i)” para un valor

70
00:02:23,520 --> 00:02:25,870
aleatorio de “i” y

71
00:02:26,980 --> 00:02:27,660
“µ2” será igual a “x(j)”

72
00:02:29,240 --> 00:02:30,980
para un valor elegido al azar de

73
00:02:31,380 --> 00:02:32,830
“J”, y así sucesivamente

74
00:02:32,910 --> 00:02:34,440
si tienes más agrupamientos y más centroides.

75
00:02:35,680 --> 00:02:37,540
Como comentario al margen

76
00:02:38,110 --> 00:02:39,240
debo decir que

77
00:02:39,320 --> 00:02:40,840
en un video anterior con diapositivas en las que

78
00:02:41,150 --> 00:02:43,030
ilustramos K-means por primera vez

79
00:02:44,310 --> 00:02:45,070
con la animación

80
00:02:45,900 --> 00:02:46,890
para explicar,

81
00:02:47,590 --> 00:02:48,690
utilicé un método diferente de

82
00:02:49,240 --> 00:02:51,750
inicio para los centroides de mis agrupamientos.

83
00:02:52,460 --> 00:02:53,790
Pero el método que describo en esta

84
00:02:53,900 --> 00:02:55,940
diapositiva es el más recomendado y el que

85
00:02:56,430 --> 00:02:58,850
deberías utilizar cuando implementes K-means.

86
00:03:00,090 --> 00:03:01,560
Entonces, como sugieren estas

87
00:03:02,070 --> 00:03:04,090
figuras de la derecha,

88
00:03:04,930 --> 00:03:06,050
puedes pensar que K-means

89
00:03:06,530 --> 00:03:08,130
puede acabar convergiendo

90
00:03:08,260 --> 00:03:10,150
con soluciones diferentes, dependiendo

91
00:03:10,860 --> 00:03:12,470
de qué tan exactamente se iniciaron

92
00:03:12,990 --> 00:03:15,170
los agrupamientos en el inicio aleatorio.

93
00:03:16,280 --> 00:03:18,180
K-means puede arrojar soluciones diferentes.

94
00:03:18,930 --> 00:03:22,560
En particular, K-means puede terminar en una óptima local.

95
00:03:23,650 --> 00:03:24,920
Si tienes un

96
00:03:25,400 --> 00:03:26,370
conjunto de datos como este, puedes

97
00:03:26,660 --> 00:03:28,340
ver que hay tres agrupamientos. Si

98
00:03:28,780 --> 00:03:30,090
ejecutas el K-means y

99
00:03:30,150 --> 00:03:31,380
termina en una

100
00:03:31,820 --> 00:03:32,910
buena óptima local, que pudiera

101
00:03:33,040 --> 00:03:35,830
ser la óptima global, puedes terminar con esta división en agrupamientos.

102
00:03:36,820 --> 00:03:38,440
Pero si tuviste un inicio aleatorio

103
00:03:39,110 --> 00:03:41,630
desafortunado, K-means

104
00:03:42,100 --> 00:03:43,660
puede atorarse en óptimas locales

105
00:03:44,180 --> 00:03:45,740
diferentes. En este ejemplo de la izquierda

106
00:03:45,850 --> 00:03:47,330
parece que

107
00:03:47,620 --> 00:03:48,700
el agrupamiento azul ha capturado

108
00:03:49,470 --> 00:03:51,700
muchos puntos de la izquierda y los agrupamientos verde y rojo

109
00:03:52,050 --> 00:03:54,810
capturó un número relativamente pequeño de puntos.

110
00:03:55,020 --> 00:03:56,480
Esto corresponde a una

111
00:03:56,640 --> 00:03:58,470
mala óptima local

112
00:03:58,530 --> 00:04:00,060
porque básicamente toma

113
00:04:00,470 --> 00:04:01,560
estos dos agrupamientos y los

114
00:04:01,780 --> 00:04:03,440
une en 1. Además, divide

115
00:04:04,150 --> 00:04:06,070
el segundo agrupamiento en

116
00:04:06,580 --> 00:04:09,170
dos agrupamiento secundarios y

117
00:04:09,380 --> 00:04:10,270
tomó el

118
00:04:10,720 --> 00:04:12,280
segundo agrupamiento y lo dividió

119
00:04:12,540 --> 00:04:14,220
el agrupamiento en

120
00:04:14,460 --> 00:04:16,630
dos agrupamientos secundarios.

121
00:04:16,760 --> 00:04:17,880
Estos dos ejemplos de

122
00:04:18,000 --> 00:04:18,970
abajo a la derecha

123
00:04:19,220 --> 00:04:20,890
corresponden a las

124
00:04:21,250 --> 00:04:22,440
diferentes óptimas locales de K-means. De hecho,

125
00:04:22,890 --> 00:04:24,440
en este ejemplo,

126
00:04:25,070 --> 00:04:26,150
el agrupamiento rojo

127
00:04:26,550 --> 00:04:27,870
capturó un sólo ejemplo de óptima.

128
00:04:28,380 --> 00:04:29,810
El término óptima local,

129
00:04:30,200 --> 00:04:31,000
por cierto, se refiere a las óptimas

130
00:04:31,490 --> 00:04:32,930
locales en esta

131
00:04:33,190 --> 00:04:35,940
función de distorsión “J” y

132
00:04:36,320 --> 00:04:38,380
las soluciones de la

133
00:04:38,590 --> 00:04:39,830
izquierda inferior; es decir,

134
00:04:40,120 --> 00:04:41,420
las óptimas locales corresponden

135
00:04:41,530 --> 00:04:42,880
a soluciones reales en las que K-means

136
00:04:43,330 --> 00:04:44,050
se atoró en la óptima local y no

137
00:04:44,600 --> 00:04:45,940
realizó un buen

138
00:04:46,170 --> 00:04:47,940
trabajo minimizando

139
00:04:48,110 --> 00:04:50,030
de la función de distorsión “j”.

140
00:04:50,540 --> 00:04:52,250
Si te preocupa que K-means se atore

141
00:04:52,540 --> 00:04:53,810
en óptimas locales y quieres

142
00:04:53,970 --> 00:04:55,110
aumentar tus probabilidades de

143
00:04:55,330 --> 00:04:56,950
encontrar los mejores

144
00:04:57,230 --> 00:04:58,480
agrupamientos posibles como el que se muestra

145
00:04:58,730 --> 00:05:00,290
aquí arriba, puedes

146
00:05:00,350 --> 00:05:02,820
intentar multiplicar inicios aleatorizados de

147
00:05:03,580 --> 00:05:04,820
manera que, en vez de iniciar K-means

148
00:05:05,430 --> 00:05:06,460
sólo una vez esperando que

149
00:05:06,670 --> 00:05:07,680
funcione, puedes

150
00:05:08,040 --> 00:05:10,020
iniciar K-means muchas

151
00:05:10,130 --> 00:05:10,990
veces y ejecutar K-means

152
00:05:11,890 --> 00:05:12,870
muchas veces y utilizar esto

153
00:05:12,950 --> 00:05:13,840
para asegurarte de

154
00:05:14,110 --> 00:05:15,640
obtener una buena solución con

155
00:05:15,800 --> 00:05:18,380
la mejor óptima local o global.

156
00:05:19,480 --> 00:05:22,460
Aquí explico cómo puedes hacer eso.

157
00:05:22,720 --> 00:05:23,500
Digamos que decido ejecutar el

158
00:05:23,700 --> 00:05:24,800
algoritmo K-means cien veces.

159
00:05:25,160 --> 00:05:26,790
Ejecutaré este ciclo

160
00:05:27,060 --> 00:05:28,900
cien veces. El número usual de

161
00:05:29,330 --> 00:05:30,830
veces que se ejecuta K-means

162
00:05:30,920 --> 00:05:31,910
es de entre 50 y 1000.

163
00:05:32,160 --> 00:05:33,670
Digamos que decidiste ejecutar

164
00:05:35,090 --> 00:05:36,730
K-means 100 veces.

165
00:05:38,220 --> 00:05:39,100
Lo que esto significa es que

166
00:05:39,170 --> 00:05:41,490
iniciaríamos K-means aleatoriamente y

167
00:05:42,350 --> 00:05:43,250
para cada uno de

168
00:05:43,340 --> 00:05:44,710
estos cien inicios,

169
00:05:45,370 --> 00:05:47,040
ejecutaríamos K-means. De esto

170
00:05:47,220 --> 00:05:48,200
obtendríamos un

171
00:05:48,430 --> 00:05:50,270
conjunto de agrupamientos y un

172
00:05:50,590 --> 00:05:51,940
conjunto de centroides de agrupamientos.

173
00:05:52,040 --> 00:05:53,760
Entonces calcularíamos la distorsión “J”;

174
00:05:54,500 --> 00:05:55,600
es decir, la función de costos en el conjunto de asignación de

175
00:05:56,910 --> 00:05:58,260
agrupamientos

176
00:05:58,720 --> 00:05:59,910
y centroides.

177
00:06:01,000 --> 00:06:03,470
Finalmente, una vez terminado todo este proceso cien veces,

178
00:06:04,450 --> 00:06:06,330
tendrás cien maneras diferentes de

179
00:06:06,710 --> 00:06:08,990
agrupar datos. Cuando

180
00:06:09,240 --> 00:06:10,310
termines, lo que harás

181
00:06:10,590 --> 00:06:11,510
es tomar las 100 maneras que

182
00:06:11,820 --> 00:06:13,210
encontraste con los datos de agrupamiento y

183
00:06:13,800 --> 00:06:16,050
elegirás la que nos dé el costo más bajo.

184
00:06:16,400 --> 00:06:18,480
Esto también nos da la menor distorsión.

185
00:06:18,960 --> 00:06:20,610
Resulta que si usted está

186
00:06:21,170 --> 00:06:22,490
estás ejecutando K-means con un número

187
00:06:22,670 --> 00:06:24,520
relativamente pequeño de

188
00:06:24,630 --> 00:06:25,260
agrupamientos. Si el número de

189
00:06:25,520 --> 00:06:26,700
agrupamientos está entre 2 y

190
00:06:26,760 --> 00:06:28,180
10, realizar un inicio

191
00:06:28,980 --> 00:06:30,650
múltiple aleatorio puede

192
00:06:31,460 --> 00:06:32,880
asegurarte que encontrarás la

193
00:06:32,990 --> 00:06:34,430
óptima local más adecuada.

194
00:06:34,690 --> 00:06:37,680
Cerciórate de encontrar los mejores datos de agrupamiento.

195
00:06:37,870 --> 00:06:38,930
Si “K” es muy grande o

196
00:06:39,080 --> 00:06:40,000
mucho mayor de 10,

197
00:06:40,160 --> 00:06:41,010
o si “K” fuera enorme y

198
00:06:41,080 --> 00:06:42,340
estuviera intentando

199
00:06:42,400 --> 00:06:44,050
encontrar cientos de agrupamientos, entonces,

200
00:06:45,840 --> 00:06:47,310
realizar el inicio aleatorio múltiple

201
00:06:47,940 --> 00:06:49,220
no será una gran ventaja sino que

202
00:06:49,360 --> 00:06:50,400
tendrás una probabilidad

203
00:06:50,590 --> 00:06:51,910
más alta de que tu

204
00:06:52,320 --> 00:06:53,610
inicio aleatorio te

205
00:06:53,730 --> 00:06:55,380
de una solución decente.

206
00:06:56,590 --> 00:06:58,070
En cambio, realizar inicios múltiples

207
00:06:58,680 --> 00:07:00,060
aleatorios

208
00:07:00,260 --> 00:07:02,500
te dará una solución ligeramente mejor, pero no mucho.

209
00:07:02,780 --> 00:07:04,230
En el régimen en el que tenemos una

210
00:07:04,540 --> 00:07:05,810
cantidad relativamente pequeña

211
00:07:06,090 --> 00:07:07,740
de agrupamientos, especialmente si tienes

212
00:07:08,040 --> 00:07:09,080
dos, tres o cuatro agrupamientos, el

213
00:07:09,150 --> 00:07:10,550
inicio aleatorio

214
00:07:11,140 --> 00:07:13,790
sí puede hacer una diferencia enorme

215
00:07:14,190 --> 00:07:15,090
en cuanto al trabajo que puedes

216
00:07:15,170 --> 00:07:16,920
realizar minimizando la función de

217
00:07:17,560 --> 00:07:18,730
distorsión y obteniendo un buen agrupamiento.

218
00:07:21,390 --> 00:07:22,560
Esto fue K-means

219
00:07:22,640 --> 00:07:23,300
con un inicio aleatorio.

220
00:07:24,350 --> 00:07:25,570
Si estás intentando aprender

221
00:07:25,710 --> 00:07:26,950
un agrupamiento con un número relativamente

222
00:07:27,310 --> 00:07:28,250
bajo de agrupamientos (2, 3, 4, 5, tal

223
00:07:28,400 --> 00:07:30,540
vez 6, o 7) utilizar inicios

224
00:07:31,660 --> 00:07:34,040
múltiples aleatorios

225
00:07:34,380 --> 00:07:36,830
puede ayudarte a encontrar datos de agrupamiento mucho mejores.

226
00:07:37,680 --> 00:07:39,650
Aún si estás aprendiendo un gran número de agrupamientos, el método de inicio aleatorio

227
00:07:40,350 --> 00:07:43,280
que describí aquí debería darle a K-means

228
00:07:43,520 --> 00:07:45,110
un punto de partida razonable para

229
00:07:45,370 --> 00:07:46,680
iniciar para

230
00:07:47,030 --> 00:07:48,580
buscar buenos conjuntos de agrupamientos.