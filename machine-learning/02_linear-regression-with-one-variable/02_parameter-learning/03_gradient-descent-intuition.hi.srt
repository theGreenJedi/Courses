1
00:00:00,190 --> 00:00:01,190
पिछले वीडियो में,

2
00:00:01,190 --> 00:00:04,960
हमने दी एक गणितीय परिभाषा ग्रेडीयंट डिसेंट की.

3
00:00:04,960 --> 00:00:08,830
चलो जाते हैं गहराई में और इस वीडियो में लेते है और भी बेहतर अनुभव कि अल्गोरिद्म

4
00:00:08,830 --> 00:00:12,580
क्या कर रहा है और क्यों ग्रेडीयंट डिसेंट अल्गोरिद्म के स्टेप्स उचित लगते हैं.

5
00:00:15,430 --> 00:00:19,580
यहाँ है एक ग्रेडीयंट डिसेंट अल्गोरिद्म जो हमने देखा पिछली बार और

6
00:00:19,580 --> 00:00:25,800
सिर्फ आपको याद दिलाने के लिए यह पेरामिटर, या यह टर्म अल्फा को लर्निंग रेट कहते हैं.

7
00:00:25,800 --> 00:00:30,620
और यह नियंत्रित करता है कि कितना बड़ा स्टेप हम लें जब अपडेट कर रहे हैं पेरामिटर थीटा जे.

8
00:00:31,660 --> 00:00:36,406
और यह दूसरी टर्म यहाँ है डेरिवेटिव टर्म

9
00:00:39,147 --> 00:00:43,904
और इस वीडियो में मैं क्या करना चाहता हूँ कि दूँ आपको अनुभव कि क्या प्रत्येक इन

10
00:00:43,904 --> 00:00:49,281
टर्म्ज़ में से कर रही हैं और क्यों जब एक साथ रखी जाती हैं, यह पूरा अपडेट उचित लगता है.

11
00:00:49,281 --> 00:00:55,054
व्यक्त करने के लिए ये अनुभव, मैं क्या करूँगा कि इस्तेमाल करूँगा एक थोड़ा सरल

12
00:00:55,054 --> 00:01:00,403
उदाहरण, जहाँ हम न्यूनतम करना चाहते हैं सिर्फ़ एक पेरामिटर के फ़ंक्शन को.

13
00:01:00,403 --> 00:01:03,930
तो हम कहते हैं हमारे पास है एक कॉस्ट फ़ंक्शन, जे केवल एक पेरामिटर का,

14
00:01:03,930 --> 00:01:09,410
थीटा एक, जैसे हमने किया था कुछ वीडियोस पहले, जहाँ थीटा एक है एक रियल नम्बर.

15
00:01:09,410 --> 00:01:14,410
तो हम कर सकते हैं एक डिमेन्शन के प्लॉट, जो थोड़े ज़्यादा सरल हैं समझने के लिए.

16
00:01:14,410 --> 00:01:17,360
चलो कोशिश करते हैं समझने की कि ग्रेडीयंट डिसेंट क्या करेगा इस फ़ंक्शन पर.

17
00:01:20,850 --> 00:01:26,980
तो मान लो, यहाँ है मेरा फ़ंक्शन, जे ऑफ़ थीटा 1.

18
00:01:26,980 --> 00:01:28,550
और तो वह है मेरा.

19
00:01:28,550 --> 00:01:31,505
और जहां थीटा 1 एक रियल नम्बर है.

20
00:01:32,635 --> 00:01:33,755
ठीक है?

21
00:01:33,755 --> 00:01:39,605
अब, चलो इस स्लाइड में शुरू करते हैं ग्रेडीयंट डिसेंट थीटा एक के साथ इस स्थान से.

22
00:01:39,605 --> 00:01:43,085
तो कल्पना करें कि हम शुरू करते हैं उस पोईँट से मेरे फ़ंक्शन पर.

23
00:01:44,495 --> 00:01:48,105
ग्रेडीयंट डिसेंट क्या करेगा कि यह अपडेट करेगा.

24
00:01:49,570 --> 00:01:54,719
थीटा एक अपडेट होता है ऐसे, थीटा वन माइनस अल्फ़ा टाइम्ज़

25
00:01:54,719 --> 00:02:01,940
डी डी थीटा वन जे ऑफ़ थीटा वन, सही?

26
00:02:01,940 --> 00:02:09,140
और सिरफ थोड़ा हट के, यह डेरिवेटिव टर्म, ठीक है, यदि आप

27
00:02:09,140 --> 00:02:13,170
सोच रहे हैं कि क्यों मैंने बदल दी नोटेशन इस पर्शियल डेरिवेटिव चिन्हों की.

28
00:02:13,170 --> 00:02:16,280
यदि आप नहीं जानते कि क्या फर्क है इन पर्शियल डेरिवेटिव चिन्हों

29
00:02:16,280 --> 00:02:18,490
और डी डी थीटा में, इसके बारे में चिंता मत करो॰

30
00:02:18,490 --> 00:02:22,000
तकनीकी तौर पर गणित के क्षेत्र में आप कहते हैं इसे एक पर्शियल डेरिवेटिव और

31
00:02:22,000 --> 00:02:27,170
कहते हैं इसे एक डेरिवेटिव, निर्भर करते हुए संख्या पर पेरमिटर्स की फ़ंक्शन जे में.

32
00:02:27,170 --> 00:02:28,690
लेकिन यह है कि एक गणितीय परिभाषा.

33
00:02:28,690 --> 00:02:32,000
और इसलिए इस लेक्चर के प्रयोजन के लिए,

34
00:02:32,000 --> 00:02:36,430
सोचें इन पर्शियल चिन्हों और डी, डी थीटा 1, वास्तव में एक ही चीज़.

35
00:02:36,430 --> 00:02:38,650
और क्या असली फर्क है के बारे में चिंता मत करें.

36
00:02:38,650 --> 00:02:42,340
मैं कोशिश करूँगा इस्तेमाल करने की गणितीय रूप मैं सही नोटेशन, लेकिन

37
00:02:42,340 --> 00:02:46,550
हमारे लिए ये दोनो नोटेशन वास्तव में एक ही चीज़ हैं.

38
00:02:46,550 --> 00:02:48,890
तो चलो देखते हैं कि यह इक्वेज़न क्या करेगी.

39
00:02:48,890 --> 00:02:53,470
तो हम करेंगे कम्प्यूट ये डेरिवेटिव, निश्चित नहीं हूँ कि आपने देखें हैं डेरिवेटिव

40
00:02:53,470 --> 00:02:57,460
कैल्क्युलुस में पहले, लेकिन डेरिवेटिव इस पोईँट पर क्या करता है, यह मूलत: बताता है,

41
00:02:57,460 --> 00:03:02,380
चलो लेते हैं एक स्पर्श रेखा उस पोईँट पर, जैसे वह सीधी रेखा, वह लाल रेखा,

42
00:03:02,380 --> 00:03:06,480
जो सिर्फ़ छू रही है इस फ़ंक्शन को, और चलो देखते हैं स्लोप इस लाल रेखा की.

43
00:03:06,480 --> 00:03:07,870
वह है जो डेरिवेटिव है,

44
00:03:07,870 --> 00:03:11,890
यह बताता है क्या है स्लोप रेखा की जो है सिर्फ़ स्पर्श रेखा फ़ंक्शन को.

45
00:03:11,890 --> 00:03:17,278
ठीक है, एक लाइन की स्लोप है सिर्फ यह ऊंचाई विभाजित की गई इस हॉरिज़ॉंटल वैल्यू से.

46
00:03:17,278 --> 00:03:22,780
अब, इस रेखा की है पॉज़िटिव स्लोप,

47
00:03:22,780 --> 00:03:26,690
तो इसका है पॉज़िटिव डेरिवेटिव.

48
00:03:26,690 --> 00:03:30,370
और इसलिए मेरा अपडेट थीटा को होगा थीटा 1,

49
00:03:30,370 --> 00:03:35,813
यह अपडेट होता है ऐसे, थीटा 1 माइनस अल्फ़ा टाइम्ज़ कोई पॉज़िटिव संख्या.

50
00:03:39,296 --> 00:03:40,271
ठीक है.

51
00:03:40,271 --> 00:03:43,300
अल्फ़ा है लर्निंग रेट, वह हमेशा एक पॉज़िटिव नम्बर है.

52
00:03:43,300 --> 00:03:47,220
और, इसलिए हम लेंगे थीटा 1 जो अपडेट होगा थीटा वन माइनस कुछ वैल्यू.

53
00:03:47,220 --> 00:03:49,910
तो मैं स्थान परिवर्तन करूँगा थीटा एक का बाईं तरफ़.

54
00:03:49,910 --> 00:03:53,350
मैं कम करूँगा थीटा एक, और हम देख सकते हैं यह है सही

55
00:03:53,350 --> 00:03:55,810
काम क्योंकि मैं वास्तव में उस दिशा में जाना चाहता हूँ.

56
00:03:55,810 --> 00:03:59,490
आप जानते हैं, मुझे नज़दीक जाने के लिए न्यूनतम पर वहाँ.

57
00:04:00,810 --> 00:04:04,060
तो, ग्रेडीयंट डिसेंट अब तक कहता है कि हम सही काम कर रहे हैं.

58
00:04:04,060 --> 00:04:06,120
चलो एक और उदाहरण पर नजर डालते हैं.

59
00:04:06,120 --> 00:04:10,330
तो लेते हैं मेरा वही फ़ंक्शन जे, प्रयास करते हैं बनाने का वही फ़ंक्शन,

60
00:04:10,330 --> 00:04:11,530
जे ऑफ़ थीटा 1.

61
00:04:11,530 --> 00:04:16,140
और अब, मान लो मैं कहता हूँ ईनिशीयलाइज करें मेरा पेरामिटर वहाँ बाईं तरफ़.

62
00:04:16,140 --> 00:04:17,740
तो थीटा 1 यहाँ है.

63
00:04:17,740 --> 00:04:19,240
मैं देखता हूँ उस पोईँट को सतह पर.

64
00:04:20,650 --> 00:04:25,680
अब मेरी डेरिवेटिव टर्म डी वी थीटा वन जे ऑफ़ थीटा वन जब आप वैल्यू डालते हैं

65
00:04:25,680 --> 00:04:31,420
कि यह पोईँट, हम देखेंगे दाईं तरफ़ स्लोप उस लाइन की,

66
00:04:31,420 --> 00:04:34,580
तो यह डेरिवेटिव टर्म है स्लोप इस लाइन की.

67
00:04:34,580 --> 00:04:37,644
लेकिन यह लाइन है नीचे झुकी हुई, इसलिए इस लाइन की स्लोप नेगेटिव है.

68
00:04:41,021 --> 00:04:41,990
सही 

69
00:04:41,990 --> 00:04:45,880
या वैकल्पिक रूप से, मैं कहता हूँ कि इस फ़ंक्शन का नेगेटिव डेरिवेटिव है,

70
00:04:45,880 --> 00:04:48,220
मतलब है सिर्फ़ कि नेगेटिव स्लोप है उस पोईँट पर.

71
00:04:48,220 --> 00:04:54,690
तो यह कम है या बराबर है 0 के, इसलिए जब मैं थीटा अपडेट करता हूँ, मुझे मिलेगा थीटा.

72
00:04:54,690 --> 00:04:59,100
सिर्फ़ अपडेट करें इसे थीटा माइनस अल्फ़ा टाइम्ज़ एक नेगेटिव नम्बर.

73
00:05:02,380 --> 00:05:07,460
और इसलिए मुझे मिलता है थीटा 1 माइनस एक नेगेटिव नम्बर जिसका मतलब है मैं वास्तव में बढ़ाऊँगा

74
00:05:07,460 --> 00:05:11,210
थीटा को, क्योंकि यह है माइनस एक नेगेटिव नम्बर का,

75
00:05:11,210 --> 00:05:12,840
इसका मतलब है मैं थीटा में कुछ जोड़ रहा हूँ.

76
00:05:12,840 --> 00:05:16,640
और क्या इसका मतलब है कि मुझे मिलेगा बढ़ा हुआ थीटा

77
00:05:16,640 --> 00:05:21,110
जब तक यह यहाँ नही आता, बढ़ाना थीटा प्रतीत होता है ऐसा जो मैं चाहता था

78
00:05:21,110 --> 00:05:24,270
करना ताकि मैं पहुँच सकूँ नज़दीक न्यूनतम के.

79
00:05:26,430 --> 00:05:31,600
तो यह है सिद्धांत पूरा इस अनुभव के पीछे कि एक डेरिवेटिव क्या करता है,

80
00:05:31,600 --> 00:05:36,250
चलो डालते हैं एक नज़र रेट टर्म अल्फ़ा पर और देखते हैं कि वह क्या करता है.

81
00:05:38,090 --> 00:05:42,330
तो यहाँ है मेरा ग्रेडीयंट डिसेंट अपडेट, वह है यह इक्वेज़न.

82
00:05:43,890 --> 00:05:48,440
और चलो देखते हैं क्या हो सकता है यदि अल्फ़ा है या तो बहुत छोटा या

83
00:05:48,440 --> 00:05:50,740
यदि अल्फ़ा है बहुत बड़ा.

84
00:05:50,740 --> 00:05:54,200
तो यह है पहला उदाहरण, क्या होता है यदि अल्फ़ा बहुत छोटा है?

85
00:05:54,200 --> 00:05:59,228
तो, यहाँ है मेरा फ़ंक्शन जे, जे ऑफ़ थीटा.

86
00:05:59,228 --> 00:06:02,460
चलो यहाँ से शुरू करते हैं.

87
00:06:02,460 --> 00:06:06,920
अगर अल्फा बहुत छोटा है, तो मैं करूँगा गुणा मेरे

88
00:06:06,920 --> 00:06:11,220
अपडेट को एक कोई छोटी संख्या से, तो मिलेगा एक छोटा स्टेप उस तरह का.

89
00:06:11,220 --> 00:06:13,350
ठीक है, तो यह एक स्टेप है.

90
00:06:13,350 --> 00:06:16,520
फिर इस नए पोईँट से, मुझे लेना होगा एक और स्टेप.

91
00:06:16,520 --> 00:06:19,690
लेकिन यदि अल्फा बहुत छोटा है, तो मैं लूँगा एक और छोटा स्टेप.

92
00:06:19,690 --> 00:06:26,530
और यदि मेरी लर्निंग रेट बहुत छोटी है, मैं कर पाऊँगा

93
00:06:26,530 --> 00:06:31,770
लेना ये छोटे छोटे क़दम पहुँचने के लिए नज़दीक न्यूनतम के.

94
00:06:31,770 --> 00:06:35,380
और मुझे चाहिए होंगे बहुत से स्टेप न्यूनतम तक जाने के लिए और इसलिए

95
00:06:35,380 --> 00:06:38,980
यदि अल्फ़ा बहुत छोटा है, ग्रेडीयंट डिसेंट कर सकता है धीमी प्राग्रेस क्योंकि यह

96
00:06:38,980 --> 00:06:40,880
लेगा ये छोटे छोटे क़दम और इसलिए

97
00:06:40,880 --> 00:06:44,830
इसे चाहिए होंगे बहुत से स्टेप इस से पहले कि यह पहुँचे कहीं नज़दीक ग्लोबल मिनिमम के.

98
00:06:46,750 --> 00:06:49,460
अब सोचो यदि अल्फ़ा है बहुत बड़ा तो कैसा हो?

99
00:06:49,460 --> 00:06:54,880
तो, यहाँ है मेरा फ़ंक्शन जे ऑफ़ थीटा, ऐसा है कि थीटा बहुत बड़ा है,

100
00:06:54,880 --> 00:06:59,180
तब ग्रेडीयंट डिसेंट शायद पार कर जाए मिनिमम और शायद न भी कर पाए कन्वर्ज या

101
00:06:59,180 --> 00:07:00,910
यहाँ तक कि डाईवर्ज हो जाए, तो यहाँ है के मेरा क्या मतलब है.

102
00:07:00,910 --> 00:07:04,170
मान लो हमारा सारा डेटा वहाँ है, जो वास्तव में नज़दीक है न्यूनतम के.

103
00:07:04,170 --> 00:07:07,430
तो डेरिवेटिव इंगित करता है दाईं तरफ़, लेकिन यदि अल्फ़ा बहुत बड़ा है,

104
00:07:07,430 --> 00:07:09,060
मैं लूँगा एक बहुत बड़ा स्टेप.

105
00:07:09,060 --> 00:07:10,820
याद रखें, लेना एक बहुत बड़ा स्टेप उस तरह.

106
00:07:10,820 --> 00:07:14,980
तो यह लेता है एक बहुत बड़ा स्टेप, और अब मेरे फ़ंक्शन की हैं मज़बूत जड़ें.

107
00:07:14,980 --> 00:07:19,390
क्योंकि यह शुरू होता है इस वैल्यू से, और अब मेरी वैल्यूज़ हैं बड़ी.

108
00:07:19,390 --> 00:07:22,872
अब मेरा डेरिवेटिव इंगित करता है बाईं तरफ़, यह बताता है मुझे काम करना चाहिए थीटा.

109
00:07:22,872 --> 00:07:25,070
लेकिन यदि मेरी लर्निंग रेट बहुत बड़ी है,

110
00:07:25,070 --> 00:07:27,930
मैं शायद लूँगा एक बड़ा स्टेप और जाता हूँ यहाँ से दूर वहाँ.

111
00:07:27,930 --> 00:07:31,560
तो हम पहुँचते है वहाँ, ठीक है?

112
00:07:31,560 --> 00:07:35,020
और यदि मेरी लर्निंग रेट बहुत बड़ी है, हम ले सकते हैं एक और बहुत बड़ा स्टेप अगली आइटरेशन में और

113
00:07:35,020 --> 00:07:39,950
एक प्रकार से पार कर जाते और फिर पार कर जाते है और इसी प्रकार करते रहते हैं, जब तक कि आप ध्यान दें

114
00:07:39,950 --> 00:07:44,170
मैं वास्तव में लगातार न्यूनतम से दूर हो रहा हूँ.

115
00:07:44,170 --> 00:07:49,530
तो अगर अल्फा बड़ा है, यह कन्वर्ज नहीं भी हो सकता और शायद डाईवर्ज हो सकता है.

116
00:07:49,530 --> 00:07:52,170
अब, मेरे पास आपके लिए एक सवाल है.

117
00:07:52,170 --> 00:07:55,870
तो यह एक थोड़ा मुश्किल सवाल है और जब मैं पहली बार यह सीख रहा था मुझे लगा था

118
00:07:55,870 --> 00:07:57,020
काफ़ी समय इसे समझने में.

119
00:07:57,020 --> 00:08:00,740
क्या होगा यदि आपका पेरामिटर थीटा 1 है पहले से ही लोकल न्यूनतम पर,

120
00:08:00,740 --> 00:08:03,420
क्या आपको लगता है कि एक स्टेप ग्रेडीयंट डिसेंट का क्या करेगा?

121
00:08:06,520 --> 00:08:10,260
तो मान लो आप ईनिशीयलाइज करते हैं थीटा 1 को लोकल न्यूनतम पर.

122
00:08:10,260 --> 00:08:15,580
तो, मान लो यह है आपकी प्रारम्भिक वैल्यू थीटा 1 की यहाँ पर और

123
00:08:15,580 --> 00:08:18,630
है पहले से ही एक लोकल ओप्टिमम पर या लोकल मिनिमम पर.

124
00:08:19,960 --> 00:08:23,280
ऐसा हुआ कि लोकल ओप्टिमम पर, आपकी डेरिवेटिव टर्म होगा ज़ीरो.

125
00:08:23,280 --> 00:08:29,070
तो उस स्लोप के लिए, वह स्पर्श-रेखा पोईँट, तो स्लोप इस लाइन की

126
00:08:29,070 --> 00:08:36,370
होगी ज़ीरो और इसलिए यह डेरिवेटिव टर्म होगी ज़ीरो.

127
00:08:36,370 --> 00:08:38,430
और इसलिए आपका ग्रेडीयंट डिसेंट अपडेट करेगा,

128
00:08:38,430 --> 00:08:43,970
आपके पास होगा थीटा वन क्योंकि यह अपडेट हुआ थीटा वन माइनस अल्फ़ा टाइम्ज़ ज़ीरो.

129
00:08:43,970 --> 00:08:48,780
तो यह है इसका मतलब कि यदि आप पहले से ही लोकल मिनिमम पर है यह रखता है

130
00:08:48,780 --> 00:08:54,680
थीटा 1 बिना बदले क्योंकि यह अपडेट करता है थीटा 1 ईक्वल्ज़ थीटा 1.

131
00:08:54,680 --> 00:08:57,830
तो यदि आपके पेरामिटर्स है पहले से ही लोकल न्यूनतम पर, एक

132
00:08:57,830 --> 00:09:00,980
स्टेप ग्रेडीयंट डिसेंट का बिल्कुल कुछ नहीं करता यह नहीं बदलता है आपके पेरामिटर

133
00:09:00,980 --> 00:09:04,830
जो आप चाहते हैं क्योंकि यह रखता है आपका हल लोकल मिनिमम ओप्टिमम पर.

134
00:09:05,970 --> 00:09:09,860
इससे स्पष्ट भी होता है क्यों ग्रेडीयंट डिसेंट कन्वर्ज हो सकता है लोकल मिनिमम पर

135
00:09:09,860 --> 00:09:13,110
लर्निंग रेट अल्फ़ा निर्धारित रखने के बाद भी.

136
00:09:13,110 --> 00:09:15,570
यहाँ है कि मेरा क्या मतलब है उससे, चलिए देखते है एक उदाहरण.

137
00:09:15,570 --> 00:09:20,570
तो, यहाँ है मेरा फ़ंक्शन जे ऑफ़ थीटा

138
00:09:20,570 --> 00:09:24,750
जो शायद में चाहता हूँ न्यूनतम करना और मान लो में इनिशियलाइज करता हूँ मेरा अल्गोरिद्म,

139
00:09:24,750 --> 00:09:29,040
मेरा ग्रेडीयंट डिसेंट अल्गोरिद्म, वहाँ उस मजेंटा पोईँट पर.

140
00:09:29,040 --> 00:09:33,060
यदि मैं लेता हूँ एक स्टेप ग्रेडीयंट डिसेंट में, शायद यह मुझे ले जाएगा उस पोईँट पर,

141
00:09:33,060 --> 00:09:34,770
क्योंकि मेरे डेरिवेटिव्स हैं काफ़ी स्टीप / तीव्र ढलान वाले वहाँ पर.

142
00:09:34,770 --> 00:09:36,020
ठीक?

143
00:09:36,020 --> 00:09:41,130
अब, मैं यहाँ हरे पोईँट पर हूँ, और यदि मैं लेता हूँ एक और स्टेप ग्रेडीयंट डिसेंट में,

144
00:09:41,130 --> 00:09:45,740
आप ध्यान दें कि मेरे डेरिवेटिव मतलब स्लोप, है कम स्टीप

145
00:09:45,740 --> 00:09:49,470
हरे पोईँट पर तुलना में उस मजेंटा पोईँट के वहाँ.

146
00:09:49,470 --> 00:09:54,060
क्योंकि जैसे जैसे मैं क़रीब पहुँचता हूँ न्यूनतम के, मेरे डेरिवेटिव होते जाते हैं क़रीब ज़ीरो के,

147
00:09:54,060 --> 00:09:57,570
जैसे मैं पहुँचता हूँ न्यूनतम पर.

148
00:09:57,570 --> 00:10:02,350
तो एक क़दम डिसेंट के बाद, मेरे नए डेरिवेटिव हैं थोड़े छोटे.

149
00:10:02,350 --> 00:10:04,890
तो मैं लेता हूँ एक और स्टेप ग्रेडीयंट डिसेंट में.

150
00:10:04,890 --> 00:10:08,910
मैं स्वाभाविक रूप से लूँगा एक छोटा स्टेप इस हरे पोईँट से तुलना में

151
00:10:08,910 --> 00:10:11,290
उस मजेंटा पोईँट से.

152
00:10:11,290 --> 00:10:15,030
आप एक नए पोईँट से, एक लाल पोईँट, और मैं और भी नज़दीक ग्लोबल न्यूनतम के तो

153
00:10:15,030 --> 00:10:19,390
डेरिवेटिव यहाँ होगा और भी छोटा तुलना में जो यह था हरे पोईँट पर.

154
00:10:19,390 --> 00:10:21,050
तो मैं लेता हूँ एक और स्टेप ग्रेडीयंट डिसेंट में.

155
00:10:22,280 --> 00:10:26,560
अब, मेरी डेरिवेटिव टर्म है और भी छोटी और इसलिए परिमाण / मैग्निटूड

156
00:10:26,560 --> 00:10:31,700
थीटा वन के अपडेट का है और भी छोटा, तो लें एक छोटा स्टेप इस तरह.

157
00:10:31,700 --> 00:10:36,630
और जैसे ग्रेडीयंट डिसेंट रन करता है, आप

158
00:10:36,630 --> 00:10:40,870
अपने आप लेंगे छोटे और छोटे स्टेप.

159
00:10:41,880 --> 00:10:45,230
जब तक अंत में आप लेंगे बहुत ही छोटे स्टेप, आप जानते हैं, और

160
00:10:45,230 --> 00:10:48,990
आप अंत में कन्वर्ज करेंगे लोकल मिनिमम पर.

161
00:10:50,270 --> 00:10:55,580
तो पुनरावृति के लिए, ग्रेडीयंट डिसेंट में जैसे हम पहुँचते है एक लोकल मिनिमम पर,

162
00:10:55,580 --> 00:10:58,290
ग्रेडीयंट डिसेंट अपने आप लेगा छोटे स्टेप.

163
00:10:58,290 --> 00:11:01,060
और वह इसलिए क्योंकि जैसे हम पहुँचते है लोकल मिनिमम पर,

164
00:11:01,060 --> 00:11:06,110
परिभाषा से लोकल मिनिमम है जहाँ डेरिवेटिव है बराबर ज़ीरो.

165
00:11:06,110 --> 00:11:10,450
जैसे हम पहुँचते हैं लोकल मिनिमम पर, यह डेरिवेटिव टर्म अपने आप हो जाएगी

166
00:11:10,450 --> 00:11:16,720
छोटी, और इसलिए ग्रेडीयंट डिसेंट अपने आप लेगा छोटे स्टेप.

167
00:11:16,720 --> 00:11:21,140
ऐसा है इसलिए कोई आवश्यकता नहीं है अल्फ़ा को कम करने की या समय.

168
00:11:22,810 --> 00:11:27,840
तो वह है ग्रेडीयंट डिसेंट अल्गोरिद्म और आप इस्तेमाल कर सकते हैं इसे करने के लिए न्यूनतम

169
00:11:27,840 --> 00:11:32,940
किसी भी कॉस्ट फ़ंक्शन जे को, नहीं कॉस्ट फ़ंक्शन जे जो हमने परिभाषित किया था लिनीअर रेग्रेशन के लिए.

170
00:11:32,940 --> 00:11:35,720
अगले वीडियो में हम लेंगे फ़ंक्शन जे और

171
00:11:35,720 --> 00:11:39,350
सेट करेंगे उसे वापिस उसी लिनीअर रेग्रेशन के कॉस्ट फ़ंक्शन पर,

172
00:11:39,350 --> 00:11:42,140
स्क्वेर कॉस्ट फ़ंक्शन जो हमने पहले बनाया था.

173
00:11:42,140 --> 00:11:46,210
और लेंगे ग्रेडीयंट डिसेंट फ़ंक्शन और यह कॉस्ट फ़ंक्शन और रखेंगे दोनो को एक साथ.

174
00:11:46,210 --> 00:11:48,830
वह देगा हमें हमारा पहला लर्निंग अल्गोरिद्म.

175
00:11:48,830 --> 00:11:50,750
वह देगा हमें एक लिनीअर रेग्रेशन अल्गोरिद्म.