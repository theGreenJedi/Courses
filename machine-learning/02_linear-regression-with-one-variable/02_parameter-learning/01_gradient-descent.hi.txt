हमने पहले परिभाषित किया था कॉस्ट फ़ंक्शन जे. इस वीडियो में, मैं आप को बताना चाहता हूँ एक अल्गोरिद्म के बारे में जिसे कहते हैं ग्रेडीयंट डिसेंट न्यूनतम / मिनमायज़ करने के लिए कॉस्ट फ़ंक्शन जे को. यह है कि ग्रेडीयंट डिसेंट एक अधिक सार्विक अल्गोरिद्म है, और यह इस्तेमाल होता है न केवल लिनीअर रेग्रेशन में. यह वास्तव में बहुत स्थानों पर इस्तेमाल किया जाता है मशीन लर्निंग में. और बाद में इस क्लास में, हम करेंगे इस्तेमाल ग्रेडीयंट डिसेंट का न्यूनतम करने के लिए अन्य फ़ंक्शन भी, न केवल कॉस्ट फ़ंक्शन जे लिनीअर रेग्रेशन के लिए. तो इस वीडियो में, हम बात करेंगे ग्रेडीयंट डिसेंट की न्यूनतम करने के लिए कोई स्वेच्छित फ़ंक्शन जे और तब बाद के वीडियोज़ में, हम लेंगे यह अल्गोरिद्म और अप्लाई करेंगे इसे ख़ासतौर पर कॉस्ट फ़ंक्शन जे पर जो हमने परिभाषित किया हैं. लिनीअर रेग्रेशन के लिए, तो, यह है प्रॉबलम सेटअप. मैं मान कर चलूँगा कि हमारे पास है कोई फ़ंक्शन जे(थीटा 0, अन्य फ़ंक्शन भी, न केवल कॉस्ट फ़ंक्शन जे लिनीअर रेग्रेशन के लिए. शायद यह है कोई अन्य फ़ंक्शन हम करना चाहते हैं न्यूनतम॰ और हम बनाना चाहते हैं एक अल्गोरिद्म न्यूनतम करने के लिए उसे एक फ़ंक्शन जे(थीटा 0, थीटा 1) की तरह. एक अलग रूप से, ऐसा है कि ग्रेडीयंट डिसेंट वास्तव में अप्लाई करता है और अधिक सार्विक फ़ंक्शन्स को. तो कल्पना करें, यदि आपके पास एक फ़ंक्शन हैं जो है एक फ़ंक्शन जे, थीटा 0, थीटा 1, थीटा 2 मान लो थीटा एन तक का, और आप न्यूनतम करना चाहते हैं थीटा 0. आप न्यूनतम करते हैं थीटा 0 से थीटा एन पर इस जे ऑफ़ थीटा 0 से थीटा एन तक. यह है कि ग्रेडीयंट डिसेंट है एक अल्गोरिद्म हल करने के लिए इस अधिक सार्विक प्रॉब्लम को. लेकिन संक्षिप्तता की खातिर, नोटेशन की संक्षिप्तता की ख़ातिर, मैं सिर्फ़ मान कर चलूँगा कि मेरे पास हैं केवल दो पेरमिटर्स बाक़ी के इस वीडियो में. यहाँ है सुझाव ग्रेडीयंट डिसेंट के लिए. हम क्या करेंगे कि शुरुआत करेंगे कुछ प्रारम्भिक अनुमानों की थीटा 0 और थीटा 1 के लिए. वास्तव में कोई अंतर नहीं पड़ता कि वे क्या हैं, लेकिन एक आम चुनाव होगा कि हम सेट करें थीटा 0 को 0, और थीटा 1 को 0, बस ईनिशीयलाइज करें उन्हें 0 पर. हम क्या करेंगे ग्रेडीयंट डिसेंट में कि हम बदलते रहेंगे थीटा 0 और थीटा 1 को थोड़ा कम करने की कोशिश में जे(थीटा 0, थीटा 1), जब तक उम्मीद है, हम पहुँचते हैं एक न्यूनतम पर, और शायद एक लोकल न्यूनतम पर. तो चलिए तस्वीरों में देखते हैं क्या करता है ग्रेडीयंट डिसेंट. मान लो आप प्रयास कर रहे हो न्यूनतम करने का इस फ़ंक्शन को. तो ध्यान दें ऐक्सिस पर, यह है थीटा 0, थीटा 1 हॉरिज़ॉंटल ऐक्सिस पर, और जे है वर्टिकल ऐक्सिस पर और इसलिए सतह की ऊँचाई दिखाती है जे और हम चाहते हैं न्यूनतम करना इस फ़ंक्शन को. इसलिए हम शुरू करते हैं थीटा 0, थीटा 1 के साथ किसी पोईँट पर. तो कल्पना करें लेने का कुछ वैल्यू थीटा 0, थीटा 1 के लिए, और वह कॉरेस्पॉंड करती शुरू करने से इस फ़ंक्शन की सतह पर किसी पोईँट से. तो जो भी वैल्यू थीटा 0, थीटा 1 की देती है आपको एक पोईँट यहाँ. मैंने ईनिशीयलाइज किया था उन्हें 0, 0 लेकिन कभी कभी आप ईनिशीयलाइज करते हैं उन्हें दूसरी वैल्यूज़ से अब, मैं चाहता हूँ कि आप कल्पना करें कि इस चित्र में एक छेद है. कल्पना करें कि यह है जैसे एक प्रकृतिक दृश्य किसी घास के पार्क का, दो पहाड़ियों के साथ इस तरह, और मैं चाहता हूँ कि हम कल्पना करें कि हम शारीरिक रुप से खड़े हो उस स्थान पर पहाड़ी पर, उस छोटी लाल पहाड़ी पर आपके पार्क में. ग्रेडीयंट डिसेंट में, हम क्या करते हैं कि हम स्पिन करते हैं 360 डिग्री आसपास, बस अपने चारों तरफ़ देखते हैं, और पूछते है, कि क्या मैं ले पाया एक छोटा क़दम किसी दिशा में, और मैं जाना चाहता हूँ पहाड़ी से नीचे जितनी जल्दी सम्भव हो सके, किस दिशा में मैं लूँ वह छोटा क़दम? यदि में नीचे जाना चाहता हूँ, तो मैं चलना चाहता हूँ शारीरिक रुप से नीचे इस पहाड़ी से जितनी जल्दी सम्भव हो. ऐसा हुआ, कि यदि आप खड़े है उस पोईँट पर पहाड़ी के, आप देखते हैं चारों तरफ़ और आप पाते हैं कि सबसे अच्छी दिशा कि लें एक छोटा क़दम नीचे की ओर लगभग उस ओर. ठीक है, और अब आप हैं इस नए पोईँट पर आपकी पहाड़ी के. आप, देखेंगे, फिर से, चारों ओर और कहेंगे किस दिशा में मैं लूँ वह छोटा क़दम नीचे की ओर? और यदि आप वह करते हैं और लेते हैं एक और क़दम, आप लेते हैं उस ओर. और तब आप जाते रहते हैं. इस नए पोईँट से आप देखते हैं चारों ओर, तय करते हैं कौन सी दिशा ले जाएगी आपको नीचे सबसे अधिक शीघ्र. लें एक और क़दम, एक और क़दम, और करते रहें जब तक पहुँच जाते हैं इस लोकल न्यूनतम पर नीचे यहाँ. ग्रेडीयंट डिसेंट का एक दिलचस्प गुण है. जब हमने पहली बार चलाया ग्रेडीयंट डिसेंट हम शुरू कर रहे थे इस पोईँट पर यहाँ, सही? शुरू किया उस पोईँट पास यहाँ. अब कल्पना करें हमने ईनिशीयलाइज किया था ग्रेडीयंट डिसेंट सिर्फ़ कुछ क़दम दाईं तरफ़. कल्पना करें हमने ईनिशीयलाइज किया था ग्रेडीयंट डिसेंट उस पोईँट से ऊपर दाईं तरफ़. यदि आपको दोहराना होता इस प्रक्रिया को, तो शुरू करें उस पोईँट से, देखें चारों ओर, लें छोटा क़दम अत्यधिक ढलान की दिशा में, आप करेंगे वह. फिर देखें चारों ओर, लें एक और क़दम, और ऐसे करते रहें. और यदि आप शुरू करते सिर्फ़ कुछ क़दम दाईं तरफ़ से, ग्रेडीयंट डिसेंट ले गया होता आपको दूसरे लोकल ओप्टिमम पर दाईं तरफ़. तो यदि अपने शुरू किया होता इस पहले पोईँट से, आप पहुँचते इस लोकल ओप्टिमम पर, लेकिन यदि आप शुरू करते एक थोड़े भिन्न स्थान से, आप पहुँचते एक बहुत अलग लोकल ओप्टिमम पर. और यह है एक गुण ग्रेडीयंट डिसेंट का जिसकी हम बात करेंगे थोड़ी और बाद में. तो यह है अनुभव चित्रों में. चलिए देखते हैं गणित पर. यह है परिभाषा ग्रेडीयंट डिसेंट अल्गोरिद्म की. हम केवल करेंगे इसे बार-बार जब तक यह कन्वर्ज नहीं होता, हम करेंगे अपडेट मेरे पेरमिटर्स थीटा जे लेकर थीटा जे और घटाकर अल्फ़ा टाइम्ज़ यह टर्म यहाँ, ठीक है? तो चलो देखते है, इस इक्वेज़न में काफ़ी सारी विस्तृत जानकारी है तो चलो मैं कुछ खोल कर बताता हूँ. पहले, यह नोटेशन यहाँ, := , इस्तेमाल करेंगे := का डिनोट करने के लिए असायन्मेंट, तो यह असायन्मेंट ऑपरेटर है. तो संक्षेप में, अगर मैं लिखता हूँ ए : = बी, इसका मतलब क्या है, कंप्यूटर में इसका मतलब है, इसका मतलब है कि लें वैल्यू बी और जो भी वैल्यू ए में है उसके ऊपर लिख दें. तो इसका मतलब है सेट करें ए की वैल्यू बराबर बी की वैल्यू के, जो है असायन्मेंट. और मैं कर सकता हूँ ए:=ए+1 भी. इसका मतलब है लें ए और बढ़ाएँ इसकी वैल्यू एक से. जबकि इसके विपरीत यदि मैं ईक्वल का चिन्ह लेता हूँ और मैंने लिखता हूँ ए ईक्वल्ज़ बी, तब यह है एक ट्रूथ असर्शन. ठीक है? तो यदि मैं लिखता हूँ ए ईक्वल्ज़ बी, तब मैं कहूँगा कि ए वैल्यू बराबर है बी की वैल्यू के, ठीक है? तो बाईं तरफ़, वह है कम्प्यूटर ऑपरेशन, जहाँ हम सेट करते हैं ए की वैल्यू एक नयी वैल्यू पर. दाईं तरफ, यह है असर्शन, मैं सिर्फ़ दावा कर रहा हूँ कि वैल्यूज़ ए और बी की समान है, और तो जबकि आप लिख सकते हैं ए :=ए+1, उसका मतलब है बढ़ाना ए को 1 से, उम्मीद है मैं कभी नहीं लिखूँगा ए = ए + 1 क्योंकि वह ग़लत है. ए और ए+1 कभी भी बराबर नहीं हो सकते समान वैल्यू को. सही है? तो यह है पहला हिस्सा परिभाषा का. यह अल्फ़ा यहाँ है एक नम्बर जिसे कहते हैं लर्निंग रेट. और अल्फ़ा क्या करता है कि यह मूल रूप से नियंत्रित करता है कितना बड़ा क़दम हम लें नीचे की ओर ग्रेडीयंट डिसेंट में. तो यदि अल्फ़ा बहुत बड़ा है, तब उसका मतलब होगा एक बहुत आक्रामक ग्रेडीयंट डिसेंट प्रक्रिया जहाँ हम कोशिश कर रहे हैं बड़े क़दम नीचे की ओर लेने की और अगर अल्फा बहुत छोटा है, तो हम ले रहे हैं, छोटे कदम नीचे की ओर. और मैं वापिस आऊँगा और इस बारे में और बात करूँगा बाद में, कि कैसे सेट करते हैं अल्फ़ा और ऐसे. और अंत में, यह टर्म यहाँ, वह एक डेरिवेटिव टर्म है. मैं अभी इस बारे में बात नहीं करना चाहता, लेकिन मैं डिराइव करूँगा यह डेरिवेटिव टर्म और आपको बताऊँगा कि वास्तव में यह क्या है बाद में, ठीक है? और आप में से कुछ अधिक परिचित होंगे कैल्क्युलुस से दूसरों की अपेक्षा, लेकिन यदि आप नहीं भी हैं परिचित कैल्क्युलुस से, इस बारे में चिंता न करें. मैं आपको बताऊँगा जो आपको जानना जरूरी है इस टर्म के बारे में. अब, एक और सूक्ष्मता है ग्रेडीयंट डिसेंट में जो है ग्रेडीयंट डिसेंट में हम अपडेट करेंगे, आप जानते हैं, थीटा 0 और थीटा 1 को, सही? तो यह अपडेट होता है जे = 0 और जे=1 के लिए, तो आप अपडेट करेंगे थीटा 0 को और अपडेट करेंगे थीटा 1 को. और सूक्ष्मता है कि आप कैसे इम्प्लमेंट करेंगे ग्रेडीयंट डिसेंट को इस इक्स्प्रेशन के लिए, इस अपडेट इक्वेज़न के लिए, आप करना चाहते हैं अपडेट थीटा 0 को और थीटा 1 को एक साथ. उस से मेरा क्या मतलब है कि इस इक्वेज़न में, हम करेंगे अपडेट थीटा 0 : = थीटा 0 माइनस कुछ, और अपडेट करेंगे थीटा 1 := थीटा 1 माइनस कुछ. और तरीक़ा इम्प्लमेंट करने का है कि आपको कम्प्यूट करना चाहिए दाहिना हाथ की तरफ़,ठीक है? कम्प्यूट करें उसे थीटा 0 और थीटा 1 और फिर एक साथ, एक ही समय पर, अपडेट करें थीटा 0 और थीटा 1 को, ठीक है? चलो मैं बताता हूँ मेरा क्या मतलब हैं उस से. यह है सही इम्प्लमेंटेशन ग्रेडीयंट डिसेंट की मतलब एक साथ अपडेट. तो मैं सेट करूँगा टेम्प 0 बराबर उसके, सेट करेंगे टेम्प1 बराबर उसके तो मूलत: कम्प्यूट करें सीधी-हाथ की तरफ़, और कम्प्यूट कर लेने के सीधी-हाथ की तरफ़ और स्टोर करें उन्हें वेरीयबल्स टेम्प 0 और टेम्प 1 में, मैं अपडेट करूँगा थीटा 0 और थीटा 1 एक साथ क्योंकि वह है सही इम्प्लमेंटेशन. इसके विपरीत, यहाँ है एक ग़लत इम्प्लमेंटेशन जो नहीं करती एक साथ अपडेट. तो इस ग़लत इम्प्लमेंटेशन में, हम कम्प्यूट करते हैं टेम्प 0, और तब अपडेट करते हैं थीटा 0, और तब हम कम्प्यूट करते हैं टेम्प, और फिर हम उपडेट करते हैं टेम्प 1. और अंतर बीच में सीधी तरफ़ और और बाएं हाथ की इम्प्लमेंटेशन में है कि यदि आप देखें नीचे यहाँ, आप देखें इस स्टेप को, यदि इस समय तक अपने पहले ही अपडेट कर लिया है थीटा 0, तब आप इस्तेमाल कर रहे होंगे नई वैल्यू थीटा 0 की कम्प्यूट करने के लिए यह डेरिवेटिव टर्म. और इसलिए यह देती है आपको एक भिन्न वैल्यू टेम्प 1 की, तुलना में बाएं हाथ की, सही? क्योंकि आपने अब प्लग-इन की है नई वैल्यू थीटा 0 की इस इक्वेज़न में. और इसलिए, यह दाईं तरफ़ वाला नहीं है एक सही इम्प्लमेंटेशन ग्रेडीयंट डिसेंट की, सही? तो मैं नहीं बताना चाहता कि क्यों करना चाहिए आपको एक साथ अपडेट. यह पता चला है कि जिस तरह से ग्रेडीयंट डिसेंट अक्सर इम्प्लमेंट किया जाता है, जिसके बारे में मैं और बात करूँगा बाद में, ऐसा वास्तव में हुआ है कि यह अधिक स्वाभाविक है इम्प्लमेंट करना एक साथ अपडेट. और जब लोग बात करते हैं ग्रेडीयंट डिसेंट के बारे में, उनका हमेशा मतलब होता है एक साथ अपडेट. यदि आप इम्प्लमेंट करते हैं न एक साथ अपडेट, ऐसा होता है कि वह शायद फिर भी काम करेगा. लेकिन यह अल्गोरिद्म सही नहीं था. वह नहीं है जिसको लोग सम्बोधित करते हैं ग्रेडीयंट डिसेंट, और यह है कोई और अल्गोरिद्म अन्य गुणों वाला. और विभिन्न कारणों के लिए यह पेश आ सकता है कुछ अजीब ढंग से, और इसलिए आपको क्या करना चाहिए कि वास्तव में इम्प्लमेंट करें एक साथ अपडेट ग्रेडीयंट डिसेंट में. तो वह है ढाँचा ग्रेडीयंट डिसेंट अल्गोरिद्म का. अगले वीडियो में, हम विस्तार से बात करेंगे डेरिवेटिव टर्म की, जो मैंने लिखी थी, लेकिन वास्तव में परिभाषित नहीं की थी. और यदि अपने ली है कैल्क्युलुस क्लास पहले और यदि आप परिचित है पर्शियल डेरिवेटिव्स से और डेरिवेटिव से, ऐसा है कि वह है वास्तव में वह डेरिवेटिव टर्म क्या है, लेकिन यदि आप परिचित नहीं है कैल्क्युलुस से, चिंता न करें उसकी. अगला वीडियो देंगा आपको अनुभव और बताएँगे आपको सबकुछ जो आपको जानना चाहिए कम्प्यूट करने के लिए वह डेरिवेटिव टर्म, भले ही आपने नहीं देखा है कैल्क्युलुस, और यहाँ तक की आपने नहीं देखें हैं पर्शियल डेरिवेटिव्स पहले. और उस के साथ, अगले वीडियो के साथ, उम्मीद है कि हम दे पाएँगे आपको सभी अनुभव जो आपको चाहिए अप्लाई करने के लिए ग्रेडीयंट डिसेंट.