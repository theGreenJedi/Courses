前回のビデオで、 最急降下法のアルゴリズムについて話し、 線形回帰のモデルと 二乗誤差のコスト関数についても話した。 このビデオでは、 最急降下法とコスト関数を 両方合わせて、 そこから直線を我らのデータにフィッティングする 線形回帰のアルゴリズムを作ろう。 これは前回のビデオで 我らが作った物だ。 これが我らの最急降下法アルゴリズムで もはやお馴染みとなっただろう。 そしてあなたは、線形回帰のモデルと 線形の仮説、そして二乗誤差のコスト関数も分かってるはず。 今回やろうとしているのは、 最急降下法を、二乗誤差のコスト関数を 最小化するために適用する、という事。 最急降下法を 適用する為には、 このコード片を書く為には、 我らが必要とするキーとなる項は この微分の項だ。 つまり、我らはこの偏微分の項が 何になるのかを知る必要がある。 その為には コスト関数Jの定義を 代入して、 結局、これに、 1からmまでの和を取る事の この二乗誤差の コスト関数の項。 ここでやった事は単に、 コスト関数の定義を ここに代入しただけ。 そしてさらに単純化して、 結局イコール、 これに、1からmまでの和をとる事の、 シータ0 足す シータ1 xi マイナス yi の二乗。 ここでやったのは 仮説の定義を ここに代入した。 結局、我らは 2つのケースについての 偏微分がどうなるかを知る必要がある訳だ。 j=0のケースと、 j=1のケース。 つまり、シータ0と シータ1についての偏微分の 両方が知りたい。 そして直接答えを書いてしまう事にする。 この最初の項は整理すると 1/m 和を取ることの トレーニングセット全体で、 このx(i)、、、引くことの y(i)。 そしてこの項は、シータ1による 偏微分は、結局 この項となる。、、、y(i)と、掛けるx(i)。 オーケー。 これらの偏微分を計算するには つまり、この式から これらの式を導くには 偏微分の項を計算するのに 多変数の解析学がいくらか必要だ。 もし解析学を知ってるなら どうぞご自由に導出してみて、 実際に微分してみて、 さきに挙げた答えと一致するかチェックしてみてくれ。 だが、もしあなたが あんま解析学詳しくないとしても、 気にしないでよろしい。 単にこれらの式を受け入れてもらえば なんの問題も無い。 そうすれば解析学とか、 そういう事を一切知らなくても、 宿題は出来るし、最急降下法も実装出来るし、それを活用する事も出来る。 だがこれらの定義に従えば まあは微分とは何か、という事に 立ち戻ってみれば、 それはコスト関数Jの 単なる勾配に過ぎない。 さて、今や、それら全てを 最急降下法のアルゴリズムに代入する事が出来る。 これが最急降下法、 または回帰で、 これを収束するまで繰り返す。 シータ0とシータ1を 同じ マイナス アルファ 掛ける 微分の項。 つまりこの項。 これが線形回帰のアルゴリズムだ。 といいことでこのような行列が作成されます。 もちろん 対応するシータ0による偏微分の項だ。 前のスライドで見た。 そしてこの二番目の項のこれ、 この項は シータ1による偏微分の項で、 これも前のスライドで既に出した。 ここでちょっと注意を。 最急降下法を実装する時は 実装の詳細な話だが、 シータ0とシータ1を同時に更新するように 実装しなくてはならない。 では最急降下法がどう機能するか見てみよう。 最急降下法で解く場合に疑われる問題としては 局所最適に落ち着いてしまう、という事がある。 最初に最急降下法を説明した時に あなたにこの図を見せた、 これは表面の丘を 下っていくもの。 そしてどこから始めるかによって 異なる局所最適解に落ち着きうるのだった。 つまり、ここに行き着く場合もあればここに行き着く場合もありうる。 だけど、線形回帰の場合の コスト関数のgradientは、 いつも弓形の関数で こんな形に 必ずなる。 これを表す専門用語があって、 それは凸型関数と呼ばれる。 私はわざわざ 凸関数の正式な定義を 説明する気は無い。 だが直感的には、凸関数は 弓形の関数という事だ。 そしてつまり、この関数は グローバル最適な解以外の 局所最適解は持たない。 そしてこの種類のコスト関数、 それは線形回帰を適用する時はいつもそうだが、 この種のコスト関数に最急降下法を適用すると、 いつもグローバル最適な結果を返す、 何故ならグローバル最適以外の局所最適が存在しないから。 では次に、実際のアルゴリズムの動作を見てみよう。 いつも通り、ここに仮説関数の プロットがある。 そしてコスト関数Jも。 そしてパラメータの初期値を ここに初期化するとしよう。 普通はパラメータは 0、 0で初期化するものだ、 シータ0 = シータ1 = 0 で。 でもこのプレゼンでは 例示の為、 シータ0をだいたい 900に、シータ1をだいたい-0.1とした。