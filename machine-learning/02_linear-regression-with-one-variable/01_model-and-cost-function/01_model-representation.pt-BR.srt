1
00:00:02,338 --> 00:00:04,677
Nosso primeiro algoritmo de aprendizado será o
de regressão linear. Neste vídeo você verá

2
00:00:06,956 --> 00:00:09,234
com o que o modelo se parece e ainda
mais importante você verá com o que se

3
00:00:09,234 --> 00:00:14,801
parece o processo de aprendizado supervisionado.
Vamos utilizar alguns exemplos motivadores para a previsão

4
00:00:14,801 --> 00:00:20,036
do preços de casas. Vamos utilizar um conjunto
de dados de preços de casas da cidade de

5
00:00:20,036 --> 00:00:25,205
Portland, Oregon. E aqui eu vou plotar meu
conjunto de dados de um número de casas

6
00:00:25,205 --> 00:00:30,833
que possui diferentes tamanhos e que
foram vendidas por diferentes preços. Digamos que

7
00:00:30,833 --> 00:00:35,872
dado este conjunto de dados, você tenha um
amigo que está tentando vender uma casa e

8
00:00:35,872 --> 00:00:41,238
vamos ver por qual valor, a casa do amigo que possui 1250
pés quadrados (apróx. 116 metros quadrados), poderá ser vendida.

9
00:00:41,238 --> 00:00:46,459
Uma coisa que você poderia fazer é encaixar um modelo.

10
00:00:46,648 --> 00:00:53,039
Talvez encaixar uma linha reta nestes dados. Irá parecer-se com isto

11
00:00:53,039 --> 00:00:59,168
e talvez você poderá dizer ao seu amigo que
ele pode vender a casa por cerca de $220.000.

12
00:00:59,168 --> 00:01:03,575
Então este é um exemplo de um

13
00:01:03,575 --> 00:01:08,834
algoritmo de aprendizado supervisionado. E ele é de
aprendizado supervisionado porque nós recebemos

14
00:01:08,834 --> 00:01:14,287
a "resposta certa" para cada um
dos nossos exemplos. Somos informados qual

15
00:01:14,287 --> 00:01:19,351
é exatamente a casa, por qual preço cada
uma das casas em nosso conjunto de dados

16
00:01:19,351 --> 00:01:24,441
foi vendida e muito mais, este é um exemplo de
um problema de regressão onde

17
00:01:24,441 --> 00:01:29,545
o termo regressão refere-se ao fato de que
estamos predizendo um valor de saída real

18
00:01:29,545 --> 00:01:34,586
no caso o preço. E relembrando
o outro tipo mais comum de problema

19
00:01:34,586 --> 00:01:39,006
de aprendizado supervisionado é chamado de
problema de classificação onde predizemos

20
00:01:39,006 --> 00:01:45,202
saídas de valor discreto como se estivéssemos
olhando tumores de câncer e tentando decidir

21
00:01:45,202 --> 00:01:52,032
se um tumor é maligno ou benigno. Então esta
é uma saída de valor discreto zero-um.

22
00:01:52,032 --> 00:01:57,087
Formalmente no aprendizado supervisionado, nós temos
um conjunto de dados e este conjunto de dados é chamado

23
00:01:57,087 --> 00:02:02,018
conjunto de dados de treinamento. Então para p exemplo de precificação de casas, temos um conjunto

24
00:02:02,018 --> 00:02:07,386
de diferentes preços de casas e o nosso trabalho é aprender a partir destes dados como prever os preços.

25
00:02:07,386 --> 00:02:11,907
Vamos definir a mesma notação que temos usado ao longo do curso.

26
00:02:11,907 --> 00:02:16,100
Vamos definir bastantes símbolos.
É normal se não se lembrar

27
00:02:16,100 --> 00:02:20,075
de todos os símbolos de imediato mas 
à medida que o curso avançar vai ser

28
00:02:20,075 --> 00:02:24,267
[inaudível] uma notação conveniente.. Portanto, vou usar
o m minúsculo ao longo do curso para

29
00:02:24,267 --> 00:02:28,897
notar o número de exemplos de treino. Portanto, 
neste conjunto de dados, se eu tiver

30
00:02:28,897 --> 00:02:34,366
digamos, 47 colunas nesta tabela. Então,
 tenho 47 exemplos de treino e m é igual a 47.

31
00:02:34,366 --> 00:02:39,497
Eu vou usar o x minúsculo para indicar
variáveis de entrada, também chamadas de

32
00:02:39,497 --> 00:02:44,290
atributos. O que seria o x está aqui, que seriam os atributos de entrada. E eu vou

33
00:02:44,290 --> 00:02:49,556
usar o y para indicar minhas variáveis de saída ou a
variável que eu quero obter, a qual eu vou

34
00:02:49,556 --> 00:02:54,552
predizer e assim, essa é a segunda
coluna aqui [inaudivel] notação, eu

35
00:02:54,552 --> 00:03:05,749
vou usar (x,y) para indicar um
único exemplo de treino. Assim, uma única linha nessa

36
00:03:05,749 --> 00:03:12,068
tabela corresponde a um único exemplo
de treino e para se referir a um 

37
00:03:12,068 --> 00:03:19,708
exemplo de treino específico, eu vou usar essa
notação x(i) vírgula y(i) e, vamos

38
00:03:25,322 --> 00:03:30,935
usar isso para nos referirmos ao i-ésimo
exemplo de treino. Assim, o superscrito i

39
00:03:30,935 --> 00:03:37,864
aqui, isso não é exponenciação
certo? Esse (x(i), y(i)), o superscrito i 

40
00:03:37,864 --> 00:03:44,873
entre parenteses, é apenas um índice no meu
conjunto de treinos e refere-se a i-ésima linha nessa

41
00:03:44,873 --> 00:03:51,629
tabela, certo? Assim, isso não é x
elevado a potencia de i, y a potencia de i. Ao 

42
00:03:51,629 --> 00:03:58,216
invés disso, (x(i), y(i)) apenas se refere a i-ésima linha dessa
tabela. Portanto, para o exemplo, x(1) se refere ao

43
00:03:58,216 --> 00:04:04,972
valor da entrada para o primeiro exemplo de treino,
ou seja, 2104. Esse é o x na primeira

44
00:04:04,972 --> 00:04:11,685
linha. x(2) vai ser igual a
1416, certo? Esse é o segundo x

45
00:04:11,685 --> 00:04:17,385
e y(1) será igual a 460.
O primeiro, o valor y para meu primeiro

46
00:04:17,385 --> 00:04:24,526
exemplo de treino, que é o que o (1)
se refere. Assim, como foi mencionado, ocasionalmente vou fazer

47
00:04:24,526 --> 00:04:28,345
uma pergunta pra você checar seu
conhecimento e em poucos segundos nesse

48
00:04:28,345 --> 00:04:34,044
vídeo, uma questão de multiplas escolhas
irá aparecer nesse vídeo. Quando isso acontecer,

49
00:04:34,044 --> 00:04:40,362
por favor, use o seu mouse para selecionar
o que você acha ser a resposta certa. O que foi definido

50
00:04:40,362 --> 00:04:45,124
por conjunto de treinos. Assim, aqui está como esse
algoritmo de aprendizado supervisionado trabalha.

51
00:04:45,124 --> 00:04:50,513
Pegamos o conjunto de treinamento,
como o conjunto de preços de casas, e

52
00:04:50,513 --> 00:04:55,715
introduzimos os valores no algoritmo de
aprendizagem. O papel desse algoritmo é,

53
00:04:55,715 --> 00:05:00,101
devolver uma função, que convencionalmente
é denotada h minúsculo, onde 'h' representa

54
00:05:00,101 --> 00:05:06,574
"hipótese". A hipótese, sendo uma
função que recebe como entrada

55
00:05:06,574 --> 00:05:12,471
o tamanho de uma casa, como a casa
que seu amigo quer vender, e

56
00:05:12,471 --> 00:05:18,368
devolve o valor estimado
de y para a casa em questão.

57
00:05:18,368 --> 00:05:31,630
Portanto, h é uma função que
mapeia os valores de x aos de y.

58
00:05:31,630 --> 00:05:37,729
Frequentemente me perguntam
por que essa função é chamada hipótese.

59
00:05:37,729 --> 00:05:42,121
Alguns de vocês devem saber
o significado do termo hipótese, do

60
00:05:42,121 --> 00:05:46,744
dicionário ou de outro lugar. Em aprendizado
de máquina, esse é um nome que foi usado

61
00:05:46,744 --> 00:05:51,310
no começo do desenvolvimento
dessa ciência, e acabou ficando.

62
00:05:51,310 --> 00:05:55,239
Talvez esse não é um bom nome para
esse tipo de função, mapeando tamanhos

63
00:05:55,239 --> 00:05:59,978
de casas a previsões... Eu acho que
o termo hipótese pode não ser o

64
00:05:59,978 --> 00:06:04,543
melhor nome pare isso, mas essa é a
terminologia padrão que se usa em

65
00:06:04,543 --> 00:06:09,362
aprendizado de máquina. Então, não se
preocupe com por que se chama isso.

66
00:06:09,362 --> 00:06:14,332
Quando fazemos um algoritmo de aprendizagem,
a próxima coisa que devemos decidir é como

67
00:06:14,332 --> 00:06:20,540
representar essa hipótese h. Nesse e nos
próximos vídeos, a nossa escolha inicial

68
00:06:20,540 --> 00:06:26,978
para representar a hipótese será
a seguinte. Vamos representar h

69
00:06:26,978 --> 00:06:33,009
assim. E vamos escrever isso como
h_θ(x) = θ₀ + θ₁ · x.

70
00:06:33,009 --> 00:06:39,254
Às vezes, em vez de escrever h_θ(x),
podemos escrever de uma forma reduzida,

71
00:06:39,254 --> 00:06:45,441
vou só escrever como h(x). Mas
escreverei mais da primeira forma.

72
00:06:45,441 --> 00:06:51,627
E, desenhando isso nos gráficos, tudo
o que isso significa é que nós vamos

73
00:06:51,627 --> 00:06:58,210
prever que y é uma função linear
de x. Certo, esse é o conjunto de

74
00:06:58,210 --> 00:07:04,634
dados, e o que essa função
faz é prever que y é uma

75
00:07:04,634 --> 00:07:11,698
linha reta, uma função linear de x.
Ou seja, h_θ(x) = θ₀ + θ₁ · x.

76
00:07:11,698 --> 00:07:18,450
E por que uma função linear?
Bom, às vezes vamos preferir

77
00:07:18,450 --> 00:07:23,405
ajustar funções mais complicadas,
talvez não lineares. Mas como esse

78
00:07:23,405 --> 00:07:28,298
caso linear é um precursor simples,
vamos começar com esse exemplo

79
00:07:28,298 --> 00:07:32,943
de aproximar funções lineares, e partiremos
disso para mais pra frente termos modelos

80
00:07:32,943 --> 00:07:37,403
mais complexos, e algoritmos de aprendizagem
mais complexos. Deixe-me dar um nome a esse

81
00:07:37,403 --> 00:07:42,628
modelo. Esse modelo se chama
regressão linear, e nesse caso em

82
00:07:42,628 --> 00:07:48,271
particular é uma regressão linear com uma
variável, sendo essa variável o x.

83
00:07:48,271 --> 00:07:53,914
Estimamos todos os preços com uma
função de uma variável, x. Outro nome

84
00:07:53,914 --> 00:07:58,852
para este modelo é regressão linear
univariável. Mas "univariável" é só

85
00:07:58,852 --> 00:08:04,400
uma forma cique de se dizer uma variável.
Bom, isso foi regressão linear. No próximo

86
00:08:04,400 --> 00:08:09,760
vídeo começaremos a falar sobre
como implementar esse modelo.
Tradutores: Marcel Dall'Agnol, Delcio Torres | Revisor: Eduardo Bonet