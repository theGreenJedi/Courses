W tym materiale poznamy trochę szczegółów i nabierzemy lepszej intuicji odnośnie tego, co robi funkcja kosztu. W tyn nagraniu zakładam, że wiesz, czym są wykresy konturowe. Jeśli ich nie znasz - niektóre z ilustracji w tym materiale mogą być niejasne, ale nic nie szkodzi; jeśli pominiesz część tego materiału lub nie zrozumiesz go w całości, bo nie widziałeś/aś wcześniej wykresów konturowych - będzie OK. Zrozumiesz resztę kursu i bez tej części. Tutaj mamy nasz problem zdefiniowany jak zwykle: parametry hipotezy, funkcja kosztu, przedmiot optymalizacji. W odróżnieniu od tego, co robiliśmy w poprzednim nagraniu, uwzględnię obydwa parametry - theta0 i theta1 - sporządzając wizualizacje funkcji kosztu. Tak samo jak poprzednio, chcemy zrozumieć hipotezę h i funkcję kosztu J. Mamy więc zbiór uczący cen domów - wybierzmy jakąś hipotezę. Ta hipoteza nie jest zbyt dobra, ale jeśli przyjmę theta0 = 50, a theta1 = 0,06, otrzymam taki wzór na hipotezę, jak tu na dole, i odpowiada on tej prostej. Teraz, mając takie wartości theta0 i theta1, chcemy narysować po prawej odpowiadającą im funkcję kosztu. Ostatnio mieliśmy tylko theta1. Jednym słowem: rysowaliśmy wykresy wyglądające jak funkcja theta1. Teraz mamy jednak dwa parametry - theta0 i theta1 - więc wykres staje się bardziej złożony. Okazuje się, że jeśli mamy tylko jeden parametr, nasz wykres miał kształt zbliżony do łuku. Teraz, gdy mamy dwa parametry, okazuje się, że funkcja kosztu także ma taki kształt. W praktyce, w zależności od zbioru uczącego, możesz otrzymać funkcję podobną do tej. Tak więc jest to wykres powierzchni 3D, o osiach oznaczonych jako theta0 i theta1. Zmieniając te dwa parametry: theta0 i theta1, otrzymujemy różne wartości funkcji kosztu J(theta0, theta1), tj. różną wysokość powierzchni - oś pionowa jest wysokością powierzchni dla danej pary (theta0, theta1). Wysokość powierzchni złożonej z tych punktów reprezentuje wartości J(theta0, theta1). Funkcja ta ma kształt przypominający miskę. Pozwól, że pokażę Ci ten sam wykres w 3D. Tak więc tu mamy ten sam rysunek w 3D, z osiami poziomymi theta0, theta1, osią pionową J(theta0, theta1). Poobracam trochę wykresem - mam nadzieję, że nabierzesz trochę intuicji odnośnie tego miskowatego wykresu, gdyż tak właśnie wygląda funkcja kosztu. W dalszej części tego nagrania nie będę korzystał na potrzeby ilustracji z tego typu wykresów 3D do przedstawienia funkcji kosztu J - zamiast tego wykorzystam wykresy konturowe (lub wykresy poziomicowe, jak czasem je nazywam - jeden pies). Już pokazuję, jak to wygląda: mamy tutaj po prawej przykład rysunku konturowego, z osiami theta0 i theta1. Każdy z tych owali lub elips pokazuje zbiór punktów przyjmujących tę samą wartość 
J(theta0, theta1). A więc w tym konkretnym przykładzie, jeśli weźmiemy sobie ten punkt, i ten punkt, i ten punkt, to wszystkie trzy (oznaczone magentą) mają tę samą wartość funkcji J(theta0, theta1). Mają różne wartości na osiach theta0 i theta1, ale mają te same wartości funkcji
J(theta0, theta1). Jeśli nigdy wcześniej nie widziałaś/eś wykresu konturowego, wyobraź sobie funkcję o kształcie miski, wychodzącą z ekranu w Twoją stronę. Jej minimum, czyli dno miski, jest w tym punkcie, prawda? O tu, w środku tych elips. Wyobraź sobie miskę, która tak jakby wyrasta z ekranu, o w ten sposób, tak, że punkty danej elipsy są w jednakowej odległości od ekranu. A minimum miski znajduje się dokładnie tutaj. A więc wykres konturowy jest być może wygodniejszym sposobem wizualizacji mojej funkcji J. Zobaczmy parę przykładów. Mamy tutaj jakiś punkt, prawda? Powiedzmy, że w tym punkcie theta0 = 800, a theta1 = -0.15. Tak więc ten punkt oznaczony na czerwono odpowiada jednej parze wartości (theta0, theta1); odpowiada też takiej hipotezie, bo theta0 = 800, tzn. przecina oś pionową mniej więcej w punkcie 800, a tu mamy nachylenie o wartości ok. -0,15. Jak widać, ta linia nie jest dobrym dopasowaniem danych. Hipoteza h(x) o takich wartościach theta0 i theta1 nie reprezentuje dobrze naszych danych. Zauważmy, że jej koszt jest tutaj - dość daleko od minimum, prawda? Jest dość daleko, koszt jest dość duży, bo ta linia nie jest dobrze dopasowana do danych. Zobaczmy jeszcze parę przykładów. Mamy teraz inną hipotezę, która też nie jest dobrze dopasowana, ale być może jest odrobinę lepsza - tutaj mamy nasz punkt, tutaj mamy parametry theta0 i theta1. Theta0 jest równe mniej więcej 360, a theta0 równa się 0. Rozbijmy to na części: weźmy theta0 = 360 i theta0 = 0. Ta para parametrów odpowiada tej hipotezie, odpowiada poziomej linii, tzn. 
h(x) = 360 + 0*x. Tak więc mamy taką hipotezę; odpowiada jej oczywiście pewien koszt, odpowiadający wysokości funkcji J w tym punkcie. Zobaczmy kolejne przykłady. Dla takiej wartości theta0 i takiej wartości theta1 otrzymujemy taką
hipotezę h(x). Po raz kolejny: nie jest to dobre dopasowanie. Właściwie jest jeszcze dalej od minimum.
Ostatni przykład: może nie jest to minimum, ale jest całkiem blisko. Tak więc nie jest to złe dopasowanie, jeśli dla takiej wartości theta0 i dla takiej wartości theta1, otrzymamy taką hipotezę h(x). Nie jest to jeszcze minimum, ale jesteśmy blisko. Tak więc suma kwadratów błędów jest sumą kwadratów odległości między moimi przykładami treningowymi a moją hipotezą. Rzeczywiście, jest to suma kwadratów odległości tych błędów, prawda? Jesteśmy całkiem blisko minimum, nawet jeśli nie jest to dokładnie minimum. Mam nadzieję, że te rysunki pozwoliły Ci zrozumieć lepiej wartości funkcji kosztu J - czym one są i jak przekładają się na różne hipotezy, oraz w jaki sposób lepsza hipoteza odpowiada punktom położonym bliżej minimum tej funkcji kosztu J. 
Oczywiście, tak naprawdę chcemy mieć wydajny algorytm, wydajne oprogramowanie, które automatycznie znajdzie takie wartości theta0 i theta1, które zminimalizują funkcję kosztu J, prawda? Nie chcemy pisać programu, który rysuje ten punkt, a my musimy potem ręcznie odczytywać wartości. Nie o to chodzi, nie to jest naszym celem. Poza tym zobaczymy później, że możemy mieć bardziej złożone przykłady, gdzie będziemy mieli wielowymiarowe powierzchnie o wielu parametrach. Zobaczymy w dalszej części kursu, że takich powierzchni nie da się tak naprawdę narysować. Dużo ciężej jest je zwizualizować. Chcemy więc mieć program, który znajdzie wartości theta0 i theta1, minimalizujące tę funkcję, i w następnym materiale zaczniemy omawiać algorytm znajdujący automatycznie właśnie takie wartości theta0 i theta1, dla których funkcja kosztu J osiągnie minimum.