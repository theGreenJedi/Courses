हमारा पहला लर्निंग अल्गोरिद्म होगा लिनीअर रेग्रेशन. इस वीडियो में आप देखेंगे मॉडल कैसे दिखता हैं और अधिक महत्वपूर्ण है आप देखेंगे कि कैसे पूरी प्रक्रिया सूपर्वायज़्ड लर्निंग की होती है. चलो इस्तेमाल करते हैं कुछ प्रेरक उदाहरण प्रिडिक्ट करने के लिए आवास की कीमते. हम इस्तेमाल करेंगे एक डेटा सेट घरों की क़ीमतों का शहर पोर्टलैंड, ऑरेगॉन से. और यहाँ मैं प्लॉट करूँगा मेरे डेटा सेट को बहुत से घरों के जो थे भिन्न भिन्न साइज़ के जो बेचे गए थे भिन्न भिन्न क़ीमतों पर. मान लो कि दिया होने पर यह डेटा सेट, आपका एक मित्र है जो प्रयास कर रहा है बेचने का एक घर और चलो देखते हैं कि मित्र के घर का साइज़ है 1250 स्क्वेर फ़ुट और आप उन्हें बताना चाहते हो कितने में वे शायद बेच पाएँगे घर. वैसे तो एक काम जो आप कर सकते हैं वह है फ़िट करें एक मॉडल. शायद फ़िट करें एक सीधी रेखा डेटा में. जो दिखती है कुछ ऐसे और निर्भर करते हुए उस पर, शायद आप बता सकते हैं अपने मित्र को मान लो शायद वह बेच सकता है घर लगभग $ 220,000 में. तो यह है एक उदाहरण एक सूपर्वायज़्ड लर्निंग अल्गोरिद्म का. और यह है सूपर्वायज़्ड लर्निंग क्योंकि हमें दिया है "सही उत्तर" हमारे प्रत्येक इग्ज़ाम्पल के लिए. अर्थात् हमें बताया गया है कि क्या थी असली घर, क्या थी असली क़ीमत प्रत्येक घर की हमारे डेटा सेट में जिस पर वह बेचा गया था और इसके अलावा, यह है उदाहरण एक रेग्रेशन प्रॉब्लम का जहाँ टर्म रेग्रेशन बताती है तथ्य कि हम प्रिडिक्ट कर रहे हैं एक रियल वैल्यू आउट्पुट अर्थात् कीमत. और सिर्फ आप को याद दिलाने के लिए कि दूसरा आम प्रकार सूपर्वायज़्ड लर्निंग प्रॉब्लम का कहलाता है क्लैसिफ़िकेशन प्रॉब्लम जहाँ हम प्रिडिक्ट करते हैं डिस्क्रीट वैल्यू आउट्पुट की जैसे कि हम देख रहे हैं कैन्सर ट्यूमर पर और प्रयास कर रहे हैं तय करने का कि एक ट्यूमर घातक है या सौम्य. तो वह है एक ज़ीरो-एक वैल्यू की डिस्क्रीट आउट्पुट. अधिक औपचारिक रूप से, सूपर्वायज़्ड लर्निंग में, हमारे पास है एक डेटा सेट और इस डेटा सेट को कहते हैं एक ट्रेनिंग सेट. तो, हमारे घरों की क़ीमत के उदाहरण के लिए, हमारे पास है एक ट्रेनिंग सेट विभिन्न घरों की क़ीमतों का और हमारा काम है सीखना इस डेटा से कि कैसे प्रिडिक्ट करना है क़ीमत घरों की. चलो परिभाषित करते हैं कुछ नोटेशन जो हम इस्तेमाल कर रहे हैं इस कोर्स के दौरान. हम परिभाषित करेंगे बहुत से चिन्ह. यह ठीक है यदि आप नहीं याद रखते सारे चिन्ह अभी से लेकिन जैसे कोर्स आगे बढ़ेगा यह सहायक होगा [नहीं सुनाई दिया] सुविधाजनक नोटेशन के रूप में. तो मैं करूँगा लोअर केस एम का इस्तेमाल इस कोर्स के दौरान डिनोट करने के लिए संख्या ट्रेनिंग इग्ज़ाम्पल्ज़ की. तो इस डेटा सेट में, यदि मेरे पास हैं, आप जानते हैं, मान लो 47 रोज़ इस टेबल में. तब, मेरे पास 47 ट्रेनिंग इग्ज़ाम्पल्ज़ हैं और एम बराबर है 47. मैं इस्तेमाल करूँगा लोअर केस एक्स डिनोट करने के लिए इनपुट वेरिएबल्स जिन्हे अक्सर कहते हैं फ़ीचर्ज़ भी. वह होगा एक्स यहाँ, यह होगा इनपुट फ़ीचर्ज़. और मैं करूँगा इस्तेमाल वाय का डिनोट करने के लिए मेरे आउट्पुट वेरिएबल्स या टार्गट वेरिएबल जो मैं करूँगा प्रिडिक्ट और इसलिए वह है दूसरा कॉलम यहाँ. [नहीं सुनाई दिया] नोटेशन मैं इस्तेमाल (एक्स, वाय) डिनोट करने के लिए एक अकेला ट्रेनिंग इग्ज़ाम्पल. तो एक रो इस टेबल में कॉरेस्पॉंड करती हैं एक सिंगल ट्रेनिंग इग्ज़ाम्पल को और रेफ़र करने के लिए एक विशेष ट्रेनिंग इग्ज़ाम्पल को, मैं करूँगा इस्तेमाल यह नोटेशन एक्स(आइ) कॉमा वाय(आइ). और हम करेंगे उपयोग इसका रेफ़र करने के लिए आइ वाँ ट्रेनिंग इग्ज़ाम्पल. तो यह सूपर स्क्रिप्ट आइ यहाँ, यह एक्स्पोनेंट नही है सही? यह (एक्स(आइ),वाय(आइ)), सूपर स्क्रिप्ट आइ कोष्ठकों में सिर्फ एक सूचकांक / इंडेक्स है और मेरी आइ रो का और रेफ़र करता है आइ रो को इस टेबल में, ठीक है? तो यह नहीं है एक्स की पावर आइ, वाय की पावर आइ. इसके स्थान पर (एक्स (i), वाई (i)) सिर्फ इस टेबल की ith रो को दर्शाता है. तो उदाहरण के लिए, एक्स (1) बताता है इनपुट वैल्यू पहले ट्रेनिंग इग्ज़ाम्पल की जो है 2104. वह है यह एक्स इस पहली रो में. एक्स(2) होगा बराबर 1416 सही? वह दूसरा एक्स और वाय(1) होगा बराबर 460. पहली वाय वैल्यू मेरे पहले ट्रेनिंग इग्ज़ाम्पल के लिए, वह है जो (1) बताता है. तो जैसे बताया है कभी कभी मैं आपको पूछूँगा प्रश्न ताकि आप जाँच सकें आपकी समझ और कुछ सेकंड में इस वीडियो में एक बहु-विकल्प प्रश्न आएगा वीडियो में. जब यह आए तो कृपया अपने माउस का इस्तेमाल करके चयन करें जो आप सोचते हैं कि सही जवाब है. क्या परिभाषित किया है ट्रेनिंग सेट से. तो यहाँ है कि कैसे सूपर्वायज़्ड लर्निंग अल्गोरिद्म काम करता है. हमने देखा कि ट्रेनिंग सेट के साथ जैसे हमारा ट्रेनिंग सेट घरों की क़ीमत का और हम फ़ीड करते हैं उसे हमारे लर्निंग अल्गोरिद्म को. यह काम है एक लर्निंग अल्गोरिद्म का तब आउट्पुट करना एक फ़ंक्शन जो कन्वेन्शन से है अक्सर डिनोट किया हुआ लोअर केस एच और एच चिन्हित करता है हायपॉथिसस. और क्या काम है हायपॉथिसस का, कि, यह है एक फ़ंक्शन जो लेता है इनपुट साइज़ एक घर का शायद साइज़ नए घर का जो आपका मित्र प्रयास कर रहा है बेचने का तो वह लेता है वैल्यू एक्स की और कोशिश करता है आउट्पुट करने की अनुमानित वैल्यू वाय की इसी घर के लिए. तो एच है एक फ़ंक्शन जो मैप करता हैं एक्स से वाय को. लोग अक्सर मुझसे पूछते हैं, आप जानते हैं, क्यों इस फ़ंक्शन को कहते हैं हायपॉथिसस. आप में से कुछ जानते होंगे मतलब टर्म हायपॉथिसस का, शब्दकोश या विज्ञान या किसी भी तरह. ऐसा होता है कि मशीन लर्निंग में, यह है एक नाम जो इस्तेमाल किया गया था शुरुआत के दिनों में मशीन लर्निंग के और यह एक प्रकार से बना रहा. क्योंकि शायद नहीं है एक बढ़िया नाम इस तरह के फ़ंक्शन के लिए, मैप करने के लिए साइज़ घरों के प्रिडिक्शन में, जो आप जानते हैं... मैं सोचता हूँ कि टर्म हायपॉथिसस, शायद नहीं है सबसे अच्छा संभव नाम है, लेकिन यह है स्टैंडर्ड टर्म जो लोग प्रयोग करते हैं मशीन लर्निंग में. तो ज़्यादा चिंता न करें कि क्यों लोग उसे वह कहते हैं. जब डिज़ाइन कर रहे हैं एक लर्निंग अल्गोरिद्म, अगली चीज़ जो हमें तय करनी है कि कैसे हम दर्शाएँ इस हायपॉथिसस एच को. इसके लिए और अगले कुछ वीडियोस के लिए मैं चुनाव करूँगा हमारे प्रारंभिक विकल्प का, दर्शाने के लिए हायपॉथिसस, वह होगा इस प्रकार. हम करेंगे रेप्रेज़ेंट एच इस प्रकार. और हम लिखेंगे इस एच 1 थीटा(एक्स) बराबर है थीटा 2 0 2 1 प्लस थीटा 1 1 ऑफ़ एक्स की तरह. और संक्षिप्त रूप में, कभी कभी बजाय लिखने के 1, आप जानते हैं एच सब स्क्रिप्ट थीटा ऑफ़ एक्स, कभी कभी संक्षेप में, मैं लिखूँगा इसे सिर्फ़ एच ऑफ़ एक्स. लेकिन अधिकांश मैं लिखूँगा इसे एक सब्स्क्रिप्ट थीटा वहाँ पर. और प्लॉट करते हुए इसे पिक्चर्स में, इस सब का मतलब है कि हम करेंगे प्रिडिक्ट कि वाय है है एक लिनीअर फ़ंक्शन एक्स का. ठीक है, तो वह है डेटा सेट और यह फ़ंक्शन क्या कर रहा है, कि प्रिडिक्ट कर रहा है कि वाय है कोई सीधी रेखा फ़ंक्शन एक्स का. वह है एच ऑफ़ एक्स बराबर है थीटा 0 प्लस थीटा 1 एक्स, सही? और क्यों एक लिनीअर फ़ंक्शन? सही है कि कभी कभी हम चाहेंगे फ़िट करना अधिक जटिल, शायद नॉन-लिनीअर फ़ंक्शन भी. लेकिन क्योंकि यह लिनीअर केस है सरल केस, हम शुरू करेंगे इस उदाहरण से पहले फ़िट करते हुए लिनीअर फ़ंक्शन को और हम बनाएँगे इस पर अंत में और जटिल मॉडल, और और अधिक जटिल लर्निंग अल्गोरिद्म्स. मैं देता हूँ इस विशेष मॉडल को भी एक नाम. इस मॉडल को कहते हैं लिनीअर रेग्रेशन या यह, उदाहरण के लिए, है वास्तव में लिनीअर रेग्रेशन एक वेरिएबल में, और वेरिएबल है एक्स. प्रिडिक्ट करना सारी क़ीमतें एक फ़ंक्शन एक वेरिएबल एक्स के से. और दूसरा नाम इस मॉडल का है यूनी वेरियेट लिनीअर रेग्रेशन. और यूनी वेरियेट है सिर्फ़ एक सुंदर ढंग कहने का एक वेरिएबल. तो, वह है लिनीअर रेग्रेशन. अगले वीडियो में हम शुरू करेंगे बात करना कि कैसे हम इम्प्लमेंट करते हैं यह मॉडल.