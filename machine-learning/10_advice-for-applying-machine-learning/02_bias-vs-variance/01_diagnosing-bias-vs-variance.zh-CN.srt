1
00:00:00,120 --> 00:00:01,220
当你运行一个学习算法时

2
00:00:01,710 --> 00:00:02,640
如果这个算法的表现不理想

3
00:00:02,840 --> 00:00:04,520
那么多半是出现

4
00:00:04,740 --> 00:00:05,670
两种情况

5
00:00:06,100 --> 00:00:07,650
要么是偏差比较大

6
00:00:08,010 --> 00:00:09,530
要么是方差比较大

7
00:00:09,860 --> 00:00:10,940
换句话说 出现的情况要么是欠拟合

8
00:00:11,130 --> 00:00:13,140
要么是过拟合问题

9
00:00:14,260 --> 00:00:15,090
那么这两种情况

10
00:00:15,350 --> 00:00:16,580
哪个和偏差有关

11
00:00:16,790 --> 00:00:17,970
哪个和方差有关

12
00:00:18,280 --> 00:00:19,500
或者是不是和两个都有关

13
00:00:20,210 --> 00:00:20,430
搞清楚这一点非常重要

14
00:00:21,050 --> 00:00:21,980
因为能判断出现的情况

15
00:00:22,440 --> 00:00:23,890
是这两种情况中的哪一种

16
00:00:24,060 --> 00:00:25,940
其实是一个很有效的指示器

17
00:00:26,180 --> 00:00:27,490
指引着可以改进算法的

18
00:00:27,770 --> 00:00:29,030
最有效的方法和途径

19
00:00:30,230 --> 00:00:31,270
在这段视频中

20
00:00:31,380 --> 00:00:33,030
我想更深入地探讨一下

21
00:00:33,220 --> 00:00:34,850
有关偏差和方差的问题

22
00:00:35,180 --> 00:00:36,530
希望你能对它们有一个更深入的理解

23
00:00:36,790 --> 00:00:38,470
并且也能弄清楚怎样评价一个学习算法

24
00:00:38,610 --> 00:00:42,910
能够判断一个算法是偏差还是方差有问题

25
00:00:43,030 --> 00:00:45,750
因为这个问题对于弄清

26
00:00:45,900 --> 00:00:48,180
如何改进学习算法的效果非常重要

27
00:00:48,640 --> 00:00:52,270
好的 这几幅图

28
00:00:52,680 --> 00:00:53,690
你已经见过很多次了

29
00:00:54,190 --> 00:00:55,230
如果你用两个很简单的假设来拟合数据

30
00:00:55,710 --> 00:00:57,900
比如说用一条直线 那么不足以拟合这组数据(欠拟合)

31
00:00:59,660 --> 00:01:00,720
而如果你用两个很复杂的假设来拟合时

32
00:01:01,250 --> 00:01:02,870
那么对训练集来说

33
00:01:03,400 --> 00:01:05,050
则会拟合得很好

34
00:01:05,270 --> 00:01:06,810
但又过于完美(过拟合)

35
00:01:06,930 --> 00:01:09,000
而像这样的

36
00:01:09,340 --> 00:01:11,000
中等复杂度的假设

37
00:01:11,810 --> 00:01:13,120
比如某种二次多项式的假设

38
00:01:13,390 --> 00:01:15,770
次数既不高也不低

39
00:01:16,560 --> 00:01:17,340
这种假设对数据拟合得刚刚好

40
00:01:17,560 --> 00:01:18,480
此时对应的的泛化误差

41
00:01:19,100 --> 00:01:20,740
也是三种情况中最小的

42
00:01:21,770 --> 00:01:22,960
现在我们已经掌握了

43
00:01:23,030 --> 00:01:25,130
训练集 验证集和测试集的概念

44
00:01:26,100 --> 00:01:27,550
我们就能更好地理解

45
00:01:28,290 --> 00:01:30,530
偏差和方差的问题

46
00:01:31,310 --> 00:01:33,140
具体来说

47
00:01:33,370 --> 00:01:34,920
我们沿用之前所使用的

48
00:01:35,050 --> 00:01:36,620
训练集误差和验证集

49
00:01:36,850 --> 00:01:38,440
误差的定义

50
00:01:38,680 --> 00:01:40,110
也就是平方误差

51
00:01:40,450 --> 00:01:41,420
即对训练集数据进行预测

52
00:01:41,830 --> 00:01:42,810
或对验证集数据进行预测

53
00:01:42,930 --> 00:01:44,710
所产生的平均平方误差

54
00:01:46,560 --> 00:01:47,690
下面我们来画出如下这个示意图

55
00:01:48,470 --> 00:01:49,930
横坐标上表示的是

56
00:01:50,010 --> 00:01:52,000
多项式的次数

57
00:01:52,400 --> 00:01:53,380
因此横坐标越往右的位置

58
00:01:54,810 --> 00:01:57,050
表示多项式的次数越大

59
00:01:58,590 --> 00:01:59,630
那么我们来画这幅图对应的情况

60
00:01:59,810 --> 00:02:01,100
d可能等于1的情况

61
00:02:01,720 --> 00:02:02,770
是用很简单的函数

62
00:02:03,690 --> 00:02:05,600
来进行拟合

63
00:02:05,740 --> 00:02:06,680
而在右边的这个图中

64
00:02:07,150 --> 00:02:08,950
水平横坐标表示

65
00:02:09,740 --> 00:02:11,550
有更多更大的d值

66
00:02:11,650 --> 00:02:13,400
表示更高次数的多项式

67
00:02:14,120 --> 00:02:17,020
因此这些位置对应着使用

68
00:02:17,420 --> 00:02:19,980
更复杂的函数来拟合你的训练集时所需要的d值

69
00:02:23,550 --> 00:02:26,430
让我们来把训练集误差

70
00:02:26,890 --> 00:02:27,980
和交叉验证集误差画在这个坐标中

71
00:02:28,160 --> 00:02:31,250
我们先来画训练集误差

72
00:02:31,730 --> 00:02:34,350
随着我们增大多项式的次数

73
00:02:34,460 --> 00:02:35,560
我们将对训练集拟合得越来越好

74
00:02:35,600 --> 00:02:37,490
所以如果d等于1时

75
00:02:37,760 --> 00:02:39,820
对应着一个比较大的训练误差

76
00:02:40,110 --> 00:02:41,920
而如果我们的多项式次数很高时

77
00:02:42,010 --> 00:02:44,060
我们的训练误差就会很小

78
00:02:44,400 --> 00:02:45,610
甚至可能等于0

79
00:02:46,570 --> 00:02:49,080
因为可能非常拟合训练集

80
00:02:49,820 --> 00:02:50,570
所以 当我们增大多项式次数时

81
00:02:50,680 --> 00:02:52,220
我们不难发现

82
00:02:53,260 --> 00:02:55,630
训练误差明显下降

83
00:02:57,320 --> 00:02:58,300
这里我写上J下标train

84
00:02:58,430 --> 00:02:59,190
来表示训练集误差

85
00:02:59,200 --> 00:03:00,410
因为随着我们对数据拟合

86
00:03:00,810 --> 00:03:02,580
所需多项式次数的增大

87
00:03:02,840 --> 00:03:05,230
训练误差是趋于下降的

88
00:03:05,850 --> 00:03:06,910
接下来我们再看交叉验证误差

89
00:03:07,390 --> 00:03:08,750
事实上如果我们观察测试集误差的话

90
00:03:09,130 --> 00:03:10,150
我们会得到一个和交叉验证误差

91
00:03:10,550 --> 00:03:11,830
非常接近的结果

92
00:03:11,960 --> 00:03:15,210
所以 我们知道 如果d等于1的话

93
00:03:15,980 --> 00:03:17,920
意味着用一个很简单的函数来拟合数据

94
00:03:18,210 --> 00:03:19,620
此时我们不能很好地拟合训练集(欠拟合)

95
00:03:19,750 --> 00:03:22,380
也就是说 我们会得到

96
00:03:22,790 --> 00:03:25,180
一个较大的交叉验证误差

97
00:03:25,410 --> 00:03:28,240
而如果我们用一个中等大小的

98
00:03:28,300 --> 00:03:30,680
多项式次数来拟合时

99
00:03:31,480 --> 00:03:32,940
在前一张幻灯片中

100
00:03:33,510 --> 00:03:34,720
我们用的d等于2

101
00:03:36,710 --> 00:03:39,790
那么我们会得到一个

102
00:03:40,620 --> 00:03:42,160
更小的交叉验证误差

103
00:03:42,340 --> 00:03:44,400
因为我们找了一个能够更好拟合数据的次数

104
00:03:44,540 --> 00:03:45,620
同样地 反过来

105
00:03:45,710 --> 00:03:47,250
如果次数d太大

106
00:03:47,390 --> 00:03:49,620
比如说d的值取为4

107
00:03:49,680 --> 00:03:52,020
那么我们又过拟合了

108
00:03:52,110 --> 00:03:53,620
我们又会得到一个较大的交叉验证误差

109
00:03:54,090 --> 00:03:55,010
因此 如果你平稳地过渡这几个点

110
00:03:55,390 --> 00:03:56,100
你可以绘制出一条平滑的曲线 就像这样

111
00:03:56,250 --> 00:03:57,440
我用Jcv(θ)来表示

112
00:03:57,570 --> 00:03:59,460
同样地 如果你画出Jtest(θ)

113
00:03:59,860 --> 00:04:01,050
你也将得到一条类似的曲线

114
00:04:02,170 --> 00:04:03,230
这样一幅图同时也帮助我们

115
00:04:03,350 --> 00:04:04,310
更好地理解偏差和方差的概念

116
00:04:04,540 --> 00:04:05,990
具体来说

117
00:04:06,290 --> 00:04:07,320
假设你得出了一个学习算法

118
00:04:07,730 --> 00:04:08,800
而这个算法并没有表现地

119
00:04:08,950 --> 00:04:11,030
如你期望那么好

120
00:04:12,280 --> 00:04:13,560
所以你的交叉验证误差或者测试集误差都很大

121
00:04:13,900 --> 00:04:15,180
我们应该如何判断

122
00:04:15,390 --> 00:04:16,390
此时的学习算法

123
00:04:17,040 --> 00:04:18,580
正处于高偏差的问题还是高方差的问题

124
00:04:19,210 --> 00:04:21,220
交叉验证误差比较大的情况

125
00:04:21,680 --> 00:04:23,240
对应着曲线中的这一端

126
00:04:23,460 --> 00:04:25,810
或者这一端

127
00:04:27,130 --> 00:04:28,220
那么左边的这一端

128
00:04:28,530 --> 00:04:30,110
对应的就是高偏差的问题

129
00:04:30,530 --> 00:04:32,000
也就是你使用了一个

130
00:04:32,560 --> 00:04:34,760
过于小的多项式次数

131
00:04:35,670 --> 00:04:37,000
比如d等于1

132
00:04:37,240 --> 00:04:38,830
但实际上我们需要一个较高的多项式次数来拟合数据

133
00:04:39,060 --> 00:04:40,660
相反地

134
00:04:41,060 --> 00:04:43,420
右边这一端对应的是高方差问题

135
00:04:44,920 --> 00:04:46,550
也就是说 多项式次数d

136
00:04:46,780 --> 00:04:48,120
对于我们的数据来讲太大了

137
00:04:48,250 --> 00:04:49,640
这幅图也提示了我们

138
00:04:49,930 --> 00:04:52,010
怎样区分这两种情况

139
00:04:52,240 --> 00:04:54,940
具体地说

140
00:04:55,960 --> 00:04:56,910
对于高偏差的情况

141
00:04:56,950 --> 00:04:58,250
也就是对应欠拟合的情况

142
00:04:58,580 --> 00:05:01,070
我们发现

143
00:05:02,580 --> 00:05:03,260
交叉验证误差和训练误差

144
00:05:04,140 --> 00:05:06,330
都会很大

145
00:05:07,150 --> 00:05:09,120
因此 如果你的算法

146
00:05:10,470 --> 00:05:11,560
有偏差问题的话

147
00:05:11,710 --> 00:05:13,550
那么训练集误差

148
00:05:13,750 --> 00:05:15,190
将会比较大

149
00:05:15,680 --> 00:05:17,040
同时你可能会发现

150
00:05:17,560 --> 00:05:19,210
交叉验证集误差也很大

151
00:05:19,280 --> 00:05:21,010
两个误差可能很接近

152
00:05:21,170 --> 00:05:23,750
或者可能验证误差稍大一点

153
00:05:24,710 --> 00:05:26,380
所以如果你看到这样的组合情况

154
00:05:26,850 --> 00:05:28,950
那就表示你的算法

155
00:05:29,840 --> 00:05:31,280
正处于高偏差的问题

156
00:05:32,820 --> 00:05:35,070
反过来 如果你的算法处于高方差的问题

157
00:05:35,990 --> 00:05:37,250
那么如果你观察这里

158
00:05:37,740 --> 00:05:39,990
我们会发现 Jtrain

159
00:05:41,280 --> 00:05:42,730
就是训练误差

160
00:05:43,140 --> 00:05:45,560
会很小

161
00:05:45,970 --> 00:05:47,470
也就意味着 你对训练集数据拟合得非常好

162
00:05:47,760 --> 00:05:49,170
而你的交叉验证误差

163
00:05:50,230 --> 00:05:51,840
假设此时我们最小化的

164
00:05:52,210 --> 00:05:54,220
是平方误差

165
00:05:54,990 --> 00:05:55,760
而反过来

166
00:05:56,220 --> 00:05:57,410
你的交叉验证集误差

167
00:05:59,550 --> 00:06:01,450
或者说你的交叉验证集

168
00:06:03,080 --> 00:06:05,970
对应的代价函数的值

169
00:06:06,070 --> 00:06:07,520
将会远远大于训练集误差

170
00:06:07,870 --> 00:06:11,150
这里的双大于符号

171
00:06:11,680 --> 00:06:14,460
是一个数学符号

172
00:06:14,700 --> 00:06:16,250
表示远远大于

173
00:06:17,100 --> 00:06:18,000
用两个大于符号表示

174
00:06:19,240 --> 00:06:20,510
因此如果你看见这种组合的情况

175
00:06:21,000 --> 00:06:22,190
这就预示着

176
00:06:23,410 --> 00:06:25,760
你的学习算法可能正处于

177
00:06:25,850 --> 00:06:26,930
高方差和过拟合的情况

178
00:06:27,210 --> 00:06:29,720
同时 区分这两种不同情形

179
00:06:30,710 --> 00:06:33,500
的关键依据是

180
00:06:33,730 --> 00:06:34,790
如果你的算法处于高偏差的情况

181
00:06:35,320 --> 00:06:37,220
那么你的训练集误差会很大

182
00:06:39,480 --> 00:06:41,820
因为你的假设

183
00:06:43,210 --> 00:06:47,540
不能很好地拟合训练集数据

184
00:06:48,280 --> 00:06:49,540
而当你处于高方差的问题时

185
00:06:50,290 --> 00:06:51,320
你的训练误差

186
00:06:51,660 --> 00:06:53,790
通常都会很小

187
00:06:53,990 --> 00:06:54,940
并且远远小于交叉验证误差

188
00:06:55,640 --> 00:06:56,850
好的 但愿这节课能让你

189
00:06:57,120 --> 00:06:58,600
更清楚地理解

190
00:06:58,750 --> 00:07:01,410
偏差和方差这两种问题

191
00:07:02,860 --> 00:07:03,910
在之后几段视频中

192
00:07:04,680 --> 00:07:06,840
我还将对偏差和误差做更多的解释

193
00:07:10,480 --> 00:07:11,830
但我们之后要关注的

194
00:07:12,110 --> 00:07:13,120
是诊断一个学习算法

195
00:07:13,270 --> 00:07:14,600
是处于高偏差还是高方差的情况

196
00:07:14,910 --> 00:07:16,980
在后面几段视频中我还将向你展示更多细节

197
00:07:18,500 --> 00:07:19,400
我们将会看到

198
00:07:19,580 --> 00:07:21,400
通过分清一个学习算法是处于高偏差

199
00:07:21,550 --> 00:07:29,340
还是高方差

200
00:07:29,580 --> 00:07:31,180
还是两种情况的结合

201
00:07:31,400 --> 00:07:32,930
这能够更好地指引我们

202
00:07:33,360 --> 00:07:35,180
应该采取什么样的措施

203
00:07:36,380 --> 00:07:37,910
来提高学习算法的性能表现 【果壳教育无边界字幕组】翻译:所罗门捷列夫

204
00:07:38,070 --> 00:07:39,320
的关键依据是

205
00:07:39,410 --> 00:07:41,390
如果你的算法处于高偏差的情况

206
00:07:41,530 --> 00:07:42,750
那么你的训练集误差会很大

207
00:07:42,960 --> 00:07:43,870
因为你的假设

208
00:07:44,050 --> 00:07:45,820
不能很好地拟合训练集数据

209
00:07:46,940 --> 00:07:47,820
而当你处于高方差的问题时

210
00:07:47,940 --> 00:07:49,360
你的训练误差

211
00:07:49,780 --> 00:07:51,080
通常都会很小

212
00:07:51,360 --> 00:07:53,730
并且远远小于交叉验证误差

213
00:07:55,780 --> 00:07:57,000
希望这节课的内容

214
00:07:57,100 --> 00:07:58,840
更清楚地理解

215
00:07:58,910 --> 00:08:00,400
偏差和方差这两种问题

216
00:08:01,280 --> 00:08:02,190
在之后几段视频中

217
00:08:02,360 --> 00:08:04,630
我还将对偏差和误差做更多的解释

218
00:08:05,410 --> 00:08:06,590
但我们之后要关注的

219
00:08:06,840 --> 00:08:08,460
是诊断一个学习算法

220
00:08:08,520 --> 00:08:11,010
是否处于高偏差或高方差的情况

221
00:08:11,900 --> 00:08:14,710
在后面几段视频中我还将向你展示更多细节

222
00:08:15,600 --> 00:08:16,880
我们将会看到

223
00:08:17,160 --> 00:08:18,570
通过分清一个学习算法是处于高偏差

224
00:08:18,740 --> 00:08:20,280
还是高误差

225
00:08:20,760 --> 00:08:22,370
还是两种情况的结合

226
00:08:22,530 --> 00:08:23,340
这能够更好地指引我们

227
00:08:23,520 --> 00:08:24,670
应该采取什么样的措施

228
00:08:24,790 --> 00:08:25,930
来提高学习算法的性能表现

229
00:08:26,130 --> 00:08:28,190
【教育无边界字幕组】翻译/时间轴：所罗门捷列夫