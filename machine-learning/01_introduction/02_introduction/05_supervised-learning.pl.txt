W tym filmie zdefiniuję prawdopodobnie
najczęściej spotykany typ problemów w uczeniu maszynowym - uczenie z nadzorem.
W dalszej części podam bardziej formalną definicję uczenia z nadzorem, na początek
jednak podam przykład pokazujący, czym ono jest, natomiast formalną definicją
zajmiemy się później. Załóżmy, że chcemy przewidywać ceny domów. Jakiś czas temu
pewien student pozyskał dane z Institute of Portland Oregon. Załóżmy, że
opisaliśmy dane na wykresie i wyglądają one następująco. Na osi poziomej mamy podany
rozmiar poszczególnych domów w stopach kwadratowych, a na osi pionowej - cenę poszczególnych
domów podaną w tysiącach dolarów. Załóżmy więc, że w kontekście tych danych
nasz przyjaciel posiadający dom wielkości 750 stóp kwadratowych ma nadzieję go sprzedać
i chciałby wiedzieć, ile może otrzymać za ten dom. Jak może nam pomóc algorytm
uczący się? Jedną z rzeczy, które algorytm mógłby zrobić, jest wykreślenie
prostej przechodzącej przez dane lub, innymi słowy, dopasować prostą do danych i na tej podstawie oszacować, że dom można sprzedać za około 150 tys. dolarów. Być może jednak nie jest to jedyny algorytm, którego można użyć. Możliwe, że istnieje lepszy. Dla przykładu,
zamiast wykreślać prostą przez dane, moglibyśmy stwierdzić, że lepiej
będzie dopasować funkcję kwadratową lub dokładniej wielomian drugiego rzędu.
Jeżeli tak zrobimy i zastosujemy naszą prognozę do tego punktu, okazuje się,
że być może moglibyśmy sprzedać dom za kwotę bliższą 200 tys. dolarów. Jedną z rzeczy, o których porozmawiamy później, będzie określenie, jak zdecydować, czy lepiej dopasować do danych linię prostą, czy też funkcję kwadratową; nie da się określić z góry, który sposób pozwoli Twojemu znajomemu lepiej sprzedać dom. Każdy ze sposobów jest jednak dobrym przykładem algorytmu uczącego się. Jest to przykład algorytmu uczenia z nadzorem. Określenie "uczenie z nadzorem" odnosi się do tego, że pokazaliśmy algorytmowi zbiór danych, w którym zawarliśmy "prawidłowe" odpowiedzi. To znaczy, pokazaliśmy mu zbiór danych dot. domów, w którym dla każdego domu ze zbioru podaliśmy prawidłową cenę, tzn. cenę, za którą sprzedano prawdziwy dom,
a zadaniem było wygenerowanie większej liczby dobrych odpowiedzi, np. dla domu, który być może sprzedaje Twój znajomy. Poznajmy trochę definicji: technika ta zwana jest regresją, a przez regresję mam na myśli próbę przewidzenia w sposób ciągły wartości wyjściowej - w tym wypadku ceny. Technicznie rzecz biorąc, cenę można zaokrąglić do pełnych centów. Być może ceny są wartościami dyskretnymi, jednak zwykle cenę domu rozumiemy jako liczbę rzeczywistą, wielkość skalarną, wartość zmienną w sposób ciągły, a pojęcie "regresja" odnosi się do faktu, że próbujemy przewidzieć wartość zmieniającą się w sposób ciągły. Kolejny przykład uczenia z nadzorem: razem z paroma znajomymi zajmowałem się kiedyś tym problemem. Załóżmy, że chcesz odczytać wyniki badań medycznych, aby przewidzieć, czy nowotwór piersi jest złośliwy. Jeśli ktoś odkryje guzek w piersi - nowotwór, jest on złośliwy, jeśli jest niebezpieczny dla zdrowia, a niezłośliwy, jeśli jest nieszkodliwy. Z oczywistego powodu jest to ważny dla ludzi temat. Zobaczmy zebrane dane i załóżmy, że w naszym zbiorze danych na osi poziomej znajduje się rozmiar guzka, a na osi pionowej będę wpisywał 1 lub 0 zależnie od tego, czy czy widziane wcześniej guzy były złośliwe (1) czy niezłośliwe (0). Tak więc załóżmy, że mamy taki zbiór danych: widzieliśmy guzek tej wielkości i okazało się, że nie był on złośliwy. Jeden tej wielkości, inny tej wielkości. I tak dalej. Niestety, widzieliśmy także guzki złośliwe: jeden tej wielkości, kolejny tej wielkości, jeszcze inny tej. Tak więc mam 5 przykładów guzków nieszkodliwych, oraz 5 przykładów guzów złośliwych, o wartości 1 na osi pionowej. Teraz załóżmy, że mamy znajomą, która niestety ma nowotwór piersi o rozmiarze mniej więcej zbliżonym do tego. Pytanie w kontekście uczenia maszynowego brzmi: "czy możesz oszacować prawdopodobieństwo, że nowotwór jest złośliwy lub nie?" Wprowadźmy trochę więcej terminologii: jest to przykład problemu klasyfikacji. Pojęcie "klasyfikacja" odnosi się do faktu, że próbujemy przewidzieć dyskretną wartość wyjściową: 1 lub 0 - złośliwy lub nie. Okazuje się, że w przypadku problemu klasyfikacji możesz mieć także więcej niż dwie wartości na wyjściu. Na przykład, być może są trzy typy raka piersi i możesz próbować przewidzieć dyskretne wartości: 0, 1, 2,  3, gdzie "0" oznacza guzek niezłośliwy. Guzek niezłośliwy, a więc brak raka. Wartość "1" może oznaczać raka typu pierwszego, bo mogą być trzy typy raka, cokolwiek by to znaczyło. "2" może z kolei oznaczać drugi typ raka, a "3" - trzeci typ raka. Byłby to jednak także problem klasyfikacji, ponieważ każda z wartości odpowiada brakowi raka, rakowi typu pierwszego, drugiego i trzeciego. Przy problemach klasyfikacji istnieje inny sposób przedstawienia danych na wykresie. Już mówię, co mam na myśli. Użyję teraz trochę innego zestawu symboli, aby przedstawić graficznie dane. Tak więc, jeśli wielkość guza ma być atrybutem, który wykorzystam, aby przewidzieć, czy nowotwór jest złośliwy czy nie, mogę też narysować taki wykres. Użyję różnych symboli, aby oznaczyć guzy złośliwe oraz niezłośliwe, innymi słowy - przykłady pozytywne i negatywne. Zamiast rysować krzyżyki, narysuję kółka, aby oznaczyć nowotwory niezłośliwe. Tak jak tutaj. I będę dalej oznaczał nowotwory niezłośliwe jako "X". OK? Mam nadzieję, że zaczyna mieć to sens. Jedyne, co zrobiłem, to wziąłem ten zbiór danych i zrzutowałem go na tę oś, o w ten sposób. No i użyłem różnych symboli - kółek i krzyżyków - aby odróżnić nowotwory złośliwe od niezłośliwych. Teraz, w tym przykładzie wykorzystujemy jedynie jedną cechę - wielkość nowotworu - aby przewidzieć, czy nowotwór jest złośliwy. W przypadku innych zagadnień uczenia maszynowego może być więcej niż jedna cecha, więcej niż jeden atrybut. Oto przykład. Załóżmy, że znamy nie tylko wielkość nowotworu, ale także wiek pacjentów. W takim wypadku, zbiór danych może wyglądać w ten sposób: mam zbiór pacjentów w takim wieku, o nowotworach tej wielkości, i wygląda to tak. Mam też inny zbiór pacjentów, u których wygląda to nieco inaczej, których nowotwory okazały się być złośliwe, co oznaczam krzyżykiem. Tak więc załóżmy, że masz znajomą, która ma niestety nowotwór. Być może jej wiek i wielkość nowotworu jest gdzieś tutaj. Tak więc, mając taki zestaw danych, algorytm uczący się może wykreślić linię prostą przez dane, oddzielając nowotwory złośliwe od niezłośliwych, a więc algorytm uczący się może zdecydować, że narysuje taką linię, aby rozpoznać dwie klasy nowotworów. A więc za pomocą tego mamy nadzieję, że przewidzimy, że nowotwór Twojej przyjaciółki znajduje się raczej tutaj, mamy nadzieję, że algorytm uczący się powie, że nowotwór Twojej przyjaciółki znajduje się po "niezłośliwej" stronie, a więc jest raczej nieszkodliwy. W tym przykładzie mamy dwie cechy, a dokładnie: wiek pacjenta oraz wielkość nowotworu. W przypadku innych problemów uczenia maszynowego będziemy mieć często więcej cech, a moi znajomi zajmujący się tym zagadnieniem w praktyce używają większej liczby cech takich jak te, np. grubość guzka, grubość guzka nowotworu piersi. Jednorodność rozmiaru komórki nowotworu. Jednorodność kształtu komórki nowotworu itd., a także innych cech. Okazuje się też, że jeden z najbardziej interesujących algorytmów uczących się, które poznamy na tych zajęciach, będzie mógł korzystać nie tylko z dwóch, trzech czy pięciu cech, ale z nieskończonej ich liczby. Na tym slajdzie pokazałem łącznie pięć różnych cech: dwie na osiach oraz trzy tutaj, na górze. Okazuje się jednak, że w przypadku niektórych problemów, nie chcesz używać, powiedzmy, trzech czy pięciu cech. Zamiast tego, chcesz wykorzystać nieskończoną liczbę cech, nieskończoną liczbę atrybutów tak, że algorytm uczący się posiada wiele atrybutów cech, wskazówek, na podstawie których dokonujemy predykcji. Jak więc wykorzystać nieskończoną liczbę cech? Jak w ogóle przechować nieskończoną liczbę rzeczy na komputerze, skoro zabraknie nam pamięci? Okazuje się, że gdy poznamy algorytm zwany maszyną wektorów nośnych (ang. Support Vector Machine - SVM), poznamy też sprytną, matematyczną sztuczkę, poazwalającą komputerowi obsłużyć nieskończoną liczbę cech. Wyobraź sobie, że nie narysowałem jedynie dwóch cech tutaj i trzech po prawej. Wyobraź sobie, że napisałem nieskończenie długą listę - pisałem wciąż więcej i więcej, prawie nieskończoną listę cech. Okazuje się, że będziemy w stanie wymyślić algorytm, który sobie z tym poradzi. Tak więc, podsumowując: na tych zajęciach będziemy rozmawiać o uczeniu z nadzorem. Idea jest taka, że w przypadku uczenia z nadzorem, każdemu elementowi naszego zbioru danych towarzyszy "prawidłowa odpowiedź", którą nasz algorytm powinien podać dla danego elementu. Na przykład cena domu czy też fakt, czy nowotwór jest złośliwy. Porozmawialiśmy też o zagadnieniu regresji. Poprzez regresję rozumiemy, że naszym celem jest przewidzenie ciągłego rozkładu wartości wyjściowej. Rozmawialiśmy też o problemie klasyfikacji, gdzie celem jest przewidzenie dyskretnych wartości wyjściowych. Krótkie pytanie na koniec: Załóżmy, że prowadzisz firmę, i chcesz rozwijać algorytmy uczące się, aby rozwiązać dwa problemy. Pierwszy problem: masz duży magazyn identycznych przedmiotów. Wyobraź sobie teraz, że masz tysiące kopii identycznych towarów na sprzedaż, i chcesz przewidzieć, ile z nich sprzedać w ciągu następnych trzech miesięcy. W przypadku drugiego problemu - masz wielu użytkowników i chcesz napisać oprogramowanie, które sprawdzi konto każdego klienta, i w przypadku każdego konta oceni, czy konto zostało zhakowane. A więc, czy każdy z problemów należy traktować jako problem klasyfikacji, czy też regresji? Gdy film się zatrzyma, użyj proszę myszy, aby wybrać odpowiedź, którą uważasz za poprawną. Tak więc, mam nadzieję, że wskazałaś/eś właściwą odpowiedź. W pierwszym przypadku, traktowałbym to jako problem regresji, ponieważ, jeśli masz np. tysiące przedmiotów, traktowałbym to po prostu jako wartość rzeczywistą, wartość ciągłą. I traktowałbym więc liczbę przedmiotów na sprzedaż jako wartość ciągłą. W przypadku drugiego problemu, traktowałbym to jako problem klasyfikacji, ponieważ mogę np. oznaczyć przewidywaną wartość jako "0", aby oznaczyć konto jako niezhakowane, albo jako "1", jeśli nastąpiło włamanie na konto. Tak jak w przypadku raka piersi - "0" to nowotwór niezłośliwy, a "1" - złośliwy. A więc oznaczyć to jako "0" lub "1", zależnie od tego, czy konto zostało zhakowane, i mieć algorytm, który spróbuje przewidzieć jedną z tych dwóch dyskretnych wartości. A ponieważ jest to niewielka liczba wartości dyskretnych, traktowałbym to jako problem klasyfikacji. A więc to tyle, jeśli chodzi o uczenie z nadzorem. W następnym filmiku porozmawiamy o uczeniu bez nadzoru, które jest kolejną główną kategorią algorytmów samouczących się.