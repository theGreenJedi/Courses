Sveikiname užsiregistravus į šį nemokamą kursą 
apie programų mokymąsi. Programų mokymasis yra viena labiausiai jaudinančių naujų technologijų. Šiame kurse sužinosite apie naujausius pasiekimus šioje srityje, bei įgausite patirties
rašydami ir leisdami šiuos algoritmus patys. Greičiausiai naudojate mokymosi 
algoritmus daugybę kartų kasdien to nežinodami. Kaskart kai naudojatės 
paieškos varikliais Google ar Bing informacijai rasti internete, viena iš priežasčių,
kodėl jie taip gerai veikia yra tai, kad mokymosi algoritmas, kurį sukūrė Google ar Microsoft, 
išmoko reitinguoti tinklapius. Kiekvieną kartą, kai Facebook ar Apple
nuotraukų ženklinimo programa atpažįsta jūsų draugų nuotraukas, tai irgi yra
programų mokymasis. Kai skaitote savo el. paštą ir jūsų niekalų filtras išgelbėja jus
nuo daugybės niekalų laiškų peržiūros, tam irgi panaudotas mokymosi algoritmas.
Viena iš priežasčių, kodėl man tai labai įdomu, yra Dirbtinio Intelekto svajonė ateityje kurti programas,
kurios būtų tokios protingos kaip jūs ar aš. Mums dar labai toli iki šio tikslo, tačiau daug DI tyrėjų tiki, 
kad geriausia priemonė šiam tikslui siekti yra mokymosi algoritmai, kurie mėgina 
atkartoti kaip mokosi žmogaus smegenys. Šiame kurse papasakosiu
truputėlį ir apie tai. Šiame kurse sužinosite apie naujausius programų mokymosi algoritmus. Tačiau pastebėjome, kad algoritmų ir matematikos
žinojimas yra nieko vertas, jei neišmėginate, kaip žios žinios taikomos jums
rūpančioms problemoms spręsti. Taigi mes praleidome daug laiko
kurdami pratimus, kad galėtumėte parašyti kiekvieną šių algoritmų
ir patys išmėginti, kaip jie veikia. Taigi, kodėl programų mokymasis yra 
toks populiarus šiuo metu? Taip jau yra, 
kad mašinų mokymasis yra sritis, išaugusi iš DI (dirbtinio intelekto) 
srities. Mes norėjome kurti protingas mašinas ir paaiškėjo, jog
yra keletas paprastų dalykų leidžiančių užprogramuoti mašiną, kad ji rastų trumpiausią
kelią iš A į B. Tačiau dažniausiai nežinojome, kaip rašyti
DI programas, kad būtų galima nuveikti įdomesnius dalykus, pavyzdžiui, ieškoti 
informacijos, ženklinti nuotraukas ar filtruoti paštą. Buvo suprasta, kad vienintelis būdas tai
padaryti - pasiekti, kad mašina išmoktų tai padaryti pati. Taigi, programų mokymasis buvo
sukurtas kaip nauja kompiuterių geba ir šiandien jis įtakoja daug pramonės
ir mokslo sričių. Aš pats dirbu programų mokymosi srityje ir
įprastos savaitės bėgyje gali nutikti, jog šnekuosi su sraigtasparnių pilotais, biologais ir
krūva kompiuterinių sistemų žmonių (kaip ir mano kolegos čia Stanforde) ir vidutiniškai du ar 
triskart per savaitę gaunu el. laišką iš Silicio slėnio pramonėje dirbančių žmonių, 
kurie domisi galimybėmis pritaikyti mašinų mokymąsi savo problemoms spręsti.
Tai rodo, kokias problemas apima programų mokymasis. Yra autonominė robotika,
skaitinė biologija, krūva dalykų iš Silicio slėnio, kuriems
programų mokymasis daro įtaką. Yra kitų programų mokymosi pavyzdžių.
Yra duomenų bazių kasyba. Viena iš priežasčių, kodėl programų mokymasis
taip paplito yra pasaulinio tinklo ir automatizavimo augimas. Visa tai reiškia, kad mes turime daug
didesnius duomenų rinkinius nei kada anksčiau. Pavyzdžiui, daugybė Silicio slėnio įmonių
šiandien renka nuorodų paspaudimo duomenis, kurie dar vadinami naršymo duomenų srautu, 
bei mėgina panaudoti programų mokymosi algoritmais tiems duomenims ištirti, kad geriau
pavyktų suprasti vartotojus ir juos geriau aptarnauti. Šiuo metu tai didelė Silicio slėnio veiklos 
dalis. Sveikatos įrašai. Atėjus automatizacijai dabar turime 
elektroninius sveikatos įrašus, taigi jei galime paversti sveikatos įrašus į medicinines 
žinias, galime pradėti geriau suprasti ligas. Skaitinė biologija. Vėlgi, prasidėjus 
automatizacijai biologai renka daugybę duomenų apie genų sekas,
DNR sekas ir taip toliau, ir mašinos, kuriose leidžiami algoritmai, suteikia
galimybę daug geriau suprasti žmogaus genomą bei ką reiškia būti žmogumi.
Taip pat inžinerijoje, visose inžinerijos srityse mes turime vis didesnius ir didesnius,
didesnius ir didesnius duomenų rinkinius, kuriuos mėginame suprasti naudodamiesi mokymosi
algoritmus. Kita algoritmų pritaikymo mašinoms sritis yra technologijos, kurių negalima
užprogramuoti rankiniu būdu. Pavyzdžiui, jau daug metų dirbu savarankiškų sraigtasparnių
srityje. Mes tiesiog nežinojome, kaip parašyti kompiuterio programą, kuri pati skraidintų 
sraigtasparnį. Vienintelis metodas, kuris veikė buvo leisti kompiuteriui išmokti pačiam, 
kaip valdyti sraigtasparnį. [Sraigtasparnio triukšmas] Ranka rašyto teksto skaitymas. Paaiškėjo,
kad viena priežasčių, kodėl taip pigu siųsti paštą per kelias skirtingas šalis 
ar valstijas, tiek JAV, tiek užsienyje, yra tai, kad kai užrašote tokį voką 
kaip šis, yra mokymosi algoritmas, kuris išmoko, kaip skaityti
jūsų rašyseną, kad galėtų automatiškai nukreipti šį voką reikalinga kryptimi, taigi
tai mums kainuoja kelis centus šį daiktą nusiųsti tūkstančių mylių atstumu. Iš tikrųjų,
jau matėte natūralios kalbos apdorojimo ar kompiuterinės regos pritaikymų - 
tai DI sritys, susijusios su kalbos ar vaizdų supratimu. Dauguma
natūralios kalbos aprdorojimo ir kompiuterinės regos sprendimų šiandien
yra taikomasis programų mokymasis. Algoritmų mokymasis taip pat plačiai naudojamas
savo pritinkinančioms programoms. Kaskart, kai naudojatės Amazon ar Netflix ar iTunes Genius
programa ir ji rekomenduoja filmus ar produktus ir muziką, ten veikia mokymosi algoritmas.
Gerai pagalvojus, jie turi milijoną vartotojų; neįmanoma parašyti milijoną
skirtingų programų savo milijonui vartotojų. Vienintelis būdas, kaip programinė įranga galėtų
teikti šias rekomendacijas yra leisti jai mokytis pačiai ir prisitaikyti prie jūsų
pomėgių. Galiausiai mokymosi algoritmai yra šiandien naudojami ir
norint suprasti žmogaus mokymosi procesą bei suprasti smegenis. Mes kalbėsime apie
tai, kaip tyrėjai tuo naudojasi DI svajonei siekti. Prieš kelis mėnesius
vienas studentas man parodė straipsnį apie svarbiausius dvylika IT įgūdžių. Tai yra
įgūdžiai, kuriems interneto technologijų darbuotojų paieškos vadovai atsispirti negali. Tai buvo
nebe naujas straipsnis, tačiau šio įgūdžių sąrašo viršuje buvo programų
mokymasis. Pas mus Stanforde, darbuotojų ieškovų, kurie 
kreipiasi į mane klausdami, ar aš pažįstu programų mokymosi studijas baigiančių studentų
yra daug daugiau nei šias studijas baigiančių studentų metinis skaičius. Taigi
aš manau kad yra didelė nepatentinka šio įgūdžio paklausa ir dabar yra labai tinkamas
metas mokytis apie programų mokymąsi ir tikiuosi jus daug išmokyti apie programų 
mokymąsi šiame kurse. Kitame vaizdo įraše mes pradėsime nuo formalesnio
programų mokymosi apibrėžimo. Taip pat pradėsime kalbėti apie pagrindinius
programų mokymosi problemų tipus bei algoritmus. Jūs išmoksite keletą pagrindinių
programų mokymosi terminų bei pradėsite suprasti, kokių yra skirtingų
algoritmų ir kada kurį taikyti.