1
00:00:00,380 --> 00:00:01,550
В этом видео мы поговорим о

2
00:00:01,670 --> 00:00:02,690
втором основном классе задач

3
00:00:03,010 --> 00:00:05,030
машинного обучения, который называется "обучение без учителя".

4
00:00:06,300 --> 00:00:08,500
В предыдущем видео мы говорили об обучении с учителем.Тогда

5
00:00:09,250 --> 00:00:10,700
наш набор данных выглядел так: каждый случай был

6
00:00:11,020 --> 00:00:12,670
отнесен к положительным

7
00:00:12,890 --> 00:00:15,150
или отрицательным, в зависимости от того,

8
00:00:15,610 --> 00:00:16,900
доброкачественной или

9
00:00:17,530 --> 00:00:19,800
злокачественной была опухоль.

10
00:00:20,850 --> 00:00:21,920
То есть для каждого случая

11
00:00:22,410 --> 00:00:24,270
при обучении с

12
00:00:24,440 --> 00:00:25,760
учителем был известен «правильный» ответ:

13
00:00:26,490 --> 00:00:27,580
опухоль доброкачественная или нет.

14
00:00:28,550 --> 00:00:30,210
При обучении без учителя данные выглядят по-другому,

15
00:00:30,540 --> 00:00:31,720
примерно так:

16
00:00:31,950 --> 00:00:32,910
у них нет категорий, или

17
00:00:33,190 --> 00:00:34,600
у всех одна и та же категория -

18
00:00:34,720 --> 00:00:35,920
все равно, что без категорий

19
00:00:36,130 --> 00:00:37,460
вообще.

20
00:00:39,680 --> 00:00:40,740
Итак, мы получаем набор данных и

21
00:00:40,980 --> 00:00:42,460
не получаем инструкций,

22
00:00:42,560 --> 00:00:43,290
что с ним делать. Мы даже не знаем, что

23
00:00:43,640 --> 00:00:44,800
означает каждая из точек.

24
00:00:45,290 --> 00:00:47,190
Вместо этого нам говорят: "Вот набор данных".

25
00:00:47,870 --> 00:00:49,650
«Есть ли в этих данных какая-либо структура?»

26
00:00:50,480 --> 00:00:51,670
На основе имеющегося набора данных алгоритм обучения без

27
00:00:52,350 --> 00:00:53,940
учителя может определить, что данные относятся к двум разным

28
00:00:54,060 --> 00:00:56,090
кластерам.

29
00:00:56,800 --> 00:00:57,960
Итак, есть один кластер, и

30
00:00:59,120 --> 00:00:59,910
есть другой кластер.

31
00:01:01,110 --> 00:01:02,710
И алгоритм обучения без учителя может разделить

32
00:01:03,040 --> 00:01:05,070
эти данные на два отдельных кластера.

33
00:01:06,410 --> 00:01:08,000
Это называется алгоритмом кластеризации.

34
00:01:08,860 --> 00:01:10,310
который широко используется на практике.

35
00:01:11,930 --> 00:01:13,310
Одним из примеров использования кластеризации является

36
00:01:13,530 --> 00:01:14,860
проект Google News. Если

37
00:01:15,060 --> 00:01:16,160
вы не знакомы с ним,

38
00:01:16,360 --> 00:01:17,320
то можете взглянуть,

39
00:01:18,210 --> 00:01:19,040
перейдя по этой ссылке:

40
00:01:19,830 --> 00:01:20,460
news.google.com.

41
00:01:21,280 --> 00:01:22,970
Сервис Google News ежедневно

42
00:01:23,480 --> 00:01:24,220
просматривает

43
00:01:24,470 --> 00:01:25,430
десятки или сотни тысяч новостных сообщений в

44
00:01:25,720 --> 00:01:26,740
сети и группирует их в

45
00:01:26,800 --> 00:01:29,410
связанные новостные блоки.

46
00:01:30,730 --> 00:01:31,690
Давайте рассмотрим пример.

47
00:01:33,380 --> 00:01:35,370
Приведенные здесь ссылки ведут на различные веб-страницы с

48
00:01:35,910 --> 00:01:37,260
новостями, посвященными

49
00:01:38,010 --> 00:01:40,110
аварии на нефтяной скважине BP.

50
00:01:41,300 --> 00:01:42,160
Давайте перейдем по одной

51
00:01:42,260 --> 00:01:43,090
из этих

52
00:01:43,550 --> 00:01:44,780
ссылок.

53
00:01:45,100 --> 00:01:46,970
Мы окажемся на веб-странице, например, вот на этой.

54
00:01:47,210 --> 00:01:48,390
статья из Wall Street Journal, посвященная аварии на нефтяной скважине BP.

55
00:01:48,590 --> 00:01:50,180
Статья называется "BP Kills Macondo" (BP

56
00:01:51,110 --> 00:01:52,530
останавливает Макондо),

57
00:01:52,920 --> 00:01:54,350
где Макондо - это название скважины. Если мы нажмем

58
00:01:54,590 --> 00:01:55,700
на другую ссылку

59
00:01:55,980 --> 00:01:57,960
из этой группы, мы

60
00:01:58,020 --> 00:01:59,360
попадем на страницу с другой

61
00:02:00,690 --> 00:02:02,500
историей.

62
00:02:02,950 --> 00:02:04,760
Это сюжет CNN, снова о разливе

63
00:02:04,820 --> 00:02:06,090
нефти на скважине BP. Если вы нажмете на третью ссылку, то

64
00:02:07,090 --> 00:02:08,180
увидите еще один новостной

65
00:02:08,740 --> 00:02:10,990
сюжет.

66
00:02:11,440 --> 00:02:13,380
Это репортаж UK Guardian о той

67
00:02:13,940 --> 00:02:15,510
же аварии.

68
00:02:16,530 --> 00:02:17,790
Итак, алгоритм Google News просмотрел десятки тысяч

69
00:02:17,990 --> 00:02:19,440
новостей и автоматически разбил их

70
00:02:19,490 --> 00:02:22,170
на кластеры.

71
00:02:23,030 --> 00:02:24,660
Таким образом, все новости, относящиеся к одной теме,

72
00:02:25,080 --> 00:02:27,010
отображаются рядом.

73
00:02:27,210 --> 00:02:29,170
Сама команда size

74
00:02:29,380 --> 00:02:31,020
кластеризации и алгоритмы обучения без учителя применяются

75
00:02:31,530 --> 00:02:33,550
и при решении многих других задач.

76
00:02:35,320 --> 00:02:36,690
Еще один пример - изучение геномов.

77
00:02:38,270 --> 00:02:40,510
Рассмотрим пример ДНК-микрочипов.

78
00:02:40,990 --> 00:02:42,230
Идея состоит в том, чтобы

79
00:02:42,430 --> 00:02:44,360
взять группу различных людей и для каждого из них измерить, сколько

80
00:02:44,510 --> 00:02:45,590
у них имеется или не имеется

81
00:02:46,100 --> 00:02:48,580
определенных генов.

82
00:02:49,050 --> 00:02:51,640
С технической точки зрения, вы измеряете уровень "экспрессии генов".

83
00:02:52,000 --> 00:02:54,190
Таким образом, эти цвета -

84
00:02:54,930 --> 00:02:56,210
красный, зеленый, серый

85
00:02:56,340 --> 00:02:57,500
и т.д. отображают

86
00:02:57,780 --> 00:02:59,440
степень выраженности

87
00:02:59,510 --> 00:03:01,270
определенного гена у разных индивидуумов.

88
00:03:02,500 --> 00:03:03,400
Теперь мы можем запустить

89
00:03:03,610 --> 00:03:05,070
алгоритм кластеризации, который

90
00:03:05,380 --> 00:03:07,140
разделит этих людей на категории,

91
00:03:07,780 --> 00:03:08,810
на типы.

92
00:03:10,230 --> 00:03:11,660
Итак, это алгоритм обучения без

93
00:03:11,930 --> 00:03:14,010
учителя, т.к. мы не сообщаем ему

94
00:03:14,590 --> 00:03:15,690
заранее, что эти люди относятся к типу 1,

95
00:03:16,130 --> 00:03:17,420
эти - к типу 2, а вот эти - к типу 3 и т.д.

96
00:03:17,560 --> 00:03:18,650
Вместо этого мы говорим: "Да, у меня

97
00:03:19,610 --> 00:03:22,390
есть куча данных".

98
00:03:23,110 --> 00:03:24,030
Я не знаю, что в этих данных.

99
00:03:24,750 --> 00:03:25,870
Я не знаю, кто к какому типу относится.

100
00:03:26,150 --> 00:03:26,940
Я даже не знаю, какие типы

101
00:03:27,260 --> 00:03:28,480
бывают, но я хочу,

102
00:03:28,610 --> 00:03:30,210
чтобы алгоритм автоматически обнаружил

103
00:03:30,360 --> 00:03:31,260
структуру в этих данных и разделил

104
00:03:32,180 --> 00:03:33,620
людей на типы, которые мне изначально

105
00:03:33,870 --> 00:03:35,490
неизвестны.

106
00:03:35,890 --> 00:03:37,610
Т.к. мы не даем алгоритму

107
00:03:38,160 --> 00:03:40,140
информацию о правильных ответах для примеров из нашего

108
00:03:40,370 --> 00:03:41,270
набора данных, это пример алгоритма

109
00:03:41,590 --> 00:03:43,090
обучения без учителя.

110
00:03:44,290 --> 00:03:47,040
Обучение без учителя или кластеризация используется и во множестве других приложений.

111
00:03:48,340 --> 00:03:50,340
Например, при создании компьютерных кластерных систем.

112
00:03:51,390 --> 00:03:52,530
У меня были друзья, которые

113
00:03:52,680 --> 00:03:53,970
изучали крупные центры обработки данных (ЦОД), т.е. большие

114
00:03:54,180 --> 00:03:55,970
кластеры компьютеров, и пытались выяснить,

115
00:03:56,230 --> 00:03:57,470
какие машины имеют тенденцию работать

116
00:03:57,590 --> 00:03:59,130
вместе и можно ли, объединив эти

117
00:03:59,200 --> 00:04:00,270
машины, повысить эффективность

118
00:04:01,100 --> 00:04:03,220
работы ЦОД.

119
00:04:04,810 --> 00:04:06,820
Вторым примером служит анализ социальных сетей.

120
00:04:07,890 --> 00:04:09,230
Можно ли, зная, с кем из друзей вы чаще всего

121
00:04:09,630 --> 00:04:10,840
переписываетесь по электронной почте, или исходя из списка ваших друзей в

122
00:04:10,880 --> 00:04:12,150
Фейсбуке или кругах Google+, автоматически

123
00:04:12,180 --> 00:04:14,150
определить сплоченные

124
00:04:14,290 --> 00:04:16,380
группы друзей?

125
00:04:16,450 --> 00:04:17,950
А выявить группы

126
00:04:18,460 --> 00:04:19,420
людей, где все друг

127
00:04:20,230 --> 00:04:21,010
с другом знакомы?

128
00:04:22,540 --> 00:04:22,880
Сегментация рынка.

129
00:04:24,680 --> 00:04:26,780
Многие компании имеют колоссальные базы данных с информацией о клиентах.

130
00:04:27,700 --> 00:04:28,410
Можно ли посмотреть

131
00:04:28,510 --> 00:04:30,000
на эти данные и автоматически выявить

132
00:04:30,740 --> 00:04:32,340
сегменты рынка, а также автоматически

133
00:04:33,340 --> 00:04:35,290
отнести клиентов к

134
00:04:35,820 --> 00:04:37,400
различным сегментам, чтобы иметь возможность

135
00:04:37,710 --> 00:04:39,490
автоматически и более эффективно

136
00:04:39,650 --> 00:04:41,580
продавать или продвигать свою

137
00:04:41,890 --> 00:04:43,250
продукцию в различных сегментах?

138
00:04:44,260 --> 00:04:45,580
Это снова пример обучения без учителя,

139
00:04:45,820 --> 00:04:46,720
поскольку, имея

140
00:04:46,900 --> 00:04:48,340
массу данных о покупателях,

141
00:04:48,590 --> 00:04:49,710
мы не знаем ни сегментов рынка, ни к

142
00:04:49,790 --> 00:04:51,270
какому из сегментов —

143
00:04:51,440 --> 00:04:52,570
первому,

144
00:04:52,660 --> 00:04:53,590
второму, и

145
00:04:53,690 --> 00:04:54,700
так далее —

146
00:04:54,800 --> 00:04:55,840
относится каждый

147
00:04:55,940 --> 00:04:57,800
из клиентов.

148
00:04:57,930 --> 00:05:00,630
И мы хотим, чтобы алгоритм определил всё это исходя только из имеющихся данных.

149
00:05:01,970 --> 00:05:03,140
Наконец, оказывается, что обучение

150
00:05:03,690 --> 00:05:05,620
без учителя

151
00:05:06,090 --> 00:05:08,060
удивительным образом используется в

152
00:05:08,890 --> 00:05:10,390
анализе астрономических данных, где алгоритмы кластеризации выдают

153
00:05:10,580 --> 00:05:12,440
неожиданно интересные и полезные

154
00:05:12,900 --> 00:05:15,610
теории происхождения галактик.

155
00:05:15,880 --> 00:05:17,620
Все это - примеры кластеризации, которая является лишь

156
00:05:18,400 --> 00:05:20,550
одним из типов обучения без учителя.

157
00:05:21,530 --> 00:05:22,470
Далее я расскажу вам еще об одном.

158
00:05:23,200 --> 00:05:25,020
Я собираюсь рассказать вам про, так называемую, задачу о шумной вечеринке.

159
00:05:26,310 --> 00:05:28,270
Вы ведь бывали на вечеринках?

160
00:05:28,440 --> 00:05:30,080
Представим вечеринку:

161
00:05:30,300 --> 00:05:31,690
в комнате полно людей, все

162
00:05:31,870 --> 00:05:32,930
сидят рядом и говорят одновременно,

163
00:05:32,970 --> 00:05:34,390
из-за этого их голоса перекрываются,

164
00:05:34,480 --> 00:05:36,230
и сложно

165
00:05:36,590 --> 00:05:37,920
услышать даже человека

166
00:05:38,070 --> 00:05:39,730
напротив.

167
00:05:40,690 --> 00:05:41,970
Представим шумную

168
00:05:42,020 --> 00:05:43,990
вечеринку из двух людей,

169
00:05:45,690 --> 00:05:46,670
говорящих одновременно. Это

170
00:05:46,770 --> 00:05:48,090
будет довольно

171
00:05:48,740 --> 00:05:49,710
маленькая вечеринка.

172
00:05:50,690 --> 00:05:51,630
Поместим в эту комнату два

173
00:05:51,890 --> 00:05:53,080
микрофона,

174
00:05:54,060 --> 00:05:55,640
вот они. Поскольку эти микрофоны находятся на

175
00:05:56,050 --> 00:05:57,430
разных расстояниях

176
00:05:57,560 --> 00:05:58,900
от говорящих,

177
00:05:58,990 --> 00:06:01,250
каждый микрофон

178
00:06:01,830 --> 00:06:04,720
записывает свою комбинацию голосов.

179
00:06:05,810 --> 00:06:06,970
Возможно первый собеседник слышен чуть громче в первом

180
00:06:07,120 --> 00:06:08,320
микрофоне, а второй - во втором.

181
00:06:09,120 --> 00:06:10,680
И это от того, что микрофоны

182
00:06:10,800 --> 00:06:12,350
находятся

183
00:06:12,560 --> 00:06:14,040
на разном расстоянии от собеседников

184
00:06:14,230 --> 00:06:15,950
, и каждый микрофон

185
00:06:16,400 --> 00:06:19,020
записывает

186
00:06:19,250 --> 00:06:20,390
комбинацию перекрывающихся

187
00:06:20,970 --> 00:06:22,590
голосов.

188
00:06:23,960 --> 00:06:25,500
Вот реальная запись двух собеседников,

189
00:06:26,520 --> 00:06:29,280
записанная одним исследователем.

190
00:06:29,740 --> 00:06:30,950
Давайте я сначала проиграю вам

191
00:06:31,060 --> 00:06:32,760
запись с первого микрофона.

192
00:06:33,560 --> 00:06:34,800
(Считают одновременно от

193
00:06:35,070 --> 00:06:36,590
одного до десяти по-английски и

194
00:06:37,060 --> 00:06:38,550
по-испански; громче слышен

195
00:06:38,990 --> 00:06:40,610
английский).

196
00:06:41,610 --> 00:06:42,650
Да, возможно, не самая интересная вечеринка:

197
00:06:43,000 --> 00:06:44,270
два человека считают

198
00:06:44,620 --> 00:06:45,670
от одного до десяти

199
00:06:46,010 --> 00:06:47,880
на двух языках.

200
00:06:48,870 --> 00:06:49,760
Вы только что прослушали запись

201
00:06:49,820 --> 00:06:52,500
с первого микрофона, а вот запись со второго.

202
00:06:57,440 --> 00:06:58,040
(Считают одновременно от одного до

203
00:06:58,060 --> 00:06:58,730
десяти по-английски и по-испански; громче

204
00:06:59,160 --> 00:07:00,900
слышен испанский).

205
00:07:01,860 --> 00:07:02,850
Мы можем взять записи с

206
00:07:03,380 --> 00:07:04,660
этих двух микрофонов и дать их на вход

207
00:07:04,980 --> 00:07:06,480
одного из алгоритмов обучения без

208
00:07:07,010 --> 00:07:08,560
учителя, называемого алгоритмом

209
00:07:08,780 --> 00:07:09,910
шумной вечеринки, и попросить

210
00:07:10,450 --> 00:07:12,140
алгоритм найти в этих данных какую-то структуру.

211
00:07:12,250 --> 00:07:14,010
Алгоритм

212
00:07:14,410 --> 00:07:15,730
прослушает эт

213
00:07:15,980 --> 00:07:17,990
и записи и выдаст

214
00:07:18,140 --> 00:07:19,020
следующее: "Похоже на

215
00:07:19,360 --> 00:07:20,950
две аудиозаписи,

216
00:07:21,240 --> 00:07:22,450
наложенные друг

217
00:07:22,670 --> 00:07:25,220
на друга."

218
00:07:25,990 --> 00:07:27,330
Более того,

219
00:07:27,710 --> 00:07:29,210
алгоритм шумной вечеринки разделит два

220
00:07:29,570 --> 00:07:30,810
исходных аудиосигнала, результатом

221
00:07:31,480 --> 00:07:32,700
наложения которых и были

222
00:07:33,000 --> 00:07:34,240
наши аудиозаписи.

223
00:07:34,410 --> 00:07:35,600
Вот первый результат работы

224
00:07:36,200 --> 00:07:38,630
алгоритма.

225
00:07:39,790 --> 00:07:41,910
(считает от одного до

226
00:07:42,590 --> 00:07:46,270
десяти).

227
00:07:47,630 --> 00:07:48,780
Итак, я выделил английский голос

228
00:07:49,240 --> 00:07:51,220
на одной из записей.

229
00:07:52,460 --> 00:07:53,300
А вот и вторая.

230
00:07:53,380 --> 00:07:55,280
(считает от одного до десяти

231
00:07:55,980 --> 00:07:59,830
по-испански).

232
00:08:00,270 --> 00:08:01,180
Не так плохо! В качестве

233
00:08:03,810 --> 00:08:05,270
еще одного примера, вот другая запись,

234
00:08:05,600 --> 00:08:07,370
сделанная в похожей ситуации.

235
00:08:08,060 --> 00:08:09,790
Вот запись с первого микрофона:

236
00:08:10,470 --> 00:08:12,430
(считает от одного до десяти на

237
00:08:13,370 --> 00:08:15,710
фоне музыки).

238
00:08:16,980 --> 00:08:17,920
Ну что же, наш несчастный

239
00:08:18,180 --> 00:08:19,350
герой вернулся домой с шумной вечеринки, и теперь сидит в комнате,

240
00:08:19,420 --> 00:08:21,880
разговаривая со своим радиоприемником.

241
00:08:23,090 --> 00:08:24,130
А вот запись со второго микрофона.

242
00:08:28,810 --> 00:08:31,800
(считает от одного до десяти на фоне музыки).

243
00:08:33,310 --> 00:08:34,160
Когда вы подаете эти

244
00:08:34,610 --> 00:08:35,530
две записи на вход того же алгоритма,

245
00:08:36,360 --> 00:08:37,790
он снова говорит: "Вы знаете,

246
00:08:38,380 --> 00:08:39,470
похоже что здесь есть два аудио источника",

247
00:08:39,690 --> 00:08:41,370
и кроме этого он говорит: "Вот

248
00:08:42,410 --> 00:08:43,820
первый из аудио источников, который

249
00:08:44,070 --> 00:08:46,010
я нашел."

250
00:08:47,480 --> 00:08:49,300
(считает от одного до

251
00:08:49,730 --> 00:08:53,430
десяти).

252
00:08:54,650 --> 00:08:56,110
Алгоритм не сработал идеально,

253
00:08:56,340 --> 00:08:57,360
он выделил голос, но также

254
00:08:57,570 --> 00:08:59,070
оставил небольшой музыкальный фон.

255
00:08:59,890 --> 00:09:01,360
А вот второй результат работы алгоритма.

256
00:09:10,020 --> 00:09:11,310
Неплохо, во втором фрагменте алгоритму

257
00:09:11,540 --> 00:09:13,300
удалось полностью убрать голос.

258
00:09:13,760 --> 00:09:14,850
И очистить музыку, избавившись

259
00:09:15,020 --> 00:09:17,380
от счета от одного до десяти.

260
00:09:18,840 --> 00:09:20,090
При рассмотрении подобного

261
00:09:20,180 --> 00:09:21,750
алгоритма без учителя у вас может возникнуть вопрос,

262
00:09:21,950 --> 00:09:23,050
насколько сложно реализовать подобное,

263
00:09:23,250 --> 00:09:25,110
верно?

264
00:09:25,330 --> 00:09:26,560
Кажется, что для того, чтобы

265
00:09:26,970 --> 00:09:28,870
создать это приложение,

266
00:09:28,930 --> 00:09:30,550
реализовать такую обработку звука, нужно было написать кучу кода, или,

267
00:09:30,670 --> 00:09:31,430
может быть, подключить пакет специальных

268
00:09:32,240 --> 00:09:33,580
Java-библиотек для аудио обработки.

269
00:09:33,690 --> 00:09:35,380
В общем, похоже, что для такого

270
00:09:35,470 --> 00:09:37,150
разделения источников звука и подобных

271
00:09:37,240 --> 00:09:38,880
задач требуется по-настоящему сложная

272
00:09:39,060 --> 00:09:41,040
программа.

273
00:09:42,460 --> 00:09:43,860
Но оказывается, что алгоритм,

274
00:09:44,070 --> 00:09:45,640
который будет делать то, что вы только что видели, может быть

275
00:09:45,900 --> 00:09:47,280
реализован с помощью одной строки кода — и она у вас перед

276
00:09:47,530 --> 00:09:49,270
глазами.

277
00:09:50,640 --> 00:09:52,350
У исследователей ушло много

278
00:09:52,610 --> 00:09:54,060
времени на то, чтобы создать эту строку кода.

279
00:09:54,490 --> 00:09:56,090
Поэтому я не говорю, что это простая задача. Но оказывается, что когда вы используете

280
00:09:57,080 --> 00:09:57,980
правильную среду разработки, многие

281
00:09:58,180 --> 00:10:00,330
обучающиеся алгоритмы могут

282
00:10:00,670 --> 00:10:02,060
реализованы с помощью коротких программ.

283
00:10:03,510 --> 00:10:04,700
Поэтому в этом курсе мы

284
00:10:04,840 --> 00:10:05,890
собираемся использовать среду

285
00:10:06,010 --> 00:10:07,430
разработки Octave.

286
00:10:08,550 --> 00:10:09,910
Octave — это бесплатное ПО с открытым кодом. Используя

287
00:10:10,120 --> 00:10:11,620
инструменты вроде

288
00:10:11,670 --> 00:10:13,130
Octave или Matlab, многие обучающиеся

289
00:10:14,000 --> 00:10:15,400
алгоритмы можно реализовать всего

290
00:10:15,690 --> 00:10:17,910
в нескольких строках кода.

291
00:10:18,380 --> 00:10:19,400
Позже в этом курсе я научу

292
00:10:19,620 --> 00:10:20,570
вас основам работы в системе

293
00:10:20,720 --> 00:10:21,920
Octave, и вы сможете реализовать

294
00:10:22,050 --> 00:10:24,590
в ней некоторые из этих алгоритмов.

295
00:10:24,980 --> 00:10:26,050
Вы также можете использовать Matlab, если он у вас есть.

296
00:10:27,120 --> 00:10:28,500
На самом деле, в Кремниевой Долине, первый прототип реализации

297
00:10:28,620 --> 00:10:29,470
многих алгоритмов

298
00:10:30,290 --> 00:10:31,310
машинного обучения осуществляют в Octave,

299
00:10:32,040 --> 00:10:33,900
потому что эта среда позволяет реализовывать такие алгоритмы

300
00:10:34,330 --> 00:10:35,250
невероятно

301
00:10:35,540 --> 00:10:36,920
быстро.

302
00:10:38,230 --> 00:10:39,110
Здесь каждая функция, например

303
00:10:39,720 --> 00:10:41,460
функция SVD, что означает

304
00:10:41,680 --> 00:10:42,920
сингулярное разложение (singular value decomposition) оказывается

305
00:10:43,240 --> 00:10:44,520
операцией из

306
00:10:44,640 --> 00:10:45,690
линейной алгебры,

307
00:10:45,820 --> 00:10:48,420
которая просто встроена в Octave.

308
00:10:49,500 --> 00:10:50,390
Если бы пришлось делать

309
00:10:50,460 --> 00:10:51,490
это на C++ или Java, то понадобилось бы очень много строк кода,

310
00:10:51,780 --> 00:10:53,040
чтобы скомпоновать

311
00:10:53,180 --> 00:10:55,680
вместе сложные библиотеки.

312
00:10:56,440 --> 00:10:57,490
Так что вы можете реализовать

313
00:10:57,680 --> 00:10:58,690
всё это на C++, Java или Python -

314
00:10:59,050 --> 00:11:00,090
просто на этих языках сделать

315
00:11:00,290 --> 00:11:02,090
это будет гораздо сложнее.

316
00:11:03,750 --> 00:11:05,060
После почти десяти лет

317
00:11:05,300 --> 00:11:06,980
преподавания машинного обучения, я заметил, что вы

318
00:11:07,210 --> 00:11:08,680
учитесь гораздо быстрее, если вы используете

319
00:11:08,890 --> 00:11:10,340
Octave в качестве

320
00:11:10,480 --> 00:11:11,700
обучающего инструмента

321
00:11:11,790 --> 00:11:14,070
и инструмента

322
00:11:14,250 --> 00:11:15,570
прототипирования. Он позволяет вам

323
00:11:16,260 --> 00:11:17,110
изучать и прототипировать

324
00:11:17,240 --> 00:11:18,640
обучающиеся алгоритмы гораздо

325
00:11:19,000 --> 00:11:21,280
быстрее.

326
00:11:22,640 --> 00:11:23,850
На самом деле, даже во многих

327
00:11:23,990 --> 00:11:25,390
крупных компаниях

328
00:11:25,730 --> 00:11:27,360
Кремниевой долины сначала создают

329
00:11:27,560 --> 00:11:29,020
прототип обучающегося

330
00:11:29,370 --> 00:11:31,110
алгоритма в Octave, а уже потом

331
00:11:31,510 --> 00:11:32,780
переносят его на C++,

332
00:11:32,860 --> 00:11:33,820
Java или другой язык

333
00:11:34,390 --> 00:11:35,910
программирования.

334
00:11:36,890 --> 00:11:37,960
Оказывается, что если разрабатывать алгоритм таким образом,

335
00:11:38,220 --> 00:11:39,070
то он зачастую воплощается на

336
00:11:39,400 --> 00:11:40,440
практике быстрее, чем если сразу начинать

337
00:11:41,300 --> 00:11:43,050
разработку в C++.

338
00:11:44,440 --> 00:11:46,010
Как инструктор я знаю,

339
00:11:46,100 --> 00:11:47,490
что мне позволено говорить "поверьте мне, я точно знаю"

340
00:11:47,570 --> 00:11:48,580
очень ограниченное

341
00:11:48,730 --> 00:11:49,790
число раз, но

342
00:11:50,030 --> 00:11:51,420
мне придется попросить тех, кто никогда прежде

343
00:11:51,560 --> 00:11:52,720
не использовал среды

344
00:11:53,330 --> 00:11:54,880
вроде Octave,

345
00:11:55,240 --> 00:11:56,070
довериться мне. Скажу

346
00:11:56,130 --> 00:11:56,970
также, что ваше время,

347
00:11:57,570 --> 00:11:58,950
время для

348
00:11:59,700 --> 00:12:01,180
разработки, является одним

349
00:12:01,700 --> 00:12:03,100
из самых ценных ресурсов.

350
00:12:04,210 --> 00:12:05,570
Наблюдая за многими людьми, делающими это, я

351
00:12:05,800 --> 00:12:06,850
думаю, что вы, как исследователь машинного обучения или разработчик машинного

352
00:12:07,190 --> 00:12:08,460
обучения, будете гораздо

353
00:12:08,850 --> 00:12:09,990
более продуктивны, если вы научитесь прототипировать

354
00:12:10,830 --> 00:12:12,080
на Octave,

355
00:12:12,220 --> 00:12:13,010
а не на другом

356
00:12:13,580 --> 00:12:15,250
языке.

357
00:12:17,570 --> 00:12:19,790
Наконец, у меня есть один завершающий вопрос

358
00:12:20,090 --> 00:12:22,890
к вам.

359
00:12:24,400 --> 00:12:26,400
Мы говорили об обучении без учителя как о ситуации, когда

360
00:12:26,700 --> 00:12:27,670
вы подаете на вход алгоритму кучу

361
00:12:27,760 --> 00:12:28,730
данных и

362
00:12:28,840 --> 00:12:30,120
просто просите найти структуру в

363
00:12:30,240 --> 00:12:32,900
этих данных.

364
00:12:33,160 --> 00:12:35,170
Какие из следующих четырех

365
00:12:35,490 --> 00:12:36,410
примеров, по вашему

366
00:12:36,870 --> 00:12:37,630
мнению, представляют собой

367
00:12:37,720 --> 00:12:39,520
обучение без учителя (как альтернативу

368
00:12:40,220 --> 00:12:41,950
обучению с учителем)?

369
00:12:42,730 --> 00:12:43,590
Отметьте те из четырех опций

370
00:12:43,860 --> 00:12:44,850
слева, в которых, вы думаете,

371
00:12:45,640 --> 00:12:46,900
уместно говорить об обучении

372
00:12:47,210 --> 00:12:49,400
без учителя, и затем нажмите на кнопку

373
00:12:49,700 --> 00:12:51,300
справа внизу, чтобы проверить ваш

374
00:12:51,440 --> 00:12:53,930
ответ.

375
00:12:54,690 --> 00:12:57,030
Когда видео остановится,

376
00:12:57,370 --> 00:12:58,750
пожалуйста ответьте на вопрос на слайде.

377
00:13:01,860 --> 00:13:03,950
Надеюсь, вы вспомнили проблему с папкой "спам".

378
00:13:04,710 --> 00:13:06,310
Если у вас есть данные с

379
00:13:06,450 --> 00:13:07,680
метками ("спам" или "не спам"), мы

380
00:13:07,800 --> 00:13:10,470
считаем это алгоритмом с учителем.

381
00:13:11,620 --> 00:13:13,870
Пример с историями из новостей - это в точности пример с Google News,

382
00:13:14,100 --> 00:13:15,370
который мы

383
00:13:15,910 --> 00:13:16,600
видели в этом видео.

384
00:13:17,090 --> 00:13:17,950
Мы видели как мы можем использовать кластеризующий

385
00:13:18,080 --> 00:13:19,460
алгоритм для того, чтобы кластеризовать эти

386
00:13:19,880 --> 00:13:21,980
новости вместе. Так что это обучение без учителя.

387
00:13:23,250 --> 00:13:25,440
Я говорил немного раньше о

388
00:13:25,510 --> 00:13:27,120
примере с сегментацией рынка -

389
00:13:27,220 --> 00:13:29,110
вы можете считать это задачей обучения без учителя, потому что

390
00:13:29,970 --> 00:13:30,860
мы всего лишь даем алгоритму

391
00:13:30,930 --> 00:13:32,340
данные и просим автоматически

392
00:13:32,500 --> 00:13:34,340
идентифицировать сегменты.

393
00:13:35,610 --> 00:13:37,930
Последний пример с диабетом по

394
00:13:38,070 --> 00:13:39,080
сути похож на пример

395
00:13:39,350 --> 00:13:41,480
с раком груди из предыдущего видео.За исключением того,

396
00:13:42,190 --> 00:13:43,320
что вместо доброкачественных

397
00:13:43,600 --> 00:13:45,280
и злокачественных опухолей мы

398
00:13:45,550 --> 00:13:47,390
определяем, есть ли у человека диабет или

399
00:13:47,550 --> 00:13:49,270
нет. Таким образом, для решения этой

400
00:13:49,330 --> 00:13:50,440
задачи будет

401
00:13:50,700 --> 00:13:51,830
использовано

402
00:13:52,370 --> 00:13:53,740
обучение с учителем, как

403
00:13:53,870 --> 00:13:54,670
и в случае с раком

404
00:13:54,730 --> 00:13:56,450
груди.

405
00:13:58,270 --> 00:13:59,400
Итак, мы закончили с обучением

406
00:14:00,100 --> 00:14:01,580
без учителя. В следующем видео мы глубже исследуем конкретные

407
00:14:01,650 --> 00:14:02,940
обучающиеся алгоритмы,

408
00:14:03,270 --> 00:14:04,600
и начнем говорить

409
00:14:05,550 --> 00:14:06,590
о том, как они

410
00:14:07,220 --> 00:14:08,750
работают и как вам

411
00:14:08,920 --> 00:14:11,270
их реализовать.