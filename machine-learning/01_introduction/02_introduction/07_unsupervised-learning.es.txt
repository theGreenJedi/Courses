En este video hablaremos acerca del segundo principal tipo de problema de aprendizaje automático, llamado aprendizaje no supervisado. En el último video, hablamos sobre el aprendizaje supervisado. Entonces, recuerda los conjuntos de datos, que se ven así, donde cada ejemplo estaba marcado como un ejemplo positivo o negativo, si era un tumor benigno o maligno. Así que en cada ejemplo de aprendizaje supervisado, nos decían explícitamente cuál era la respuesta correcta, si era benigno o maligno. En el aprendizaje no supervisado, nos dan datos que se ven diferentes a los datos que se ven así, que no tienen ningún valor asignado o que todos tienen el mismo valor asignado o realmente ninguno. Así que nos dan el conjunto de datos y no nos dicen qué hacer con eso y no nos dicen cuál es cada punto de datos. En lugar de eso, nos dicen aquí está el conjunto de datos. ¿Puedes encontrar alguna estructura en los datos? Con estos datos, un algoritmo de aprendizaje no supervisado podría decidir que lo datos están en dos grupos diferentes. Así que hay un grupo y un grupo diferente. Y sí, el algoritmo de aprendizaje supervisado puede dividir estos datos en dos grupos separados. A esto se le llama algoritmo de agrupamiento. Y resulta que se utiliza en muchos lugares. Un ejemplo de dónde se utiliza el agrupamiento es Google News y si no lo has visto antes, puedes ingresar esta dirección URL: news.google.com para echar un vistazo. Lo que Google News hace es ir todos los días y ver decenas de miles o cientos de miles de nuevas historias en la web y las agrupa en nuevas historias cohesivas. Por ejemplo, echemos un vistazo aquí. Las direcciones URL vinculan diferentes historias de noticias sobre la historia del pozo petrolero de BP. Así que demos clic en una de estas URL y demos clic en una de estas URL. Lo que saldrá es una página web como esta. Aquí está un artículo del Wall Street Journal sobre las historias del derrame del pozo petrolero “BP Kills Macondo”, que es un nombre del derrame y si das clic en una URL diferente a ese grupo, entonces tendrás una historia diferente. Aquí está otra vez la historia de CNN sobre, el derrame de petróleo de BP, y si todavía das clic sobre un tercer enlace, podrás tener una historia diferente. Aquí está la historia de «The Guardian UK» sobre el derrame de petróleo de BP. Entonces, lo que Google News hizo es buscar decenas de miles de historias nuevas y las agrupa de forma automática. Así que las noticias que son sobre el mismo tema, se presentan juntas. Resulta que los algoritmos de agrupamiento y de aprendizaje no supervisado también se utilizan en muchos otros problemas. Aquí hay otro para entender la genómica. Aquí hay un ejemplo de datos micromatriciales del ADN. La idea es poner un grupo de individuos diferentes y para cada uno de ellos, midas en qué cantidad tienen o no un cierto gen. Técnicamente, mides qué tanto se expresan algunos genes. Estos colores, rojo, verde, gris y así sucesivamente, muestran el grado en que los diferentes individuos tienen o no un gen específico. Y lo que puedes hacer es ejecutar un algoritmo de agrupamiento para reunir individuos en diferentes categorías o en diferentes tipos de personas. Esto es aprendizaje no supervisado porque no estamos diciendo al algoritmo por adelantado que son personas del tipo 1, estas son persona tipo 2, estas son tipo 3 y así sucesivamente, en lugar de eso decimos: aquí hay un montón de datos. No sé qué hay en estos datos. No sé quiénes y de qué tipo. Ni siquiera se cuáles son los diferentes tipos de personas, pero ¿puedes encontrar automáticamente la estructura en los datos?, ¿puedes agrupar automáticamente los individuos en estos tipos que no conozco de antemano? Ya que no le estamos dando la respuesta correcta al algoritmo para los ejemplos en el conjunto de datos, esto es aprendizaje no supervisado. El aprendizaje no supervisado o agrupamiento se utiliza para muchas otras aplicaciones. Se utiliza para organizar grandes agrupamientos ( clústers) informáticos. Tenía algunos amigos viendo grandes centros de datos, grandes clústers informáticos y trataban de resolver qué máquinas tendían a trabajar juntas y si puedes juntar esas máquinas, puedes hacer que tu centro de datos trabaje de forma más eficiente. Esta segunda aplicación es sobre el análisis de redes sociales. Con el conocimiento sobre los amigos a los que le envías más correos o con tus amigos de Facebook o tus círculos de Google+, ¿puedes identificar automáticamente cuáles son los grupos de amigos cohesivos, también cuáles son los grupos de personas que todos conocemos? Segmentación de mercado. Muchas empresas tienen enormes bases de datos de la información de clientes. Entonces, ¿puedes ver este conjunto de datos del cliente y automáticamente descubrir los segmentos del mercado y agrupar tus clientes en diferentes segmentos de mercado, de manera que puedas vender o comercializar de forma automática y más eficiente tus diferentes segmentos de mercado juntos? Una vez más, esto es aprendizaje no supervisado. porque tenemos todos estos datos del cliente pero no sabemos de antemano cuáles son los segmentos del mercado y para los clientes en nuestro conjunto de datos, no sabemos de antemano quiénes están en el segmento de mercado uno, quiénes en el segmento de mercado dos, y así sucesivamente. Pero debemos dejar que el algoritmo descubra todo esto sólo por los datos. Finalmente, resulta que el aprendizaje no supervisado también se usa sorprendentemente para el análisis de datos astronómicos y estos algoritmos de agrupamiento dan sorprendentemente teorías útiles e interesantes de cómo nacen las galaxias. Todos son ejemplos de agrupamiento, que es sólo un tipo de aprendizaje no supervisado. Dejame decirte otro. Te hablaré sobre el problema en una  fiesta de cóctel. Alguna vez has estado en una fiesta cóctel, ¿no? Bueno, imagina que hay una fiesta, habitación llena de gente, todos sentados, hablando al mismo tiempo y todas esta voces se superponen porque todos hablan al mismo tiempo, y es muy difícil escuchar a la persona que tiene frente a ti. Tal vez en una fiesta de cóctel con dos personas, dos personas que hablan al mismo tiempo, y es una fiesta de cóctel un poco pequeña. Pondremos dos micrófonos en la habitación, así que hay micrófonos, y ya que estos micrófonos están a dos distancias distintas del hablante, cada micrófono registra una combinación diferente de las voces del hablante. Tal vez el hablante uno es un poco más fuerte en el micrófono uno y el hablante dos es un poco más fuerte en el micrófono 2 debido a que los 2 micrófonos están en diferentes posiciones en relación con los 2 hablantes, pero cada micrófono ocasionará una combinación de superposición de ambas voces. Aquí está una grabación real de los dos hablantes que grabó un investigador. Voy a reproducir la primera, de cómo se oye el primer micrófono. One (uno), two (dos), three (tres), four (cuatro), five (cinco), six (seis), seven (siete), eight (ocho), nine (nueve), ten (y diez). Está bien, tal vez no es la fiesta de cóctel más interesante, hay dos personas contando del uno al diez en dos idiomas, pero sabes lo que acabas de escuchar fue la primera grabación del micrófono, esta es la segunda grabación. Uno (one), dos (two), tres (three), cuatro (four), cinco (five), seis (six), siete (seven), ocho (eight), nueve (nine) y diez (ten). Lo que podemos hacer es usar estas dos grabaciones de micrófonos y dárselas a un algoritmo de aprendizaje no supervisado llamado algoritmo de fiesta de cóctel, y decirle al algoritmo que encuentre por mí una estructura en estos datos. Y lo que hará el algoritmo es escuchar estas grabaciones y decir que suena como si las dos grabaciones se hubieran juntado o que se hubieran agregado para producir estas grabaciones. Por otra parte, lo que hará el algoritmo de fiesta de cóctel es separar estas dos fuentes de audio que se juntaron o agregaron para formar nuestras grabaciones y, de hecho, este es el primer resultado del algoritmo de fiesta de cóctel. One, two, three, four, five, six, seven, eight, nine, ten. Separé la voz en inglés en una de las grabaciones. Y esta es la segunda. Uno, dos, tres, cuatro, cinco, seis, siete, ocho, nueve y diez. No está mal, para darte otro ejemplo, aquí está otra grabación de una situación similar, este es el primer micrófono:  Uno, dos, tres, cuatro, cinco, seis siete, ocho, nueve, diez. OK, el pobre tipo se fue de la fiesta de cóctel y ahora está sentado en un cuarto solo y habla con su radio. Esta es la grabación del segundo micrófono. Uno, dos, tres, cuatro, cinco, seis, siete, ocho, nueve, diez. Cuando le das estas dos grabaciones del micrófono al mismo algoritmo, lo que hace es decir otra vez que suena como si hubiera dos fuentes de audio y, además, el álbum dice que aquí está la primera fuente de audio que encontré. One, two, three, four, five, six, seven, eight, nine, ten. Así que no era perfecto, obtuvo la voz, pero también un poco de la música. Entonces, este es el segundo resultado del algoritmo. No está mal, en ese segundo resultado logró deshacerse de la voz por completo. Ya sabes, limpio la música y se deshizo del conteo del uno al diez. Así que es posible que veas un algoritmo de aprendizaje no supervisado como este y te preguntes qué tan complicado es utilizarlo, ¿no? Parece que para construir esta aplicación, parece que para procesar el audio, necesitas escribir mucho código o tal vez vincularlo a un montón de librerías de sintetizador de Java que procesen el audio, parece un programa muy complicado, para hacer este audio, separarlo y así sucesivamente. Pues resulta que el algoritmo para hacer lo que acabas de escuchar, puede hacerse con una sola línea de código, que se muestra aquí. Le tomó mucho tiempo a los investigadores obtener esta línea de código. No digo que sea un problema fácil, pero resulta que cuando usas el ambiente de programación adecuado, muchos algoritmos de aprendizaje pueden ser programas muy cortos. Así que es por eso que en esta clase utilizaremos el ambiente de programación Octave. Octave es un programa informático libre y de código abierto, y con una herramienta como Octave o Matlab, muchos algoritmos de aprendizaje implementan pocas líneas de código. Más adelante, te enseñaré un poco sobre cómo usar Octave e implementarás algunos de estos algoritmos en Octave. O si tienes Matlab, también puedes usarlo. Resulta que en Silicon Valley, para muchos algoritmos de aprendizaje automático, primero hacemos un prototipo de nuestro programa informático en Octave, ya que en Octave es increíblemente rápido implementar estos algoritmos de aprendizaje. Aquí cada una de estas funciones como, por ejemplo, la función SVD que representa la Descomposición del Valor Singular, pero que resulta ser una rutina de álgebra lineal, que recién se construyó en Octave. Si tratas de hacerlo en C++ o Java, serán muchas, muchas líneas de códigos vinculadas con librerías complejas de C++ o Java. Así que puedes implementar esto con C++ o Java o Python, es mucho más complicado de hacer en dichos lenguajes. Lo que he visto después de haber enseñado aprendizaje automático durante ya casi una década es que aprendes mucho más rápido si usas Octave como tu ambiente de programación, y si usas Octave como tu herramienta de aprendizaje y como herramienta para prototipo, te permitirá aprender y a hacer prototipos de algoritmos de aprendizaje más rápido. De hecho, lo que mucha gente hará en las grandes empresas de Silicon Valley es, de hecho, usar un algoritmo como Octave para primero hacer el prototipo de algoritmo de aprendizaje y sólo después haber logrado que funcione, entonces lo puedes migrar a C++ o Java, o al que sea. Resulta que al hacerlo de esta forma, puedes hacer que tu algoritmo trabaje mucho más rápido que haberlo comenzado con C++. Sé que como instructor debo decir “Para esto confía en mí” sólo un número finito de veces, pero para aquellos que nunca antes han usado los ambientes de programación de tipo Octave, les pediré que confíen en mí en este caso, y les diré que lo harán. Creo que su tiempo, su tiempo de desarrollo es uno de los recursos más valiosos. Y después de haber visto a muchas personas hacerlo, creo que tú como un investigador de aprendizaje automático o desarrollador de aprendizaje automático serás más productivo si comienzas a aprender a hacer prototipos, a comenzar con Octave y que con otro lenguaje. Finalmente, para recapitular sobre este video, tengo una pregunta rápida de revisión. Hablamos sobre el aprendizaje no supervisado, que es un entorno de aprendizaje donde le das a un algoritmo muchos datos y le pides que nos encuentre una estructura en estos datos. De los siguientes cuatro ejemplos ¿Cuál de estos cuatro crees que sería un algoritmo de aprendizaje no supervisado contrario al problema de aprendizaje supervisado? De cada uno de los cuatro recuadros de la izquierda, selecciona el que crees que sería adecuado para el algoritmo de aprendizaje no supervisado y da clic en el botón en la parte inferior derecha para marcar tu respuesta. Cuando se ponga en pausa el video, por favor responde la pregunta en la diapositiva. Espero que hayas recordado el problema de la carpeta de spam. Si tienes datos marcados, ya sabes, con correo spam y no spam, lo trataremos como un problema de aprendizaje supervisado. El ejemplo de las historias de noticias, es exactamente el ejemplo de Google News que vimos en este video, vimos cómo puedes usar un algoritmo de agrupamiento para agrupar estos artículos, eso es aprendizaje no supervisado. En el ejemplo de la segmentación del mercado del que hablé anteriormente, es un problema de aprendizaje no supervisado porque tomaré mis datos del algoritmo y le pediré que descubra de forma automática segmentos del mercado. Y el último ejemplo, diabetes, bueno en realidad es como el ejemplo de cáncer de mama del video anterior. Sólo que en lugar de tumores cancerígenos buenos o malos, benignos o malignos, tenemos o no tenemos diabetes, y lo utilizaremos como supervisado, lo resolveremos como un problema de aprendizaje supervisado, tal como lo hicimos con los datos del tumor mamario. Así que, eso es todo sobre aprendizaje no supervisado y en el siguiente video voy a profundizar más en los algoritmos de aprendizaje y empezaré a hablar sobre cómo trabajan estos algoritmos y cómo puedes aplicarlos.