Di video ini, kita akan bicara tentang jenis utama kedua dari persoalan machine learning, disebut Unsupervised Learning. Di video yang lalu, kita bicara tentang Supervised Learning. Kembali ke saat itu, ingat kumpulan data yang tampak seperti ini, dimana setiap contoh dinamai sebagai contoh positif atau negatif, apakah tumor jinak atau ganas. Jadi untuk setiap contoh dalam Supervised Learning, kita diberitahu secara eksplisit apa yang dinamakan jawaban benar, apakah itu jinak atau ganas. Dalam Unsupervised Learning, kita diberikan data yang terlihat berbeda dari data yang tampak seperti ini yang tidak punya nama atau semua punya nama yang sama atau benar-benar tidak bernama. Jadi kita diberikan kumpulan data dan kita tidak diberitahu bagaimana memperlakukan data itu dan kita tidak diberitahu setiap data menunjukkan apa. Sebagai gantinya kita hanya diberitahu, ini sekumpulan data. Dapatkah Anda temukan beberapa struktur pada data? Diberikan kumpulan data ini, algoritma Unsupervised Learning bisa memutuskan bahwa data berada di dua kelompok yang berbeda. Dan jadi di sana satu kelompok dan di sana kelompok lainnya. Dan ya, algoritma Unsupervised Learning bisa memecah data ini ke dalam dua kelompok terpisah ini. Jadi ini disebut algoritma pengelompokkan. Dan tampaknya ini digunakan dibanyak tempat. Satu contoh dimana pengelompokkan digunakan adalah di Google News dan jika Anda belum melihat ini sebelumnya, Anda bisa pergi ke URL news.google.com ini untuk melihat. Apa Google News lakukan adalah setiap hari ia pergi dan melihat puluhan ribu atau ratusan ribu cerita-cerita baru di situs dan ia mengelompokkannya ke rentetan berita yang menyatu. Contohnya, mari kita lihat di sini. URL di sini bertautan ke rentetan berita yang berbeda tentang cerita BP Oil Well. Jadi, mari kita klik pada salah satu dari URL ini dan kita akan klik pada salah satu dari URL ini. Apa yang akan saya dapatkan adalah halaman situs seperti ini. Ini adalah Wall Street Journal artikel tentang, Anda tahu, Tumpahan Sumur Minyak BP cerita dari "BP Menghentikan Macondo" yaitu nama dari tumpahan dan jika Anda klik pada URL yang berbeda dari kelompok itu maka Anda bisa mendapat cerita berbeda. Ini cerita CNN tentang sekali lagi, Tumpahan Minyak BP, dan jika Anda klik pada tautan ketiga, maka Anda bisa mendapat cerita berbeda. Ini cerita Guardian UK tentang Tumpahan Minyak BP. Jadi apa yang Google News lakukan adalah mencari puluhan ribu rangkaian berita dan mengelompokkan mereka jadi satu secara
otomatis. Jadi, rangkaian berita yang semuanya tentang topik yang sama ditampilkan bersama-sama. Tampaknya bahwa algoritma pengelompokkan dan algoritma Unsupervised Learning digunakan juga pada banyak persoalan lain. Satunya ini pada pemahaman genomik. Ini contoh data susunan mikro DNA. Gagasannya adalah menempatkan sekelompok individu berbeda dan masing-masing mereka, Anda ukur berapa banyak mereka yang punya atau tidak punya gen tertentu. Secara teknis Anda mengukur berapa banyak gen tertentu
diekspresikan. Jadi warna-warna ini, merah, hijau, abu-abu dan seterusnya, mereka menunjukkan sejauh mana individu berbeda punya atau tidak punya gen tertentu. Dan apa yang dapat Anda lakukan adalah jalankan algoritma pengelompokkan untuk menggolongkan individu-individu ke dalam kategori yang berbeda atau ke dalam jenis-jenis orang yang berbeda. Jadi ini Unsupervised Learning karena kita tidak memberitahu algoritma tersebut sebelumnya bahwa ini orang jenis 1, itu orang jenis 2, itu orang jenis 3 dan begitu seterusnya dan sebaliknya apa yang dikatakan adalah yah ini sekumpulan data. Saya tidak tahu apa yang ada di data ini. Saya tidak tahu siapa dan jenis apa. Saya bahkan tidak tahu apa jenis orang, tapi dapatkah Anda secara otomatis menemukan struktur dalam data dapatkah Anda secara otomatis mengelompokkan individu ke dalam jenis-jenis ini yang sebelumnya saya tidak tahu? Karena kita tidak memberi algoritma ini jawaban yang benar untuk contoh-contoh dalam kumpulan data saya, ini adalah Unsupervised Learning. Unsupervised Learning atau pengelompokkan
digunakan untuk sekumpulan aplikasi lainnya. Itu digunakan untuk mengatur sekumpulan besar komputer. Saya punya beberapa teman yang sedang memperhatikan pusat-pusat data besar, yaitu sekumpulan besar komputer dan sedang coba mencari tahu mesin mana yang cenderung bekerja sama dan jika Anda dapat menempatkan mesin-mesin itu bersama-sama, Anda dapat membuat pusat data Anda bekerja lebih efisien. Aplikasi kedua ini pada analisa jaringan sosial. Jadi diberinya data tentang teman-teman mana yang paling sering Anda kirimi email atau data teman-teman Facebook Anda atau lingkaran Google+ Anda, dapatkah kita mengidentifikasi secara otomatis yang mana kelompok teman-teman dekat, juga yang mana kelompok orang yang semuanya saling kenal satu sama lainnya? Segmentasi pasar. Banyak perusahaan punya database yang sangat banyak
berisi informasi pelanggan. Jadi, dapatkah Anda melihat pada kumpulan data pelanggan ini dan secara otomatis mengetahui segmen-segmen pasar dan secara otomatis mengelompokkan pelanggan Anda kedalam segmen pasar yang berbeda agar Anda dapat secara otomatis dan lebih efisien lagi menjual atau memasarkan segmen-segmen pasar berbeda Anda bersama-sama? Lagi, ini adalah Unsupervised Learning karena kita punya semua data pelanggan ini, tapi kita tidak tahu sebelumnya apa segmen-segmen pasarnya dan bagi pelanggan dalam kumpulan data kita, Anda tahu, kita tidak tahu sebelumnya siapa dalam segmen pasar satu, siapa dalam segmen pasar dua, dan seterusnya. Tapi kita harus biarkan algoritma ini mengetahui semua ini
hanya dari data. Terakhir, tampaknya Unsupervised Learning juga digunakan secara tidak terduga untuk analisis data astronomi dan algoritma pengelompokkan ini secara mengejutkan memberikan teori-teori berguna yang menarik tentang bagaimana galaksi lahir. Semua ini contoh-contoh pengelompokkan, yang masih satu jenis dengan Unsupervised Learning. Biar saya beritahu Anda contoh lain lagi. saya akan cerita pada Anda tentang soal pesta koktail. Jadi, Anda pernah ke pesta koktail sebelumnya, kan? Nah, Anda bisa bayangkan ada suatu pesta, ruangan penuh orang, semua sedang duduk di sekeliling, semuanya bicara pada waktu bersamaan dan ada semua suara yang saling tumpang tindih karena setiap orang bicara pada waktu yang bersamaan, dan hampir sulit mendengar orang di depan Anda. Jadi mungkin pada suatu pesta koktail dihadiri dua orang, dua orang bicara pada waktu bersamaan, dan itu pesta koktail kecil. Dan kita akan meletakkan dua mikropon dalam ruangan jadi ada dua mikropon, dan karena mikropon tersebut berada pada dua jarak yang berbeda dari pembicara, setiap mikropon merekam gabungan berbeda dari suara dua pembicara ini. Mungkin pembicara satu sedikit lebih keras di mikropon satu dan mungkin pembicara dua sedikit lebih keras lagi pada mikropon 2 karena kedua mikropon pada posisi berbeda terkait dengan dua pembicara itu, namun setiap mikropon akan menyebabkan kombinasi suara yang saling tumpang tindih dari kedua pembicara. Jadi ini rekaman aktual dari dua pembicara yang direkam oleh peneliti. Biar saya putar untuk Anda yang pertama, bagaimana bunyi mikropon pertama. One (uno), two (dos), three (tres), four (cuatro), five (cinco), six (seis), seven (siete), eight (ocho), nine (nueve), ten (y diez). Oke, mungkin bukan pesta koktail yang paling menarik, ada dua orang berhitung dari satu sampai sepuluh dalam dua bahasa namun Anda tahu. Apa yang baru saja Anda dengar rekaman mikropon pertama, ini rekaman yang kedua. Uno (one), dos (two), tres (three), cuatro (four), cinco (five), seis (six), siete (seven), ocho (eight), nueve (nine) y diez (ten). Jadi yang dapat kita lakukan, mengambil perekam dua mikropon ini dan memberi mereka ke algoritma Unsupervised Learning yang disebut algoritma pesta koktail, dan memberitahu algoritma ini - temukan struktur data ini untuk Anda. Dan apa yang akan dilakukan algoritma ini adalah mendengar rekaman suara ini dan mengatakan, Anda tahu bunyinya seperti dua rekaman suara yang saling ditambahkan atau yang telah saling dijumlahkan untuk menghasilkan rekaman yang kita
punya ini. Selain itu, apa yang algoritma pesta koktail akan lakukan adalah memisahkan dua sumber suara yang saling ditambahkan atau saling dijumlahkan ini untuk membentuk rekaman lain dan, sebenarnya, ini hasil pertama dari algoritma pesta koktail. One, two, three, four, five, six, seven, eight, nine, ten. Jadi, Saya memisahkan suara berbahasa Inggris dalam satu rekaman. Dan in hasil algoritma pesta koktail yang kedua. Uno, dos, tres, quatro, cinco, seis, siete, ocho, nueve y diez. Tidak begitu buruk, untuk memberi Anda satu contoh lagi, ini rekaman lain dari situasi lain yang mirip, ini mikropon pertama : One, two, three, four, five, six, seven, eight, nine, ten. OK jadi orang yang malang itu pulang ke rumah dari pesta koktail tersebut dan sekarang dia menunggu dalam suatu ruangan sendirian bicara
pada radio miliknya. Ini rekaman mikropon kedua. One, two, three, four, five, six, seven, eight, nine, ten. Saat Anda memberikan rekaman dua mikropon ini ke algoritma yang sama, apa yang algoritma itu lakukan, sekali lagi mengatakan, Anda tahu, rekamannya terdengar seperti ada dua sumber suara, dan selain itu, algoritma itu mengatakan, ini sumber suara pertama yang saya temukan. One, two, three, four, five, six, seven, eight, nine, ten. Jadi hasilnya tidak sempurna, suaranya dapat, tapi algoritmanya juga menangkap sedikit suara musik di sana. Lalu ini hasil kedua dari algoritma itu. Tidak begitu buruk, di hasil kedua algoritma itu berhasil menghilangkan suara pria itu seluruhnya. Dan, Anda tahu, membersihkan suara musik, menghilangkan suara hitungan dari
satu sampai sepuluh. Jadi, Anda bisa melihat algoritma Unsupervised Learning seperti ini dan bertanya seberapa sulit mengimplementasikan ini, benar? Sepertinya untuk, Anda tahu, membangun aplikasi ini, tampaknya untuk melakukan pemrosesan suara ini Anda perlu menulis banyak sekali kode atau mungkin mentautkannya ke sekumpulan pustaka-pustaka synthesizer Java yang memproses suara, tampaknya program yang benar-benar rumit, untuk memproses suara ini, memisahkan suara dan seterusnya. Untuk membuat algoritma ini, mengerjakan apa yang baru saja Anda dengar, itu dapat dilakukan dengan satu baris kode - yang ditunjukkan ini. Butuh waktu lama bagi para peneliti untuk menghasilkan baris kode ini. Saya tidak sedang mengatakan ini persoalan mudah, tapi jelas bahwa kalau Anda menggunakan lingkungan pemrograman yang benar, banyak algoritma belajar dapat menjadi benar-benar program yang pendek. Jadi ini juga mengapa di kelas ini kita akan menggunakan lingkungan pemrograman Octave. Octave, adalah software open source gratis, dan menggunakan software seperti Octave atau Matlab, banyak algoritma belajar menjadi hanya beberapa baris kode untuk mengimplementasinya. Nanti di kelas ini, saya hanya akan mengajari Anda sedikit tentang bagaimana menggunakan Octave dan Anda akan mengimplementasikan beberapa dari algoritma ini di Octave. Atau jika Anda punya Matlab Anda bisa menggunakan itu juga. Ternyata di Silicon Valley, untuk banyak algoritma machine learning, apa yang kita lakukan pertama membuat purwa-rupa software kita dengan Octave karena software di Octave membuatnya sangat cepat mengimplementasikan algoritma belajar ini. Ini setiap fungsi ini seperti contohnya fungsi SVD kependekan dari Singular Value Decomposition; tapi itu jelas suatu rutin aljabar linier, yang baru saja dibuat dalam Octave. Jika Anda sempat mencoba melakukan ini di C++ atau Java, ini akan menjadi banyak banyak baris kode terhubung ke pustaka-pustaka Java atau C++ yang kompleks. Jadi, Anda bisa mengimplementasikan algoritma ini di C++ atau Java atau Python, hanya saja jauh lebih rumit melakukannya di bahasa-bahasa itu. Apa yang saya amati setelah mengajar machine learning selama hampir satu dekade sekarang, adalah bahwa, Anda belajar jauh lebih cepat jika Anda menggunakan Octave sebagai lingkungan pemrograman Anda, dan jika Anda menggunakan Octave sebagai alat belajar Anda dan sebagai pembuat purwa-rupa Anda, itu akan membuat Anda belajar dan membuat purwa-rupa algoritma belajar jauh
lebih cepat. Dan bahkan apa yang banyak orang akan lakukan untuk masuk perusahaan-perusahaan besar di Silicon Valley adalah sebenarnya, menggunakan algoritma seperti Octave untuk pertama-tama membuat purwa-rupa algoritma belajar, dan hanya setelah Anda tahu itu bekerja, baru Anda menerapkannya menggunakan C++ atau Java atau apapun. Jelas bahwa dengan melakukan hal-hal dengan cara ini, Anda bisa sering mendapatkan algoritma Anda bekerja jauh lebih cepat daripada jika Anda membuatnya duluan di C++. Jadi, Saya tahu bahwa sebagai seorang pengajar, Saya harus mengatakan "percaya saya pada hal ini" hanya sementara waktu, kecuali untuk Anda yang tidak pernah menggunakan lingkungan pemrograman jenis Octave ini sebelumnya, Saya akan meminta Anda percaya saya untuk hal ini, dan mengatakan bahwa Anda, Anda akan, saya pikir waktu Anda, waktu pengembangan Anda adalah salah satu sumber daya yang paling bernilai. Dan setelah melihat banyak orang melakukan ini, Saya pikir Anda sebagai seorang peneliti machine learning, atau pengembang machine learning akan jauh lebih produktif jika Anda belajar dengan mulai membuat purwa-rupa, mulai di Octave, di beberapa bahasa lainnya. Akhirnya, untuk merangkum video ini, Saya punya satu pertanyaan tinjauan singkat untuk Anda. Kita bicara tentang Unsupervised Learning, yaitu suatu pengaturan belajar dimana Anda memberi algoritma banyak sekali data dan hanya memintanya untuk menemukan struktur dalam data itu bagi kita. Dari empat contoh berikut, yang mana, mana dari keempat ini menurut Anda merupakan algoritma Unsupervised Learning karena berlawanan dengan persoalan Supervised Learning. Untuk masing-masing dari keempat kotak cek di sebelah kiri, cek kotak yang Anda pikir algoritma Unsupervised Learning akan tepat dan kemudian klik tombol pada kanan bawah untuk memeriksa
jawaban Anda. Jadi saat video berhenti sementara, silahkan jawab pertanyaan di slide. Jadi, semoga, Anda ingat persoalan folder spam. Jika Anda telah menamai data, Anda tahu, dengan spam dan bukan spam email, kita memperlakukan ini sebagai persoalan
Supervised Learning. Contoh rangkaian berita, yaitu tepatnya contoh Google News yang waktu lalu kita lihat di video ini, kita lihat bagaimana anda dapat menggunakan algoritma pengelompokkan untuk mengelompokkan artikel ini bersama jadi itu Unsupervised Learning. Contoh segmentasi pasar yang Saya bicarakan sedikit diawal, Anda dapat memperlakukan itu sebagai persoalan Unsupervised Learning karena saya hanya akan mengambil data algoritma saya dan memintanya menemukan segment-segmen pasar secara otomatis. Dan contoh terakhir, diabetes, nah, itu sebenarnya hanya seperti contoh kanker payudara kita di video yang lalu. Hanya sebagai pengganti, Anda tahu, tumor kanker baik dan jahat atau tumor jinak atau ganas kita menggantinya dengan punya diabetes atau tidak dan jadi kita akan menggunakannya sebagai supervised, kita akan memecahkan itu sebagai persoalan Supervised Learning sama seperti kita melakukannya untuk data tumor payudara. Jadi, sekian untuk Unsupervised Learning dan pada video berikutnya, kita akan mempelajari lebih ke algoritma belajar tertentu dan mulai membahas tentang bagaimana algoritma-algoritma ini bekerja dan bagaimana kita dapat, bagaimana Anda dapat mengimplementasikannya.