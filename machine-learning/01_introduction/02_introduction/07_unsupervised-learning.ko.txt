이 번 비디오에서는 기계 학습 문제의 두 번째 주요 타입, Unsupervised learning에 대해 알아볼 것입니다. 지난 비디오에서 우리는 Supervised learning에 대해 알아보았죠. 거기서는, 이와 같이 data set이 있었고, 거기서는, 이와 같이 data set이 있었고, 각각의 예시들은 각각 O와 X로 표기되었고 각각 양성과 악성을 의미합니다. Supervised learning의 각 예시들은. 어떤 예시가 맞는 답인지 명시적으로 알려주고, 이것이 곧 양성과 악성을 가리킵니다. Unsupervised learning에서, 우리는 어떤 라벨도 붙어있지 않거나 모두 같은 라벨을 가지는, 이쪽과 같이, 아마 다른 것 같은 데이터가 주어집니다. 이쪽과 같이, 아마 다른 것 같은 데이터가 주어집니다. 이쪽과 같이, 아마 다른 것 같은 데이터가 주어집니다. 즉, 우리에게 data set이 주어지고 그 data로 무엇을 할 것인지 그 data가 무슨 의미인지 알려주지 않습니다. 그저, data set이 주어질 뿐이죠. 이 data에서 어떤 구조를 찾을 수 있나요? 이 데이터 셋으로, 비지도 학습 알고리즘은 아마도 데이터가 두 집단으로 이루어져 있다고 할 것입니다 그래서 여기에 하나의 집단이 있고, 여기에 다른 집단이 있습니다 그리고, 지도 학습 알고리즘은 두 개의 분리된 집단으로 구분지을 것입니다. 이것을 클러스터링 알고리즘이라고 부릅니다 이것은 많은 곳에서 사용됩니다. 하나의 예로 구글 뉴스에서 사용이 되고 만약 한번도 보지 못했다면 만약 한번도 보지 못했다면 news.google.com 에 들어가서 확인해보세요 구글 뉴스는 매일 만개 혹은 십만 개의 새로운 웹에 있는 이야기를 보고 연관성 있는 뉴스 스토리들로 묶습니다 예를 들어봅시다 여기에 있는 링크는 BP Oil Well에 대한 다른 뉴스들입니다 BP Oil Well에 대한 다른 뉴스들입니다 여기 URL중 하나를 클릭해봅시다. 여기 URL중 하나를 클릭해봅시다. 여기 URL중 하나를 클릭해봅시다. 이와 같은 웹페이지를 볼 수 있습니다. "BP kills Macondo"란 제목을 가진
월스트리트의 이 기사는 "BP kills Macondo"란 제목을 가진
월스트리트의 이 기사는 BP사 석유시설 폭발로 인한 기름 유출에
 대한 내용을 보여줍니다. BP사 석유시설 폭발로 인한 기름 유출에
 대한 내용을 보여줍니다. BP사 석유시설 폭발로 인한 기름 유출에
 대한 내용을 보여줍니다. 또한, 왼쪽 창에서 다른 URL을 클릭하면 또한, 왼쪽 창에서 다른 URL을 클릭하면 다른 기사를 볼 수 있습니다. 이것은 동일한 BP사 기름 유출에 
대해 다룬 CNN의 기사입니다. 이것은 동일한 BP사 기름 유출에 
대해 다룬 CNN의 기사입니다. 이번엔 세 번째 링크를 눌러보면, 다른 이야기에 대한 것을 볼 수 있습니다. 이번 것은 UK Guardian의 BP 기름 유출에 대한 기사입니다. 여기서 구글 뉴스가 한 것은 수만개의 뉴스 기사를 찾고 그것들은 자동으로 
그룹화하여 분류한 것입니다. 그러므로 같은 주제를 가지는 뉴스기사가 함께 보이게 됩니다. Clustering 과
unsupervised learning은 Clustering 과
unsupervised learning은 다른 많은 문제에도 사용될 수 있습니다. 유전학적 자료 이해에 대한 것입니다. 이것은 DNA 미세배열의 한 예시입니다. 방법은 여러 명으로 부터 유전자 정보를 얻고 방법은 여러 명으로 부터 유전자 정보를 얻고 몇 명의 사람이 특정 유전자를 
가지고 있는지 여부를 확인하는 것입니다. 몇 명의 사람이 특정 유전자를 
가지고 있는지 여부를 확인하는 것입니다. 기술적으로는 특정 유전자들이 
얼마나 발현되었는지 확인합니다. 빨간색, 초록색, 회색과 같은 색깔은
측정군 전체를 대상으로 특정 유전자를 빨간색, 초록색, 회색과 같은 색깔은
측정군 전체를 대상으로 특정 유전자를 보유하는지, 보유하지
않는지에 대한 정도를 보유하는지, 보유하지
않는지에 대한 정도를 보여줍니다. 여기서 할 수 있는 것은 clustering algorithm을 사용하여 개인들을 다른 범주로 분류하거나 개인들을 다른 유형의 사람들로 분류하는 것입니다. 이 방법이 unsupervised learning이라 불리는 것은 우리가 알고리즘에 어떤 사람이 유형 1인지 어떤사람이 유형 2인지 혹은 유형 3인지 말해주지 않고, 단지 많은 data '자체'만 제공하기 때문입니다. 우선적으로 data가 어떤 것인지 모르고 누구의 data이고 어떤 유형인지도 모릅니다. 심지어는 '다른 유형의 사람'이 
어떤 것인지도 모르지만, 심지어는 '다른 유형의 사람'이 
어떤 것인지도 모르지만, 기계적으로 데이터 내에서 
구조를 찾을 수 있고 기계적으로 각 개인을 다른 유형으로 분류할 수 있을까요? 다른 유형으로 분류할 수 있을까요? 우리가 알고리즘에
제공한 데이터와 관련된 문제의 정확한 답을 제공하지 않아서 이 방법은 Unsupervised learning이라 합니다. Unsupervised learning 혹은 clustering은 
여러 응용에 사용됩니다. 대규모 컴퓨터 클러스터를 
구성할 때 사용됩니다. 제 친구 중 몇몇은 large data centers를 검토합니다. large data centers는 거대한 
컴퓨터 클러스터를 의미하고, 그 친구들은 어떤 기계가 함께 동작하는 경향이 
있는지 확인합니다. 만약 여러분이 그런 기계들을 함께 동작시킬 수 있다면, data centers를 더 효율적이게
만들 수 있습니다. 두 번째 응용은 소셜 네트워크 분석입니다. 어떤 친구에게 제일 이메일을 많이 보내는지에 대한 정보나 주어진 페이스북 친구 목록 혹은 구글 플러스 모임으로 우리가 자동으로 어떤 그룹이 친밀한 그룹이고 또, 어떤 그룹이 그룹 내 
전체 사람이 각각을 알고 있는 그룹인지에 대한 
것을 구별할 수 있을까요? 이번은 시장 세분화입니다. 많은 회사는 고객 정보의 
거대한 데이터베이스를 가지고 있습니다. 고객에 대한 데이터 셋을 보고 자동적이고 더 효율적으로 물건을 팔거나
다른 세분 시장에 대해 다른 광고를 보여주는 것, 둘을 동시에 하기 위해서 자동으로 세분 시장을 찾고 자동으로 세분 시장을 찾고 고객들을 다른 여러 세분시장으로 나눌 수 있습니까? 또 말하지만, 모든 고객
 정보를 가지고 있지만 세분시장을 미리 모르고 어떤 고객이 세분 시장 1에 속할지 어떤 고객이 세분 시장 1에 속할지 어떤 고객이 세분 시장 2에 속할지 어떤 고객이 세분 시장 2에 속할지 등등 같은 것을 미리 알 수 없기 때문에 등등 같은 것을 미리 알 수 없기 때문에 이 문제는 unsupervised learning 입니다. 이 문제는 unsupervised learning 입니다. 알고리즘이 data로부터 
모든 것 찾도록 해야합니다. 마지막으로, Unsupervised Learning방법은 놀랍게도 천문학 데이터 분석에서 사용되고 있습니다. 놀랍게도 천문학 데이터 분석에서 사용되고 있습니다. clustering algorithm은 은하계가 어떻게 탄생하게 되는지에 대한 흥미롭고 유용한 이론은 제공해줍니다. 위에 나와 있는 것들은 clustering에 대한 예제들입니다. 이 예제들은 대표적인 Unsupervised Learning 방법입니다. 이제 다른 예제에 대해 이야기 해보겠습니다. 저는 칵테일 파티 문제에 대한 이야기를 해보겠습니다. 여러분들은 이전에 칵테일 파티에 가본 적이 있나요? 그러면 여러분들은 파티가 진행되고 있다고 상상해봅시다. 방에는 사람들도 가득 차있고, 사람들은 주변에 앉아 있으며 동시에 이야기를 하고 있습니다. 있으며 동시에 이야기를 하고 있습니다. 동시에 이야기를 하고 있어 모든 목소리들은 겹쳐지게 되어서, 당신의 앞에 있는 사람과의 대화에 어려움이 있습니다. 작은 칵테일 파티에서 2명의 사람이 동시에 이야기 합니다. 그리고 우리는 2개의 마이크를 방안에 설치하였습니다. 2개의 마이크를 서로 다른 거리에 설치하였기 때문에, 마이크들은 서로 다른 두 사람의 목소리 조합을 녹음합니다. 아마도 1번화자의 목소리는 1번 마이크에서 조금 더 클 것이고 2번화자의 목소리는 2번 마이크에서 좀 더 클 것입니다. 그 이유는 2개의 마이크가 서로 2명의 화자의 상대적으로 다른 위치에 설치되어 있기 때문입니다. 하지만 각각의 마이크는 두 화자의 목소리 겹친 조합을 만들어 냅니다. 조사자의 의해 녹음된 두명의 여기 실제 녹음 파일이 있습니다. 이제 1번 마이크에 녹음된 내용을 재생하겠습니다. One (uno), two (dos), three (tres), four (cuatro), five (cinco), six (seis), seven (siete), eight (ocho), nine (nueve), ten (y diez) 아마도 가장 흥미로운 칵테일 파티는 아닐 것입니다. 2명의 화자는 1부터 10까지 2개의 언어로 카운팅을 합니다. 여러분이 들었던 것은 1번 마이크의 녹음파일입니다. 여기 2번 마이크의 녹음 파일입니다. Uno (one), dos (two), tres (three), cuatro (four), cinco (five), seis (six), siete (seven), ocho (eight), nueve (nine) y diez (ten). 우리가 할 수 있는 것은 우선 2개의 녹음 파일을 얻어서 칵테일 파티 algorithm이라고 불리는 Unsupervised Learning algorithm에 입력하는 것입니다. 그러면 이 algorithm은 당신을 위해 이 데이터에서 특정 구조를 찾아 줄 것입니다. algorithm이 할 일은 2개의 오디오 녹음 파일을 듣고 말하는 것입니다. 2개의 녹음 파일의 소리들은 추가되거나 서로 합쳐지거나, 우리가 가지고 있던 것처럼 하나의 소리도 합쳐집니다. 게다가, 칵테일 파티 algorithm이 게다가, 칵테일 파티 algorithm이 할 일은 합쳐지거나 섞인 녹음 파일에서 2개의 오디오 소스를 분리하는 것이다. 이것이 칵테일파티 algorithm의 첫 번째 결과입니다. One, two, three, four, five, six, seven, eight, nine, ten. 그래서 저는 녹음된 파일에서 영어 음성을 분리 했습니다. 이건 2번째 결과입니다. Uno, dos, tres, quatro, cinco, seis, siete, ocho, nueve y diez. 나쁘지 않습니다. 한 개 더 예제를 본다면, 여기 비슷한 상황에 다른 녹음파일이 있습니다. 1번 마이크에서는 One, two, three, four, five, six, seven, eight, nine, ten. OK, 그러면 이제 남자들은 칵테일파티에서 나온 후 집으로 가고, 그는 지금 방에 앉아있습니다. 이건 2번 마이크에 녹음된 내용입니다. One, two, three, four, five, six, seven, eight, nine, ten. 여러분이 이 2개의 마이크에 녹음된 파일을 같은 algorithm에게 준다면, 이번 역시 똑같이 2개의 오디오로 분류를 해줍니다. 제가 찾은 음성 소스의 첫 번째 내용입니다. One, two, three, four, five, six, seven, eight, nine, ten. 완벽하지는 않지만 약간의 음악소리가 섞인 음성을 얻었습니다. 다음 음성은 algorithm의 2번째 결과입니다. 전체적으로 음성을 제거한 후 나온 2번째 결과물도 나쁘지 않습니다. 음악 소리를 정리하고 카운팅 소리를 제거한 것입니다. 여러분들은 위와 같은 예제를 통해 Unsupervised Learning algorithm을 살펴 볼 수 있습니다. 또한 이 algorithm을 구현이 얼마나 복잡한지도 물어볼 수 있습니다. 이러한 프로그램들을 구현하기 위해, 우선 음성 처리를 하려면 여러분은 자바 라이브러리와 동기화된 수많은 코드를 동기화된 수많은 코드를 작성해야 할 필요가 있습니다. 음성들을 분리 해주는 매우 복잡한 프로그램입니다. 여러분이 방금 들은 것들을 하는 algorithm은 다음에 보여준 것 같은 한 줄의 코드로 작성할 수 있습니다. 이 한 줄을 구현하기 위해 연구자들은 많은 시간을 투자 하였습니다. 이건 절대로 간단한 문제가 아닙니다. 여러분이 이 프로그램 환경을 사용하면, 수많은 학습 algorithm을 간단히 프로그래밍 할 수 있습니다. 우리가 이 수업에서 Octave programming environment을 활용하려는 이유입니다. Octave는 매트랩 같은 툴이며, 무료로 공개된 SW입니다. 많은 학습 algorithm은 구현하기 위해 몇 줄의 코드만 있으면 됩니다. 이 수업 후반에선 저는 여러분들에게 Octave 사용법은 알려 줄 것입니다. 이후 여러분은 Octave을 이용하여 여러 가지 algorithm을 구현해볼 것 입니다 만약 여러분이 매트랩을 가지고 있으면 매트랩을 이용하셔도 됩니다. 실리콘 벨리에서는, 많은 기계학습 algorithm에 대해서, 우리가 해야 하는 일은 Octave를 활용하여 초기 프로토타입 프로그램을 만드는 것입니다. Octave의 SW를 활용하면 우리는 간단하게 학습 algorithm을 구현할 수 있기 때문입니다. SVD 함수와 같은 각각의 함수들은 특이값 분해를 의미하는데, 이것들은 선형대수를 이용한 방법이고, Octave으로 구현 합니다. 만약 여러분들이 이러한 작업을 C++, Java를 통해 하신다면 많은 줄의 코딩과 복잡한 라이브러리를 이용해야만  구현이 가능할 것 입니다. 여러분들은 C++, Java, Python 같은 언어를 통해  이러한 algorithm을 구현할 수 있습니다. 하지만 이러한 언어를 통해 구현하는 것은 일을 훨씬 복잡하게 하는 것입니다. 제가 십년동안 기계학습을 강의 하면서 알게 된 것은여러분들이 Octave같은 프로그래밍 환경을 이용하면 훨씬 빠르게 기계학습을 배운다는 것입니다. Octave 또는 prototyping 같은 툴을 이용하면 기본적인 빠르게 학습 algorithm을 배우고, 구현하는데 도움이 됩니다. 사실, 실리콘 밸리 회사들은 많은 사람들이 이렇게 작업을 하고 있습니다. 프로트타입 학습 algorithm을 구현하기 위해 Octave같은 algorithm을 이용하고, 작업하고, 사용하기위해 , 이후 C++, 자바 같은 다른 언어로 이식합니다. 이러한 방법을 이용하면 여러분들은 C++을 이용하여  처음부터 코드를 작성하는 것보다 빠르게 구현이 가능할것 입니다. 한명의 교육자로써, 수없이 “한번만 나를 믿어라“ 라고 말하고 싶습니다. 이전에 한번도 Octave 같은 프로그램 환경을 사용해 본 적 없는 여러분들을 위한 말입니다. 저는 여러분들에게 지금 이 순간 저를 믿으라고 말할 것 입니다. 여러분들에게 말하고, 또 그렇게 할 것입니다. 저는 여러분들의 시간, 개발 기간이 매우 가치 있는 자원이 될 것이라고 생각합니다. 또 저는 이렇게 공부하는 사람들을 여려명 보았습니다. 그들은 전부 기계학습 연구자 또는 기계학습 개발자 였습니다. 여러분들이 prototype, Octave, 다른 언어를 배우기 시작함으로써능력이 좋아 질것이라 생각됩니다 마지막으로 이 영상을 마무리하기 위해, 저는 여러분들을 위해  하나의 질문을 하겠습니다. 우리는 Unsupervised Learning 방법에 대해 이야기 했습니다. Unsupervised Learning 방법은 여러분들이 특정 algorithm에게 방대한 데이터를 주고, 특정 데이터 구조를 찾으라는 것을 말합니다. 다음 4가지 예시를 보면, 어떤 경우가 여러분이 생각하기에 Unsupervised Learning algorithm에 해당하는 경우인지 생각해 봅시다. 4개의 체크박스가 왼쪽에 있습니다. 여러분이 자율학습 algorithm에 해당된다고 생각하는 것을 체크하시고 오른쪽 아래 버튼을 클릭 하세요 이제 영상을 잠시 멈추겠습니다. 다음 화면의 문제에 답변을 해보세요. 희망적으로 여러분들은 spam folder problem 기억할 것입니다. 만약 여러분이 스팸, No 스팸이라고 표기된 데이터를 고 있으면 우리는 이것은 Supervised Learning 문제로 처리 할 수 있습니다. 뉴스 예제로 본다면, 우리는 Google News로 예제를 이 영상에서 보았습니다. 우리는 Unsupervised Learning 예제로 기사들을 clustering algorithm을 이용하여 분류하는지 보았습니다. 시장 세분화 분석 예제는 좀 전에 이야기 했습니다. 여러분은 Unsupervised Learning 문제로 이 문제를 다루었고 그 이유는 저는 단지 algorithm에 사용할 데이터를 가지고 있었고 자동적으로 시장 세분화 분석을 요청하였기 때문입니다. 마지막 예제를 보면, 당뇨병에 대한 내용입니다. 이건 이전 영상에 본 유방암 예제와 비슷합니다. 악성 종양인지 양성종양 대신에 단지 당뇨병이 “있다, 없다”로  바꿔 사용한 것입니다. 우리는 지도학습 방법을 이용하여 해결합니다. 우리는 이 문제를 유방암 데이터를 처리한 것 같이 Supervised Learning 문제로 풀 수 있습니다. 그래서 이 영상은 Unsupervised Learning에 대해 다루었습니다. 다음 영상에서는 특정 algorithm에 대해 자세히 공부해보고, algorithm들이 어떻게 작동하며, 어떻게 구현하는지에 대해 이야기 하겠습니다.