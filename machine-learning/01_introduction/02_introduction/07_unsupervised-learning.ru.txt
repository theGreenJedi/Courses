В этом видео мы поговорим о втором основном классе задач машинного обучения, который называется "обучение без учителя". В предыдущем видео мы говорили об обучении с учителем.Тогда наш набор данных выглядел так: каждый случай был отнесен к положительным или отрицательным, в зависимости от того, доброкачественной или злокачественной была опухоль. То есть для каждого случая при обучении с учителем был известен «правильный» ответ: опухоль доброкачественная или нет. При обучении без учителя данные выглядят по-другому, примерно так: у них нет категорий, или у всех одна и та же категория - все равно, что без категорий вообще. Итак, мы получаем набор данных и не получаем инструкций, что с ним делать. Мы даже не знаем, что означает каждая из точек. Вместо этого нам говорят: "Вот набор данных". «Есть ли в этих данных какая-либо структура?» На основе имеющегося набора данных алгоритм обучения без учителя может определить, что данные относятся к двум разным кластерам. Итак, есть один кластер, и есть другой кластер. И алгоритм обучения без учителя может разделить эти данные на два отдельных кластера. Это называется алгоритмом кластеризации. который широко используется на практике. Одним из примеров использования кластеризации является проект Google News. Если вы не знакомы с ним, то можете взглянуть, перейдя по этой ссылке: news.google.com. Сервис Google News ежедневно просматривает десятки или сотни тысяч новостных сообщений в сети и группирует их в связанные новостные блоки. Давайте рассмотрим пример. Приведенные здесь ссылки ведут на различные веб-страницы с новостями, посвященными аварии на нефтяной скважине BP. Давайте перейдем по одной из этих ссылок. Мы окажемся на веб-странице, например, вот на этой. статья из Wall Street Journal, посвященная аварии на нефтяной скважине BP. Статья называется "BP Kills Macondo" (BP останавливает Макондо), где Макондо - это название скважины. Если мы нажмем на другую ссылку из этой группы, мы попадем на страницу с другой историей. Это сюжет CNN, снова о разливе нефти на скважине BP. Если вы нажмете на третью ссылку, то увидите еще один новостной сюжет. Это репортаж UK Guardian о той же аварии. Итак, алгоритм Google News просмотрел десятки тысяч новостей и автоматически разбил их на кластеры. Таким образом, все новости, относящиеся к одной теме, отображаются рядом. Сама команда size кластеризации и алгоритмы обучения без учителя применяются и при решении многих других задач. Еще один пример - изучение геномов. Рассмотрим пример ДНК-микрочипов. Идея состоит в том, чтобы взять группу различных людей и для каждого из них измерить, сколько у них имеется или не имеется определенных генов. С технической точки зрения, вы измеряете уровень "экспрессии генов". Таким образом, эти цвета - красный, зеленый, серый и т.д. отображают степень выраженности определенного гена у разных индивидуумов. Теперь мы можем запустить алгоритм кластеризации, который разделит этих людей на категории, на типы. Итак, это алгоритм обучения без учителя, т.к. мы не сообщаем ему заранее, что эти люди относятся к типу 1, эти - к типу 2, а вот эти - к типу 3 и т.д. Вместо этого мы говорим: "Да, у меня есть куча данных". Я не знаю, что в этих данных. Я не знаю, кто к какому типу относится. Я даже не знаю, какие типы бывают, но я хочу, чтобы алгоритм автоматически обнаружил структуру в этих данных и разделил людей на типы, которые мне изначально неизвестны. Т.к. мы не даем алгоритму информацию о правильных ответах для примеров из нашего набора данных, это пример алгоритма обучения без учителя. Обучение без учителя или кластеризация используется и во множестве других приложений. Например, при создании компьютерных кластерных систем. У меня были друзья, которые изучали крупные центры обработки данных (ЦОД), т.е. большие кластеры компьютеров, и пытались выяснить, какие машины имеют тенденцию работать вместе и можно ли, объединив эти машины, повысить эффективность работы ЦОД. Вторым примером служит анализ социальных сетей. Можно ли, зная, с кем из друзей вы чаще всего переписываетесь по электронной почте, или исходя из списка ваших друзей в Фейсбуке или кругах Google+, автоматически определить сплоченные группы друзей? А выявить группы людей, где все друг с другом знакомы? Сегментация рынка. Многие компании имеют колоссальные базы данных с информацией о клиентах. Можно ли посмотреть на эти данные и автоматически выявить сегменты рынка, а также автоматически отнести клиентов к различным сегментам, чтобы иметь возможность автоматически и более эффективно продавать или продвигать свою продукцию в различных сегментах? Это снова пример обучения без учителя, поскольку, имея массу данных о покупателях, мы не знаем ни сегментов рынка, ни к какому из сегментов — первому, второму, и так далее — относится каждый из клиентов. И мы хотим, чтобы алгоритм определил всё это исходя только из имеющихся данных. Наконец, оказывается, что обучение без учителя удивительным образом используется в анализе астрономических данных, где алгоритмы кластеризации выдают неожиданно интересные и полезные теории происхождения галактик. Все это - примеры кластеризации, которая является лишь одним из типов обучения без учителя. Далее я расскажу вам еще об одном. Я собираюсь рассказать вам про, так называемую, задачу о шумной вечеринке. Вы ведь бывали на вечеринках? Представим вечеринку: в комнате полно людей, все сидят рядом и говорят одновременно, из-за этого их голоса перекрываются, и сложно услышать даже человека напротив. Представим шумную вечеринку из двух людей, говорящих одновременно. Это будет довольно маленькая вечеринка. Поместим в эту комнату два микрофона, вот они. Поскольку эти микрофоны находятся на разных расстояниях от говорящих, каждый микрофон записывает свою комбинацию голосов. Возможно первый собеседник слышен чуть громче в первом микрофоне, а второй - во втором. И это от того, что микрофоны находятся на разном расстоянии от собеседников , и каждый микрофон записывает комбинацию перекрывающихся голосов. Вот реальная запись двух собеседников, записанная одним исследователем. Давайте я сначала проиграю вам запись с первого микрофона. (Считают одновременно от одного до десяти по-английски и по-испански; громче слышен английский). Да, возможно, не самая интересная вечеринка: два человека считают от одного до десяти на двух языках. Вы только что прослушали запись с первого микрофона, а вот запись со второго. (Считают одновременно от одного до десяти по-английски и по-испански; громче слышен испанский). Мы можем взять записи с этих двух микрофонов и дать их на вход одного из алгоритмов обучения без учителя, называемого алгоритмом шумной вечеринки, и попросить алгоритм найти в этих данных какую-то структуру. Алгоритм прослушает эт и записи и выдаст следующее: "Похоже на две аудиозаписи, наложенные друг на друга." Более того, алгоритм шумной вечеринки разделит два исходных аудиосигнала, результатом наложения которых и были наши аудиозаписи. Вот первый результат работы алгоритма. (считает от одного до десяти). Итак, я выделил английский голос на одной из записей. А вот и вторая. (считает от одного до десяти по-испански). Не так плохо! В качестве еще одного примера, вот другая запись, сделанная в похожей ситуации. Вот запись с первого микрофона: (считает от одного до десяти на фоне музыки). Ну что же, наш несчастный герой вернулся домой с шумной вечеринки, и теперь сидит в комнате, разговаривая со своим радиоприемником. А вот запись со второго микрофона. (считает от одного до десяти на фоне музыки). Когда вы подаете эти две записи на вход того же алгоритма, он снова говорит: "Вы знаете, похоже что здесь есть два аудио источника", и кроме этого он говорит: "Вот первый из аудио источников, который я нашел." (считает от одного до десяти). Алгоритм не сработал идеально, он выделил голос, но также оставил небольшой музыкальный фон. А вот второй результат работы алгоритма. Неплохо, во втором фрагменте алгоритму удалось полностью убрать голос. И очистить музыку, избавившись от счета от одного до десяти. При рассмотрении подобного алгоритма без учителя у вас может возникнуть вопрос, насколько сложно реализовать подобное, верно? Кажется, что для того, чтобы создать это приложение, реализовать такую обработку звука, нужно было написать кучу кода, или, может быть, подключить пакет специальных Java-библиотек для аудио обработки. В общем, похоже, что для такого разделения источников звука и подобных задач требуется по-настоящему сложная программа. Но оказывается, что алгоритм, который будет делать то, что вы только что видели, может быть реализован с помощью одной строки кода — и она у вас перед глазами. У исследователей ушло много времени на то, чтобы создать эту строку кода. Поэтому я не говорю, что это простая задача. Но оказывается, что когда вы используете правильную среду разработки, многие обучающиеся алгоритмы могут реализованы с помощью коротких программ. Поэтому в этом курсе мы собираемся использовать среду разработки Octave. Octave — это бесплатное ПО с открытым кодом. Используя инструменты вроде Octave или Matlab, многие обучающиеся алгоритмы можно реализовать всего в нескольких строках кода. Позже в этом курсе я научу вас основам работы в системе Octave, и вы сможете реализовать в ней некоторые из этих алгоритмов. Вы также можете использовать Matlab, если он у вас есть. На самом деле, в Кремниевой Долине, первый прототип реализации многих алгоритмов машинного обучения осуществляют в Octave, потому что эта среда позволяет реализовывать такие алгоритмы невероятно быстро. Здесь каждая функция, например функция SVD, что означает сингулярное разложение (singular value decomposition) оказывается операцией из линейной алгебры, которая просто встроена в Octave. Если бы пришлось делать это на C++ или Java, то понадобилось бы очень много строк кода, чтобы скомпоновать вместе сложные библиотеки. Так что вы можете реализовать всё это на C++, Java или Python - просто на этих языках сделать это будет гораздо сложнее. После почти десяти лет преподавания машинного обучения, я заметил, что вы учитесь гораздо быстрее, если вы используете Octave в качестве обучающего инструмента и инструмента прототипирования. Он позволяет вам изучать и прототипировать обучающиеся алгоритмы гораздо быстрее. На самом деле, даже во многих крупных компаниях Кремниевой долины сначала создают прототип обучающегося алгоритма в Octave, а уже потом переносят его на C++, Java или другой язык программирования. Оказывается, что если разрабатывать алгоритм таким образом, то он зачастую воплощается на практике быстрее, чем если сразу начинать разработку в C++. Как инструктор я знаю, что мне позволено говорить "поверьте мне, я точно знаю" очень ограниченное число раз, но мне придется попросить тех, кто никогда прежде не использовал среды вроде Octave, довериться мне. Скажу также, что ваше время, время для разработки, является одним из самых ценных ресурсов. Наблюдая за многими людьми, делающими это, я думаю, что вы, как исследователь машинного обучения или разработчик машинного обучения, будете гораздо более продуктивны, если вы научитесь прототипировать на Octave, а не на другом языке. Наконец, у меня есть один завершающий вопрос к вам. Мы говорили об обучении без учителя как о ситуации, когда вы подаете на вход алгоритму кучу данных и просто просите найти структуру в этих данных. Какие из следующих четырех примеров, по вашему мнению, представляют собой обучение без учителя (как альтернативу обучению с учителем)? Отметьте те из четырех опций слева, в которых, вы думаете, уместно говорить об обучении без учителя, и затем нажмите на кнопку справа внизу, чтобы проверить ваш ответ. Когда видео остановится, пожалуйста ответьте на вопрос на слайде. Надеюсь, вы вспомнили проблему с папкой "спам". Если у вас есть данные с метками ("спам" или "не спам"), мы считаем это алгоритмом с учителем. Пример с историями из новостей - это в точности пример с Google News, который мы видели в этом видео. Мы видели как мы можем использовать кластеризующий алгоритм для того, чтобы кластеризовать эти новости вместе. Так что это обучение без учителя. Я говорил немного раньше о примере с сегментацией рынка - вы можете считать это задачей обучения без учителя, потому что мы всего лишь даем алгоритму данные и просим автоматически идентифицировать сегменты. Последний пример с диабетом по сути похож на пример с раком груди из предыдущего видео.За исключением того, что вместо доброкачественных и злокачественных опухолей мы определяем, есть ли у человека диабет или нет. Таким образом, для решения этой задачи будет использовано обучение с учителем, как и в случае с раком груди. Итак, мы закончили с обучением без учителя. В следующем видео мы глубже исследуем конкретные обучающиеся алгоритмы, и начнем говорить о том, как они работают и как вам их реализовать.