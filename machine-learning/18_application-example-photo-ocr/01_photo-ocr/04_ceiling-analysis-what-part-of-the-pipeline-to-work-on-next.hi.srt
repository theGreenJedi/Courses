1
00:00:00,120 --> 00:00:02,490
पहले के विडीओज़ में मैंने बार बार कहा है कि 

2
00:00:02,490 --> 00:00:06,670
जब आप एक मशीन लर्निंग सिस्टम डिवेल्प कर रहे हो, सबसे अधिक बहुमूल्य साधन / रीसॉर्स है 

3
00:00:06,670 --> 00:00:11,310
आपका समय बतौर डिवेलपर, कि किस पर काम करना है नेक्स्ट.

4
00:00:11,310 --> 00:00:13,380
या, अगर आपके पास एक टीम है डिवेलपर्ज़ की या 

5
00:00:13,380 --> 00:00:16,690
एक टीम एंज़िनियर्स की, जो साथ काम कर रहे हैं एक मशीन लर्निंग सिस्टम पर.

6
00:00:16,690 --> 00:00:20,160
एक बार फिर, सबसे अधिक बहुमूल्य साधन / रीसॉर्स है समय एंज़िनियर्स का या 

7
00:00:20,160 --> 00:00:22,450
या डिवेलपर्ज़ का जो सिस्टम पर काम कर रहे हैं.

8
00:00:22,450 --> 00:00:25,230
और आप वास्तव में जो टालना चाहेंगे वह है कि आप या 

9
00:00:25,230 --> 00:00:29,090
आपके सहकर्मी आपके मित्र व्यतीत करते हैं काफ़ी समय काम करते हुए किसी कम्पोनेंट पर.

10
00:00:29,090 --> 00:00:34,190
हफ़्तों या महीनों के काम के बाद यह समझ आता है, कि वह सब कुछ जो काम हुआ 

11
00:00:34,190 --> 00:00:39,450
उससे कुछ ज़्यादा अंतर नहीं आया है पर्फ़ॉर्मन्स में फ़ाइनल सिस्टम की.

12
00:00:39,450 --> 00:00:43,379
इस विडीओ में जो मैं करना चाहूँगा उसे कहते हैं सीलिंग अनालिसिस.

13
00:00:44,550 --> 00:00:48,750
जब आप या आपकी टीम काम रहे होते हैं पाइपलाइन पर आपके सिस्टम के,

14
00:00:48,750 --> 00:00:53,550
यह आपको कभी कभी दे सकता है एक महत्वपूर्ण इशारा, एक महत्वपूर्ण मार्ग दर्शन कि 

15
00:00:53,550 --> 00:00:56,770
कौन से हिस्से आपके पाइप्लायन में शायद होंगे आपके समय के सही इस्तेमाल के लिए.

16
00:00:59,770 --> 00:01:04,670
सीलिंग अनालिसिस की बात करने के लिए, मैं प्रयोग करता रहूँगा उदाहरण 

17
00:01:04,670 --> 00:01:06,570
फ़ोटो ओसीआर पाइप्लायन का.

18
00:01:06,570 --> 00:01:10,840
और देखिए यहाँ प्रत्येक बॉक्स, टेक्स्ट डिटेक्शन, कैरिक्टर सेग्मेंटेशन,

19
00:01:10,840 --> 00:01:12,160
कैरिक्टर रेकग्निशन,

20
00:01:12,160 --> 00:01:16,870
इनमें से प्रत्येक बॉक्स पर काम कर सकती है एक छोटी एंजिनियीरिंग टीम.

21
00:01:16,870 --> 00:01:19,660
या शायद पूरा सिस्टम ही आप ख़ुद बनाएँ, कैसे भी.

22
00:01:19,660 --> 00:01:22,850
लेकिन प्रश्न यह है कहाँ लगाने चाहिए अपने रीसॉर्सेज़ / साधन? 

23
00:01:22,850 --> 00:01:27,502
कौन से बॉक्स में श्रम लगाने से सबसे अधिक लाभ होगा बेहतर करने में 

24
00:01:27,502 --> 00:01:29,032
पर्फ़ॉर्मन्स को.

25
00:01:29,032 --> 00:01:32,151
समझाने के लिए सीलिंग अनालिसिस का सिद्धांत, 

26
00:01:32,151 --> 00:01:36,970
मैं प्रयोग करता रहूँगा उदाहरण अपने फ़ोटो ओसीआर पाइप्लायन का.

27
00:01:36,970 --> 00:01:40,470
जैसा मैंने पहले कहा, इनमें से प्रत्येक बॉक्स यहाँ, इनमें से प्रत्येक मशीन लर्निंग 

28
00:01:40,470 --> 00:01:45,070
कम्पोनेंट पर काम कर सकती है एक छोटी एंज़िनियीरस की टीम, या 

29
00:01:45,070 --> 00:01:49,050
पूरा सिस्टम बनाया जा सकता है केवल एक व्यक्ति द्वारा.

30
00:01:49,050 --> 00:01:52,090
लेकिन प्रश्न यह है कहाँ लगाने चाहिए अपने कम मात्रा में उपलब्ध संसाधन? 

31
00:01:52,090 --> 00:01:56,220
मतलब, इन कम्पोनेंट्स में से कौन से, कौन से एक या दो या शायद इन तीनों 

32
00:01:56,220 --> 00:02:01,650
कम्पोनेंट्स पर ही आपका समय लगाना लाभदायक होगा बेहतर करने के लिए पर्फ़ॉर्मन्स.

33
00:02:01,650 --> 00:02:04,070
तो यहाँ है सिद्धांत सीलिंग अनालिसिस का.

34
00:02:04,070 --> 00:02:07,900
जैसे डिवेलप करने की प्रक्रिया में दूसरे मशीन लर्निंग सिस्टम्स को भी, 

35
00:02:07,900 --> 00:02:12,560
निर्णय लेने के लिए कि क्या करना है डिवेलप करने के लिए सिस्टम को 

36
00:02:12,560 --> 00:02:17,570
यहाँ भी होगा काफ़ी सहायक एक अकेला रोल्ड नम्बर इवैल्यूएशन का होना 

37
00:02:17,570 --> 00:02:18,440
इस लर्निंग सिस्टम के लिए.

38
00:02:18,440 --> 00:02:20,310
अत: मान लीजिए हम लेते हैं कैरिक्टर लेवल एकुरेसी.

39
00:02:20,310 --> 00:02:24,920
अत: यदि आपके पास है एक टेस्ट सेट इमिज, क्या है फ़्रैक्शन ऐल्फ़बेट्स का या 

40
00:02:24,920 --> 00:02:27,730
कैरिक्टर्स का एक टेस्ट इमिज में जो हम रेकग्नायज़ करते हैं सही?

41
00:02:29,040 --> 00:02:32,650
या आप ले सकते हैं कोई और सिंगल रोल्ड नम्बर इवैल्यूएशन जो आप ले सकते थे, 

42
00:02:32,650 --> 00:02:33,320
यदि आप चाहें.

43
00:02:33,320 --> 00:02:36,560
लेकिन मान लीजिए कोई भी इवैल्यूएशन मेट्रिक के लिए, जो हम लेते हैं,

44
00:02:36,560 --> 00:02:41,990
हमें मिलती है पूरे सिस्टम की एकुरेसी फ़िलहाल है 72%.

45
00:02:41,990 --> 00:02:44,880
अत: दूसरे शब्दों में, हमारे पास हैं कुछ सेट टेस्ट इमिजेज़ का.

46
00:02:44,880 --> 00:02:47,880
और प्रत्येक टेस्ट सेट इमिज को, हम रन करते हैं टेक्स्ट डिटेक्शन से, 

47
00:02:47,880 --> 00:02:50,480
फ़िट कैरिक्टर सेग्मेंटेशन, फिर कैरिक्टर रेकग्निशन से.

48
00:02:50,480 --> 00:02:54,810
और हमें मिलता है कि टेस्ट सेट पर हमारी ओवरॉल एकुरेसी पूरे सिस्टम की थी 

49
00:02:54,810 --> 00:02:56,780
72% जो भी मेट्रिक आप लें.

50
00:02:58,180 --> 00:03:02,810
अब यह है सिद्धांत सीलिंग अनालिसिस का, जो हम करेंगे 

51
00:03:02,810 --> 00:03:07,280
मान लीजिए पहले मोड्यूल में हमारे मशीन लर्निंग पाइप्लायन, जो है टेक्स्ट डिटेक्शन.

52
00:03:07,280 --> 00:03:10,510
और जो हम करेंगे वह है कि टेस्ट सेट में हेरा-फेरी करेंगे.

53
00:03:10,510 --> 00:03:11,509
हम जाएँगे टेस्ट सेट पर.

54
00:03:13,290 --> 00:03:18,250
प्रत्येक टेस्ट इग्ज़ैम्पल के लिए, जो देगा सही टेक्स्ट डिटेक्शन 

55
00:03:18,250 --> 00:03:23,263
आउट्पुट, अत: दूसरे शब्दों में, हम जाएँगे टेस्ट सेट पर और सिर्फ़ बताएँगे 

56
00:03:23,263 --> 00:03:28,480
अल्गोरिद्म को कि कहाँ है टेक्स्ट प्रत्येक टेस्ट इग्ज़ैम्पल में.

57
00:03:28,480 --> 00:03:32,650
अत: दूसरे शब्दों में हम सिंमयूलेट / दिखावा करेंगे कि क्या होता है यदि आपके पास है 

58
00:03:32,650 --> 00:03:37,140
एक टेक्स्ट डिटेक्शन सिस्टम जिसकी सौ प्रतिशत एकुरेसी है, 

59
00:03:37,140 --> 00:03:40,796
 टेक्स्ट डिटेक्ट करने के लिए एक इमिज में.

60
00:03:40,796 --> 00:03:44,280
और वास्तव में जैसे आप यह करते हैं वह काफ़ी सरल है, सही है?

61
00:03:44,280 --> 00:03:48,220
इसके बजाय कि आपका लर्निंग अल्गोरिद्म डिटेक्ट करे टेक्स्ट इमिज में.

62
00:03:48,220 --> 00:03:49,870
आप नहीं कहेंगे कि इमिज पर जाओ और 

63
00:03:49,870 --> 00:03:54,280
सिर्फ़ हाथ से लेबल करो कि क्या लोकेशन है टेक्स्ट की मेरी टेस्ट इमिज में.

64
00:03:54,280 --> 00:03:56,180
और तब आप देंगे इन सही या 

65
00:03:56,180 --> 00:04:00,840
देंगे इन वास्तविक लेबल्ज़ कि टेक्स्ट कहाँ है आपके टेस्ट सेट को.

66
00:04:00,840 --> 00:04:04,060
और सिर्फ़ प्रयोग करेंगे इन वास्तविक लेबल्ज़ को जो आप फ़ीड करेंगे 

67
00:04:04,060 --> 00:04:07,530
पाइप्लायन की अगली स्टेज को, जो कैरिक्टर सेग्मेंटेशन है पाइप्लायन में.

68
00:04:07,530 --> 00:04:09,250
सही है? अत: एक बार फिर उसे कहते हैं.

69
00:04:09,250 --> 00:04:11,520
एक चेक मार्क यहाँ डालने से,

70
00:04:11,520 --> 00:04:15,520
मेरा मतलब है कि मैं जाऊँगा हमारे टेस्ट सेट पर और उसे दूँगा सही उत्तर.

71
00:04:15,520 --> 00:04:19,230
उसे देंगे सही लेबल्ज़ पाइपलाइन के टेक्स्ट डिटेक्शन पार्ट के लिए. 

72
00:04:19,230 --> 00:04:23,090
ताकि यह ऐसा होगा जैसे कि हमारे पास है एक सही / पर्फ़ेक्ट  टेक्स्ट डिटेक्शन सिस्टम मेरे टेस्ट सेट पर.

73
00:04:24,110 --> 00:04:28,400
उसके बाद क्या करे हम कि रन करेंगे इस डेटा को बाक़ी के पाइप्लायन में से. 

74
00:04:28,400 --> 00:04:30,920
कैरिक्टर सेग्मेंटेशन और  कैरिक्टर रेकग्निशन में से.

75
00:04:30,920 --> 00:04:34,020
और तब प्रयोग करके वही इवैल्यूएशन मेट्रिक जो पहले ली थी,

76
00:04:34,020 --> 00:04:37,800
मापने के लिए कुल / ओवरॉल एकुरेसी पूरे सिस्टम की.

77
00:04:37,800 --> 00:04:40,750
और सही टेक्स्ट डिटेक्शन से, हो सकता है पर्फ़ॉर्मन्स बेहतर हो जाए.

78
00:04:40,750 --> 00:04:43,700
और इस उदाहरण में यह बढ़ जाती है 89% तक.

79
00:04:43,700 --> 00:04:47,760
और तब हम चलते रहेंगे, जातें हैं पाइप्लायन की अगली स्टेज पर, अत:

80
00:04:47,760 --> 00:04:49,045
कैरिक्टर सेग्मेंटेशन.

81
00:04:49,045 --> 00:04:53,905
और एक बार फिर, मैं जाऊँगा हमारे टेस्ट सेट पर और उसे दूँगा सही

82
00:04:53,905 --> 00:04:57,900
टेक्स्ट डिटेक्शन आउट्पुट और दूँगा सही कैरिक्टर सेग्मेंटेशन आउट्पुट.

83
00:04:57,900 --> 00:05:03,170
अत: टेस्ट सेट जाएँ और हाथ से लेबल करें सही सेग्मेंटेशन टेक्स्ट का 

84
00:05:03,170 --> 00:05:06,210
अलग अलग कैरिक्टर्स में और देखिए उससे कितना फ़ायदा होता है.

85
00:05:06,210 --> 00:05:09,699
और मान लीजिए यह बढ़ती है 90% एकुरेसी तक पूरे सिस्टम की.

86
00:05:09,699 --> 00:05:10,280
ठीक?

87
00:05:10,280 --> 00:05:13,930
तो हमेशा की तरह एकुरेसी पूरे सिस्टम की.

88
00:05:13,930 --> 00:05:17,620
अत: जो भी अंतिम आउट्पुट हो कैरिक्टर सेग्मेंटेशन सिस्टम की.

89
00:05:17,620 --> 00:05:19,880
जो भी अंतिम आउट्पुट हो पूरे पाइप्लायन की, 

90
00:05:19,880 --> 00:05:22,450
यह मापेगा उसकी एकुरेसी.

91
00:05:22,450 --> 00:05:25,680
और अंत में, मैं बनाऊँगा एक कैरिक्टर रेकग्निशन सिस्टम और दूँगा उसे भी सही 

92
00:05:25,680 --> 00:05:29,980
लेबल्ज़, और यदि मैं यह भी करता हूँ तो कोई आश्चर्य नहीं होगा कि मुझे मिले 100% एकुरेसी.

93
00:05:31,440 --> 00:05:36,370
अब अच्छी बात यह अनालिसिस करने की है कि, हम अब समझते है क्या है 

94
00:05:36,370 --> 00:05:41,400
अच्छा पहलू बेहतर करने का प्रत्येक कम्पोनेंट को.

95
00:05:41,400 --> 00:05:44,960
तो हम देखते हैं कि यदि हमें मिलता है सही टेक्स्ट डिटेक्शन सिस्टम, 

96
00:05:44,960 --> 00:05:47,920
हमारी पर्फ़ॉर्मन्स बढ़ गयी 72 से 89%.

97
00:05:47,920 --> 00:05:51,640
तो वह है 17% बढ़त पर्फ़ॉर्मन्स की.

98
00:05:51,640 --> 00:05:55,910
तो इसका मतलब है कि यदि हम लें अपना मौजूदा सिस्टम और व्यतीत करें काफ़ी समय बेहतर करने के लिए 

99
00:05:55,910 --> 00:05:57,240
टेक्स्ट डिटेक्शन,

100
00:05:57,240 --> 00:06:00,930
उसका मतलब होगा कि हम सम्भवत: अपने सिस्टम की पर्फ़ॉर्मन्स बढ़ा सकते हैं 17% से. 

101
00:06:00,930 --> 00:06:03,750
ऐसा लगता है कि यह हमारी चेष्टा के योग्य है.

102
00:06:03,750 --> 00:06:05,350
जबकि इसके विपरीत, 

103
00:06:05,350 --> 00:06:11,200
टेक्स्ट डिटेक्शन से आगे जाते हुए, जब हमने दिया इसे एक सही कैरिक्टर सेग्मेंटेशन,

104
00:06:11,200 --> 00:06:15,210
पर्फ़ॉर्मन्स बढ़ी केवल 1% से, तो वह एक संयत कर देने वाला संदेश है.

105
00:06:15,210 --> 00:06:19,800
इसका मतलब है कि हम कितना भी समय लगाएँ कैरिक्टर सेग्मेंटेशन पर, 

106
00:06:19,800 --> 00:06:23,470
लेकिन उसकी सम्भावना ऊपर जाने की काफ़ी कम है और शायद आप नहीं चाहेंगे 

107
00:06:23,470 --> 00:06:26,880
रखना एक बड़ी टीम एंज़िनियर्स की, जो काम करे कैरिक्टर सेग्मेंटेशन पर.

108
00:06:26,880 --> 00:06:31,168
इस प्रकार का अनालिसिस यह दर्शाता है कि यद्यपि आप इसे देते हैं सही कैरिक्टर

109
00:06:31,168 --> 00:06:34,750
सेग्मेंटेशन, आपकी पर्फ़ॉर्मन्स बढ़ती है केवल एक प्रतिशत.

110
00:06:34,750 --> 00:06:39,690
उससे  वास्तव में अनुमान लगता है कि सीलिंग क्या है, क्या है उच्चतम सीमा कितना आप 

111
00:06:39,690 --> 00:06:43,260
बड़ा सकते हैं पर्फ़ॉर्मन्स आपके सिस्टम की उनमें से एक कम्पोनेंट पर काम करके.

112
00:06:44,370 --> 00:06:46,360
और अंत में, कैरिक्टर सेग्मेंटेशन से जाने पर, 

113
00:06:46,360 --> 00:06:50,300
जब हमारे पास है बेहतर कैरिक्टर रेकग्निशन, पर्फ़ॉर्मन्स बढ़ी 10 प्रतिशत. 

114
00:06:50,300 --> 00:06:55,360
अत: आप निर्णय ले सकते हैं कि 10 प्रतिशत की बढ़त आपके परिश्रम के कितनी योग्य है?

115
00:06:55,360 --> 00:07:00,420
इससे आपको पता चलता है कि शायद अधिक परिश्रम करने से पाइप्लायन की आख़िरी स्टेज पर,

116
00:07:00,420 --> 00:07:05,590
आप बढ़ा सकते हैं पर्फ़ॉर्मन्स आपके सिस्टम की.

117
00:07:05,590 --> 00:07:06,920
दूसरा तरीक़ा सोचने का इसके बारे में,

118
00:07:06,920 --> 00:07:10,190
है कि इस प्रकार की अनालिसिस करने से आप कोशिश कर रहे हैं सोचने की 

119
00:07:10,190 --> 00:07:14,680
कि क्या है सम्भावना बेहतर होने की इन में से प्रत्येक कम्पोनेंट की.

120
00:07:14,680 --> 00:07:17,490
या शायद आपको  कितना फ़ायदा होगा यदि एक 

121
00:07:17,490 --> 00:07:20,520
इन कम्पोनेंट्स में से बन जाए एकदम सही?

122
00:07:20,520 --> 00:07:24,260
और यह देता है एक उच्चतम सीमा उस सिस्टम की पर्फ़ॉर्मन्स की.

123
00:07:24,260 --> 00:07:28,220
अत: सीलिंग अनालिसिस का सिद्धांत काफ़ी महत्वपूर्ण है, मैं इस सिद्धांत को समझाता हूँ 

124
00:07:28,220 --> 00:07:31,910
फिर से लेकिन एक दूसरे उदाहरण के साथ लेकिन थोड़ा अधिक जटिल. 

125
00:07:31,910 --> 00:07:35,338
मान लीजिए आप करना चाहते हैं फ़ेस रेकग्निशन इमिजेज़ से.

126
00:07:35,338 --> 00:07:37,820
आप चाहते हैं देखना पिक्चर और पहचानना चाहते है कि

127
00:07:37,820 --> 00:07:41,375
क्या है या नहीं है इस पिक्चर में आपका एक ख़ास मित्र, और 

128
00:07:41,375 --> 00:07:44,900
कोशिश करते हैं पहचानने की इस इमिज में दिखाया गया व्यक्ति.

129
00:07:44,900 --> 00:07:47,100
यह एक थोड़ा कृत्रिम उदाहरण है,

130
00:07:47,100 --> 00:07:50,360
वास्तव में फ़ेस रेकग्निशन ऐसे नहीं किया जाता है.

131
00:07:50,360 --> 00:07:54,660
लेकिन हम करेंगे सेट इस उदाहरण के लिए, पाइप्लायन शायद कैसी 

132
00:07:54,660 --> 00:07:59,140
दिखती है आपको देने के लिए एक और उदाहरण कि कैसे सीलिंग अनालिसिस की प्रक्रिया है.

133
00:07:59,140 --> 00:08:04,460
तो  हमारे पास है एक कैमरा इमिज, और मान लीजिए हम डिज़ाइन करते हैं पाइप्लायन इस प्रकार,

134
00:08:04,460 --> 00:08:07,920
पहला काम जो आप करना चाहेंगे वह है प्री-प्रॉसेस करना इमिज को.

135
00:08:07,920 --> 00:08:10,830
तो चलिए लेते हैं इस इमिज को हमने दिखाई है ऊपर दाईं तरफ़, और 

136
00:08:10,830 --> 00:08:12,390
मान लीजिए हम चाहते हैं बैक्ग्राउंड / पृष्ठ भूमि हटाना.

137
00:08:12,390 --> 00:08:16,090
तो करें प्री-प्रासेसिंग और बैक्ग्राउंड हट जाती है.

138
00:08:16,090 --> 00:08:19,400
इसके बाद हम चाहते हैं करना मान लीजिए डिटेक्ट फ़ेस व्यक्ति का,

139
00:08:19,400 --> 00:08:21,070
जो अक्सर किया जाता है लर्निंग से. अत:

140
00:08:21,070 --> 00:08:25,740
हम रन करेंगे एक स्लाइडिंग विंडो क्रॉस फ़ायर एक बॉक्स बनाने के लिए व्यक्ति के चेहरे के आस पास.

141
00:08:25,740 --> 00:08:29,240
फ़ेस डिटेक्ट करने के बाद, ऐसा हुआ कि यदि आप पहचानना चाहते हैं व्यक्ति को,

142
00:08:29,240 --> 00:08:32,010
ऐसा है व्यक्ति की आँखे एक बहुत सहायक सूत्र होती हैं.

143
00:08:32,010 --> 00:08:36,550
हम वास्तव में, पहचानने के लिए मित्रों को, रंग-रूप उनकी 

144
00:08:36,550 --> 00:08:39,460
आँखों का वास्तव में एक परम महत्वपूर्ण सूत्र होता है.

145
00:08:39,460 --> 00:08:42,540
तो चलिए रन करते हैं एक और क्रॉस फ़ायर डिटेक्ट करने के लिए व्यक्ति की आँखें.

146
00:08:42,540 --> 00:08:44,690
अत: सेगमेंट आँखों का और 

147
00:08:44,690 --> 00:08:48,660
तब क्योंकि यह देगा हमें लाभदायक फ़ीचर्ज़ पहचानने के लिए व्यक्ति को.

148
00:08:48,660 --> 00:08:51,030
और तब चेहरे के और हिस्से जो महत्वपूर्ण हो सकते हैं.

149
00:08:51,030 --> 00:08:54,750
शायद नाक का सेगमेंट, मुँह का सेगमेंट.

150
00:08:54,750 --> 00:08:58,780
और तब ढूँढ लेने के बाद आँखे, नाक, और मुँह, ये सब देते हैं उपयोगी 

151
00:08:58,780 --> 00:09:02,140
जानकारी / इन्फ़र्मेशन फ़ीड करने के लिए शायद लजिस्टिक रेग्रेशन क्लैसिफ़ायअर में.

152
00:09:02,140 --> 00:09:05,450
और वहाँ जॉब हैं जिसकी कॉस्ट की प्राथमिकता है, इससे हमें मिलेगा ओवरॉल लेबल, 

153
00:09:05,450 --> 00:09:08,800
ढूँढने के लिए लेबल कि हमारे विचार से कौन है यह व्यक्ति.

154
00:09:10,180 --> 00:09:13,980
अत: यह है एक प्रकार से जटिल पाइप्लायन, यह शायद अधिक जटिल है 

155
00:09:13,980 --> 00:09:18,200
उससे जितना आप को प्रयोग करना चाहिए, यदि आप वास्तव में पहचानना चाहते हैं व्यक्ति को, लेकिन यह 

156
00:09:18,200 --> 00:09:20,889
एक समझाने के लिए उदाहरण है जो उपयोगी है सीलिंग अनालिसिस के बारे में सोचने के लिए.

157
00:09:22,140 --> 00:09:25,040
तो कैसे करते है सीलिंग अनालिसिस इस पाइप्लायन का.

158
00:09:25,040 --> 00:09:27,510
हम जाएँगे इन हिस्सों में से एक एक कर के.

159
00:09:27,510 --> 00:09:30,490
हमें मिलती है पूरे सिस्टम की एकुरेसी  85% है.

160
00:09:30,490 --> 00:09:32,920
पहला काम जो मैं  करुँगा वह है जाऊँगा टेस्ट सेट पर और 

161
00:09:32,920 --> 00:09:37,190
हाथ से इसकी पूरी बैक्ग्राउंड सेग्मेंटेशन करूँगा.

162
00:09:37,190 --> 00:09:39,150
तो जाइए टेस्ट सेट पर.

163
00:09:39,150 --> 00:09:43,180
और प्रयोग करके फ़ोटोशाप या ऐसा कुछ सिर्फ़ इसे बताने के लिए कि बैक्ग्राउंड कहाँ है और 

164
00:09:43,180 --> 00:09:47,030
सिर्फ़ स्वयं हटा दीजिए बैक ग्राउंड, तो यह है एक वास्तविक बैक्ग्राउंड, और 

165
00:09:47,030 --> 00:09:49,030
और देखिए कितनी बदलती है एकुरेसी.

166
00:09:49,030 --> 00:09:52,726
और इस उदाहरण में यह बढ़ती है 0.1% से.

167
00:09:52,726 --> 00:09:58,000
अत: यह है एक दृढ़ इशारा कि यद्यपि आपके पास एक सही बैक्ग्राउंड सेग्मेंटेशन है, 

168
00:09:58,000 --> 00:10:02,350
आपकी पर्फ़ॉर्मन्स, एक सही बैक्ग्राउंड हटाने पर भी पर्फ़ॉर्मन्स 

169
00:10:02,350 --> 00:10:03,890
आपके सिस्टम की उतनी नहीं बढ़ेगी.

170
00:10:03,890 --> 00:10:07,410
तो शायद यह योग्य नहीं हैं  कि एक बड़ी मेहनत की जाए प्री-प्रासेसिंग पर 

171
00:10:07,410 --> 00:10:08,210
बैक्ग्राउंड हटाने के लिए.

172
00:10:09,300 --> 00:10:13,440
तब शीघ्रता से जाइए टेस्ट सेट पर, और दीजिए इसे सही फ़ेस डिटेक्शन की इमिजेज़ 

173
00:10:13,440 --> 00:10:15,450
और फिर से कीजिए आँख नाक और 

174
00:10:15,450 --> 00:10:17,820
मुँह का सेग्मेंटेशन किसी भी क्रम में, कोई एक क्रम पकड़ लें.

175
00:10:17,820 --> 00:10:20,250
सिर्फ़ दें सही लोकेशन / स्थान आँखों का.

176
00:10:20,250 --> 00:10:23,550
सही स्थान नाक का, सही स्थान मुँह का, और 

177
00:10:23,550 --> 00:10:28,510
तब अंत में दें इसे सही ओवरॉल लेबल, मुझे मिल सकती है 100% एकुरेसी.

178
00:10:28,510 --> 00:10:33,280
और जैसे मैं सिस्टम से गुज़रता हूँ और देता हूँ इसे और अधिक कम्पोनेंट्स, 

179
00:10:33,280 --> 00:10:37,560
सही लेबल्ज़ टेस्ट सेट में, पर्फ़ॉर्मन्स पूरे सिस्टम कि बढ़ जाती है 

180
00:10:37,560 --> 00:10:40,570
और आप देख सकते हैं कि कितनी पर्फ़ॉर्मन्स बढ़ी अलग अलग स्टेप में.

181
00:10:40,570 --> 00:10:44,420
अत: देने से इसे एक सही फ़ेस डिटेक्शन, 

182
00:10:44,420 --> 00:10:48,704
ऐसा प्रतीत होता है कि पूरे सिस्टम की पर्फ़ॉर्मन्स बढ़ी 5.9% से.

183
00:10:48,704 --> 00:10:50,960
अत: वह एक काफ़ी बड़ी वृद्धि है.

184
00:10:50,960 --> 00:10:55,450
इसका मतलब है कि एक बेहतर फ़ेस डिटेक्शन पर मेहनत करना आपके परिश्रम के योग्य होगा.

185
00:10:55,450 --> 00:10:57,654
यह बढ़ी 4% वहाँ, यह बढ़ी 1% वहाँ.

186
00:10:57,654 --> 00:11:01,347
1% वहाँ, और 3% वहाँ.

187
00:11:01,347 --> 00:11:05,427
अत: ऐसा प्रतीत होता है कि कम्पोनेंट जिस पर काम करना सबसे अच्छा होगा वह है,

188
00:11:05,427 --> 00:11:09,507
जब मैंने दिया इसे एक सही फ़ेस डिटेक्शन सिस्टम पर्फ़ॉर्मन्स बढ़ी 5.9 

189
00:11:09,507 --> 00:11:14,470
प्रतिशत, जब दिया सही आँखों का सेग्मेंटेशन, यह बढ़ी चार प्रतिशत.

190
00:11:14,470 --> 00:11:18,499
और तब मेरा अंतिम जो है कॉस्ट और वहाँ है तीन प्रतिशत 

191
00:11:18,499 --> 00:11:19,500
का गैप शायद.

192
00:11:19,500 --> 00:11:25,620
अत: यह बताता है कि क्या कम्पोनेंट्स योग्य हैं कि उन पर काम किया जाए.

193
00:11:25,620 --> 00:11:28,680
और वैसे मैं आपको बताना चाहता हूँ एक सच्ची चेतावनी पूर्ण कहानी.

194
00:11:28,680 --> 00:11:31,531
मैं इसे रखता हूँ प्री प्रासेसिंग में का कारण है 

195
00:11:31,531 --> 00:11:36,091
बैक ग्राउंड हटाने को कि मुझे वास्तव में पता है एक सच्ची कहानी जहाँ 

196
00:11:36,091 --> 00:11:40,582
एक रीसर्च टीम में वास्तव में दो लोगों को व्यतीत करना पड़ा था लगभग डेढ़ 

197
00:11:40,582 --> 00:11:44,600
साल, लगभग 18 महीने एक बेहतर बैक्ग्राउंड रेमूवल पर काम करते हुए.

198
00:11:44,600 --> 00:11:48,865
लेकिन मैं वास्तव में स्पष्ट विवरण नहीं दूँगा प्रत्यक्ष कारणों से, लेकिन एक कम्प्यूटर  

199
00:11:48,865 --> 00:11:53,073
विज़न की ऐप्लिकेशन थी जहाँ दो एंजिनीयर्ज की एक टीम थी जिन्हें लगाने पड़े थे लगभग 

200
00:11:53,073 --> 00:11:56,814
डेढ़ साल एक बेहतर बैक्ग्राउंड रेमूवल पर काम करते हुए, वास्तव में बनाए 

201
00:11:56,814 --> 00:12:01,190
बहुत पेचीदा अल्गोरिद्म्स और एक रीसर्च पेपर पब्लिश किया.

202
00:12:01,190 --> 00:12:04,730
लेकिन इतने सब काम के बाद उन्हें पता चला कि इससे ज़्यादा अंतर नहीं आया 

203
00:12:04,730 --> 00:12:10,440
ओवरॉल पर्फ़ॉर्मन्स में ऐप्लिकेशन की जिस पर वे काम कर रहे थे और 

204
00:12:10,440 --> 00:12:14,690
यदि किसी ने किया होता सीलिंग अनालिसिस पहले से 

205
00:12:14,690 --> 00:12:16,170
शायद उनको पता चल जाता.

206
00:12:17,250 --> 00:12:18,680
और उनमें से एक ने मुझे कहा बाद में.

207
00:12:18,680 --> 00:12:22,780
यदि आपने किया होता इस प्रकार का सीलिंग अनालिसिस इस प्रकार शायद उन्हें समझ आ जाती 

208
00:12:22,780 --> 00:12:24,610
उनके 18 महीनों के काम से पहले.

209
00:12:24,610 --> 00:12:28,420
कि वे अपना परिश्रम केंद्रित करते किसी और कम्पोनेंट पर 

210
00:12:28,420 --> 00:12:31,510
बजाय इसके लगाते 18 महीने एक बैक्ग्राउंड रेमूवल पर काम करते हुए.

211
00:12:33,940 --> 00:12:35,610
अत: सारांश में,

212
00:12:35,610 --> 00:12:39,900
पाइप्लायन्स काफ़ी व्यापक हैं जटिल मशीन लर्निंग ऐप्लिकेशन्स में.

213
00:12:39,900 --> 00:12:43,624
और जब आप एक बड़ी मशीन लर्निंग ऐप्लिकेशन पर काम कर रहे हो,

214
00:12:43,624 --> 00:12:47,280
आपका समय एक डिवेलपर की तरह इतना बहुमूल्य है, अत: गँवाए नहीं आपका 

215
00:12:47,280 --> 00:12:51,160
समय काम करके उस पर जिससे अंत में कोई फ़र्क़ न पड़े.

216
00:12:51,160 --> 00:12:54,632
और इस विडीओ में हमने बात की इस सिद्धांत सीलिंग अनालिसिस की, 

217
00:12:54,632 --> 00:12:58,663
जो मुझे अक्सर एक अच्छा टूल लगा है जानने के लिए कम्पोनेंट 

218
00:12:58,663 --> 00:13:02,220
जिस पर यदि हम केंद्रित करें और एक बड़ा अंतर ला पाएँ.

219
00:13:02,220 --> 00:13:07,340
उससे काफ़ी ज़्यादा अंतर आएगा ओवरॉल पर्फ़ॉर्मन्स में आपके फ़ाइनल सिस्टम की.

220
00:13:07,340 --> 00:13:10,503
अत: कुछ वर्षों से मशीन लर्निंग पर काम करते हुए, मैंने वास्तव में सीखा है  

221
00:13:10,503 --> 00:13:13,259
विश्वास न करना अपने आंतरिक एहसास पर कि कौन से कम्पोनेंट पर काम करना है.

222
00:13:13,259 --> 00:13:17,199
अत: बहुधा, मैंने मशीन लर्निंग पर एक लंबे समय से काम किया है, लेकिन अक्सर मैं देखता 

223
00:13:17,199 --> 00:13:20,839
हूँ एक मशीन लर्निंग प्रोबलेम को, और शायद मुझे कुछ अंदर से एहसास होता है कि 

224
00:13:20,839 --> 00:13:24,160
चलो उस कम्पोनेंट पर काम करते हैं और मैं पूरा समय उस पर व्यतीत कर देता हूँ.

225
00:13:24,160 --> 00:13:27,640
पर पिछले कुछ सालों से, मैंने यहाँ तक कि अपनी आंतरिक एहसास पर विश्वास करना शुरू किया है और 

226
00:13:27,640 --> 00:13:29,888
सीखा है आंतरिक एहसास पर उतना विश्वास न करना भी.

227
00:13:29,888 --> 00:13:34,090
और उसके बजाय, यदि आपके पास है एक प्रकार की मशीन लर्निंग प्रॉब्लम जहाँ सम्भव है 

228
00:13:34,090 --> 00:13:37,993
चीज़ों को स्ट्रक्चर करना और सीलिंग अनालिसिस करना, अक्सर वहाँ एक अधिक बेहतर और 

229
00:13:37,993 --> 00:13:41,355
अधिक विश्वसनीय ढंग है निर्णय लेने का कि कहाँ श्रम डालना है,

230
00:13:41,355 --> 00:13:44,560
वास्तव में बेहतर करने के लिए पर्फ़ॉर्मन्स किसी कम्पोनेंट की.

231
00:13:44,560 --> 00:13:47,470
और आश्वासित रहें कि यदि आप वह करते हैं उससे वास्तव में 

232
00:13:47,470 --> 00:13:50,310
एक बड़ा प्रभाव होगा अन्तिम पर्फ़ॉर्मन्स पर ओवरॉल सिस्टम की.