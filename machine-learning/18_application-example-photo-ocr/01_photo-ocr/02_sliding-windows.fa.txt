در جلسه قبل ما درباره خطوط تصویر OCR و این که چگونه کار می کند صحبت کردیم که در آن، یک تصویر گرفته می شود و به دنباله ای از مؤلفه های یادگیری ماشین به منظور خواندن متن ظاهر شده در تصویر داده می شود در این ویدئو، من می خواهم کمی بیش تر درباره این که هر یک از مؤلفه های خط OCR کار می کند. در این ویدئو به طور خاص روی موضوعی به نام پنجره های تقسیم بنده تمرکز دارد. در اولین مرحله از فیلتر کردن تشخیص متن بود که در آن، ما به تصویری مانند این نگاه می کنیم و سعی در یافتن ناحیه هایی از متن که در این تصویر ظاهر می شوند، داریم. تشخیص متن یک مسئله غیرعادی در بینایی ماشین است به دلیل وابستگیش به طول متنی که ما سعی در یافتنش داریم این مستطیل هایی که شما سعی در پیدا کردنش دارید، جنبه های متفاوتی دارد بنابراین به منظور صحبت درباره تشخیص چیزها در تصاویر اجازه بدهید که با یک نمونه ساده تر از تشخیص عابرین پیاده شروع کنیم و بعدا به موضوع برمی گردیم. ایده هایی که در تشخیص عابرین پیاده به کار برده شده است و در تشخیص متن اعمال می شود را بررسی کنیم. در تشخیص عابرین پیاده شما می خواهید تصویری شبیه این را بگیرید و هر یک از عابرین پیاده که در تصویر هستند را پیدا کنید بنابریان، یک عابرپیاده را پیدا کردیم، عابر دوم، عابر سوم، عابر چهارم، پنجم و یکی دیگر. این مسئله شاید کمی ساده تر از تشخیص متن باشد به دلیل نرخ جنبه ها و این که بیش تر عابرین شبیه به هم هستند. با استفاده از تنها یک نرخ جنبه برای این مستطیل ها که ما سعی در پیدا کردنشان داریم. منظور من از نرخ جنبه نرخ بین ارتفاع و عرض این مستطیل هاست. آن ها همه برای عابرین مختلف یکسان هستند ولی برای تشخیص متن،نرخ ارتفاع نرخ عرض برای خطوط مختلف متن متفاوت است. همچنین برای تشخیص عابرین پیاده عابرین می توانند فاصله های مختلفی از دوربین داشته باشند بنابراین، ارتفاع این مستطیل ها بسته به این که چقدر از دوربین دور هستند، متفاوت باشد. ولی نرخ جنبه یکسان است. به منظور ایجاد یک سیستم تشخیص عابرپیاده به این گونه عمل می کنیم. فرض کنید که ما روی نرخ جنبه 82 در 36 استاندارد سازی می شود و ما می توانستیم اعداد روند شده مانند 80 در 40 یا چیز دیگه ای انتخاب کنیم ولی 82 در 36 خوب به نظر میرسد کاری که ما می توانیم انجام این است که برویم بیرون و مجموعه های آموزشی بزرگی با نمونه های مثبت و منفی جمع آوری کنیم. اینجا نمونه هایی از بسته های تصویری  82 در 36 وجود دارد که شامل عابرین پیاده است و اینجا هم نمونه هایی که شامل نیستند را داریم. در این اسلاید من 12 نمونه مثبت از y1 و 12 نمونه مثبت از y0  را نشان می دهم. در یک نرم افزار تشخیص عابرین پیاده معمولی تر ما ممکن است از یک مجموعه داده آموزشی 1000 تایی تا شاید مجموعه. آموزشی 10000 تایی یا حتی اگر بتوانیم مجموعه داده بزرگ تر داشته باشیم بعد از آن شما می توانید آن ها را در شبکه یا هر الگوریتم آموزشی دیگری آموزش دهید که یک بسته MS یا ابعاد 82 در 36 را بگیرد و y را دسته بندی کند و مشحص کند  آن بسته تصویر شامل عابر پیاده هست یا نه به این ترتیب شما روشی برای اعمال یادگیری باناظر دارید که با گرفتن یک بسته تصویر می تواند مشخص کند که آیا در تصویر ضبط شده ، عابرپیاده هست یا نه. حالا، اجازه بدهید که یک تصویر جدید، یک مجموعه آزمون جدید مانند این داشته باشیم و ما می خواهیم یک تصویر عابرپیاده را پیدا کنیم. کاری که ما می توانیم انجام بدهیم این است که با گرفتن یک بسته مستطیل شکل از این تصویر شروع کنیم. مانند انچه که در بالا نشان داده شد این تصویر باید بسته ای 82 در 36 از این تصویر باشد و این تصویر به دسته بندمان داده شود تا مشخص شود که آیا یک عابرپیاده در بسته تصویر وجود دارد یا نه و امیدواریم که دسته بند ما Y برابر 0 را برای آن بسته برگرداند، چون عابرپیاده ای وجود ندارد. سپس، ما آن مستطیل سفید را می گیریم و ما آن را کمی تقسیم می کنیم و بعدا آن بسته جدید را به دسته بندمان می دهیم تا تصمیم بگیرد آیا عابرپیاده وجود دارد یا نه. با انجام این کار، ما سپس پنجره را بیش تربه سمت راست  تقسیم می کنیم بسته را در دسته بند اعمال می کنیم. مقداری که شما باید بر طبق آن ، هر بار مستطیل را جا به جا کنید یک پارامتر است و گاهی اوقات به آن اندازه گام (step size) و گاهی به آن پارامتر تقسیم (slide parameter)  گویند شما در هر بار این را یک پیکسل جا به جا می کنید. پس شما می توانید از اندازه گام 1 استفاده کنید که معمولا بهترین کارایی را دارد، این کار کارآمدتر است و پس استفاده از اندازه گام شاید 4 پیکسلی در یک زمان یا 8 پیکسلی در یک زمان یا تعداد زیاد از پیکسل ها معمول باشد شما می توانید مستطیل را هر بار کمی حرکت دهید بنابراین با استفاده از این فرآیند، شما می توانید مستطیل را کمی به سمت راست حرکت دهید و هر یک از بسته ها را روی یک دسته بند اجرا کنید تا این که ، در حالی که شما این پنجره را روی مکان های مختلف در تصویر تقسیم کرده اید first starting with the first
با شروع از اولین ردیف و بعد به سراغ ردیف های بعدی در تصویر می رویم، شما می توانید همه این بسته های مختلف تصویر را در اندازه گام های دیگر در دسته بندتان اجرا کنید حالا، مستطیل قبلی یک مستطیل تقریبا کوچک بود که فقط عابرین پیاده با یک اندازه خاص را تشخیص می داد. کاری که ما بعد از این انجام می دهیم این است که شروع می کنیم به بسته های بزرگتر تصویر می کنیم. پس حالا بیایید بسته های تصاویر بزرگتر برداریم مثل چیزی که اینجا نشان داده می شود و و آن ها را در دسته بند اجرا کنیم. در ضمن وقتی من می گویم بسته تصویر بزرگتر برداریم، چیزی که واقعا منظورم هست این است که وقتی شما یک بسته تصویر مثل این را برمی دارید کاری که شما در واقع انجام می دهید، برداشتن آن بسته تصویر و تغییر اندازه آن به 82 در 36 است. پس شما این بسته بزرگ تر را برمی دارید و آن را به تصویر کوچکتر تغییر اندازه می دهید و بنابراین این ممکن است تصویر با اندازه کوچکتر از آنی باشد که شما می خواهید به دسته بند بدهیئ و تعیین کنید که آیا عابرپیاده در آن بسته هست یا نه. و در نهایت شما می توانید این کار را حتی با مقیاس های بزرگتر هم انجام بدهید و آن طرف پنجره ها تا آخر اجرا کنید و بعد از تمام این فرایند، الگوریتم شما تشخیص می دهد که آیا عابرپیاده در تصویر ظاهر شده است یا نه، پس این گونه شما یک دسته بند را آموزش می دهید و بعد از یک دسته بند پنجره های تقسیم  یا یک تشخیص دهنده پنجره های تقسیم برای یافتن عابرین پیاده در تصویر استفاده می کنید. اجازه بدهید که به یک نمونه تشخیص متن برویم و درباره آن مرحله در لوله OCR تصویر صحبت کنیم که هدف ما یافتن نواحی متن در واحد است. مانند یافتن عابرپیاده شما می توانید با یک مجموعه داده آموزشی برچسب دار با نمونه های مثبت و نمونه های منفی دارای نواحی متن دار کار کنید. پس به جای این که سعی کنیم عابرین پیاده را تشخیص دهیم ، حالا می خواهیم متن را تشخیص بدهیم. و بنابراین، نمونه های مثبت بسته هایی از تصاویر هستند که متن دارند. و نمونه های منفی بسته هایی از تصاویر هستند که متن ندارند. با آموزش این، ما حالا می توانیم آن را به یک تصویر جدید در مجموعه تصاویر تست اعمال کنیم. انجا تصویری هست که ما به عنوان نمونه استفاده می کنیم. حالا، آخرین باری که ما اجرا می کنیم، برای این نمونه، ما می خواهیم که پنجره های تقسیم را در فقط یک مقیاس ثابت و فقط برای هدف شرح دادن اجرا کنیم، به این معنی که من می خواهم فقط از یک اندازه مستطیل استفاده کنم. اما دسته بند پنجره های تقسیم روی بسیاری از بسته های تصویر کوچک مانند این، اگر من آن را انجام بدهم، انچه که در آخر به آن می رسم نتیجه ای مانند این است که ناحیه سفید جایی است که سیستم تشخیص متن من،آن را متن تشخیص داده است و بنابراین محورهای این دو شکل یکسان هستند. پس یک ناحیه ای این بالا مربوط به یک ناحیه این بالا است، پس این که این بالا سیاه است نشان می دهد که  دسته بند فکر نمی کند که هیچ متنی این بالا باشد در حالی که این که چیزهای سفید زیادی اینجا وجود دارد نشان می دهد که دسته بند فکر می کند تعداد زیادی متن پیدا شده است. آن طرف، روی تصویر کاری که من روی این تصویر پایین سمت چپ انجام دادم این است که از سفید برای نمایش جایی که دسته بند فکر می کند متن است استفاده کرده ام. و سایه های مختلف خاکستری مربوط به احتمالی است که توسط دسته بند به دست می آید. پس سایه های خاکستری مربوط به جاهایی است که دسته بند فکر می کند متن چیدا شده اما زیاد مطمئن نیست. سفید روشن مربوط به این است که آیا دسته بند با احتمال خیلی زیادی احتمال حضور عابر پیاده در آن مکان را تخمین زده است یا نه. کار ما هنوز کامل نشده چون که چیزی که ما واقعا می خواهیم انجام بدهیم این است که اطراف همه ناحیه هایی که متن در تصویر وجود دارد را مستطیل بکشیم، پس باید یک مرحله دیگر هم برویم که این است که ما خروجی دسته بند را می گیریم و به آن، آنچه را که عملگر توسعه نام دارد را اعمال می کنیم. کاری که این عملگر انجام می دهد این است که تصویر را می گیرد و هر یک از لکه های سفید را می گیرد، این هر یک از نواحی سفید را می گیرد و آن ناحیه را توسعه می دهد. از نظر ریاضی، روشی که شما آن را پیاده سازی می کنید این است که اگر شما به تصویر سمت راست نگاه کنید، کاری که ما می خواهیم برای ایجاد تصویر سمت راست انجام بدهیم این است که برای هر پیکسل می پرسیم که آیا برخی از فاصله های یک پیکسل سفید در تصویر سمت چپ را توسعه داده است یا نه. و پس اگر یک پیکسل خاص در میان 5 یا 10 پیکسل سفید در تصویر سمت چپ است پس ما آن پیکسل سفید در تصویر سمت راست را رنگ می کنیم. بنابراین تاثیر این کار این است که ما هر یک از لکه های سفید در تصویر سمت چپ را می گیریم آن ها را کمی توسعه می دهیم کمی بزرگشون می کنیم از این طریق که نگاه می کنیم آیا پیکسل های همسایه اش، پیکسل های سفید هستند یا نه و بعد آن پیکسل های همسایه را هم سفید می کنیم. در نهاییت، ما تقریبا کارمان تمام است. حالا می توانیم به این تصویر سمت راست نگاه کنیم و فقط به مؤلفه های ارتباط دهنده توجه کنیم و به نواحی سفید نگاه کنیم و مستطیل هایی اطراف آن ها بکشیم. و به خصوص اگر ما به همه نواحی سفید نگاه کنیم مثل این، مثل این، این یکی و بقیه اش و اگر از یک روش ساده اکتشافی استفاده کنیم مستطیل هایی را می بینیم که نسبت ابعادشان جالب است چون که ما می دانیم که جعبه های اطراف متن باید عرضشان نسیبت به طولشان بزرگتر باشد. پس اگر ما لکه های باریک، و بلند مثل این و این یکی را در نظر نگیریم و این ها را بی خیال بشویم چون که خیلی باریک و بلند هستند بعدش مستطیل هایی اطراف آن هایی که ارتفاعشان و نسبت ابعادشان مانند نواحی متنی است، می کشیم. ما می توانیم مستطیل هایی را اطراف این ناحیه متنی این ناحیه متنی و این ناحیه متنی مربوط به لوگوی مرکز تجاری  اجناس عتیقه Lula’B خودِ Lula B’s  واین نشانه کوچک آن طرف بکشیم. این نمونه یک قسمت متنی را در واقع از دست داده است. یک قسمتی که به سختی می شود خواند، اما یه تکه متنی اینجا هست. که می گوید XX  و مربوط به این است اما نسبت ابعادش اشتباه بوده پس ما آن را در نظر نگرفتیم. ما می دانیم که این کار برای این توصیر مشکلی ندارد ولی در این نمونه خاص، دسته بند در واقع تکه ای از متن را از دست داده است. خواندن این تکه خیلی سخت است چون که متنی روی پنجره شفاف نوشته شده است. خوب، این تشخیص متن باس اتفاده از پنجره تقسیم بندی بود. و ما این مستطیل ها را با متن داخل آن پیدا کردیم حالا می توانیم این نواحی را برش دهیم و بعدا از آن ها در مراحل بعدی خط لوله جهت تلاش برای مواجهه با متن استفاده کنیم. حالا، یادآوری می کنیم که مرحله دوم خط لوله جداسازی کاراکتر بود، پس با داشتن یک تصویر مثل این، که در بالا نشان داده شد چگونه می توان تک تک کاراکترها را در تصویر جدا کرد؟ خوب کاری که ما می توانیم بکنیم این است که دوباره از الگوریتم یادگیری باناظر با نمونه های مثبت و نمونه های منفی استفاده کنیم، کاری که می خواهیم بکنیم این است که به این تصویر نگاه کنیم و سعی کنیم بفهمیم که آیا بین دو کاراکتر، دقیقا در وسط تصویر، فاصله ای هست یا نه. پس برای نمونه های مثبت اولیه این نمونه اول، در وسط این بسته تصویر مطمئناً وسطش بین دو کاراکتر، جدا شده است و نمونه دوم دویاره انگار یک نمونه مثبت است چون که من اگر دو کاراکتر را با قرار دادن یک خط دقیقا در وسط تصویر به پایین، جدا کنم، کار درستی انجام داده ام. پس این ها نمونه های مثبت هستند، که وسط تصویر، یک شکاف یا جدایی بین دو کاراکتر را نشان می دهد با این که نمونه های منفی شما نمی خواهید که بین دو کاراکتر را در وسط جدا کنید و پس این ها نمونه های منفی هستند زیرا بین دو کاراکتر فاصله ای ندارند. پس ککاری که ما می خواهیم انجام بدهیم این است که یک دسته بند را آموزش می دهیم شاید با استفاده از شبکه، یا شاید با یک الگوریتم دیگر یادگیری، و دسته بند را با نمونه های مثبت و منفی آزمایش می کنیم. با داشتن یک دسته بند آموزش دیده می توان آن را روی متونی که سیستم تشخیص متن ما بیرون داده است اجرا کرد. با نگاه کردن به آن مستطیل از خودمان می پرسیم آیا وسط مستطیل سبز آیا یک نقطه میانی بین دو کاراکتر وجود دارد؟ و خوشبختانه، دسته بند می گوید نه، پس ما پنجره را آن طرف می بریم این یک دسته بند پنجره تقسیم بندی است چون که می خواهد پنجره را فقط در یک خط مستقیم از چپ به راست حرکت دهد، هیچردیف اافی وجود ندارد. فقط یک ردیف وجود دارد. اما حالا، با داشتن دسته بند در این موقعیت ما می پرسیم که آیا باید این دو کاراکتر را جدا کنیم یا باید یک خط جداکننده وسط این مستطیل بگذاریم. و خوشبختانه، دسته بند y=1 را برمی گرداند. در این نمونه ما می خواهیم خطی را بکشیم، تا دو کاراکتر را جدا کنیم. سپس پنجره را دوباره حرکت می دهیم فرایند چشمی، آن را بررسی نکن، دوباره حرکت کنید، چشم می گوید بله، آنجا را جدا کنید و همین طور ادامه بدهید و ما آهسته دسته بند را به راست حرکت می دهیم و خوشبختانه دسته بند آن را به عنوان نمونه مثبت دیگری شناسایی خواهد کرد و همین طور ادامه می دهیم. و ما پنجره را به سمت راست حرکت می دهیم دسته بند را در هر مرحله اجرا می کنیم و خوشبختانه به ما می گوید که مکان های درست برای جداسازی کاراکترها کجا است و ما این تصویر را به کاراکترهای جدا از هم تقسیم کرده ایم. بنابراین، این پنجره های تقسیم بندی یک بعدی برای قطعه بندی کاراکتر است. پس این هم خط لوله OCR است . در این ویدئو ما درباره مرحله تشخیص متن آن صحبت کردیم و از پنجره های تقسیم برای تشخیص متن استفاده کردیم. و همچنین از پنجره های تقسیم بندی یک بعدی برای قطعه بندی کاراکتر استفاده کردیم. و متن تصویر را به کاراکترهایش تقسیم کردیم. مرحله آخر در خط لوله مرحله به دست آوردن کاراکتر است و شما ممکن است با این مرحله قبلا هم آشنا باشید در ویدئو های قبلی در بخش یادگیری با ناظر که شما می توانید یک یادگیری با ناظر را شاید روی شبکه تان یا شاید جای دیگر اجرا کنید و یک ورودی را بگیرید، یک تصویری مانند این و دسته بندی کنید که کدام الفبا یا کدام 26 کاراکتر از a تا Z است یا شاید ما باید 36 کاراکتر داشته باشیم اگر شما اعداد را هم داشته باشید یک مسئله دسته بندی چند کلاسه که شما یک ورودی و  تصویر شامل کاراکتر را می گیرید و تصمیم می گیرید که آیا کاراکتر در آن تصویر هست یا نه؟ این خط لوله OCR بود و این که چگونه شما ایده هایی مانند دسته بندهای پنجره های تقسیم بندی را برای انجام مؤلفه های مختلف جهت توسعه سیستم OCR به کار می برید. در چند ویدئو بعدی ما مسئله تشخیص تصویر OCR را نگه می داریم تا مسائل جالبی درباره ایجاد برنامه ای مانند این را نشان دهیم.