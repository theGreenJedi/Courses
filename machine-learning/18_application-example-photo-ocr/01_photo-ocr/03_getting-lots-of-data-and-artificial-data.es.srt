1
00:00:00,090 --> 00:00:01,270
He observado una y otra vez que

2
00:00:01,570 --> 00:00:03,160
una de las maneras más confiables para

3
00:00:03,300 --> 00:00:04,800
conseguir un sistema de aprendizaje automático de

4
00:00:05,040 --> 00:00:06,170
alto desempeño, es tomar

5
00:00:06,550 --> 00:00:07,860
un algoritmo de aprendizaje de oscilación bajo

6
00:00:08,750 --> 00:00:10,220
y entrenarlo sobre un conjunto de entrenamiento masivo.

7
00:00:11,230 --> 00:00:12,830
Pero ¿de dónde sacan tantos datos de entrenamiento?

8
00:00:13,510 --> 00:00:14,440
Resulta que en el aprendizaje automático

9
00:00:14,820 --> 00:00:16,520
hay una idea fascinante llamada síntesis

10
00:00:17,220 --> 00:00:19,000
de datos artificiales; esto no

11
00:00:19,370 --> 00:00:20,740
aplicará a cada problema y,

12
00:00:20,980 --> 00:00:22,120
para aplicarlo a un problema determinado,

13
00:00:22,360 --> 00:00:25,060
a menudo se requiere pensar un poco, e innovación y conocimiento.

14
00:00:25,780 --> 00:00:27,170
Pero si esta idea aplica

15
00:00:27,580 --> 00:00:29,120
a su problema con el sistema, algunas

16
00:00:29,230 --> 00:00:30,270
veces puede ser un una

17
00:00:30,510 --> 00:00:31,600
manera fácil de obtener un

18
00:00:31,680 --> 00:00:33,470
enorme conjunto de entrenamiento para proporcionar a su algoritmo de aprendizaje.

19
00:00:33,900 --> 00:00:35,520
La idea de la síntesis de datos

20
00:00:36,230 --> 00:00:38,410
artificiales comprende dos

21
00:00:38,590 --> 00:00:40,210
variaciones principales; la primera

22
00:00:40,650 --> 00:00:41,940
es si estamos esencialmente creando

23
00:00:42,520 --> 00:00:44,940
datos desde el vacío, creando datos nuevos desde cero.

24
00:00:45,380 --> 00:00:46,700
Y la segunda es que si

25
00:00:46,930 --> 00:00:48,350
ya tenemos un pequeño

26
00:00:48,590 --> 00:00:49,970
conjunto de entrenamiento para valores asignados, y

27
00:00:50,210 --> 00:00:51,490
de alguna manera hemos ampliado ese conjunto

28
00:00:51,840 --> 00:00:52,680
de entrenamiento o usamos un pequeño

29
00:00:52,980 --> 00:00:54,390
conjunto de entrenamiento para convertirlo

30
00:00:54,660 --> 00:00:56,290
en un conjunto de entrenamiento más grande; y en

31
00:00:56,450 --> 00:00:58,120
este vídeo vamos a repasar esas dos ideas.

32
00:01:00,350 --> 00:01:02,220
Para hablar acerca de la idea de

33
00:01:02,440 --> 00:01:04,030
síntesis de datos, vamos a usar

34
00:01:04,330 --> 00:01:06,930
la porción de reconocimiento de caracteres del

35
00:01:07,090 --> 00:01:08,470
flujo de proyecto OCR de la foto; queremos

36
00:01:08,690 --> 00:01:09,710
tomar su imagen de entrada

37
00:01:10,060 --> 00:01:11,370
y reconocer qué carácter es.

38
00:01:13,330 --> 00:01:14,690
Si vamos y recopilamos

39
00:01:14,880 --> 00:01:16,270
un gran conjunto de datos para valores asignados,

40
00:01:16,890 --> 00:01:17,980
esto es lo que es y cómo se ve.

41
00:01:18,580 --> 00:01:21,770
Para este ejemplo en particular, he elegido una relación de aspecto cuadrado.

42
00:01:22,130 --> 00:01:23,250
Así que estamos tomando pedazos de  imágenes cuadradas,

43
00:01:24,180 --> 00:01:25,110
y el objetivo es tomar

44
00:01:25,770 --> 00:01:27,420
un pedazo de imagen y reconocer el

45
00:01:27,530 --> 00:01:29,270
carácter en la parte media de ese pedazo de imagen.

46
00:01:31,090 --> 00:01:31,990
Y para que sea más sencillo,

47
00:01:32,660 --> 00:01:33,740
voy a tratar estas imágenes

48
00:01:34,240 --> 00:01:36,380
imágenes en escala de grises, en lugar de imágenes a color.

49
00:01:36,870 --> 00:01:38,550
Resulta que el uso del color

50
00:01:38,930 --> 00:01:41,180
no parece ayudar mucho para este problema en particular.

51
00:01:42,190 --> 00:01:43,530
Así que teniendo este pedazo de imagen, nos gustaría

52
00:01:43,660 --> 00:01:44,890
quiere reconocer que eso es una

53
00:01:45,010 --> 00:01:46,230
’T’ . Dado este pedazo de imagen,

54
00:01:46,550 --> 00:01:47,920
nos gustaría reconocer que se trata de una 'S'.

55
00:01:49,540 --> 00:01:50,740
Dado este pedazo de imagen, nos gustaría

56
00:01:50,850 --> 00:01:52,950
reconocer que esa es una ’I’, y así sucesivamente.

57
00:01:54,110 --> 00:01:55,310
Así que todas estos, nuestros

58
00:01:55,450 --> 00:01:57,240
ejemplos de imágenes en fila, ¿cómo

59
00:01:57,380 --> 00:01:59,460
llegamos a un conjunto de entrenamiento mucho más grande?

60
00:02:00,000 --> 00:02:01,580
Las computadoras modernas tienen a menudo una

61
00:02:01,640 --> 00:02:03,700
enorme biblioteca de fuentes y,

62
00:02:03,890 --> 00:02:05,330
utilizan un software procesador de textos,

63
00:02:05,950 --> 00:02:07,090
dependiendo del procesador de palabras que

64
00:02:07,240 --> 00:02:08,580
usen, es posible que

65
00:02:08,800 --> 00:02:09,980
tengan todas estas fuentes y

66
00:02:10,120 --> 00:02:12,490
muchos, muchos que ya están almacenadas en su interior.

67
00:02:12,950 --> 00:02:14,350
Y, de hecho, si van a diferentes sitios web, hay

68
00:02:14,680 --> 00:02:16,280
nuevamente, enormes bibliotecas de

69
00:02:16,690 --> 00:02:18,200
fuentes gratuitas en la internet que

70
00:02:18,370 --> 00:02:19,960
podemos descargar;  muchos, muchos

71
00:02:20,250 --> 00:02:22,580
tipos diferentes de fuentes, cientos o tal vez miles de diferentes tipos de fuentes.

72
00:02:23,960 --> 00:02:25,180
Así que si desean más

73
00:02:25,570 --> 00:02:27,020
ejemplos de entrenamiento, algo que

74
00:02:27,100 --> 00:02:28,340
pueden hacer es tomar

75
00:02:28,870 --> 00:02:30,220
los caracteres de diferentes fuentes

76
00:02:31,240 --> 00:02:32,870
y pegarlas estos caracteres contra

77
00:02:33,290 --> 00:02:35,890
diferentes fondos aleatorios.

78
00:02:36,730 --> 00:02:39,500
Así que pueden tomar este ---- y pegar esa ’c’ contra un fondo aleatorio.

79
00:02:40,680 --> 00:02:41,640
Si hacen esto, ahora tienen

80
00:02:42,060 --> 00:02:43,830
un ejemplo de entrenamiento de una

81
00:02:44,080 --> 00:02:45,260
imagen del carácter ’C’.

82
00:02:46,360 --> 00:02:47,500
Así que después de una cierta cantidad de

83
00:02:47,570 --> 00:02:48,920
trabajo, ya saben esto

84
00:02:48,980 --> 00:02:49,710
y será sólo un poco de

85
00:02:49,830 --> 00:02:51,760
trabajar para sintetizar los datos que parecen reales,

86
00:02:52,180 --> 00:02:53,080
pero después de una cierta cantidad de trabajo,

87
00:02:53,700 --> 00:02:56,130
pueden conseguir un conjunto de entrenamiento sintético como ese.

88
00:02:57,180 --> 00:02:59,910
Cada imagen que se muestra a la derecha era en realidad una imagen sintetizada.

89
00:03:00,360 --> 00:03:02,080
Cuando toman una fuente,

90
00:03:02,810 --> 00:03:04,240
tal vez una fuente aleatoria que descargaron de

91
00:03:04,400 --> 00:03:05,680
la web, y pega

92
00:03:06,160 --> 00:03:07,320
una imagen de un carácter

93
00:03:07,800 --> 00:03:08,870
o unos cuantos caracteres de esa fuente

94
00:03:09,570 --> 00:03:11,440
contra esta otra imagen de fondo aleatorio,

95
00:03:12,140 --> 00:03:12,840
y después aplican tal vez unos cuantos

96
00:03:13,540 --> 00:03:15,160
operadores difusos tal vez un pequeño

97
00:03:15,680 --> 00:03:17,380
buscador de aplicaciones, distorsiones que ese

98
00:03:17,620 --> 00:03:18,650
buscador de aplicaciones, queriendo decir las operaciones para

99
00:03:19,350 --> 00:03:20,740
compartir, ampliar y una pequeña rotación;

100
00:03:21,000 --> 00:03:22,260
y si hacen eso,

101
00:03:22,370 --> 00:03:23,330
obtienen un conjunto de entrenamiento

102
00:03:23,580 --> 00:03:25,520
sintético sobre el que se muestra aquí.

103
00:03:26,510 --> 00:03:28,050
Y este es el trabajo,

104
00:03:28,530 --> 00:03:29,640
ya saben, se tienen que

105
00:03:29,970 --> 00:03:31,460
pensar en el trabajo a fin de

106
00:03:31,700 --> 00:03:33,250
hacer que los datos sintéticos parezcan realistas,

107
00:03:34,020 --> 00:03:34,710
y si realizan un mal

108
00:03:35,120 --> 00:03:36,200
trabajo en términos de cómo

109
00:03:36,250 --> 00:03:38,910
crean los datos sintéticos, entonces en realidad no funcionará bien.

110
00:03:39,620 --> 00:03:40,600
Pero si observan

111
00:03:40,790 --> 00:03:43,940
los datos sintéticos, se ven muy similares a los datos reales.

112
00:03:45,120 --> 00:03:46,850
Así que mediante el uso de datos sintéticos

113
00:03:47,340 --> 00:03:48,550
tiene esencialmente un suministro ilimitado

114
00:03:48,990 --> 00:03:50,970
de ejemplos de entrenamiento para

115
00:03:51,310 --> 00:03:53,060
la síntesis de entrenamiento artificial y

116
00:03:53,150 --> 00:03:54,110
así, si usan estos

117
00:03:54,330 --> 00:03:55,820
datos de origen sintético, tienen

118
00:03:56,150 --> 00:03:58,100
esencialmente un suministro ilimitado de

119
00:03:58,560 --> 00:04:00,000
datos para asignar valores para crear

120
00:04:00,140 --> 00:04:01,610
un algoritmo de aprendizaje improvisado

121
00:04:02,300 --> 00:04:03,990
para el problema de reconocimiento de caracteres.

122
00:04:05,120 --> 00:04:06,540
Así que este es un ejemplo de la

123
00:04:07,000 --> 00:04:08,500
síntesis artificial de datos, en donde

124
00:04:09,040 --> 00:04:10,870
básicamente están creando datos nuevos

125
00:04:11,080 --> 00:04:13,780
desde cero, simplemente están generando imágenes nuevas desde cero.

126
00:04:14,880 --> 00:04:16,450
El otro enfoque principal para la síntesis de  datos

127
00:04:16,710 --> 00:04:18,210
artificiales, es en el que toman

128
00:04:18,370 --> 00:04:19,610
ejemplos que tienen

129
00:04:19,740 --> 00:04:20,780
actualmente, que tomamos

130
00:04:21,020 --> 00:04:22,430
como ejemplos reales, tal vez a partir de una

131
00:04:22,700 --> 00:04:24,130
imagen real, y crean

132
00:04:24,770 --> 00:04:26,130
datos adicionales, a modo de

133
00:04:26,380 --> 00:04:27,900
ampliar su conjunto de entrenamiento.

134
00:04:28,070 --> 00:04:28,810
De modo que aquí está una imagen de un carácter ’A’

135
00:04:28,910 --> 00:04:30,490
de una imagen real,

136
00:04:31,410 --> 00:04:32,550
no una imagen sintetizada, y

137
00:04:32,630 --> 00:04:33,790
he superpuesto ésta con

138
00:04:33,880 --> 00:04:35,750
las líneas de la cuadrícula sólo a modo de ilustración,

139
00:04:36,430 --> 00:04:36,880
en realidad no debería tener estas líneas de cuadrícula por supuesto.

140
00:04:36,970 --> 00:04:39,030
Así que lo que pueden

141
00:04:39,100 --> 00:04:40,110
hacer después, es tomar este

142
00:04:40,480 --> 00:04:41,500
alfabeto aquí, tomar esta imagen

143
00:04:42,240 --> 00:04:43,760
e introducir deformaciones artificiales,

144
00:04:44,290 --> 00:04:45,810
o distorsiones artificiales en la

145
00:04:46,040 --> 00:04:47,030
imagen para que puedan

146
00:04:47,220 --> 00:04:48,240
tomar la imagen ’A’ y convertir

147
00:04:48,430 --> 00:04:50,060
eso en 16 ejemplos nuevos.

148
00:04:51,110 --> 00:04:52,000
Así que de esta manera, pueden

149
00:04:52,450 --> 00:04:53,740
tomar un pequeño conjunto de entrenamiento para asignar valores

150
00:04:54,090 --> 00:04:55,360
y ampliar su conjunto de entrenamiento

151
00:04:56,180 --> 00:04:57,190
para, de manera repentina, obtener una gran cantidad

152
00:04:57,300 --> 00:05:00,020
de ejemplos adicionales todos ellos.

153
00:05:01,210 --> 00:05:02,360
Nuevamente, a fin de hacer

154
00:05:02,560 --> 00:05:03,940
esto para la aplicación, se requiere

155
00:05:04,120 --> 00:05:05,060
pensar y se necesita

156
00:05:05,140 --> 00:05:06,270
conocimiento para descubrir

157
00:05:06,430 --> 00:05:07,840
cuáles son nuestros conjuntos razonables de

158
00:05:08,420 --> 00:05:09,460
distorsiones, o cuáles son las maneras razonables

159
00:05:09,720 --> 00:05:11,000
para amplificar y multiplicar

160
00:05:11,470 --> 00:05:12,760
su conjunto de entrenamiento y para

161
00:05:13,070 --> 00:05:15,130
el ejemplo específico de

162
00:05:15,260 --> 00:05:17,170
reconocimiento de caracteres, la introducción de estas

163
00:05:17,480 --> 00:05:18,310
deformaciones parece una elección

164
00:05:18,780 --> 00:05:19,910
natural, pero para una

165
00:05:20,090 --> 00:05:21,970
aplicación de aprendizaje automático diferente, pudieran existir

166
00:05:22,080 --> 00:05:24,180
diferentes distorsiones que podrían tener más sentido.

167
00:05:24,860 --> 00:05:25,600
Permítanme mostrarles un ejemplo

168
00:05:26,180 --> 00:05:28,750
del totalmente diferente dominio de reconocimiento de voz.

169
00:05:30,230 --> 00:05:31,480
Así que en el reconocimiento de voz, digamos que

170
00:05:31,580 --> 00:05:33,450
tienen clips de audio y desean

171
00:05:33,600 --> 00:05:35,010
aprender del clip de audio

172
00:05:35,350 --> 00:05:37,240
para reconocer cuáles fueron

173
00:05:37,460 --> 00:05:38,780
las palabras que se dijeron en ese clip.

174
00:05:39,510 --> 00:05:41,340
Así que veamos un ejemplo de entrenamiento para asignar valores;

175
00:05:42,290 --> 00:05:43,190
digamos que usted tienen un

176
00:05:43,400 --> 00:05:45,000
ejemplo de entrenamiento para asignar valores de alguien que está

177
00:05:45,330 --> 00:05:46,660
diciendo unas cuantas palabras específicas.

178
00:05:46,860 --> 00:05:48,720
Así que vamos a reproducir ese clip de audio aquí.

179
00:05:49,150 --> 00:05:51,230
’0 -1-2-3-4-5’

180
00:05:51,570 --> 00:05:53,810
bien, así que es alguien

181
00:05:54,220 --> 00:05:55,110
que está contando de 0 a 5,

182
00:05:55,450 --> 00:05:57,180
así que quieren

183
00:05:57,290 --> 00:05:58,460
tratar de aplicar un algoritmo de aprendizaje

184
00:05:59,380 --> 00:06:01,320
para tratar de reconocer las palabras que se dijeron allí.

185
00:06:02,040 --> 00:06:04,030
Así que, ¿cómo podemos ampliar el conjunto de datos?

186
00:06:04,390 --> 00:06:05,340
Bueno, algo que hacemos es

187
00:06:06,020 --> 00:06:09,180
introducir distorsiones de audio adicionales en el conjunto de datos.

188
00:06:09,970 --> 00:06:10,960
Así que aquí voy a

189
00:06:11,640 --> 00:06:14,700
añadir sonidos de fondo para simular una mala conexión de teléfono celular.

190
00:06:15,360 --> 00:06:16,800
Cuando escuchen pitidos, eso es

191
00:06:16,980 --> 00:06:17,710
en realidad parte de la pista de sonido,

192
00:06:17,740 --> 00:06:20,350
no hay nada malo con los altavoces; voy a reproducir esto ahora.

193
00:06:20,580 --> 00:06:20,580
’0,1,2,3,4,5’

194
00:06:21,380 --> 00:06:22,260
Bien, así que pueden escuchar

195
00:06:22,640 --> 00:06:24,890
ese tipo de clip de audio y

196
00:06:25,720 --> 00:06:28,600
reconocer los sonidos.

197
00:06:28,960 --> 00:06:30,800
Eso parece otro ejemplo de entrenamiento

198
00:06:31,370 --> 00:06:33,230
útil aquí hay otro ejemplo, fondo ruidoso.

199
00:06:34,890 --> 00:06:36,870
Cero, uno, dos, tres

200
00:06:37,560 --> 00:06:39,060
cuatro, cinco, ya saben,

201
00:06:39,090 --> 00:06:40,280
de carros pasando, gente caminando

202
00:06:40,580 --> 00:06:42,200
en el fondo; aquí hay otro,

203
00:06:42,450 --> 00:06:43,880
de modo que si tomamos el clip de audio

204
00:06:44,430 --> 00:06:45,980
limpio, original,

205
00:06:46,090 --> 00:06:47,810
si tomamos el audio limpio de

206
00:06:47,990 --> 00:06:48,960
alguien diciendo ’’0,1,2,3,’

207
00:06:49,090 --> 00:06:50,490
4,5’, entonces podemos sintetizar

208
00:06:51,790 --> 00:06:54,090
automáticamente estos ejemplos de entrenamiento

209
00:06:54,470 --> 00:06:55,850
adicionales y ampliar de esta manera

210
00:06:56,410 --> 00:06:57,860
un ejemplo de entrenamiento en tal vez cuatro ejemplos diferentes de entrenamiento.

211
00:07:00,110 --> 00:07:00,940
Permítanme reproducir este último

212
00:07:01,300 --> 00:07:03,180
ejemplo también.

213
00:07:03,340 --> 00:07:07,180
’0,1,2,3,4,5’, así que

214
00:07:07,530 --> 00:07:08,510
al tomar sólo un ejemplo de asignación de valores,

215
00:07:09,000 --> 00:07:10,260
tenemos que hacer el esfuerzo

216
00:07:10,360 --> 00:07:11,760
para recolectar sólo un ejemplo de asignación de valores

217
00:07:11,950 --> 00:07:13,270
que es ’0,1,2,3,4,5’, y por medio de

218
00:07:14,140 --> 00:07:16,520
sintetizar las distorsiones adicionales,

219
00:07:17,290 --> 00:07:18,560
al introducir diferentes sonidos de fondo,

220
00:07:19,000 --> 00:07:20,240
hemos multiplicado ahora este

221
00:07:20,370 --> 00:07:21,810
ejemplo en muchos más ejemplos,

222
00:07:23,420 --> 00:07:24,480
hemos añadido mucho trabajo sólo por haber

223
00:07:25,270 --> 00:07:27,090
agregado estos diferentes sonidos de fondo

224
00:07:27,680 --> 00:07:30,510
al audio limpio. Sólo

225
00:07:30,740 --> 00:07:31,980
una palabra de advertencia acerca de la síntesis

226
00:07:33,190 --> 00:07:35,220
de datos mediante la introducción de distorsiones: si

227
00:07:35,310 --> 00:07:36,630
intentan hacer esto

228
00:07:36,810 --> 00:07:38,580
ustedes mismos, las distorsiones que

229
00:07:39,020 --> 00:07:40,300
introduzcan deben ser representativas de la fuente

230
00:07:40,660 --> 00:07:42,010
de los ruidos, o distorsiones, que

231
00:07:42,110 --> 00:07:43,680
pudieran ver en el equipo de prueba.

232
00:07:44,010 --> 00:07:45,350
Así, para el ejemplo de reconocimiento de caracteres,

233
00:07:45,930 --> 00:07:47,230
ya saben, las deformaciones

234
00:07:47,440 --> 00:07:48,620
que introducimos son en realidad

235
00:07:48,770 --> 00:07:49,980
útiles, porque una imagen

236
00:07:50,340 --> 00:07:51,510
’A’ que se ve así, esa

237
00:07:52,000 --> 00:07:53,020
podría ser una imagen que

238
00:07:53,210 --> 00:07:55,170
en realidad podríamos ver en un conjunto de prueba, este tipo de

239
00:07:55,370 --> 00:07:57,180
’A’ más gorda y, ya saben

240
00:07:57,380 --> 00:08:00,200
la imagen en la parte superior derecha, esa

241
00:08:00,350 --> 00:08:01,800
podría ser una imagen que podríamos imaginar ver.

242
00:08:03,280 --> 00:08:04,570
Y para el audio, bueno, queremos

243
00:08:04,740 --> 00:08:06,560
reconocer el habla, incluso contra

244
00:08:06,970 --> 00:08:07,990
una mala conexión del teléfono celular, contra

245
00:08:08,480 --> 00:08:09,440
diferentes tipos de ruido de fondo, así

246
00:08:09,590 --> 00:08:10,920
que para el audio, nuevamente estamos

247
00:08:11,230 --> 00:08:12,800
sintetizando ejemplos que son en realidad

248
00:08:13,530 --> 00:08:14,770
representativos de las clases de

249
00:08:14,850 --> 00:08:15,830
ejemplos que queremos

250
00:08:15,990 --> 00:08:17,360
clasificar, que queremos reconocer correctamente.

251
00:08:18,770 --> 00:08:20,660
En contraste, por lo general no

252
00:08:20,770 --> 00:08:21,940
no ayuda agregar ruido puramente

253
00:08:22,170 --> 00:08:23,760
aleatorio, sin sentido a sus datos.

254
00:08:24,420 --> 00:08:25,170
No estoy seguro de que puedan ver

255
00:08:25,440 --> 00:08:26,400
esto, pero lo que hemos hecho

256
00:08:26,620 --> 00:08:28,050
aquí es tomar la imagen y,

257
00:08:28,210 --> 00:08:29,540
para cada píxel, en cada una

258
00:08:29,720 --> 00:08:30,710
de estas 4 imágenes, sólo

259
00:08:30,990 --> 00:08:32,970
agregamos algún ruido Gaussiano aleatorio a cada píxel,

260
00:08:33,240 --> 00:08:34,690
así que cada píxel es el

261
00:08:35,060 --> 00:08:36,370
brillo de los píxeles si sólo

262
00:08:36,500 --> 00:08:38,880
agregaran algún, ya saben, tal vez ruido Gaussiano aleatorio a cada píxel.

263
00:08:39,360 --> 00:08:40,940
Así que es sólo un ruido totalmente sin sentido, ¿cierto?

264
00:08:41,650 --> 00:08:43,280
Así que, a menos que estén esperando

265
00:08:43,800 --> 00:08:45,510
ver este tipo de ruido

266
00:08:45,910 --> 00:08:46,830
por píxel en su conjunto

267
00:08:46,910 --> 00:08:48,190
de prueba, es menos probable que esta clase de

268
00:08:48,660 --> 00:08:51,540
ruido puramente aleatorio, sin sentido, sea útil.

269
00:08:52,880 --> 00:08:53,750
Pero el proceso de la síntesis de

270
00:08:54,250 --> 00:08:55,570
datos artificiales es, ya

271
00:08:55,640 --> 00:08:56,660
saben, un poco como un

272
00:08:56,710 --> 00:08:57,850
arte también y algunas veces

273
00:08:58,140 --> 00:09:00,250
sólo tienen que probarlo y ver si funciona.

274
00:09:01,280 --> 00:09:02,060
Pero si están tratando de

275
00:09:02,140 --> 00:09:03,170
decidir qué tipo de distorsiones

276
00:09:03,870 --> 00:09:04,720
añadir, ya saben, piensen

277
00:09:04,820 --> 00:09:06,260
en otras distorsiones significativas

278
00:09:06,670 --> 00:09:08,180
que pudieran añadir que

279
00:09:08,660 --> 00:09:09,720
provocarían que generaran ejemplos

280
00:09:10,110 --> 00:09:11,370
de entrenamiento adicionales que son

281
00:09:11,880 --> 00:09:13,410
al menos algo representativos de los

282
00:09:13,480 --> 00:09:15,830
tipo de imágenes que pueden esperar ver en sus equipos de prueba.

283
00:09:18,100 --> 00:09:19,000
Por último, para concluir este

284
00:09:19,150 --> 00:09:19,920
vídeo, sólo quiero decir

285
00:09:20,140 --> 00:09:21,420
un par de cosas más sobre

286
00:09:21,790 --> 00:09:23,360
esta idea de conseguir muchos

287
00:09:23,600 --> 00:09:25,610
datos a través de la síntesis artificial de datos.

288
00:09:26,920 --> 00:09:28,780
Como siempre, antes de invertir mucho

289
00:09:29,170 --> 00:09:30,280
esfuerzo, ya saben, averiguando

290
00:09:30,450 --> 00:09:32,020
cómo crear los ejemplos de entrenamiento

291
00:09:33,060 --> 00:09:34,140
artificial, a menudo es una buena

292
00:09:34,220 --> 00:09:35,310
práctica asegurarse de que

293
00:09:35,650 --> 00:09:36,540
realmente tengan un clasificador de baja

294
00:09:36,920 --> 00:09:38,350
oscilación, y tener muchos más

295
00:09:38,460 --> 00:09:40,320
datos de entrenamiento será de ayuda.

296
00:09:41,010 --> 00:09:41,840
Una forma estándar de hacer esto

297
00:09:41,970 --> 00:09:42,810
es trazar las curvas de aprendizaje

298
00:09:43,030 --> 00:09:43,970
y asegurarse de que

299
00:09:44,130 --> 00:09:44,920
sólo tienen un clasificador

300
00:09:45,000 --> 00:09:47,470
de baja oscilación, de alta varianza.

301
00:09:47,760 --> 00:09:48,650
O si no tienen un clasificador

302
00:09:48,720 --> 00:09:50,090
de baja oscilación, ya saben,

303
00:09:50,160 --> 00:09:51,040
otra cosa que vale la pena intentar

304
00:09:51,450 --> 00:09:53,270
es seguir aumentando el número

305
00:09:53,540 --> 00:09:54,440
de variables que tiene su clasificador,

306
00:09:54,600 --> 00:09:55,650
aumentando el número de

307
00:09:55,740 --> 00:09:56,710
unidades ocultas en su red,

308
00:09:57,180 --> 00:09:58,470
por decir, hasta que realmente tengan un

309
00:09:58,540 --> 00:10:00,000
clasificador de baja oscilación, y sólo

310
00:10:00,310 --> 00:10:01,820
entonces tendrán que hacer

311
00:10:02,040 --> 00:10:04,020
el esfuerzo para crear un

312
00:10:04,260 --> 00:10:05,760
conjunto de entrenamiento grande, artificial, de modo

313
00:10:05,860 --> 00:10:06,660
que lo que realmente desean evitar

314
00:10:06,870 --> 00:10:07,930
es, ya saben, pasar

315
00:10:08,110 --> 00:10:08,890
toda una semana o pasar unos cuantos

316
00:10:09,090 --> 00:10:10,370
meses tratando de averiguar cómo

317
00:10:10,540 --> 00:10:11,720
conseguir un gran conjunto de datos

318
00:10:12,450 --> 00:10:13,260
sintetizado de manera artificial,

319
00:10:13,820 --> 00:10:15,520
sólo para darse cuenta más tarde que,

320
00:10:15,760 --> 00:10:17,410
ya saben, el desempeño de su algoritmo de aprendizaje

321
00:10:18,030 --> 00:10:20,730
no mejora mucho, incluso cuando se le ofrece un conjunto de entrenamiento enorme.

322
00:10:22,190 --> 00:10:23,060
Así que ese es mi consejo habitual

323
00:10:23,420 --> 00:10:24,690
acerca de las pruebas que

324
00:10:25,030 --> 00:10:26,290
realmente pueden utilizar

325
00:10:26,530 --> 00:10:27,760
de un gran conjunto de entrenamiento antes de

326
00:10:28,080 --> 00:10:30,530
invertir mucho esfuerzo para tratar de conseguir ese gran conjunto de entrenamiento.

327
00:10:31,960 --> 00:10:33,280
En segundo lugar, cuando estoy trabajando

328
00:10:33,590 --> 00:10:35,250
en problemas de aprendizaje automático, una pregunta

329
00:10:35,690 --> 00:10:37,520
que a menudo le hago al equipo

330
00:10:37,880 --> 00:10:39,210
con el que estoy trabajando, con frecuencia le pregunto a mis

331
00:10:39,430 --> 00:10:40,550
estudiantes es, ¿cuánto trabajo

332
00:10:40,620 --> 00:10:42,810
se necesitaría para obtener 10 veces más datos que los que tenemos actualmente?

333
00:10:46,720 --> 00:10:47,850
Cuando me enfrento a una nueva aplicación

334
00:10:48,200 --> 00:10:49,760
de aprendizaje electrónico, muy a menudo me

335
00:10:49,980 --> 00:10:50,940
sentaré con un equipo

336
00:10:51,210 --> 00:10:52,440
y le haré exactamente esta pregunta.

337
00:10:52,920 --> 00:10:53,870
He hecho esta pregunta una y otra, y

338
00:10:53,970 --> 00:10:55,870
otra, y otra vez, y me he

339
00:10:56,000 --> 00:10:57,540
quedado muy sorprendido por la frecuencia

340
00:10:58,390 --> 00:10:59,660
con la esta respuesta ha sido que,

341
00:11:00,010 --> 00:11:01,070
ya saben, en realidad no es tan difícil;

342
00:11:01,680 --> 00:11:02,670
tal vez un par de días de trabajo

343
00:11:02,930 --> 00:11:03,930
a lo sumo, para obtener diez veces

344
00:11:04,250 --> 00:11:05,300
la cantidad de datos que actualmente

345
00:11:05,450 --> 00:11:06,650
tenemos para una aplicación

346
00:11:06,810 --> 00:11:08,820
en ejecución del equipo y, muy a menudo,

347
00:11:09,080 --> 00:11:09,830
si pueden obtener

348
00:11:09,950 --> 00:11:11,030
diez veces más datos allí,

349
00:11:11,270 --> 00:11:13,680
será una manera de hacer que su algoritmo funcione mucho mejor.

350
00:11:14,060 --> 00:11:15,040
Así que, ya saben, si alguna vez

351
00:11:15,260 --> 00:11:16,510
se unen al equipo de producción

352
00:11:17,820 --> 00:11:18,880
que está trabajando en alguna aplicación de

353
00:11:19,110 --> 00:11:20,430
aprendizaje electrónico, esta es

354
00:11:20,550 --> 00:11:21,710
una muy buena pregunta para ustedes

355
00:11:22,290 --> 00:11:23,500
y para hacérsela al equipo. No se

356
00:11:23,650 --> 00:11:25,120
sorprendan demasiado si después de unos

357
00:11:25,240 --> 00:11:26,530
cuantos minutos de lluvia de ideas, a su

358
00:11:26,650 --> 00:11:27,520
equipo se le ocurre una

359
00:11:27,660 --> 00:11:28,950
manera para obtener literalmente diez

360
00:11:29,200 --> 00:11:30,250
veces esta cantidad de datos, en

361
00:11:30,380 --> 00:11:31,320
cuyo caso, creo que serían

362
00:11:31,430 --> 00:11:32,330
un héroe para ese equipo,

363
00:11:32,940 --> 00:11:34,000
porque con 10 veces

364
00:11:34,240 --> 00:11:35,360
la cantidad de datos, creo que en realidad

365
00:11:35,450 --> 00:11:38,460
obtienen un desempeño mucho mejor, sólo por aprender de tantos datos.

366
00:11:39,650 --> 00:11:44,500
Así que hay varias maneras para trata de obtener muchos más datos, y en este vídeo nos centramos principalmente en la idea de la síntesis artificial de datos y

367
00:11:47,450 --> 00:11:48,510
esa comprende las dos ideas

368
00:11:48,970 --> 00:11:50,440
de generar datos desde

369
00:11:50,640 --> 00:11:53,050
cero usando fuentes aleatorias y así sucesivamente,

370
00:11:53,570 --> 00:11:54,430
así como la segunda idea

371
00:11:54,840 --> 00:11:56,600
de tomar un ejemplo existente e

372
00:11:56,670 --> 00:11:58,100
introducir distorsiones que amplifican

373
00:11:58,280 --> 00:12:00,910
para ampliar el conjunto de entrenamiento A.

374
00:12:01,090 --> 00:12:02,150
Un par de otros ejemplos de

375
00:12:02,280 --> 00:12:03,130
formas para conseguir muchos más

376
00:12:03,270 --> 00:12:04,610
datos, son recoger los

377
00:12:04,670 --> 00:12:06,600
datos o asignar valores ustedes mismos.

378
00:12:07,600 --> 00:12:09,090
Así que un cálculo útil que

379
00:12:09,210 --> 00:12:11,580
yo realizo a menudo me es, ya saben,

380
00:12:11,780 --> 00:12:13,320
cuántos minutos, cuántas

381
00:12:13,520 --> 00:12:15,140
horas se necesitan para

382
00:12:15,350 --> 00:12:16,420
obtener un cierto número de

383
00:12:16,610 --> 00:12:17,780
ejemplos, así que en realidad me siento y

384
00:12:17,900 --> 00:12:19,410
averiguo, ya saben, supongamos que

385
00:12:19,550 --> 00:12:21,830
me toma diez segundos

386
00:12:22,060 --> 00:12:23,990
asignar valor a un ejemplo, después

387
00:12:24,120 --> 00:12:25,820
supongamos que, para

388
00:12:26,190 --> 00:12:29,050
nuestra aplicación, actualmente tenemos

389
00:12:29,190 --> 00:12:31,500
1000 ejemplos de valores asignados,

390
00:12:31,620 --> 00:12:32,730
de modo que diez veces

391
00:12:32,860 --> 00:12:34,090
más de eso serían

392
00:12:34,200 --> 00:12:35,940
si ’n’ fuera igual a diez mil.

393
00:12:37,440 --> 00:12:40,260
Una segunda manera de

394
00:12:40,400 --> 00:12:41,530
obtener una gran cantidad de datos es

395
00:12:41,800 --> 00:12:43,540
simplemente recoger los datos y asignarles valores ustedes mismos.

396
00:12:44,510 --> 00:12:45,380
De modo que lo que quiero decir con esto es,

397
00:12:45,690 --> 00:12:46,970
a menudo me sentaré y

398
00:12:47,240 --> 00:12:48,570
haré un cálculo para averiguar

399
00:12:48,950 --> 00:12:50,190
cuánto tiempo, ya saben,

400
00:12:50,350 --> 00:12:51,140
saber sólo cuántas horas

401
00:12:52,640 --> 00:12:54,000
me tomará, cuántas

402
00:12:54,200 --> 00:12:55,130
horas o cuántos días me

403
00:12:55,230 --> 00:12:56,890
tomará o le tomará a

404
00:12:57,020 --> 00:12:58,400
alguien más sólo sentarse

405
00:12:58,640 --> 00:12:59,870
y recolectar 10 veces

406
00:13:00,190 --> 00:13:01,490
esa cantidad de datos, de los que

407
00:13:01,800 --> 00:13:03,560
tenemos actualmente, por medio de recolectarlos y asignarles valores nosotros mismos.

408
00:13:05,260 --> 00:13:06,550
Así que, por ejemplo, eso, para

409
00:13:06,630 --> 00:13:08,200
nuestra aplicación de aprendizaje automático, actualmente

410
00:13:08,690 --> 00:13:10,180
tenemos 1,000 ejemplos, por lo que ’M’ es 1000.

411
00:13:12,010 --> 00:13:12,750
Así que lo que hacemos es sentarnos

412
00:13:12,870 --> 00:13:14,500
y preguntar, bueno ¿cuánto tiempo me toma

413
00:13:14,720 --> 00:13:16,930
realmente recolectar y asignarle valores a un ejemplo?

414
00:13:17,340 --> 00:13:18,480
Y a veces, tal vez les tomará

415
00:13:18,600 --> 00:13:19,510
ya saben, diez

416
00:13:19,790 --> 00:13:22,100
segundos asignarle valores

417
00:13:23,310 --> 00:13:25,120
un ejemplo nuevo, así que

418
00:13:25,520 --> 00:13:27,720
se desean 10X esa cantidad de ejemplos, hago un cálculo:

419
00:13:28,360 --> 00:13:30,400
si me toma 10 segundos obtener un ejemplo de entrenamiento,

420
00:13:31,370 --> 00:13:32,340
si quisiera obtener 10

421
00:13:32,580 --> 00:13:35,320
veces más datos, entonces necesito 10,000 ejemplos.

422
00:13:35,830 --> 00:13:38,470
Así que hago el cálculo, ¿cuánto tiempo

423
00:13:38,770 --> 00:13:40,380
me va a tomar asignarle valores,

424
00:13:40,840 --> 00:13:42,640
asignar valores manualmente 10,000 ejemplos

425
00:13:43,340 --> 00:13:45,280
si me lleva 10 segundos asignarle valor a 1 ejemplo?.

426
00:13:47,070 --> 00:13:47,940
Así que cuando hacen este cálculo,

427
00:13:48,840 --> 00:13:49,920
con frecuencia he observado que muchos de ustedes

428
00:13:50,390 --> 00:13:51,780
se sorprenderían por, ya saben,

429
00:13:51,870 --> 00:13:53,140
lo poco, o, a veces unos

430
00:13:53,240 --> 00:13:54,730
cuantos días en el trabajo, a veces unos

431
00:13:54,880 --> 00:13:55,560
cuantos días de trabajo,

432
00:13:55,780 --> 00:13:57,180
bueno, he visto equipos muy

433
00:13:57,500 --> 00:13:59,160
sorprendidos algunas veces por

434
00:13:59,340 --> 00:14:00,280
el poco trabajo que podría tomar

435
00:14:00,410 --> 00:14:01,200
simplemente conseguir muchos más

436
00:14:01,370 --> 00:14:02,510
datos, y dejar que eso sea

437
00:14:02,580 --> 00:14:03,470
una manera para darle a su aplicación de

438
00:14:03,580 --> 00:14:04,310
aprendizaje un gran impulso

439
00:14:04,640 --> 00:14:06,350
en el desempeño, y necesariamente, ya

440
00:14:06,450 --> 00:14:07,550
saben, algunas veces cuando

441
00:14:07,790 --> 00:14:08,900
logran hacer eso, serán

442
00:14:09,190 --> 00:14:10,780
serán unos héroes en cualquier desarrollo de

443
00:14:11,360 --> 00:14:12,520
productos, con cualquier equipo con el que estén trabajando,

444
00:14:12,910 --> 00:14:14,150
porque esto puede ser

445
00:14:14,320 --> 00:14:15,760
una gran manera de conseguir un desempeño mucho mejor.

446
00:14:17,650 --> 00:14:19,490
En tercer y último lugar, una

447
00:14:20,020 --> 00:14:21,230
manera fácil, algunas veces, de obtener

448
00:14:21,450 --> 00:14:22,650
una gran cantidad de datos es usar

449
00:14:23,080 --> 00:14:24,350
lo que ahora se llama crowdsourcing.

450
00:14:25,280 --> 00:14:26,350
Así que actualmente, existen

451
00:14:26,520 --> 00:14:27,270
pocos sitios web o pocos

452
00:14:27,460 --> 00:14:29,520
servicios que les permiten

453
00:14:29,920 --> 00:14:32,210
contratar personas en

454
00:14:32,350 --> 00:14:33,410
la web para, ya saben, asignarle valores

455
00:14:33,730 --> 00:14:36,140
de manera económica grandes conjuntos de entrenamiento por ustedes.

456
00:14:36,810 --> 00:14:37,870
De modo que esta idea de crowdsourcing,

457
00:14:38,190 --> 00:14:39,460
o asignar valores a datos crowdsource,

458
00:14:39,950 --> 00:14:41,390
es algo

459
00:14:41,810 --> 00:14:43,180
que ha, es obviamente como

460
00:14:43,340 --> 00:14:45,200
una literatura académica completa,

461
00:14:45,660 --> 00:14:47,040
tiene algunas de sus propias complicaciones,

462
00:14:47,210 --> 00:14:49,390
etcétera, con respecto a la fiabilidad del asignador de valores

463
00:14:50,440 --> 00:14:51,470
si tienen, ya saben, cientos de miles

464
00:14:51,860 --> 00:14:53,420
de asignadores de valores, alrededor del

465
00:14:53,580 --> 00:14:55,530
trabajando de manera bastante económica para

466
00:14:55,630 --> 00:14:56,810
ayudar a asignar valores a datos por ustedes,

467
00:14:57,030 --> 00:14:58,580
y, lo acabo de mencionar,

468
00:14:58,930 --> 00:15:00,120
existe esta alternativa también.

469
00:15:00,390 --> 00:15:02,170
Y probablemente el sistema de Amazon Mechanical Turk

470
00:15:02,510 --> 00:15:03,750
es la opción de crowdsourcing más popular

471
00:15:03,900 --> 00:15:05,860
en estos momentos.

472
00:15:06,860 --> 00:15:08,070
Esto es a menudo

473
00:15:08,220 --> 00:15:10,040
un poco de trabajo,

474
00:15:10,190 --> 00:15:10,940
empezar a trabajar si desean

475
00:15:11,150 --> 00:15:12,520
obtener asignación de valores de muy alta calidad,

476
00:15:12,780 --> 00:15:14,160
pero a veces es una

477
00:15:14,240 --> 00:15:15,760
opción digna de considerar también.

478
00:15:17,330 --> 00:15:18,870
Si quieren tratar de

479
00:15:19,320 --> 00:15:21,000
contratar a mucha gente,de manera  bastante económica

480
00:15:21,810 --> 00:15:24,220
en la web, nuestras asignaciones de valores lanzan miles de datos para ustedes.

481
00:15:26,320 --> 00:15:27,570
Así que en este vídeo

482
00:15:27,660 --> 00:15:28,840
hemos hablado sobre la idea

483
00:15:29,100 --> 00:15:30,870
de la síntesis artificial de datos,

484
00:15:31,120 --> 00:15:32,440
sobre crear datos nuevos ya sea

485
00:15:32,750 --> 00:15:34,400
desde cero, buscando, utilizando

486
00:15:34,640 --> 00:15:35,400
los fondos de ejecución como un ejemplo,

487
00:15:35,830 --> 00:15:37,710
o mediante la amplificación de un

488
00:15:37,790 --> 00:15:38,980
conjunto de entrenamiento existente, por medio de tomar

489
00:15:39,420 --> 00:15:41,340
los ejemplos de asignaciones de valores existentes e

490
00:15:41,560 --> 00:15:42,980
introducir distorsiones a la misma,

491
00:15:43,240 --> 00:15:44,880
para crear una especie de ejemplos de asignación de valores adicionales.

492
00:15:46,010 --> 00:15:47,450
Y, por último, una cosa que

493
00:15:47,630 --> 00:15:48,810
espero que recuerden de este

494
00:15:49,120 --> 00:15:49,970
vídeo, es la idea de si

495
00:15:50,540 --> 00:15:51,540
se están enfrentando a un problema de aprendizaje

496
00:15:51,830 --> 00:15:54,350
automático, a menudo vale la pena hacer dos cosas.

497
00:15:54,660 --> 00:15:55,830
Una, sólo una comprobación de validez

498
00:15:56,160 --> 00:15:58,600
con curvas de aprendizaje, para lo que ayudaría tener más datos;

499
00:15:59,520 --> 00:16:00,340
y en segundo lugar, suponiendo que ese fuera el caso,

500
00:16:00,730 --> 00:16:01,780
sentarse y preguntarse

501
00:16:01,850 --> 00:16:03,670
seriamente: ¿qué se

502
00:16:04,050 --> 00:16:05,150
haría falta para obtener diez veces

503
00:16:05,260 --> 00:16:06,510
más datos creativos de los que

504
00:16:06,630 --> 00:16:08,450
tienen actualmente; y, no siempre,

505
00:16:08,960 --> 00:16:10,440
pero sí a veces, se sorprenderían

506
00:16:10,640 --> 00:16:12,310
por lo fácil que

507
00:16:12,580 --> 00:16:13,990
resulta ser, tal vez

508
00:16:14,060 --> 00:16:15,020
unos cuantos días, unas cuantas semanas

509
00:16:15,150 --> 00:16:16,160
en el trabajo; y eso puede ser

510
00:16:16,260 --> 00:16:18,700
una excelente manera de darle a su algoritmo de aprendizaje un gran impulso en el desempeño.