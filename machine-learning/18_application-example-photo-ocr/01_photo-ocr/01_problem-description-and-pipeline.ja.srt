1
00:00:00,090 --> 00:00:00,950
このビデオと続く幾つかのビデオで

2
00:00:01,070 --> 00:00:02,010
機械学習の応用例であるところの

3
00:00:02,160 --> 00:00:03,410
Photo OCRの話、および

4
00:00:04,020 --> 00:00:04,980
そのPhoto OCRにまつわる

5
00:00:05,160 --> 00:00:07,670
歴史の話を

6
00:00:08,030 --> 00:00:09,630
していきたい。

7
00:00:10,520 --> 00:00:11,730
それをやりたいと思う

8
00:00:12,170 --> 00:00:13,220
3つの理由がある。

9
00:00:13,480 --> 00:00:14,350
1つ目、複雑な機械学習の

10
00:00:14,770 --> 00:00:15,700
システムがどのように

11
00:00:16,290 --> 00:00:18,000
組み合わせられるのかをお見せしたい。

12
00:00:19,350 --> 00:00:20,960
二つ目、機械学習パイプラインの

13
00:00:21,170 --> 00:00:22,280
コンセプトをお伝えし、

14
00:00:22,970 --> 00:00:24,740
次にやるべき事を決める時に、

15
00:00:24,860 --> 00:00:26,550
どうリソースを配分するかを話したい。

16
00:00:26,780 --> 00:00:27,700
これは一人で

17
00:00:27,730 --> 00:00:28,950
大きなアプリケーションに

18
00:00:29,380 --> 00:00:30,220
従事している場合でも、

19
00:00:30,500 --> 00:00:31,690
または複雑なアプリケーションを

20
00:00:31,770 --> 00:00:32,980
デベロッパのチームで一緒に作ろうと

21
00:00:33,100 --> 00:00:34,190
いう文脈も

22
00:00:34,440 --> 00:00:35,930
あり得る。

23
00:00:37,030 --> 00:00:38,670
そして最後に、Photo OCRの問題は

24
00:00:39,130 --> 00:00:40,690
機械学習の

25
00:00:40,880 --> 00:00:41,810
より興味深い幾つかの

26
00:00:41,880 --> 00:00:42,850
アイデアについてお伝えする

27
00:00:43,260 --> 00:00:44,370
口実にもなる。

28
00:00:45,120 --> 00:00:47,300
一つには機械学習を

29
00:00:47,400 --> 00:00:48,250
コンピュータの画像に適用する

30
00:00:48,600 --> 00:00:50,210
やり方だ。そして二番目に、

31
00:00:50,340 --> 00:00:51,890
人工的なデータ合成の

32
00:00:52,220 --> 00:00:53,880
アイデアだ。それは数ビデオ先で扱う事にする。

33
00:00:54,820 --> 00:00:57,680
ではPhoto OCRの問題とは何なのかを話すところから始めよう。

34
00:01:00,130 --> 00:01:01,710
Photo OCRはPhoto Optical Character Recognition

35
00:01:02,050 --> 00:01:03,760
の略だ。

36
00:01:05,180 --> 00:01:06,460
デジタル写真の分野が成長するに連れて、

37
00:01:07,300 --> 00:01:08,740
さらに最近では携帯にカメラが

38
00:01:09,080 --> 00:01:10,360
ついた事により、

39
00:01:11,140 --> 00:01:12,140
我らはそこら中で撮った大量の

40
00:01:12,500 --> 00:01:13,790
画像写真を所持している。

41
00:01:14,620 --> 00:01:15,700
そして多くのデベロッパが

42
00:01:16,150 --> 00:01:17,850
興味を持っている事の一つに、

43
00:01:18,080 --> 00:01:19,680
これらの写真をコンピュータにもうちょっと良く理解させるには

44
00:01:19,990 --> 00:01:22,300
どうしたら良いか、というのがある。

45
00:01:23,140 --> 00:01:24,690
Photo OCR問題は

46
00:01:25,300 --> 00:01:26,790
撮った写真の中のテキストを

47
00:01:26,980 --> 00:01:29,390
コンピュータにどうやって読ませるか、という事にフォーカスする。

48
00:01:30,730 --> 00:01:31,990
このような画像が与えられた時に、

49
00:01:32,070 --> 00:01:32,850
もしコンピュータが

50
00:01:33,530 --> 00:01:34,480
この画像の中からテキストを

51
00:01:34,670 --> 00:01:35,540
読む事が出来たら、素敵な事に違いない。

52
00:01:35,650 --> 00:01:37,040
例えばもしこの写真を後で

53
00:01:37,220 --> 00:01:38,530
もう一度探したい時に

54
00:01:38,850 --> 00:01:40,220
LULA  B'sとかANTIQUE MALLとタイプしたら

55
00:01:41,000 --> 00:01:42,910
自動的にこの写真を

56
00:01:43,130 --> 00:01:44,190
取ってこれるように出来るだろう。

57
00:01:44,360 --> 00:01:45,890
そうすれば大量の時間を費やして

58
00:01:45,980 --> 00:01:47,130
何百とか何千とかのあなたの写真のコレクションから

59
00:01:47,670 --> 00:01:49,230
頑張ってひっくり返して

60
00:01:49,490 --> 00:01:50,730
探さなくて済むように出来るだろう。

61
00:01:50,870 --> 00:01:53,100
Photo OCRの問題は

62
00:01:53,450 --> 00:01:56,080
まさにこれをやる問題だ。そしてそれは複数のステップで行う。

63
00:01:56,870 --> 00:01:57,790
まず、与えられた写真に対し、

64
00:01:58,060 --> 00:01:58,800
画像を見ていって、

65
00:01:59,480 --> 00:02:01,680
写真の中のどこにテキストがあるかを検出する。

66
00:02:03,020 --> 00:02:03,960
そしてそれを終えた後で、

67
00:02:04,160 --> 00:02:05,340
あるいはそれが成功裡に終えられたら、

68
00:02:05,570 --> 00:02:06,750
次にこれらの

69
00:02:06,980 --> 00:02:09,020
テキストの領域を見て、

70
00:02:09,170 --> 00:02:10,530
その領域のテキストを実際に

71
00:02:10,670 --> 00:02:12,150
読む。それが正しく

72
00:02:12,250 --> 00:02:13,670
読めたら、画像の中に現れたテキストが

73
00:02:15,040 --> 00:02:16,440
何なのか、という

74
00:02:16,800 --> 00:02:18,710
転写が得られる。

75
00:02:19,480 --> 00:02:21,160
スキャンしたドキュメントの

76
00:02:21,440 --> 00:02:22,850
OCR、つまりOptical Character Recognitionは

77
00:02:23,600 --> 00:02:25,760
より簡単な問題だが、

78
00:02:26,180 --> 00:02:27,840
写真のOCRは

79
00:02:27,980 --> 00:02:29,480
こんにちでもまだ、

80
00:02:29,750 --> 00:02:30,970
とても難しい機械学習の問題である。

81
00:02:31,640 --> 00:02:32,730
もしこれが出来れば、

82
00:02:33,000 --> 00:02:34,320
コンピュータに

83
00:02:34,750 --> 00:02:36,390
自動で画像の内容を

84
00:02:36,450 --> 00:02:38,380
より良く理解させる助けに

85
00:02:38,500 --> 00:02:40,030
なるだけでなく、

86
00:02:40,240 --> 00:02:42,240
例えば盲目の人を助ける、というような

87
00:02:42,530 --> 00:02:43,900
応用例もある。

88
00:02:44,000 --> 00:02:45,010
もし盲目の人にカメラを持たせて、

89
00:02:45,780 --> 00:02:47,210
その前にある物が

90
00:02:47,460 --> 00:02:48,430
何なのかを見る事が出来るようにすると、

91
00:02:48,530 --> 00:02:49,700
その前にある道路の標識とかの

92
00:02:49,910 --> 00:02:52,990
標識が何なのかを

93
00:02:53,460 --> 00:02:55,830
教えてくれたり出来る。

94
00:02:56,540 --> 00:02:57,780
またこんにちでは研究者は、例えばカーナビゲーションシステムなどについても

95
00:02:58,310 --> 00:02:59,750
研究している。あなたの車が

96
00:02:59,920 --> 00:03:00,900
道路の標識を読む事が出来て、

97
00:03:01,250 --> 00:03:03,480
目的地までのナビゲーションを助けてくれる事を想像してみてくれ。

98
00:03:04,610 --> 00:03:07,260
Photo OCRを実現する為には、こんな手段が可能だ。

99
00:03:07,970 --> 00:03:08,840
まず最初に、画像を見ていって、

100
00:03:09,080 --> 00:03:11,490
画像内のどこにテキストがあるかを探す。

101
00:03:11,850 --> 00:03:13,380
ここに見せたのは、

102
00:03:13,580 --> 00:03:15,430
Photo OCRのシステムが見つけた

103
00:03:15,730 --> 00:03:17,700
テキストと画像の一例だ。

104
00:03:19,980 --> 00:03:21,850
次に、テキストの範囲のあたりの

105
00:03:22,210 --> 00:03:23,390
矩形を元に、

106
00:03:23,700 --> 00:03:25,930
次に文字分割を行う事が出来る。

107
00:03:26,170 --> 00:03:28,210
例えばこの ANTIQUE MALL と書いてある

108
00:03:28,490 --> 00:03:30,310
テキストの箱を取って、

109
00:03:30,530 --> 00:03:31,760
これを個々の文字の場所に

110
00:03:32,090 --> 00:03:34,150
分割する事を試みる。

111
00:03:35,450 --> 00:03:37,280
そして最後に、個々の文字に

112
00:03:37,450 --> 00:03:39,050
分割された物を元に、

113
00:03:39,320 --> 00:03:41,040
分類器を実行する、そこでは

114
00:03:41,290 --> 00:03:42,950
画像の文字を見ていって

115
00:03:43,090 --> 00:03:44,620
そして書かれている文字の認識を

116
00:03:44,760 --> 00:03:45,990
試みる： 最初の文字がAで、

117
00:03:46,150 --> 00:03:47,070
二番目の文字がN、

118
00:03:47,230 --> 00:03:48,010
三番目の文字がT、

119
00:03:48,480 --> 00:03:49,930
という具合に。

120
00:03:50,110 --> 00:03:51,130
そうして、これらを全て終えたら、

121
00:03:51,190 --> 00:03:52,350
その時はこのフレーズが

122
00:03:52,530 --> 00:03:53,610
LULA B's ANTIQUE MALLだと

123
00:03:54,180 --> 00:03:55,670
判明する事が期待出来る。

124
00:03:56,340 --> 00:03:57,760
そして画像に現れる

125
00:03:57,930 --> 00:04:01,690
他の単語も同様である。

126
00:04:01,980 --> 00:04:02,390
いくつかのPhoto OCRのシステムは

127
00:04:02,910 --> 00:04:04,350
これよりさらに複雑な事もやる、という事は言っておくべきだろう。

128
00:04:04,680 --> 00:04:06,370
例えば最後にちょっとしたスペル修正を行ったりとか。

129
00:04:06,640 --> 00:04:08,470
例えば、文字分割と

130
00:04:08,710 --> 00:04:10,730
文字分類システムが、

131
00:04:11,110 --> 00:04:12,450
c 1 e a n i n gという単語を

132
00:04:12,690 --> 00:04:14,390
見た、と

133
00:04:14,530 --> 00:04:16,050
言ってきたら、

134
00:04:16,260 --> 00:04:17,930
その時は、お分かりの通り

135
00:04:18,350 --> 00:04:19,570
ある種のスペリング修正システムが

136
00:04:19,760 --> 00:04:21,910
それは多分

137
00:04:22,240 --> 00:04:23,270
cleaningだ、と

138
00:04:23,350 --> 00:04:24,880
言う事だろう。

139
00:04:25,340 --> 00:04:27,160
つまり文字分類アルゴリズムが単に

140
00:04:27,310 --> 00:04:29,650
lを1と判断ミスしたという事だろう。

141
00:04:30,370 --> 00:04:31,320
だが、このビデオでやりたい

142
00:04:31,640 --> 00:04:32,510
目的の為に、

143
00:04:32,620 --> 00:04:33,980
この最後のステップを

144
00:04:34,620 --> 00:04:35,780
無視して、これら三つの事をする

145
00:04:36,110 --> 00:04:37,490
システム、つまり

146
00:04:37,700 --> 00:04:39,340
テキスト検出、文字分割、

147
00:04:39,660 --> 00:04:41,040
そして文字分類に集中しよう。

148
00:04:42,410 --> 00:04:43,790
このようなシステムを

149
00:04:44,080 --> 00:04:46,010
機械学習パイプラインと呼んでいる。

150
00:04:47,550 --> 00:04:49,220
特に、ここでお見せしているのは、

151
00:04:49,950 --> 00:04:52,220
フォトOCRパイプラインだ。

152
00:04:53,140 --> 00:04:54,200
画像があって、それを

153
00:04:54,470 --> 00:04:57,590
テキスト検出システムに食わせて、

154
00:04:57,970 --> 00:04:58,960
テキストの領域から、次に

155
00:04:59,420 --> 00:05:01,350
文字を分割する-- テキスト内の各文字に --

156
00:05:01,420 --> 00:05:04,360
そして最後に個々の文字を認識する。

157
00:05:05,730 --> 00:05:07,190
多くの複雑な機械学習のシステムでは

158
00:05:07,800 --> 00:05:09,050
この種のパイプラインは

159
00:05:09,490 --> 00:05:11,400
一般的で、そこでは

160
00:05:11,660 --> 00:05:13,450
複数のモジュールがありうる-- この例では、

161
00:05:13,680 --> 00:05:14,960
テキスト検出、文字分割、

162
00:05:15,390 --> 00:05:17,820
文字認識モジュール --

163
00:05:17,930 --> 00:05:19,170
それらはおのおの、機械学習のコンポーネントかもしれないし、

164
00:05:19,880 --> 00:05:20,740
時には機械学習のコンポーネントでは

165
00:05:20,980 --> 00:05:22,660
無い物もあるかもしれない。

166
00:05:22,810 --> 00:05:23,660
何にせよ、あるデータ片に対して

167
00:05:24,290 --> 00:05:26,050
次々と機能する一連のモジュールを

168
00:05:26,280 --> 00:05:27,780
用いる事で、望みの出力を

169
00:05:28,100 --> 00:05:29,170
生成する。

170
00:05:29,640 --> 00:05:30,930
Photo OCRの例では、

171
00:05:31,580 --> 00:05:32,690
画像の中に現れた

172
00:05:32,800 --> 00:05:35,050
テキストを探す事だ。

173
00:05:35,730 --> 00:05:37,370
もしあなたが機械学習のシステムを

174
00:05:37,710 --> 00:05:39,090
デザインする事になったら、

175
00:05:39,200 --> 00:05:41,010
もっとも重要な決定の一つは、

176
00:05:41,330 --> 00:05:44,350
しばしば組み合わせるパイプラインは何であるか？という事だ。

177
00:05:44,970 --> 00:05:46,010
言い換えると、Photo OCRの問題が

178
00:05:46,530 --> 00:05:47,930
与えられた時に、この問題を

179
00:05:47,990 --> 00:05:49,390
どう別々のモジュールへと

180
00:05:49,770 --> 00:05:51,220
分割するか、という事。

181
00:05:51,690 --> 00:05:53,060
そしてパイプラインを設計する。

182
00:05:53,820 --> 00:05:56,060
するとパイプライン内の各モジュールのパフォーマンスは

183
00:05:56,660 --> 00:05:57,610
しばしば最終的なアルゴリズムのパフォーマンスに

184
00:05:57,710 --> 00:05:59,880
とても大きな影響を与える。

185
00:06:01,480 --> 00:06:02,330
このような問題に

186
00:06:02,550 --> 00:06:03,610
取り組んでいるエンジニアチームが

187
00:06:03,800 --> 00:06:05,150
ある場合、それぞれのモジュールに対する

188
00:06:05,460 --> 00:06:06,900
作業を別々の人がするのもまた、

189
00:06:07,340 --> 00:06:08,720
とても一般的な事だ。

190
00:06:09,500 --> 00:06:11,480
こんな風に簡単に想像出来る：

191
00:06:12,140 --> 00:06:13,240
文字列検出を

192
00:06:13,670 --> 00:06:14,610
1〜5人のエンジニアが

193
00:06:15,460 --> 00:06:16,970
文字分割を

194
00:06:17,470 --> 00:06:19,010
別の一人から5人程度のエンジニアが、

195
00:06:19,220 --> 00:06:20,550
文字認識をまた別の

196
00:06:21,670 --> 00:06:23,100
1〜5人のエンジニアが受け持つ、というような事を。

197
00:06:23,340 --> 00:06:24,850
だからこのようなパイプラインを持つ事は、

198
00:06:25,280 --> 00:06:26,720
エンジニアのチームのそれぞれのメンバーに仕事を分割する

199
00:06:27,110 --> 00:06:30,370
自然な区分を提供する。

200
00:06:31,040 --> 00:06:31,970
もちろん、これらの仕事全てを

201
00:06:32,090 --> 00:06:33,210
一人で全部やったって構わないが、

202
00:06:33,450 --> 00:06:35,910
それがお望みならね。

203
00:06:39,090 --> 00:06:40,370
複雑な機械学習のシステムでは、

204
00:06:41,340 --> 00:06:42,700
パイプラインのアイデアは、

205
00:06:42,870 --> 00:06:44,770
機械のパイプラインというアイデアは、極めて広く行き渡っている。

206
00:06:45,820 --> 00:06:47,070
そして今見て来たのは、

207
00:06:47,400 --> 00:06:49,180
Photo OCRパイプラインがどう機能するかという

208
00:06:49,440 --> 00:06:51,280
具体的な例だ。

209
00:06:52,230 --> 00:06:53,590
次の一連のビデオで、

210
00:06:53,740 --> 00:06:54,590
このパイプラインについて

211
00:06:54,650 --> 00:06:55,780
もうちょっと議論をしていく。

212
00:06:56,290 --> 00:06:57,170
そこでもこの例を用いて、

213
00:06:58,120 --> 00:06:59,860
機械学習のーー私が思うに重要なーー

214
00:07:00,280 --> 00:07:01,400
キーコンセプトの幾つかを例示していく。