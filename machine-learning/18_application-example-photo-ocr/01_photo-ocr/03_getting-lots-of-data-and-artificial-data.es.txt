He observado una y otra vez que una de las maneras más confiables para conseguir un sistema de aprendizaje automático de alto desempeño, es tomar un algoritmo de aprendizaje de oscilación bajo y entrenarlo sobre un conjunto de entrenamiento masivo. Pero ¿de dónde sacan tantos datos de entrenamiento? Resulta que en el aprendizaje automático hay una idea fascinante llamada síntesis de datos artificiales; esto no aplicará a cada problema y, para aplicarlo a un problema determinado, a menudo se requiere pensar un poco, e innovación y conocimiento. Pero si esta idea aplica a su problema con el sistema, algunas veces puede ser un una manera fácil de obtener un enorme conjunto de entrenamiento para proporcionar a su algoritmo de aprendizaje. La idea de la síntesis de datos artificiales comprende dos variaciones principales; la primera es si estamos esencialmente creando datos desde el vacío, creando datos nuevos desde cero. Y la segunda es que si ya tenemos un pequeño conjunto de entrenamiento para valores asignados, y de alguna manera hemos ampliado ese conjunto de entrenamiento o usamos un pequeño conjunto de entrenamiento para convertirlo en un conjunto de entrenamiento más grande; y en este vídeo vamos a repasar esas dos ideas. Para hablar acerca de la idea de síntesis de datos, vamos a usar la porción de reconocimiento de caracteres del flujo de proyecto OCR de la foto; queremos tomar su imagen de entrada y reconocer qué carácter es. Si vamos y recopilamos un gran conjunto de datos para valores asignados, esto es lo que es y cómo se ve. Para este ejemplo en particular, he elegido una relación de aspecto cuadrado. Así que estamos tomando pedazos de  imágenes cuadradas, y el objetivo es tomar un pedazo de imagen y reconocer el carácter en la parte media de ese pedazo de imagen. Y para que sea más sencillo, voy a tratar estas imágenes imágenes en escala de grises, en lugar de imágenes a color. Resulta que el uso del color no parece ayudar mucho para este problema en particular. Así que teniendo este pedazo de imagen, nos gustaría quiere reconocer que eso es una ’T’ . Dado este pedazo de imagen, nos gustaría reconocer que se trata de una 'S'. Dado este pedazo de imagen, nos gustaría reconocer que esa es una ’I’, y así sucesivamente. Así que todas estos, nuestros ejemplos de imágenes en fila, ¿cómo llegamos a un conjunto de entrenamiento mucho más grande? Las computadoras modernas tienen a menudo una enorme biblioteca de fuentes y, utilizan un software procesador de textos, dependiendo del procesador de palabras que usen, es posible que tengan todas estas fuentes y muchos, muchos que ya están almacenadas en su interior. Y, de hecho, si van a diferentes sitios web, hay nuevamente, enormes bibliotecas de fuentes gratuitas en la internet que podemos descargar;  muchos, muchos tipos diferentes de fuentes, cientos o tal vez miles de diferentes tipos de fuentes. Así que si desean más ejemplos de entrenamiento, algo que pueden hacer es tomar los caracteres de diferentes fuentes y pegarlas estos caracteres contra diferentes fondos aleatorios. Así que pueden tomar este ---- y pegar esa ’c’ contra un fondo aleatorio. Si hacen esto, ahora tienen un ejemplo de entrenamiento de una imagen del carácter ’C’. Así que después de una cierta cantidad de trabajo, ya saben esto y será sólo un poco de trabajar para sintetizar los datos que parecen reales, pero después de una cierta cantidad de trabajo, pueden conseguir un conjunto de entrenamiento sintético como ese. Cada imagen que se muestra a la derecha era en realidad una imagen sintetizada. Cuando toman una fuente, tal vez una fuente aleatoria que descargaron de la web, y pega una imagen de un carácter o unos cuantos caracteres de esa fuente contra esta otra imagen de fondo aleatorio, y después aplican tal vez unos cuantos operadores difusos tal vez un pequeño buscador de aplicaciones, distorsiones que ese buscador de aplicaciones, queriendo decir las operaciones para compartir, ampliar y una pequeña rotación; y si hacen eso, obtienen un conjunto de entrenamiento sintético sobre el que se muestra aquí. Y este es el trabajo, ya saben, se tienen que pensar en el trabajo a fin de hacer que los datos sintéticos parezcan realistas, y si realizan un mal trabajo en términos de cómo crean los datos sintéticos, entonces en realidad no funcionará bien. Pero si observan los datos sintéticos, se ven muy similares a los datos reales. Así que mediante el uso de datos sintéticos tiene esencialmente un suministro ilimitado de ejemplos de entrenamiento para la síntesis de entrenamiento artificial y así, si usan estos datos de origen sintético, tienen esencialmente un suministro ilimitado de datos para asignar valores para crear un algoritmo de aprendizaje improvisado para el problema de reconocimiento de caracteres. Así que este es un ejemplo de la síntesis artificial de datos, en donde básicamente están creando datos nuevos desde cero, simplemente están generando imágenes nuevas desde cero. El otro enfoque principal para la síntesis de  datos artificiales, es en el que toman ejemplos que tienen actualmente, que tomamos como ejemplos reales, tal vez a partir de una imagen real, y crean datos adicionales, a modo de ampliar su conjunto de entrenamiento. De modo que aquí está una imagen de un carácter ’A’ de una imagen real, no una imagen sintetizada, y he superpuesto ésta con las líneas de la cuadrícula sólo a modo de ilustración, en realidad no debería tener estas líneas de cuadrícula por supuesto. Así que lo que pueden hacer después, es tomar este alfabeto aquí, tomar esta imagen e introducir deformaciones artificiales, o distorsiones artificiales en la imagen para que puedan tomar la imagen ’A’ y convertir eso en 16 ejemplos nuevos. Así que de esta manera, pueden tomar un pequeño conjunto de entrenamiento para asignar valores y ampliar su conjunto de entrenamiento para, de manera repentina, obtener una gran cantidad de ejemplos adicionales todos ellos. Nuevamente, a fin de hacer esto para la aplicación, se requiere pensar y se necesita conocimiento para descubrir cuáles son nuestros conjuntos razonables de distorsiones, o cuáles son las maneras razonables para amplificar y multiplicar su conjunto de entrenamiento y para el ejemplo específico de reconocimiento de caracteres, la introducción de estas deformaciones parece una elección natural, pero para una aplicación de aprendizaje automático diferente, pudieran existir diferentes distorsiones que podrían tener más sentido. Permítanme mostrarles un ejemplo del totalmente diferente dominio de reconocimiento de voz. Así que en el reconocimiento de voz, digamos que tienen clips de audio y desean aprender del clip de audio para reconocer cuáles fueron las palabras que se dijeron en ese clip. Así que veamos un ejemplo de entrenamiento para asignar valores; digamos que usted tienen un ejemplo de entrenamiento para asignar valores de alguien que está diciendo unas cuantas palabras específicas. Así que vamos a reproducir ese clip de audio aquí. ’0 -1-2-3-4-5’ bien, así que es alguien que está contando de 0 a 5, así que quieren tratar de aplicar un algoritmo de aprendizaje para tratar de reconocer las palabras que se dijeron allí. Así que, ¿cómo podemos ampliar el conjunto de datos? Bueno, algo que hacemos es introducir distorsiones de audio adicionales en el conjunto de datos. Así que aquí voy a añadir sonidos de fondo para simular una mala conexión de teléfono celular. Cuando escuchen pitidos, eso es en realidad parte de la pista de sonido, no hay nada malo con los altavoces; voy a reproducir esto ahora. ’0,1,2,3,4,5’ Bien, así que pueden escuchar ese tipo de clip de audio y reconocer los sonidos. Eso parece otro ejemplo de entrenamiento útil aquí hay otro ejemplo, fondo ruidoso. Cero, uno, dos, tres cuatro, cinco, ya saben, de carros pasando, gente caminando en el fondo; aquí hay otro, de modo que si tomamos el clip de audio limpio, original, si tomamos el audio limpio de alguien diciendo ’’0,1,2,3,’ 4,5’, entonces podemos sintetizar automáticamente estos ejemplos de entrenamiento adicionales y ampliar de esta manera un ejemplo de entrenamiento en tal vez cuatro ejemplos diferentes de entrenamiento. Permítanme reproducir este último ejemplo también. ’0,1,2,3,4,5’, así que al tomar sólo un ejemplo de asignación de valores, tenemos que hacer el esfuerzo para recolectar sólo un ejemplo de asignación de valores que es ’0,1,2,3,4,5’, y por medio de sintetizar las distorsiones adicionales, al introducir diferentes sonidos de fondo, hemos multiplicado ahora este ejemplo en muchos más ejemplos, hemos añadido mucho trabajo sólo por haber agregado estos diferentes sonidos de fondo al audio limpio. Sólo una palabra de advertencia acerca de la síntesis de datos mediante la introducción de distorsiones: si intentan hacer esto ustedes mismos, las distorsiones que introduzcan deben ser representativas de la fuente de los ruidos, o distorsiones, que pudieran ver en el equipo de prueba. Así, para el ejemplo de reconocimiento de caracteres, ya saben, las deformaciones que introducimos son en realidad útiles, porque una imagen ’A’ que se ve así, esa podría ser una imagen que en realidad podríamos ver en un conjunto de prueba, este tipo de ’A’ más gorda y, ya saben la imagen en la parte superior derecha, esa podría ser una imagen que podríamos imaginar ver. Y para el audio, bueno, queremos reconocer el habla, incluso contra una mala conexión del teléfono celular, contra diferentes tipos de ruido de fondo, así que para el audio, nuevamente estamos sintetizando ejemplos que son en realidad representativos de las clases de ejemplos que queremos clasificar, que queremos reconocer correctamente. En contraste, por lo general no no ayuda agregar ruido puramente aleatorio, sin sentido a sus datos. No estoy seguro de que puedan ver esto, pero lo que hemos hecho aquí es tomar la imagen y, para cada píxel, en cada una de estas 4 imágenes, sólo agregamos algún ruido Gaussiano aleatorio a cada píxel, así que cada píxel es el brillo de los píxeles si sólo agregaran algún, ya saben, tal vez ruido Gaussiano aleatorio a cada píxel. Así que es sólo un ruido totalmente sin sentido, ¿cierto? Así que, a menos que estén esperando ver este tipo de ruido por píxel en su conjunto de prueba, es menos probable que esta clase de ruido puramente aleatorio, sin sentido, sea útil. Pero el proceso de la síntesis de datos artificiales es, ya saben, un poco como un arte también y algunas veces sólo tienen que probarlo y ver si funciona. Pero si están tratando de decidir qué tipo de distorsiones añadir, ya saben, piensen en otras distorsiones significativas que pudieran añadir que provocarían que generaran ejemplos de entrenamiento adicionales que son al menos algo representativos de los tipo de imágenes que pueden esperar ver en sus equipos de prueba. Por último, para concluir este vídeo, sólo quiero decir un par de cosas más sobre esta idea de conseguir muchos datos a través de la síntesis artificial de datos. Como siempre, antes de invertir mucho esfuerzo, ya saben, averiguando cómo crear los ejemplos de entrenamiento artificial, a menudo es una buena práctica asegurarse de que realmente tengan un clasificador de baja oscilación, y tener muchos más datos de entrenamiento será de ayuda. Una forma estándar de hacer esto es trazar las curvas de aprendizaje y asegurarse de que sólo tienen un clasificador de baja oscilación, de alta varianza. O si no tienen un clasificador de baja oscilación, ya saben, otra cosa que vale la pena intentar es seguir aumentando el número de variables que tiene su clasificador, aumentando el número de unidades ocultas en su red, por decir, hasta que realmente tengan un clasificador de baja oscilación, y sólo entonces tendrán que hacer el esfuerzo para crear un conjunto de entrenamiento grande, artificial, de modo que lo que realmente desean evitar es, ya saben, pasar toda una semana o pasar unos cuantos meses tratando de averiguar cómo conseguir un gran conjunto de datos sintetizado de manera artificial, sólo para darse cuenta más tarde que, ya saben, el desempeño de su algoritmo de aprendizaje no mejora mucho, incluso cuando se le ofrece un conjunto de entrenamiento enorme. Así que ese es mi consejo habitual acerca de las pruebas que realmente pueden utilizar de un gran conjunto de entrenamiento antes de invertir mucho esfuerzo para tratar de conseguir ese gran conjunto de entrenamiento. En segundo lugar, cuando estoy trabajando en problemas de aprendizaje automático, una pregunta que a menudo le hago al equipo con el que estoy trabajando, con frecuencia le pregunto a mis estudiantes es, ¿cuánto trabajo se necesitaría para obtener 10 veces más datos que los que tenemos actualmente? Cuando me enfrento a una nueva aplicación de aprendizaje electrónico, muy a menudo me sentaré con un equipo y le haré exactamente esta pregunta. He hecho esta pregunta una y otra, y otra, y otra vez, y me he quedado muy sorprendido por la frecuencia con la esta respuesta ha sido que, ya saben, en realidad no es tan difícil; tal vez un par de días de trabajo a lo sumo, para obtener diez veces la cantidad de datos que actualmente tenemos para una aplicación en ejecución del equipo y, muy a menudo, si pueden obtener diez veces más datos allí, será una manera de hacer que su algoritmo funcione mucho mejor. Así que, ya saben, si alguna vez se unen al equipo de producción que está trabajando en alguna aplicación de aprendizaje electrónico, esta es una muy buena pregunta para ustedes y para hacérsela al equipo. No se sorprendan demasiado si después de unos cuantos minutos de lluvia de ideas, a su equipo se le ocurre una manera para obtener literalmente diez veces esta cantidad de datos, en cuyo caso, creo que serían un héroe para ese equipo, porque con 10 veces la cantidad de datos, creo que en realidad obtienen un desempeño mucho mejor, sólo por aprender de tantos datos. Así que hay varias maneras para trata de obtener muchos más datos, y en este vídeo nos centramos principalmente en la idea de la síntesis artificial de datos y esa comprende las dos ideas de generar datos desde cero usando fuentes aleatorias y así sucesivamente, así como la segunda idea de tomar un ejemplo existente e introducir distorsiones que amplifican para ampliar el conjunto de entrenamiento A. Un par de otros ejemplos de formas para conseguir muchos más datos, son recoger los datos o asignar valores ustedes mismos. Así que un cálculo útil que yo realizo a menudo me es, ya saben, cuántos minutos, cuántas horas se necesitan para obtener un cierto número de ejemplos, así que en realidad me siento y averiguo, ya saben, supongamos que me toma diez segundos asignar valor a un ejemplo, después supongamos que, para nuestra aplicación, actualmente tenemos 1000 ejemplos de valores asignados, de modo que diez veces más de eso serían si ’n’ fuera igual a diez mil. Una segunda manera de obtener una gran cantidad de datos es simplemente recoger los datos y asignarles valores ustedes mismos. De modo que lo que quiero decir con esto es, a menudo me sentaré y haré un cálculo para averiguar cuánto tiempo, ya saben, saber sólo cuántas horas me tomará, cuántas horas o cuántos días me tomará o le tomará a alguien más sólo sentarse y recolectar 10 veces esa cantidad de datos, de los que tenemos actualmente, por medio de recolectarlos y asignarles valores nosotros mismos. Así que, por ejemplo, eso, para nuestra aplicación de aprendizaje automático, actualmente tenemos 1,000 ejemplos, por lo que ’M’ es 1000. Así que lo que hacemos es sentarnos y preguntar, bueno ¿cuánto tiempo me toma realmente recolectar y asignarle valores a un ejemplo? Y a veces, tal vez les tomará ya saben, diez segundos asignarle valores un ejemplo nuevo, así que se desean 10X esa cantidad de ejemplos, hago un cálculo: si me toma 10 segundos obtener un ejemplo de entrenamiento, si quisiera obtener 10 veces más datos, entonces necesito 10,000 ejemplos. Así que hago el cálculo, ¿cuánto tiempo me va a tomar asignarle valores, asignar valores manualmente 10,000 ejemplos si me lleva 10 segundos asignarle valor a 1 ejemplo?. Así que cuando hacen este cálculo, con frecuencia he observado que muchos de ustedes se sorprenderían por, ya saben, lo poco, o, a veces unos cuantos días en el trabajo, a veces unos cuantos días de trabajo, bueno, he visto equipos muy sorprendidos algunas veces por el poco trabajo que podría tomar simplemente conseguir muchos más datos, y dejar que eso sea una manera para darle a su aplicación de aprendizaje un gran impulso en el desempeño, y necesariamente, ya saben, algunas veces cuando logran hacer eso, serán serán unos héroes en cualquier desarrollo de productos, con cualquier equipo con el que estén trabajando, porque esto puede ser una gran manera de conseguir un desempeño mucho mejor. En tercer y último lugar, una manera fácil, algunas veces, de obtener una gran cantidad de datos es usar lo que ahora se llama crowdsourcing. Así que actualmente, existen pocos sitios web o pocos servicios que les permiten contratar personas en la web para, ya saben, asignarle valores de manera económica grandes conjuntos de entrenamiento por ustedes. De modo que esta idea de crowdsourcing, o asignar valores a datos crowdsource, es algo que ha, es obviamente como una literatura académica completa, tiene algunas de sus propias complicaciones, etcétera, con respecto a la fiabilidad del asignador de valores si tienen, ya saben, cientos de miles de asignadores de valores, alrededor del trabajando de manera bastante económica para ayudar a asignar valores a datos por ustedes, y, lo acabo de mencionar, existe esta alternativa también. Y probablemente el sistema de Amazon Mechanical Turk es la opción de crowdsourcing más popular en estos momentos. Esto es a menudo un poco de trabajo, empezar a trabajar si desean obtener asignación de valores de muy alta calidad, pero a veces es una opción digna de considerar también. Si quieren tratar de contratar a mucha gente,de manera  bastante económica en la web, nuestras asignaciones de valores lanzan miles de datos para ustedes. Así que en este vídeo hemos hablado sobre la idea de la síntesis artificial de datos, sobre crear datos nuevos ya sea desde cero, buscando, utilizando los fondos de ejecución como un ejemplo, o mediante la amplificación de un conjunto de entrenamiento existente, por medio de tomar los ejemplos de asignaciones de valores existentes e introducir distorsiones a la misma, para crear una especie de ejemplos de asignación de valores adicionales. Y, por último, una cosa que espero que recuerden de este vídeo, es la idea de si se están enfrentando a un problema de aprendizaje automático, a menudo vale la pena hacer dos cosas. Una, sólo una comprobación de validez con curvas de aprendizaje, para lo que ayudaría tener más datos; y en segundo lugar, suponiendo que ese fuera el caso, sentarse y preguntarse seriamente: ¿qué se haría falta para obtener diez veces más datos creativos de los que tienen actualmente; y, no siempre, pero sí a veces, se sorprenderían por lo fácil que resulta ser, tal vez unos cuantos días, unas cuantas semanas en el trabajo; y eso puede ser una excelente manera de darle a su algoritmo de aprendizaje un gran impulso en el desempeño.