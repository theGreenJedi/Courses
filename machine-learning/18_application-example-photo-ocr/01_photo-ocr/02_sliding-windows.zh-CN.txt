在上一段视频中 我们谈到了照片 OCR 流水线 以及其工作原理 我们讲到可以照一张照片 然后将其通过 一系列机器学习组件 来尝试读出 图片中的文字信息 在这段视频中 我想再多介绍一些 照片OCR流水线中的组件是如何工作的 具体来说 这段视频的大部分内容 将关注一种叫 滑动窗(sliding windows)的分类器 滑动窗的第一个步骤 是文字检测(text detection) 我们有这样一幅照片 并且想要找出图片中出现文字的区域 文字识别是计算机视觉中的一个非同寻常的问题 因为取决于你 想要找到的文字的长度 这些长方形区域 会呈现不同的宽高比 为了更好地介绍 图像的检测 我们从一个简单一点的例子开始 我们先看这个探测行人的例子 等下再把我们从行人检测中 得出的想法 应用到文字检测中 在行人检测中 你希望照一张相片 然后找出图像中 出现的行人 所以这就是一个行人 这是第二个 这是第三、第四、第五个 以及第六个 这个问题似乎 比文字检测的问题更简单 原因是 大部分的 行人都比较相似 因此可以使用一个固定宽高比的 矩形来分离出你希望找到的行人 我说的宽高比 就是指的这些矩形的高度和宽度的比值 在行人的问题中 不同矩形的宽高比都是一样的 但对文字检测的问题 高度和宽度的比值 对不同行的文字就是不同的了 虽然在行人检测的问题中 行人可能会与相机 处于不同的距离位置 因此这些矩形的高度 也取决于他们离相机的距离远近 但这个比值应该是一样的 为了建立一个行人检测系统 以下是具体步骤 假如说我们把 宽高比标准化到 82比36这样一个比例 我们可以把这个比值 进行圆整 比如化为 80比40之类的 但82比36也可以 接下来我们要做的 就是到街上去收集一大堆正负训练样本 这些是82×36大小的 有行人的 图像样本 而这些样本里没有行人 在这里我展示 12个正样本 也就是 y=1 以及12个负样本 y=0 在更典型的行人识别 应用中 我们 可以有1000个训练样本 到10000个训练样本 不等 甚至更多 如果你能得到 大规模训练样本的话 然后你要做的事 是训练一个神经网络 或者别的什么学习算法 输入这些图片 82×36维的图像块 然后对 y 进行分类 把图像块分成"有行人" 和"没有行人"两类 因此这一步 实际上是一个监督学习 你通过一个图像块 然后决定这个图像块里有没有行人 现在假如我们获得 一张新的图像 一个测试集图片 像这张图 我们想来试试看在这张图片中找行人 我们要做的是 首先对这个图像取一小块长方形 就像这里所示的 比如这是一个 82×36的图像块 我们将这个图像块 通过我们训练得到的分类器 来确定 这个图像块中是不是有行人 如果没问题的话 我们的分类器 应该报告这个图像块 y=0 因为没有行人 接下来 我们把这个 绿色的长方形图片 滑动一点点 然后得到一个新的图像块 并同样把它传入我们的分类器 看看这里面有没有行人 做完这以后 我们再向右滑动一点窗口 然后同样地 把图像块传入分类器 你每次滑动窗口的 大小是一个参数 通常被称为 步长(step size) 有时也称为 步幅参数(stride parameter) 你每次移动一个像素 就是说你是用的步长 或者说步幅是1 这样通常表现得最好 但可能计算量比较大 因此通常使用4个像素 作为步长值 或者每次8个像素 或者每步选择更大的像素 都是比较常见的 因为这样你每次 都把矩形窗 多移动一点点 所以通过这个过程 你一点点连续向右移动 这个小的矩形窗 并且每次都将图像块 通过你的分类器 直到最后你滑动小窗 遍历图片中的不同位置 从一开始 在第一行滑动 然后到图片中的 下面几行 你会逐渐地 以某个步长或步幅 把这些图像块 全部放入你的分类器 并运行 但这个矩形 是非常小的 只能探测到某种尺寸的行人 接下来我们要做的 是看看更大的图像块 因此我们用更大一些的图像块 像这里所示的 同样地 传入分类器运行 顺便说一下 我说"用更大一些的图像块" 我的意思是 当你用这样的图像块时 你先取出这个图像块 然后把这张图像块 重新压缩到82×36的尺寸 就是取一个大一点的图 然后重新把大小 调整到小的尺寸 或者说调整到 可以传入确定图片中是否有行人的 分类器应该使用的尺寸 最后 你可以 做一个更大的矩形 同样滑动窗口 到最后 完成整个过程以后 你的算法应该就能 检测出图像中 是否出现行人了 因此整个步骤就是 你先训练一个分类器 然后用一个滑动窗分类器 或者叫滑动窗检测器 来找出图像中出现的行人 接下来我们转向 文字识别的例子 让我们来看看 对于照片 OCR 流水线中 要检测出文字 需要怎样的步骤 跟行人检测类似 你也可以先收集一些 带标签的训练集 包括正样本和负样本 分别对应文字出现的区域 只是跟刚才不同的是 现在我们要检测文字 而不是行人 因此正样本就表示 图像中有文字的那些图片 而负样本表示 没有文字图像的图片 训练完了以后 我们就可以把它 应用到新的图像中 或者说 测试集图片中 我们以这幅图片为例 我们假设 对于这个例子 为了表达方便 我们用一个固定的比例 来运行滑动窗 也就是说 我只用一种矩形尺寸 假如说我用 许多很小的矩形图片 来运行矩形窗算法 就像这样 如果我这样做的话 最终得到的结果 是这样的 白色的区域表示 我的文字检测系统已经发现了文字 所以这两幅图的坐标是对应的 这张图的这个区域 就对应这幅图的这个位置 因此这一块是黑色的 就表示在原图中 分类器在这一个区域 没有找到任何文字 而相对地 在这里出现了很多 白色的区域 这就表示分类器在原图中的 这一块发现了文字 这里我所做的 左下角的这幅图 实际上是用白色的区域 来表示分类器在原图这一块区域发现了文字 并且不同的灰度 就表示分类器给出的 输出结果的概率值 所以比如有些灰色的阴影 这就表示分类器 似乎发现了文字 但并不十分确信 而比较白亮的区域 则表示分类器 预测这个区域有文字 有比较大的概率 现在我们还没完成文字检测呢 因为我们实际上想做的 是在图像中 有文字的各区域 都画上矩形窗 所以我们还需要完成一步 我们取出分类器的输出 然后输入到一个 被称为"展开器"(expansion operator)的东西 展开器的作用就是 它会取过这张图片 对每一个白色的小点 都扩展为一块 白色的区域 从数学上说 这一步实现就是 看右边这幅图 我们得到右边这幅图的做法就是 对于每一个像素 我们都考察一下 它是不是在左边 这幅图中的某个 白色像素的范围之内 所以比如说 如果某一个像素点 在最左边那幅图中 白色像素点的五或十个像素范围中 那么我们将把右边那幅图的相同像素设为白色 因此 这样做的效果就是 我们把左边图中的 所有的白色小点 都扩展了一下 让它们都变大了一些 根据它们周围临近像素是不是白色的 如果是的话 我们把它们也变成了白色 这样我们就快完成了 我们现在可以根据 右边的这张图 锁定那些连接部分 也就是这些连续的白色区域 然后围绕着它们画个框就行了 具体来讲 如果我们分析这些白色区域 比如说这个 这个 这个 等等 我们可以简单地 凭直觉来判断 哪些区域是比较奇怪的 因为我们知道有文字的区域 应该不是很高的 而是比较宽的 所以我们忽略那些 又高又瘦的白块 比如这个和这个 我们抛弃这些 因为它们太瘦长了 然后对剩下的那些 从比例上来看 比较像正常的文字区域的 这些白块 画上矩形窗 也就是说 我们围着这些 白块画上矩形边界 比如这里 LULA B's ANTIQUE MALL 商标 还有 LULA B's 和那边小的“正在营业” 的牌子 这个例子漏掉了一块文字 虽然很难识别 但其实这里是有一行文字的 还是写的 LULA B's 但由于宽高比不正常 因此被忽略掉了 所以 对这幅图来讲 检测效果还不错 但对于这个具体的例子 分类器还是漏掉了一些文字 因为这段文字 是写在透明窗户上的 因此确实比较难读出来 好的 这就是使用滑动窗 来进行文字检测 找到这些有文字的 长方形以后 我们现在就能够 剪下这些图像区域 然后应用流水线的后面步骤对文字进行识别 如果你还记得的话 你应该知道流水线的 第二步是字符分割 所以给出上面这样的图像 我们应该怎样分割出图像中的单个字符呢？ 同样地 我们还是使用 一种监督学习算法 用一些正样本 和一些负样本 而我们要做的 就是看看这些图片 然后试着决定一下 图像中是不是 在两个字符之间 有一条分界线 所以对这些正样本 比如第一个样本 这个图片中间 似乎就有一条分界线 把两个字符分开了 然后第二个样本 同样地像是一个 正样本 因为我 可以画一条线 来把两个字符分开 所以这些都是正样本 这些样本的图像中间 有一条沟或者分隔线 把两个不同的字符分开了 而对于负样本 你不能在中间 画一条分隔线 来把左右分开 所以这些都是负样本 因为它们不表示两个字符的中间部分 因此我们要做的就是 训练一个分类器 可以用神经网络 也可以用别的学习算法 来试着对这些正负样本进行分类 训练好这个分类器以后 我们就要把这个分类器 应用到我们文字中 这是文字检测系统的输出 比如从这个矩形开始 我们要问 这个矩形窗的 中间部分是不是像 两个字符的 中间位置呢 同样地 正常情况下 分类器应该回答 不是 然后我们滑动矩形窗 这是一个一维的 矩形窗分类器 因为我们滑动矩形窗的 方向就是沿着一条直线 从左向右 不存在其他行 这里只有一行 对现在这个位置 我们要问问 我们应该把这两个字符分开吗 或者说 我们应该在矩形中间画条线吗 同样地 正常情况下 分类器会输出 y=1 这就表示我们应该 在中间画一条线 分开两个字符 然后我们再继续移动窗口 然后分类器再作出决定 这时分类器会说 不要分开 然后再移动 分类器再说 是的应该分开 然后把两个字符分开 然后再慢慢向右移动 按道理在这里 分类器会输出另一个正样本 一直下去 就这样 我们要依次向右 滑动矩形窗 每一步都运行分类器 如果正常的话 分类器会告诉我们 应该在什么地方 来将图像分割为独立的字符 这就是用于 字符分割的一维滑动窗 这里我们又回到了整个照片OCR流水线 在这段视频中 我们谈到了文字检测 在文字检测中 我们使用滑动窗来检测文字 同时我们还用了一个 一维滑动窗来进行 字符的分割 来将图像分割为独立的字符 流水线的最后一步 是字符分类 这一步 根据之前你已经学到的 监督学习算法 你应该比较清楚 应该怎么做了 你可以使用一种 标准的监督学习算法 比如神经网络 或者其他方法 输入这样的图像 然后将图像按字母分类 化为26个字母 A到Z中的一个 或者我们也可以有36种字符 如果你算上数字字符的话 这就是一个多元分类问题 你应该把这个 带有字符的图像 作为输入 然后确定这个图像中出现了什么字符 这就是照片OCR流水线技术 以及使用滑动窗的方法 作为分类器 来把这些不同的组件 放在一起 共同开发成一个照片OCR系统 在接下来的课程中 我们将继续围绕照片OCR技术 探究其他一些有趣的应用问题 【教育无边界字幕组】翻译：所罗门捷列夫 校对：竹二个 审核：Naplessss