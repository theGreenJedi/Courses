1
00:00:00,090 --> 00:00:00,950
在这一段和下几段视频中

2
00:00:01,070 --> 00:00:02,010
我想向你介绍一种

3
00:00:02,160 --> 00:00:03,410
机器学习的应用实例

4
00:00:04,020 --> 00:00:04,980
或者说是

5
00:00:05,160 --> 00:00:07,670
机器学习在一种叫

6
00:00:08,030 --> 00:00:09,630
照片OCR技术中的应用历史

7
00:00:10,520 --> 00:00:11,730
我想介绍这部分内容的原因

8
00:00:12,170 --> 00:00:13,220
主要有以下三个

9
00:00:13,480 --> 00:00:14,350
第一 我想向你展示

10
00:00:14,770 --> 00:00:15,700
一个复杂的机器学习系统

11
00:00:16,290 --> 00:00:18,000
是如何被组合起来的

12
00:00:19,350 --> 00:00:20,960
第二 我想介绍一下

13
00:00:21,170 --> 00:00:22,280
机器学习流水线（machine learning pipeline）的有关概念

14
00:00:22,970 --> 00:00:24,740
以及在决定下一步做什么时

15
00:00:24,860 --> 00:00:26,550
如何分配资源

16
00:00:26,780 --> 00:00:27,700
这既包括你需要自己

17
00:00:27,730 --> 00:00:28,950
开发一个很复杂的

18
00:00:29,380 --> 00:00:30,220
机器学习应用的情况

19
00:00:30,500 --> 00:00:31,690
也可能适用于

20
00:00:31,770 --> 00:00:32,980
一个开发团队

21
00:00:33,100 --> 00:00:34,190
希望共同建立一个复杂的

22
00:00:34,440 --> 00:00:35,930
机器学习应用的情况

23
00:00:37,030 --> 00:00:38,670
最后 

24
00:00:39,130 --> 00:00:40,690
我也想通过介绍照片OCR问题

25
00:00:40,880 --> 00:00:41,810
的机会来告诉你

26
00:00:41,880 --> 00:00:42,850
机器学习的诸多

27
00:00:43,260 --> 00:00:44,370
有意思的想法和理念

28
00:00:45,120 --> 00:00:47,300
其中之一是如何将机器学习

29
00:00:47,400 --> 00:00:48,250
应用到计算机视觉问题中

30
00:00:48,600 --> 00:00:50,210
第二是有关

31
00:00:50,340 --> 00:00:51,890
人工数据合成（artificial data synthesis）的概念

32
00:00:52,220 --> 00:00:53,880
我们将在接下来的几段视频中进行介绍

33
00:00:54,820 --> 00:00:57,680
好的 那么我们就从介绍什么是照片OCR问题开始

34
00:01:00,130 --> 00:01:01,710
照片OCR表示

35
00:01:02,050 --> 00:01:03,760
照片光学字符识别（photo optical character recognition）

36
00:01:05,180 --> 00:01:06,460
随着数码摄影的日益流行

37
00:01:07,300 --> 00:01:08,740
以及近年来手机中

38
00:01:09,080 --> 00:01:10,360
拍照功能的逐渐成熟

39
00:01:11,140 --> 00:01:12,140
我们现在很容易就会有

40
00:01:12,500 --> 00:01:13,790
一大堆从各地拍摄的数码照片

41
00:01:14,620 --> 00:01:15,700
吸引众多开发人员的

42
00:01:16,150 --> 00:01:17,850
其中一个应用是

43
00:01:18,080 --> 00:01:19,680
如何让计算机更好地理解

44
00:01:19,990 --> 00:01:22,300
这些照片的内容

45
00:01:23,140 --> 00:01:24,690
这种照片OCR技术

46
00:01:25,300 --> 00:01:26,790
主要解决的问题是让计算机

47
00:01:26,980 --> 00:01:29,390
读出照片中拍到的文字信息

48
00:01:30,730 --> 00:01:31,990
用这样一张照片举例说明

49
00:01:32,070 --> 00:01:32,850
如果计算机能够读出

50
00:01:33,530 --> 00:01:34,480
照片中的文字就太好了

51
00:01:34,670 --> 00:01:35,540
这样一来如果你

52
00:01:35,650 --> 00:01:37,040
下次想再把这张照片找出来时

53
00:01:37,220 --> 00:01:38,530
你就输入照片中的文字

54
00:01:38,850 --> 00:01:40,220
LULA B's ANTIQUE MALL

55
00:01:41,000 --> 00:01:42,910
然后计算机就自动地

56
00:01:43,130 --> 00:01:44,190
找出这张照片来

57
00:01:44,360 --> 00:01:45,890
这样你就不用花几个小时

58
00:01:45,980 --> 00:01:47,130
把你的相片集翻个底朝天

59
00:01:47,670 --> 00:01:49,230
从几百上千张照片中

60
00:01:49,490 --> 00:01:50,730
把这张找出来

61
00:01:50,870 --> 00:01:53,100
照片OCR就是解决这一问题的

62
00:01:53,450 --> 00:01:56,080
它有如下几个步骤

63
00:01:56,870 --> 00:01:57,790
首先 给定某张图片

64
00:01:58,060 --> 00:01:58,800
它将把图像浏览一遍

65
00:01:59,480 --> 00:02:01,680
然后找出这张图片中哪里有文字信息

66
00:02:03,020 --> 00:02:03,960
在完成这一步以后

67
00:02:04,160 --> 00:02:05,340
成功找出有文字的位置以后

68
00:02:05,570 --> 00:02:06,750
接下来要做的就是

69
00:02:06,980 --> 00:02:09,020
重点关注这些文字区域

70
00:02:09,170 --> 00:02:10,530
并且在这些区域中

71
00:02:10,670 --> 00:02:12,150
对文字内容进行识别

72
00:02:12,250 --> 00:02:13,670
如果能正确读出的话

73
00:02:15,040 --> 00:02:16,440
它会将这些内容进行转录

74
00:02:16,800 --> 00:02:18,710
记录下图片中出现的这些文本

75
00:02:19,480 --> 00:02:21,160
虽然现在OCR

76
00:02:21,440 --> 00:02:22,850
或者说光学文字识别

77
00:02:23,600 --> 00:02:25,760
对扫描的文档来说已经是一个

78
00:02:26,180 --> 00:02:27,840
比较简单的问题了

79
00:02:27,980 --> 00:02:29,480
但对于数码照片来说

80
00:02:29,750 --> 00:02:30,970
现在还是一个比较困难的机器学习问题

81
00:02:31,640 --> 00:02:32,730
研究这个目的

82
00:02:33,000 --> 00:02:34,320
不仅仅是因为

83
00:02:34,750 --> 00:02:36,390
这可以让计算机

84
00:02:36,450 --> 00:02:38,380
更好地理解

85
00:02:38,500 --> 00:02:40,030
我们的户外图像

86
00:02:40,240 --> 00:02:42,240
更重要的是 它衍生了很多应用

87
00:02:42,530 --> 00:02:43,900
比如在帮助盲人方面

88
00:02:44,000 --> 00:02:45,010
假如你能为盲人提供一种照相机

89
00:02:45,780 --> 00:02:47,210
这种相机可以“看见”

90
00:02:47,460 --> 00:02:48,430
他们前面有什么东西

91
00:02:48,530 --> 00:02:49,700
可以告诉他们

92
00:02:49,910 --> 00:02:52,990
面前的路牌上

93
00:02:53,460 --> 00:02:55,830
写的是什么字

94
00:02:56,540 --> 00:02:57,780
现在也有研究人员将照片OCR技术应用到汽车导航系统中

95
00:02:58,310 --> 00:02:59,750
想象一下你的车

96
00:02:59,920 --> 00:03:00,900
能读出街道的标识

97
00:03:01,250 --> 00:03:03,480
并且将你导航至目的地

98
00:03:04,610 --> 00:03:07,260
要实现照片OCR 我们可以这样做

99
00:03:07,970 --> 00:03:08,840
首先我们可以通览图像

100
00:03:09,080 --> 00:03:11,490
并找出有文字的图像区域

101
00:03:11,850 --> 00:03:13,380
这里展示的例子就是

102
00:03:13,580 --> 00:03:15,430
照片OCR系统可能会识别到的

103
00:03:15,730 --> 00:03:17,700
图像中的文字信息

104
00:03:19,980 --> 00:03:21,850
第二 通过得到的文字区域的

105
00:03:22,210 --> 00:03:23,390
矩形轮廓

106
00:03:23,700 --> 00:03:25,930
我们可以进行字符切分

107
00:03:26,170 --> 00:03:28,210
比如对这个文字框

108
00:03:28,490 --> 00:03:30,310
我们或许能认出“ANTIQUE MALL”

109
00:03:30,530 --> 00:03:31,760
然后我们会试着将其

110
00:03:32,090 --> 00:03:34,150
分割成独立的字符

111
00:03:35,450 --> 00:03:37,280
最后 在成功将字段分割为

112
00:03:37,450 --> 00:03:39,050
独立的字符后

113
00:03:39,320 --> 00:03:41,040
我们可以运行一个分类器

114
00:03:41,290 --> 00:03:42,950
输入这些可识别的字符

115
00:03:43,090 --> 00:03:44,620
然后试着识别出

116
00:03:44,760 --> 00:03:45,990
第一个字母是一个A

117
00:03:46,150 --> 00:03:47,070
第二个字母是一个N

118
00:03:47,230 --> 00:03:48,010
第三个字母是一个T

119
00:03:48,480 --> 00:03:49,930
等等

120
00:03:50,110 --> 00:03:51,130
因此通过完成所有这些工作

121
00:03:51,190 --> 00:03:52,350
按理说你就能识别出

122
00:03:52,530 --> 00:03:53,610
这个字段写的是

123
00:03:54,180 --> 00:03:55,670
LULAB's ANTIQUE MALL

124
00:03:56,340 --> 00:03:57,760
然后图片中其他有文字的地方

125
00:03:57,930 --> 00:04:01,690
也是类似的方法进行处理

126
00:04:01,980 --> 00:04:02,390
实际上有很多照片OCR系统

127
00:04:02,910 --> 00:04:04,350
会进行更为复杂的处理

128
00:04:04,680 --> 00:04:06,370
比如在最后会进行拼写校正

129
00:04:06,640 --> 00:04:08,470
所以比如说

130
00:04:08,710 --> 00:04:10,730
假如你的字符分割

131
00:04:11,110 --> 00:04:12,450
和分类系统告诉你

132
00:04:12,690 --> 00:04:14,390
它识别到的字是

133
00:04:14,530 --> 00:04:16,050
“C 1 e a n i n g”

134
00:04:16,260 --> 00:04:17,930
那么 

135
00:04:18,350 --> 00:04:19,570
很多拼写修正系统

136
00:04:19,760 --> 00:04:21,910
会告诉你

137
00:04:22,240 --> 00:04:23,270
这可能是单词

138
00:04:23,350 --> 00:04:24,880
“Cleaning”的拼写

139
00:04:25,340 --> 00:04:27,160
你的字符分类算法

140
00:04:27,310 --> 00:04:29,650
刚才把字母 l 识别成了数字 1

141
00:04:30,370 --> 00:04:31,320
但在这节课中

142
00:04:31,640 --> 00:04:32,510
我们要做的事情

143
00:04:32,620 --> 00:04:33,980
会不考虑最后这一步

144
00:04:34,620 --> 00:04:35,780
只关注前面三个步骤

145
00:04:36,110 --> 00:04:37,490
也就是文字检测

146
00:04:37,700 --> 00:04:39,340
字符分割

147
00:04:39,660 --> 00:04:41,040
以及字符分类

148
00:04:42,410 --> 00:04:43,790
那么像这样的一个系统

149
00:04:44,080 --> 00:04:46,010
我们把它称之为机器学习流水线（machine learning pipeline）

150
00:04:47,550 --> 00:04:49,220
具体来说 这幅图表示的

151
00:04:49,950 --> 00:04:52,220
就是照片OCR的流水线

152
00:04:53,140 --> 00:04:54,200
我们有一幅图像

153
00:04:54,470 --> 00:04:57,590
然后传给文字检测系统

154
00:04:57,970 --> 00:04:58,960
识别出文字以后

155
00:04:59,420 --> 00:05:01,350
我们将字段分割为独立的字符

156
00:05:01,420 --> 00:05:04,360
最后我们对单个的字母进行识别

157
00:05:05,730 --> 00:05:07,190
在很多复杂的机器学习系统中

158
00:05:07,800 --> 00:05:09,050
这种流水线形式

159
00:05:09,490 --> 00:05:11,400
都非常普遍

160
00:05:11,660 --> 00:05:13,450
在流水线中会有多个不同的模块

161
00:05:13,680 --> 00:05:14,960
比如在本例中

162
00:05:15,390 --> 00:05:17,820
我们有文字检测 字符分割和字母识别

163
00:05:17,930 --> 00:05:19,170
其中每个模块都可能是一个机器学习组件

164
00:05:19,880 --> 00:05:20,740
或者有时候

165
00:05:20,980 --> 00:05:22,660
这些模块也不一定是机器学习组件

166
00:05:22,810 --> 00:05:23,660
只是一个接一个

167
00:05:24,290 --> 00:05:26,050
连在一起的

168
00:05:26,280 --> 00:05:27,780
一系列数据

169
00:05:28,100 --> 00:05:29,170
最终得出你希望的结果

170
00:05:29,640 --> 00:05:30,930
在照片OCR例子中

171
00:05:31,580 --> 00:05:32,690
就是最终识别到的

172
00:05:32,800 --> 00:05:35,050
图片中的文字信息

173
00:05:35,730 --> 00:05:37,370
如果你要设计一个机器学习系统

174
00:05:37,710 --> 00:05:39,090
其中你需要作出的

175
00:05:39,200 --> 00:05:41,010
最重要的决定

176
00:05:41,330 --> 00:05:44,350
就是你要怎样组织好这个流水线

177
00:05:44,970 --> 00:05:46,010
换句话说

178
00:05:46,530 --> 00:05:47,930
在这个照片OCR问题中

179
00:05:47,990 --> 00:05:49,390
你应该如何将这个问题分成

180
00:05:49,770 --> 00:05:51,220
一系列不同的模块

181
00:05:51,690 --> 00:05:53,060
你需要设计这个流程

182
00:05:53,820 --> 00:05:56,060
以及你的流水线中的每一个模块

183
00:05:56,660 --> 00:05:57,610
这通常会影响到你

184
00:05:57,710 --> 00:05:59,880
最终的算法的表现

185
00:06:01,480 --> 00:06:02,330
如果你有一个工程师的团队

186
00:06:02,550 --> 00:06:03,610
在完成同样类似的任务

187
00:06:03,800 --> 00:06:05,150
那么通常你可以让

188
00:06:05,460 --> 00:06:06,900
不同的人来完成

189
00:06:07,340 --> 00:06:08,720
不同的模块

190
00:06:09,500 --> 00:06:11,480
所以我可以假设

191
00:06:12,140 --> 00:06:13,240
文字检测这个模块

192
00:06:13,670 --> 00:06:14,610
需要大概1到5个人

193
00:06:15,460 --> 00:06:16,970
字符分割部分

194
00:06:17,470 --> 00:06:19,010
需要另外1到5个人

195
00:06:19,220 --> 00:06:20,550
字母识别部分

196
00:06:21,670 --> 00:06:23,100
还需要另外1到5个人

197
00:06:23,340 --> 00:06:24,850
因此 使用流水线的方式

198
00:06:25,280 --> 00:06:26,720
通常提供了一个很好的办法

199
00:06:27,110 --> 00:06:30,370
来将整个工作分给不同的组员去完成

200
00:06:31,040 --> 00:06:31,970
当然 所有这些工作

201
00:06:32,090 --> 00:06:33,210
都可以由一个人来完成

202
00:06:33,450 --> 00:06:35,910
如果你希望这样做的话

203
00:06:39,090 --> 00:06:40,370
在复杂的机器学习系统中

204
00:06:41,340 --> 00:06:42,700
流水线的概念

205
00:06:42,870 --> 00:06:44,770
已经渗透到各种应用中

206
00:06:45,820 --> 00:06:47,070
你刚才看到的

207
00:06:47,400 --> 00:06:49,180
只是一种照片OCR

208
00:06:49,440 --> 00:06:51,280
流水线的运作过程

209
00:06:52,230 --> 00:06:53,590
在接下来的几段视频中

210
00:06:53,740 --> 00:06:54,590
我还将继续向你介绍

211
00:06:54,650 --> 00:06:55,780
更多的一些关于流水线的内容

212
00:06:56,290 --> 00:06:57,170
我们还将使用这个例子

213
00:06:58,120 --> 00:06:59,860
来展示机器学习中其他一些

214
00:07:00,280 --> 00:07:01,400
非常重要的概念【教育无边界字幕组】翻译：所罗门捷列夫 校对：竹二个 审核：Naplessss