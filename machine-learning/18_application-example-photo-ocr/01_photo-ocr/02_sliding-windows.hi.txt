पिछले वीडियो में, हमने बात की फोटो ओसीआर पाइपलाईन  की और उसने कैसे काम किया॰ जिसने हम एक इमेज लेंगे और पास करेंगे उसे एक शृंखला से मशीन लर्निंग कम्पोनेंट्स की करने के लिए कोशिश पढ़ने की टेक्स्ट जो दिखता है इमेज में॰ इस वीडियो में मैं चाहूँगा बताना कुछ अधिक कि कैसे अलग अलग कम्पोनेंटस पाईपलाईन के काम करते हैं॰ विशेषतः यह वीडियो केन्द्रित रहेगा इर्द गिर्द चर्चा के कि स्लाईडिंग विंडोज़ किसे कहते हैं॰ पहली स्टेज फिल्टर की थी टेक्स्ट डिटेक्शन जहां हम देखते हैं इस तरह के इमेज पर और कोशिश करते हैं ढूँढने की टेक्स्ट के क्षेत्र जो इस इमेज में हैं॰ टेक्स्ट डिटेक्शन एक असामान्य समस्या है कंप्यूटर विज़न में॰ क्योंकि निर्भर करते हुए लंबाई पर टेक्स्ट की आप कोशिश कर रहे हैं ढूँढने की, ये आयात / रेक्टैंगल्ज़ जो आप कोशिश कर रहे हैं ढूँढने की उनके हो सकते हैं विभिन्न पहलू॰ अतः बात करने के लिए डिटेक्ट करने की चीज़ें इमेजीज में आओ शुरू करे एक सरल उदाहरण से पद यात्री डिटेकशन की और फिर बाद में हम वापिस जाएँगे सिद्धांत / आईडियाज़ पर जो डिवेलप किए गए थे पदयात्री डिटेकशन में और लागू करेंगे उन्हें टेक्स्ट डिटेकशन में॰ तो पदयात्री डिटेकशन में आप चाहते हैं एक इमेज लेना जो दिखता है ऐसा और सारा आईडिया है कि वह एक पदयात्री जो इमेज में दिखता है॰ तो एक पदयात्री है जो हमें मिला, एक दूसरा, एक तीसरा एक चौथा, एक पाँचवाँ॰ और एक॰ यह समस्या है शायद कुछ आसान टेक्स्ट डिटेकशन से सिर्फ इस कारण से कि एस्पेक्ट रेशो अधिकतर पद यात्रियों की है काफी समान॰ केवल इस्तेमाल करके एक फिक्सड एस्पेक्ट रेशो इन आयातों के लिए जिन्हे हम ढूँढने की कोशिश कर रहे हैं॰ अत: ऐस्पेक्ट रेशो से मेरा मतलब है रेशो ऊँचाई और चौड़ाई के बीच इन आयातों की. वे सब एक जैसे हैं भिन्न पद यात्रियों के लिए परंतु टेक्स्ट डिटेकशन के लिए ऊँचाई और चौड़ाई का रेशो अलग है भिन्न टेक्स्ट लाईनो के लिए॰ यद्यपि पदयात्री डिटेकशन के लिए, पदयात्री हो सकते हैं विभिन्न दूरी पर कैमरा से और इसलिए इन आयातों की ऊँचाई भिन्न हो सकती है निर्भर इस पर कि वे कितनी दूर हैं॰ परंतु एस्पेक्ट रेशो वही है॰ बनाने के लिए एक पदयात्री डिटेकशन सिस्टम यह है जो आप कर सकते हैं॰ मान लो हम निर्णय करते हैं कि स्टेंडरडाईज करना है इस एस्पेक्ट रेशो 82 बाई 36 पर और हम चुन सकते थे कोई राउंडिड नंबर जैसे 80 बाई 40 ऐसे कुछ, लेकिन 82 बाई 36 ठीक लगता है॰ हम क्या करेंगे कि तब जाएँगे बाहर और इकट्ठा करेंगे बड़े ट्रेनिंग सेट्स पॉज़िटिव और नेगेटिव इग्ज़ाम्पल्ज़ के॰ यहाँ हैं इग्ज़ाम्पल्ज़ 82 X 36 इमेज पैचीज के जिसमे हैं पदयात्री और यहाँ हैं इग्ज़ाम्पल्ज़ इमेजीज के जहां नहीं हैं॰ इस स्लाईड पर मैं दिखाता हूँ 12 पॉज़िटिव इग्ज़ाम्पल्ज़ वाई1 के और 12 इग्ज़ाम्पल्ज़ वाई0 के॰ एक अधिक टिपिकल पदयात्री डिटेकशन एप्लिकेशन में, हमारे पास हो सकते हैं कहीं भी 1000 ट्रेनिंग इग्ज़ाम्पल्ज़ से लेकर शायद 10,000 ट्रेनिंग इग्ज़ाम्पल्ज़, या अधिक भी यदि आप प्राप्त कर सकते हैं अधिक बड़े ट्रेनिंग सेट्स॰ और आप क्या कर सकते हैं, कि तब ट्रेन करें अपने नेटवर्क में या कुछ अन्य लर्निंग एल्गोरिथ्म में लेना यह इनपुट, एक इमिज पैच जिसकी डाईमेन्शंज हों 82 बाई 36, और क्लासिफाई करने 'वाई' और क्लासिफाई करने वह इमेज पैच पदयात्री सहित या पदयात्री रहित॰ तो यह देता है आपको एक तरीका एप्लाई करने का सुपरवाईज्ड लर्निंग को लेने के लिए एक इमेज पैच देखने के लिए कि है या नहीं एक पदयात्री उस इमेज कैपचर में॰ अब, मान लो हमें मिलता है एक नया इमेज, एक टेस्ट सेट इमेज इस जैसा और हम चाहते हैं कोशिश करना ढूँढने की एक पदयात्री की पिक्चर इमेज॰ हम क्या करेंगे कि शुरू करेंगे लेते हुए एक आयताकार पैच इस इमेज का॰ वैसा जो यहाँ दिखाया गया है, तो वह शायद है एक 82 X 36 पैच इस इमेज का, और रन करें उस इमेज पैच को हमारे क्लास्सिफ़ाईर में से यह जानने के लिए कि है या नहीं वहाँ एक पदयात्री उस इमेज पैच में, और आशा है कि हमारा क्लासिफाईर रिटरन करेगा वाई बराबर 0 उस पैच के लिए, क्योंकि वहाँ कोई पदयात्री नहीं है॰ आगे, हम तब लेते हैं वह हरी आयत और हम इसे स्लाईड करते हैं आगे थोड़ा सा और तब रन करते हैं वह नया इमेज पैच हमारे क्लासिफाईर में से तय करने के लिए कि क्या वहाँ एक पदयात्री है॰ और वह कर चुकने के बाद, हम तब स्लाईड करते हैं विंडो और आगे दायें को और रन करते हैं वह पैच क्लासिफाईर में से दोबारा॰ मात्रा जिससे आप खिसकाते हैं आयत हर बार है एक पैरामीटर, जिसे कभी कभी कहते हैं स्टेप साईज़ पैरामीटर, कभी कभी कहते हैं स्लाईड पैरामीटर भी, और यदि आप स्टेप करें आप इसे एक पिक्सल से एक बार में॰ तो आप इस्तेमाल कर सकते हैं स्टेप साईज़ या स्ट्राईड ऑफ 1, जो अक्सर सबसे अच्छा करता है, मतलब कि अधिक कॉस्ट इफेक्टिव / किफ़ाईती है, और इसीलिए इस्तेमाल करना स्टेप साईज़ शायद 4 पिक्सल का एक बार में, या आठ पिक्सल्ज़ एक बार में या कुछ बड़ी संख्या में पिक्सल्ज़ हो सकता है ज्यादा आम, क्योंकि तब आप मूव कर रहे होते हैं आयत को थोड़ा अधिक हर बार॰ अतः, इस प्रक्रिया से, आप जारी रखते हैं आयत को स्टेप करना आगे दायीं तरफ थोड़ा थोड़ा एक बार में और रन करना इनमें से प्रत्येक पैच क्लासिफाईर में से, जब तक अंत में, जैसे आप स्लाईड करते हैं यह विंडो ऊपर इमेज के अलग अलग लोकेशन्स में, पहले शुरू करते हुए पहली रो से और तब हम जाते हैं आगे की रोज़ में इमेज में, आप तब रन करते हो सभी इन भिन्न इमेज पैचीज किसी स्टेप साईज़ में या किसी स्ट्राईड / फलांग में अपने क्लासिफाईर में से॰ अब, वह थी एक छोटी आयत, जो केवल डिटेक्ट करेगी पदयात्री एक विशेष साईज़ के॰ आगे हम क्या करते हैं कि बड़े इमेज पैचीज को देखना शुरू करते हैं॰ तो अब आओ लेते हैं बड़े इमेज पैचीज, ऐसे जो यहाँ दिखाये गए हैं और रन करें उन्हें भी क्रोस्फ़ाईर में से॰ और वैसे तो जब मैं कहता हूँ कि लो एक बड़ा पैच, क्या असल मतलब है मेरा कि जब आप लेते हो एक इमेज पैच ऐसा, आप वास्तव में क्या कर रहे हो कि ले रहे हो वह इमेज पैच, और रिसाईज़ कर रहे हो उसे नीचे 82 X 36, उदाहरणत:॰ तो आप लेते हो यह बड़ा पैच और रिसाईज़ करते हो इसे छोटा इमेज बना कर और तब यह होगा छोटे साईज़ का इमेज वह है जो आप पास करोगे अपने क्लासिफाईर में से कोशिश करने के लिए और तय करने के लिए कि क्या उस पैच में एक पदयात्री है॰ और अंत में आप कर सकते हो यह एक इससे भी बड़े स्केल पर और रन कर सकते हो वह साईड विंडोज़ की अंत तक॰ और बाद में इस सारी प्रक्रिया से आशा है आपकी एल्गोरिथ्म डिटेक्ट करेगी कि क्या हैं पदयात्री दिखते इमेज में, तो ऐसे है आप ट्रेन करते हो एक क्लासिफाईर, और तब प्रयोग करते हो एक स्लाईडिंग विंडोज़ क्लासिफाईर, या प्रयोग करते हो एक स्लाईडिंग विंडोज़ डिटेक्टर ढूंढने के लिए पदयात्री इमेज में॰ आओ अब मुड़ें टेक्स्ट डिटेकशन उदाहरण की ओर और बात करें उस स्टेज की अपने फोटो ओ सी आर पाईपलाईन में, जहां हमारा उदेश्य है ढूंढना टेक्स्ट रिजन्ज / क्षेत्र यूनिट में॰ पदयात्री डिटेकशन की तरह ही आप बना सकते हो एक लेबल ट्रेनिंग सेट पॉज़िटिव इग्ज़ाम्पल्ज़  के साथ और नेगेटिव इग्ज़ाम्पल्ज़ के साथ इसके साथ इग्ज़ाम्पल्ज़ संबन्धित उन क्षेत्रों के जहां टेक्स्ट दिखता है॰ अतः, पदयात्री डिटेक्ट करने की कोशिश के बजाए, हम अब टेक्स्ट डिटेक्ट करने की कोशिश कर रहे हैं॰ और इसलिए पॉज़िटिव इग्ज़ाम्पल्ज़ होंगे पैचीज इमेज के जहां टेक्स्ट है॰ और नेगेटिव इग्ज़ाम्पल्ज़ होंगे पैचीज इमेज के जहां टेक्स्ट नहीं है॰ इसे ट्रेन कर चुकने पर हम कर सकते हैं अब इसे एप्लाई एक नए इमेज को, एक टेस्ट सेट इमेज को॰ तो यहाँ है इमेज जिसे हम इस्तेमाल कर रहे थे उदाहरण की तरह॰ अब, आखिरी बार हम रन करें, इस उदाहरण के लिए हम करेंगे रन एक स्लाईडिंग विंडो केवल एक फिक्स्ड स्केल पर केवल व्याख्या के उदेश्य से, मतलब कि मैं प्रयोग करने जा रहा हूँ केवल एक आयत साईज़॰ परंतु मान लो कि मैं रन करता हूँ मेरी छोटी स्लाईडिंग विंडोज़ क्लासिफाईर बहुत से छोटे इमेज पैचीज पर इस तरह अगर मैं वैसा करता हूँ, क्या मुझे अंत में मिलेगा है एक नतीजा ऐसा जहां सफ़ेद क्षेत्र दिखाते हैं जहां मेरे टेक्स्ट डिटेकशन सिस्टम ने पाया है टेक्स्ट और इसलिए एक्सिस इन दो फिगर्ज का सेम / एक ही है॰ तो वहाँ हैं एक क्षेत्र ऊपर यहाँ, निश्चय ही एक क्षेत्र ऊपर यहाँ भी, तो तथ्य कि यह काला ऊपर यहाँ रिप्रिजेंट / दर्शाता है कि क्लासिफाईर नहीं समझता कि उसने पाया है कोई टेक्स्ट ऊपर यहाँ, जबकि तथ्य कि है यहाँ बहुत सारा सफ़ेद, जो दर्शाता है कि क्लासिफाईर सोचता है कि उसने पाया है एक समूह टेक्स्ट का वहाँ इमेज पर॰ क्या किया है मैंने इस नीचे बाएँ इमेज पर है असल में इस्तेमाल करना सफ़ेद दिखाने के लिए कि कहाँ क्लासिफाईर सोचता है उसने टेक्स्ट पाया है॰ और विभिन्न शेडज़ ग्रे के संबन्धित हैं प्रोबेबिलिटी / संभावना जो था आउटपुट क्लासिफाईर द्वारा, तो जैसे शेडज़ ऑफ ग्रे संबन्धित हैं कि कहाँ यह सोचता है इसने टेक्स्ट पाया है परंतु कम कोन्फ़िडेंस / विश्वास है चमकता हुआ सफ़ेद कॉरेस्पॉंड करता है कि क्या क्लासिफाईर, बहुत उच्च प्रोबेबिलिटी के साथ, एस्टिमेट किया था प्रोबेबिलिटी वहाँ होने की पदयात्री उस जगह॰ अभी हमने पूरा नहीं किया है क्योंकि असल में हम करना चाहते हैं खींचना आयतें इर्दगिर्द सारे क्षेत्र के जहां यह टेक्स्ट है इमेज में, अतः हम एक और स्टेप लेने जा रहे हैं जो है कि हम लेते हैं आउटपुट क्लासिफाईर का और एप्लाई करते है इसको वह जिसे कहते हैं एक एक्सपैनशन ऑपरेटर॰ तो वह क्या करता है, यह लेता है इमेज यहाँ, और यह लेता है प्रत्येक सफ़ेद ब्लोब, यह लेता है हर सफ़ेद क्षेत्र और एक्सपैंड / बड़ा करता है उस सफ़ेद क्षेत्र को॰ गणित से, जिस तरह से आप लागू करते हो, यदि आप देखो इमेज को दायें तरफ की, क्या हम कर रहे हैं क्रिएट / बनाने के लिए इमेज दायें है, हर पिक्सल के लिए हम पूछते है, क्या यह है अंदर कुछ दूरी के एक सफ़ेद पिक्सल के बाएँ इमेज में॰ और इस तरह, अगर एक विशेष पिक्सल है अंदर अंदर, मान लो, पाँच पिक्सल्ज़ के या दस पिक्सल्ज़ के एक सफ़ेद पिक्सल के सबसे बाएँ के इमेज में, तब हम भी करेंगे उस पिक्सल को सफ़ेद रंग सबसे दायें के इमेज में॰ और इसलिए, इसका प्रभाव है कि, हम लेंगे प्रत्येक सफ़ेद ब्लोब सबसे बाएँ के इमेज में और एकस्पेंड / विस्तार करेंगे उन्हें एक अंश / थोड़ा सा, बढ़ाएँगे उन्हें थोड़ा सा, देखते हुए कि क्या आसपास के पिक्सल्ज़, हैं सफ़ेद पिक्सल्ज़, और तब रंग करेंगे उन पास के पिक्सल्ज़ को भी सफ़ेद॰ अंत में, बस पूरा हो ही गया समझो॰ अब हम देख सकते हैं इस सबसे दायें इमेज को और सिर्फ देखें कनेक्टिंग / जोड़ने वाले कम्पोनेंट्स पर और देखें सफ़ेद क्षेत्रों पर और खींचें घेरे वाले बोक्सीज उनके इर्दगिर्द॰ और विशेषतया, अगर हम देखें सभी सफ़ेद क्षेत्रों पर, इस तरह के, इस तरह के, इस तरह के, इत्यादि, और यदि हम इस्तेमाल करें एक साधारण हयूरिस्टिक रूल आउट करने के लिये आयतें जिनकी एस्पेक्ट रेशो दिखती है फन्नी क्योंकि हम जानते हैं कि बॉक्सेस टेक्स्ट के इर्दगिर्द होने चाहिए अधिक चौड़े बनिस्बत उनकी ऊंचाई के॰ और इसलिए अगर हम इगनोर करें / छोड़ दें पतले, लंबे ब्लोब्ज इस तरह के और इस तरह के, और हम इन्हें हटा दे क्योंकि वे बहुत लंबे और पतले हैं, और तब हम खींचें आयतें इर्दगिर्द उनके जिनकी एस्पेक्ट रेशो जो है एक ऊंचाई से चौड़ाई की रेशो दिखती है टेक्स्ट क्षेत्र के लिए जैसी, तब हम खींच सकते हैं आयतें, घेरने वाले बोक्सिज इर्दगिर्द इस टेक्स्ट क्षेत्र के, इस टेक्स्ट क्षेत्र के, और उस टेक्स्ट क्षेत्र के, संबन्धित लला बीज़ एंटिक माल लोगो, लला बीज़, और यह छोटा खुला साईन॰ वहाँ॰ यह उदाहरण असल में नहीं ढूँढ पाता एक पीस टेक्स्ट का॰ इसे पढ़ना बहुत मुश्किल है, परंतु वहाँ असल में एक टुकड़ा टेक्स्ट का है॰ जो कहता है [एकसएक्स] कर रहा है कोरेस्पोंड इसको परंतु एस्पेक्ट रेशो दिखती है गलत इसलिए हमने उसे छोड़ दिया॰ तो आप जानते हैं कि यह ओके है इस इमेज पर, परंतु इस विशेष उदाहरण में क्लासिफाईर ने असल में मिस किया एक पीस टेक्स्ट का॰ बड़ा मुश्किल है पढ़ना क्योंकि वहाँ है एक पीस टेक्स्ट का लिखा हुआ एक पारदर्शी विंडो के पीछे / अगेन्स्ट॰ तो वह है टेक्स्ट डिटेकशन प्रयोग करके स्लाईडिंग विंडोज़॰ और ढूँढ चुकने के बाद ये विंडोज़ इसमें टेक्स्ट के साथ, हम अब सिर्फ काट सकते हैं इन इमेज क्षेत्रों को और तब इस्तेमाल करें बाद के स्टेजीज पाईपलाईन के टेक्स्टस मिलाने के लिए॰ अब, आपको स्मरण होगा कि दूसरी स्टेज पाईपलाईन की थी केरेक्टर सेगमेंटेशन, तो दिया होने पर एक इमेज वैसा जो दिखाया है ऊपर, कैसे हम करते हैं सेगमेंट आउट / हिस्से प्रत्येक केरेक्टर के इस इमेज में? तो हम क्या कर सकते हैं कि फिर इस्तेमाल करें एक सुपरवाईज्ड लर्निंग एल्गोरिथ्म कुछ सेट पॉज़िटिव और कुछ सेट नेगेटिव इग्ज़ाम्पल्ज़ के साथ, हम क्या करेंगे कि देखेंगे ईमेल पैच में और कोशिश करेंगे तय करने की कि क्या वहाँ है स्पिलट दो केरेक्टर्ज में बीचोंबीच उस इमेज पैच में॰ अत: शुरु के पोजिटिव इग्ज़ाम्पल्ज़ के लिए यह पहला क्रॉस इग्ज़ाम्पल, यह इमेज पैच दिखता है कि जैसे इसका मध्य है असल में मध्य फट गया है दो केरेक्टर्ज में और दूसरा इग्ज़ाम्पल फिर दिखता है जैसे एक पॉज़िटिव उदाहरण, क्योंकि यदि मैं स्पिलट करता हूँ दो केरेक्टर्ज डाल कर एक लाईन मध्य में, वह है सही चीज़ करना॰ तो, ये हैं पॉज़िटिव इग्ज़ाम्पल्ज़, जहां इमेज का मध्य रिप्रेजेंट / दर्शाता है एक गैप या एक स्पिलट बीच में दो भिन्न केरेक्टर्ज में, जबकि नेगेटिव इग्ज़ाम्पल्ज़, अच्छा, आप जानते हैं, आप नहीं चाहते स्प्लिट करना दो केरेक्टर्ज ठीक बीच में, और इसलिए ये हैं नेगेटिव इग्ज़ाम्पल्ज़ क्योंकि वे नहीं रेपरेजेंट करते मिडपोइंट / मध्यबिंदु दो केरेक्टर्ज के बीच में॰ इसलिए, हम क्या करेंगे कि, हम ट्रेन करेंगे एक क्लासिफाईर, शायद इस्तेमाल करके न्यूरल नेटवर्क, शायद इस्तेमाल करके भिन्न लर्निंग एलगोरिथ्म, करने के लिए क्लासिफाई पॉज़िटिव और नेगेटिव इग्ज़ाम्पल्ज़ में॰ ट्रेन करके एक ऐसा क्लासिफाईर, हम तब इसे रन कर सकते हैं इस तरह की टेक्स्ट पर जिसे हमारे टेक्स्ट डिटेकशन सिस्टम ने निकाला है॰ जैसे हम शुरू करते हैं देखना उस आयत को, और हम पूछते हैं, "गीइ, क्या यह दिखता है मध्य जैसा उस हरी आयत का, क्या यह दिखता है मध्यबिंदु दो केरेक्टर्ज के बीच?" और आशा है, क्लासिफाईर कहेगा नहीं, तब हम स्लाईड करते हैं विंडो आगे और यह है एक डाईमेन्शन की स्लाईडिंग विंडो क्लासिफाईर, क्योंकि हम स्लाईड करेंगे विंडो केवल एक सीधी रेखा में बाएँ से दायें, यहाँ कोई अलग रोज़ नहीं हैं॰ यहाँ केवल एक रो है॰ परंतु अब, क्लासिफाईर इस पोजीशन में, हम पूछते हैं, अच्छा, क्या हमें स्पिलट करना चाहिए इन दो केरेक्टर्ज को या हमें डालना चाहिए एक स्पिलट इस आयत के बीचों बीच॰ और आशा है, क्लासिफाईर करेगा आउटपुट वाई बराबर एक, जिस केस में हम तय करेंगे खींचना एक लाईन नीचे वहाँ, दो केरेक्टर्ज स्पिलट करने के लिए॰ तब हम स्लाईड करते हैं विंडो आगे फिर, वही प्रक्रिया, मत ख़त्म करो गैप, फिर स्लाईड ओवर करो, आशा है यह कहता है हाँ, स्पिलट करो वहाँ और ऐसे आगे, और हम धीरे धीरे स्लाईड करते हैं क्लासिफाईर आगे दायें को और आशा है यह करेगा क्लासिफाई इसे एक अन्य पॉज़िटिव इग्ज़ाम्पल में और ऐसे आगे॰ और हम स्लाईड करेंगे यह विंडो दायीं तरफ, रन करते हुए क्लासिफाईर हर स्टेप पर, और आशापूर्वक यह हमें बताएगा, आप जानते हैं, क्या हैं सही लोकेशन्स स्प्लिट करने की इन केरेक्टर्ज को, केवल करना इस इमेज को स्प्लिट भिन्न केरेक्टर्ज में॰ और इसलिए यह है 1 डी स्लाईडिंग विंडोज़ केरेक्टर सेग्मेंटेशन के लिए॰ अतः, यहाँ है ओवराल फोटो ओ सी आर पाईप लाईन फिर॰ इस वीडियो में हमने बात की टेक्स्ट डिटेक्शन स्टेप की, जहां हम इस्तेमाल करते हैं स्लाईडिंग विंडोज़ को टेक्स्ट डिटेक्ट करने के लिए॰ और हम इस्तेमाल भी करते हैं एक एक डाईमेन्शनल स्लाईडिंग विंडोज़ करने के लिए केरेक्टर सेगमेंटेशन सेगमेंट आउट करने के लिए, आप जानते हैं, यह टेक्स्ट इमेज डिवीज़न ऑफ केरेक्टर्ज में॰ आखिरी स्टेप पाईपलाईन में है केरेक्टर क्लैसिफ़िकेशन स्टेप और वह स्टेप आप पहले से ही परिचित होंगे पहले के वीडियोज़ से सुपरवाईज्ड लर्निंग पर जहां आप एप्लाई कर सकते हैं एक स्टेंडर्ड सुपरवाईज्ड लर्निंग अंदर शायद अपने नेटवर्क पर या शायद कुछ अन्य पर करने के लिए लेना इसका इनपुट, एक इमेज वैसा और क्लासीफाई करना कौन सा एल्फाबेट या कौन सा 26 केरेक्टर्ज ए से ज़ी, या शायद हमें चाहिए लेना 36 केरेक्टर्ज यदि आपके पास हैं न्यूमेरिकल डिजिट्स भी, मल्टी क्लास क्लासिफिकेशन प्रॉबलम जहां आप लेते हो इसका इनपुट और इमेज जिसमें है एक केरेक्टर और तय करें क्या है केरक्टर जो दिखता है उस इमेज में? तो वह था फोटो ओ सी आर पाईपलाईन और कैसे आप कर सकते हैं इस्तेमाल आईडियाज़ जैसे स्लाईडिंग विंडोज़ क्लासिफाईर करने के लिए रखना इन विभिन्न कोम्पोनेंट्स को डिवेलप करने के लिए एक फोटो ओ सी आर सिस्टम॰ अगले कुछ विडीओज़ में हम करते रहेंगे इस्तेमाल प्रॉबलम फोटो ओ सी आर की एक्सप्लोर / खोज करने के लिए दिलचस्प मुद्दे जो सम्बंधित हैं बनाने के एक एप्लिकेशन इस तरह की॰