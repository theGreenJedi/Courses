1
00:00:00,090 --> 00:00:00,950
Neste e nos próximos

2
00:00:01,070 --> 00:00:02,010
vídeos, quero contar-lhe

3
00:00:02,160 --> 00:00:03,410
sobre um exemplo de aplicação de

4
00:00:04,020 --> 00:00:04,980
aprendizagem de máquina, um

5
00:00:05,160 --> 00:00:07,670
estudo de caso

6
00:00:08,030 --> 00:00:09,630
em volta de uma aplicação chamada OCR.

7
00:00:10,520 --> 00:00:11,730
Há três motivos por que

8
00:00:12,170 --> 00:00:13,220
quero fazê-lo.

9
00:00:13,480 --> 00:00:14,350
Primeiro, para mostrar-lhes

10
00:00:14,770 --> 00:00:15,700
um exemplo de como

11
00:00:16,290 --> 00:00:18,000
um sistema de aprendizagem de máquina complexo pode ser construído.

12
00:00:19,350 --> 00:00:20,960
Segundo, para ensinar os conceitos de

13
00:00:21,170 --> 00:00:22,280
um encadeamento ("pipeline") de

14
00:00:22,970 --> 00:00:24,740
aprendizagem de máquina e como alocar recursos

15
00:00:24,860 --> 00:00:26,550
quando estiver decidindo o que fazer depois.

16
00:00:26,780 --> 00:00:27,700
E isso pode tanto ser no

17
00:00:27,730 --> 00:00:28,950
contexto do seu trabalho

18
00:00:29,380 --> 00:00:30,220
individual na grande

19
00:00:30,500 --> 00:00:31,690
aplicação, ou no

20
00:00:31,770 --> 00:00:32,980
contexto de uma equipe de

21
00:00:33,100 --> 00:00:34,190
desenvolvedores tentando

22
00:00:34,440 --> 00:00:35,930
construir um sistema complexo.

23
00:00:37,030 --> 00:00:38,670
Além disso, o problema de

24
00:00:39,130 --> 00:00:40,690
OCR também me dá uma desculpa

25
00:00:40,880 --> 00:00:41,810
para lhes falar sobre

26
00:00:41,880 --> 00:00:42,850
algumas outras ideias

27
00:00:43,260 --> 00:00:44,370
interessantes em aprendizagem de máquina.

28
00:00:45,120 --> 00:00:47,300
Uma é sobre como aplicar aprendizado

29
00:00:47,400 --> 00:00:48,250
de máquina a

30
00:00:48,600 --> 00:00:50,210
problemas de visão computacional, e outra

31
00:00:50,340 --> 00:00:51,890
é a ideia de síntese artificial de dados,

32
00:00:52,220 --> 00:00:53,880
a qual veremos nos vídeos a seguir.

33
00:00:54,820 --> 00:00:57,680
Vamos começar falando sobre o que é o problema de OCR de fotos.

34
00:01:00,130 --> 00:01:01,710
OCR é uma sigla para

35
00:01:02,050 --> 00:01:03,760
"reconhecimento ótico de caracteres" (em inglês).

36
00:01:05,180 --> 00:01:06,460
Com o crescimento da fotografia digital

37
00:01:07,300 --> 00:01:08,740
e, mais recentemente, a adoção de

38
00:01:09,080 --> 00:01:10,360
câmeras em telefones celulares,

39
00:01:11,140 --> 00:01:12,140
agora temos toneladas

40
00:01:12,500 --> 00:01:13,790
de fotos de vários lugares.

41
00:01:14,620 --> 00:01:15,700
E uma das coisas que

42
00:01:16,150 --> 00:01:17,850
tem interessado muitos desenvolvedores é

43
00:01:18,080 --> 00:01:19,680
como fazer nossos computadores

44
00:01:19,990 --> 00:01:22,300
entenderem o conteúdo dessas fotos um pouco melhor.

45
00:01:23,140 --> 00:01:24,690
O problema de OCR foca

46
00:01:25,300 --> 00:01:26,790
em como fazer computadores

47
00:01:26,980 --> 00:01:29,390
lerem textos que aparecem nas nossas fotos.

48
00:01:30,730 --> 00:01:31,990
Dada uma imagem como esta,

49
00:01:32,070 --> 00:01:32,850
seria bom se um computador

50
00:01:33,530 --> 00:01:34,480
pudesse ler o texto

51
00:01:34,670 --> 00:01:35,540
de forma que,

52
00:01:35,650 --> 00:01:37,040
se você quiser procurar esta

53
00:01:37,220 --> 00:01:38,530
foto novamente, digitando

54
00:01:38,850 --> 00:01:40,220
as palavras "Lula B's Antique Mall",

55
00:01:41,000 --> 00:01:42,910
esta imagem seja resgatada automaticamente,

56
00:01:43,130 --> 00:01:44,190
para que você não

57
00:01:44,360 --> 00:01:45,890
perca muito tempo procurando

58
00:01:45,980 --> 00:01:47,130
em seu acervo com,

59
00:01:47,670 --> 00:01:49,230
talvez, centenas ou

60
00:01:49,490 --> 00:01:50,730
milhares de imagens.

61
00:01:50,870 --> 00:01:53,100
O problema do OCR

62
00:01:53,450 --> 00:01:56,080
faz exatamente isso, e ele o faz em diversos passos.

63
00:01:56,870 --> 00:01:57,790
Primeiro, dada a foto,

64
00:01:58,060 --> 00:01:58,800
deve vasculhar

65
00:01:59,480 --> 00:02:01,680
e detectar onde há texto na foto.

66
00:02:03,020 --> 00:02:03,960
Depois que isso for feito,

67
00:02:04,160 --> 00:02:05,340
se for bem sucedido,

68
00:02:05,570 --> 00:02:06,750
deve-se olhar para

69
00:02:06,980 --> 00:02:09,020
estas regiões de texto e efetivamente

70
00:02:09,170 --> 00:02:10,530
ler o texto nessas regiões,

71
00:02:10,670 --> 00:02:12,150
e, se ele for lido

72
00:02:12,250 --> 00:02:13,670
corretamente, serão retornadas

73
00:02:15,040 --> 00:02:16,440
essas transcrições do

74
00:02:16,800 --> 00:02:18,710
texto que aparece na imagem.

75
00:02:19,480 --> 00:02:21,160
Enquanto o reconhecimento ótico

76
00:02:21,440 --> 00:02:22,850
de caracteres em documentos

77
00:02:23,600 --> 00:02:25,760
digitalizados é relativamente fácil,

78
00:02:26,180 --> 00:02:27,840
fazer OCR em fotografias ainda

79
00:02:27,980 --> 00:02:29,480
é considerado um problema

80
00:02:29,750 --> 00:02:30,970
difícil de aprendizagem de máquina.

81
00:02:31,640 --> 00:02:32,730
Resolvendo-o,

82
00:02:33,000 --> 00:02:34,320
pode-se não só ajudar

83
00:02:34,750 --> 00:02:36,390
nossos computadores a entender o

84
00:02:36,450 --> 00:02:38,380
conteúdo de nossas imagens externas

85
00:02:38,500 --> 00:02:40,030
melhor, há também aplicações

86
00:02:40,240 --> 00:02:42,240
como auxílio a pessoas com deficiência visual.

87
00:02:42,530 --> 00:02:43,900
Por exemplo, você poderia

88
00:02:44,000 --> 00:02:45,010
puder prover a uma pessoa cega

89
00:02:45,780 --> 00:02:47,210
uma câmera que olhe

90
00:02:47,460 --> 00:02:48,430
o que está à frente

91
00:02:48,530 --> 00:02:49,700
dela, e diga-lhe as palavras

92
00:02:49,910 --> 00:02:52,990
que estão nas placas

93
00:02:53,460 --> 00:02:55,830
da rua em frente a ela.

94
00:02:56,540 --> 00:02:57,780
Com sistema de navegação de automóveis,

95
00:02:58,310 --> 00:02:59,750
por exemplo, imagine se seu

96
00:02:59,920 --> 00:03:00,900
carro pudesse ler as placas de trânsito

97
00:03:01,250 --> 00:03:03,480
e o ajudasse a chegar ao seu destino.

98
00:03:04,610 --> 00:03:07,260
Para realizar OCR em fotos, podemos fazer o seguinte.

99
00:03:07,970 --> 00:03:08,840
Primeiro, olhamos

100
00:03:09,080 --> 00:03:11,490
pela imagem e encontamos as regiões onde há texto.

101
00:03:11,850 --> 00:03:13,380
Aqui está um exemplo

102
00:03:13,580 --> 00:03:15,430
de texto na imagem

103
00:03:15,730 --> 00:03:17,700
que o sistema de OCR pode encontrar.

104
00:03:19,980 --> 00:03:21,850
Segundo, dado o retângulo em volta

105
00:03:22,210 --> 00:03:23,390
dessa região, podemos

106
00:03:23,700 --> 00:03:25,930
fazer segmentação de caracteres, onde

107
00:03:26,170 --> 00:03:28,210
poderíamos pegar esta caixa de texto

108
00:03:28,490 --> 00:03:30,310
que diz "Antique Mall" e

109
00:03:30,530 --> 00:03:31,760
tentar segmentá-la

110
00:03:32,090 --> 00:03:34,150
nas posições dos caracteres individuais.

111
00:03:35,450 --> 00:03:37,280
Finalmente, tendo segmentado

112
00:03:37,450 --> 00:03:39,050
em caracteres individuais, podemos

113
00:03:39,320 --> 00:03:41,040
executar um classificador que

114
00:03:41,290 --> 00:03:42,950
olha para a imagem dos

115
00:03:43,090 --> 00:03:44,620
caracteres individuais e tenta

116
00:03:44,760 --> 00:03:45,990
adivinhar que o primeiro caracter é um

117
00:03:46,150 --> 00:03:47,070
"A", o segundo caracter é um

118
00:03:47,230 --> 00:03:48,010
"N", o terceiro caracter é

119
00:03:48,480 --> 00:03:49,930
e, se tudo acontecer

120
00:03:50,110 --> 00:03:51,130
de acordo com o esperado,

121
00:03:51,190 --> 00:03:52,350
será possível

122
00:03:52,530 --> 00:03:53,610
descobrir que essa frase

123
00:03:54,180 --> 00:03:55,670
é "Lula B's Antique Mall",

124
00:03:56,340 --> 00:03:57,760
e similarmente para as outras

125
00:03:57,930 --> 00:04:01,690
palavras que aparecem nesta imagem.
Devo dizer que há alguns sistemas

126
00:04:01,980 --> 00:04:02,390
Devo dizer que há alguns sistemas de OCR de foto

127
00:04:02,910 --> 00:04:04,350
de OCR que fazem coisas mais complexas,

128
00:04:04,680 --> 00:04:06,370
como correção ortográfica no final do processo.

129
00:04:06,640 --> 00:04:08,470
Então, se, por exemplo, seu

130
00:04:08,710 --> 00:04:10,730
sistema de segmentação de caracteres e

131
00:04:11,110 --> 00:04:12,450
de classificação lhe disserem que

132
00:04:12,690 --> 00:04:14,390
veem a palavra

133
00:04:14,530 --> 00:04:16,050
"c1eaning",

134
00:04:16,260 --> 00:04:17,930
um programa de

135
00:04:18,350 --> 00:04:19,570
correção ortográfica

136
00:04:19,760 --> 00:04:21,910
ortográfica poderia lhe informar

137
00:04:22,240 --> 00:04:23,270
que isto deve ser

138
00:04:23,350 --> 00:04:24,880
a palavra "cleaning", e seu

139
00:04:25,340 --> 00:04:27,160
algoritmo de classificação de caracteres

140
00:04:27,310 --> 00:04:29,650
trocou o "I" por "1".

141
00:04:30,370 --> 00:04:31,320
Mas, para

142
00:04:31,640 --> 00:04:32,510
o objetivo

143
00:04:32,620 --> 00:04:33,980
deste vídeo, vamos ignorar este último

144
00:04:34,620 --> 00:04:35,780
passo e apenas focar no

145
00:04:36,110 --> 00:04:37,490
sistema que realiza estes três

146
00:04:37,700 --> 00:04:39,340
passos: detecção de texto, segmentação de

147
00:04:39,660 --> 00:04:41,040
caracteres e classificação de caracteres.

148
00:04:42,410 --> 00:04:43,790
Um sistema como esse é o que

149
00:04:44,080 --> 00:04:46,010
chamamos de "encadeamento de aprendizagem de máquina".

150
00:04:47,550 --> 00:04:49,220
Em particular, aqui temos uma imagem

151
00:04:49,950 --> 00:04:52,220
mostrando o encadeamento do OCR de fotos.

152
00:04:53,140 --> 00:04:54,200
Temos uma imagem, que

153
00:04:54,470 --> 00:04:57,590
entra no sistema de detecção de texto.

154
00:04:57,970 --> 00:04:58,960
Detectadas as regiões,

155
00:04:59,420 --> 00:05:01,350
segmentam-se os caracteres

156
00:05:01,420 --> 00:05:04,360
no texto, e então finalmente reconhecemos os caracteres individuais.

157
00:05:05,730 --> 00:05:07,190
Em muitos sistemas complexos de aprendizagem de máquina,

158
00:05:07,800 --> 00:05:09,050
estes tipos de encadeamento

159
00:05:09,490 --> 00:05:11,400
são comuns, onde você pode ter

160
00:05:11,660 --> 00:05:13,450
múltiplos módulos - neste exemplo,

161
00:05:13,680 --> 00:05:14,960
os de detecção de texto,

162
00:05:15,390 --> 00:05:17,820
segmentação de caracteres e reconhecimento de caracteres - cada um

163
00:05:17,930 --> 00:05:19,170
pode ser um componente de aprendizagem de máquina,

164
00:05:19,880 --> 00:05:20,740
ou às vezes

165
00:05:20,980 --> 00:05:22,660
não é de aprendizado de máquina, mas

166
00:05:22,810 --> 00:05:23,660
um conjunto

167
00:05:24,290 --> 00:05:26,050
de módulos que funcionam um após

168
00:05:26,280 --> 00:05:27,780
o outro em alguma parte dos dados

169
00:05:28,100 --> 00:05:29,170
para produzir a saída que

170
00:05:29,640 --> 00:05:30,930
se deseja, que no exemplo do

171
00:05:31,580 --> 00:05:32,690
OCR é encontrar a

172
00:05:32,800 --> 00:05:35,050
transcrição do texto que aparece na imagem.

173
00:05:35,730 --> 00:05:37,370
Se você estiver projetando um sistema de aprendizagem de

174
00:05:37,710 --> 00:05:39,090
máquina, uma das decisões

175
00:05:39,200 --> 00:05:41,010
mais importantes será, com frequência,

176
00:05:41,330 --> 00:05:44,350
qual exatamente será o encadeamento que você quer montar.

177
00:05:44,970 --> 00:05:46,010
Em outras palavras, dado o problema de

178
00:05:46,530 --> 00:05:47,930
OCR, como

179
00:05:47,990 --> 00:05:49,390
dividir esse problema em uma

180
00:05:49,770 --> 00:05:51,220
sequência de diferentes módulos.

181
00:05:51,690 --> 00:05:53,060
Projetando o encadeamento,

182
00:05:53,820 --> 00:05:56,060
o desempenho de cada um dos módulos no seu encadeamento

183
00:05:56,660 --> 00:05:57,610
terá frequentemente um grande

184
00:05:57,710 --> 00:05:59,880
impacto no desempenho final do seu algoritmo.

185
00:06:01,480 --> 00:06:02,330
Se você tem uma

186
00:06:02,550 --> 00:06:03,610
equipe de engenheiros trabalhando

187
00:06:03,800 --> 00:06:05,150
em um problema como este, é bastante

188
00:06:05,460 --> 00:06:06,900
comum ter indivíduos diferentes

189
00:06:07,340 --> 00:06:08,720
trabalhando em módulos diferentes.

190
00:06:09,500 --> 00:06:11,480
Eu poderia facilmente imaginar detecção

191
00:06:12,140 --> 00:06:13,240
de texto como tarefa

192
00:06:13,670 --> 00:06:14,610
de 1 a 5 engenheiros,

193
00:06:15,460 --> 00:06:16,970
segmentação de caracteres para outro

194
00:06:17,470 --> 00:06:19,010
grupo de 1 a 5 e reconhecimento

195
00:06:19,220 --> 00:06:20,550
de caracteres para outro grupo

196
00:06:21,670 --> 00:06:23,100
de 1 a 5 engenheiros.

197
00:06:23,340 --> 00:06:24,850
Um encadeamento assim oferece

198
00:06:25,280 --> 00:06:26,720
uma forma natural de dividir

199
00:06:27,110 --> 00:06:30,370
a carga de trabalho entre diferentes membros de uma equipe de engenharia.

200
00:06:31,040 --> 00:06:31,970
Embora, claro, todo

201
00:06:32,090 --> 00:06:33,210
este trabalho poderia também ser feito

202
00:06:33,450 --> 00:06:35,910
por apenas uma pessoa se é deste jeito que você quer fazer.

203
00:06:39,090 --> 00:06:40,370
Em sistemas de aprendizagem de máquina complexos,

204
00:06:41,340 --> 00:06:42,700
a idéia de encadeamento, de

205
00:06:42,870 --> 00:06:44,770
um "pipeline" de aprendizado de máquina, é bastante

206
00:06:45,820 --> 00:06:47,070
comum, e o que você acabou de ver é

207
00:06:47,400 --> 00:06:49,180
um exemplo específico de como

208
00:06:49,440 --> 00:06:51,280
um encadeamento de OCR de fotos pode funcionar.

209
00:06:52,230 --> 00:06:53,590
Nos próximos vídeos, eu

210
00:06:53,740 --> 00:06:54,590
falarei mais um pouco

211
00:06:54,650 --> 00:06:55,780
sobre este encadeamento, e continuaremos

212
00:06:56,290 --> 00:06:57,170
a usá-lo como exemplo

213
00:06:58,120 --> 00:06:59,860
para ilustrar mais alguns conceitos-chave

214
00:07:00,280 --> 00:07:01,400
de aprendizagem de máquina.