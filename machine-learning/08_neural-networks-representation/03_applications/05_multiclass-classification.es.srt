1
00:00:00,320 --> 00:00:01,410
En este video quiero

2
00:00:01,490 --> 00:00:02,710
hablarte sobre cómo utilizar la redes

3
00:00:02,900 --> 00:00:04,390
neuronales para hacer una clasificación

4
00:00:04,830 --> 00:00:06,690
multiclase en donde podemos

5
00:00:06,820 --> 00:00:07,840
tener más de una categoría

6
00:00:07,930 --> 00:00:09,600
en donde queremos que se distingan entre si.

7
00:00:10,470 --> 00:00:12,280
En la última parte del

8
00:00:12,600 --> 00:00:13,920
último video, en donde teníamos

9
00:00:14,400 --> 00:00:15,320
el problema del reconocimiento de dígitos

10
00:00:15,830 --> 00:00:17,030
escritos a mano, que, de hecho, era

11
00:00:17,700 --> 00:00:19,000
un problema de clasificación multiclase porque

12
00:00:19,440 --> 00:00:20,730
habían diez categorías posibles

13
00:00:21,550 --> 00:00:22,820
para reconocer los dígitos desde

14
00:00:23,040 --> 00:00:23,980
Del 0 al 9 y si

15
00:00:24,060 --> 00:00:25,430
quieres que te llenemos con

16
00:00:25,830 --> 00:00:27,840
los detalles sobre cómo hacerlo.

17
00:00:30,410 --> 00:00:31,870
La forma en la que hacemos la clasificación

18
00:00:32,990 --> 00:00:34,380
multiclase en una red neuronal es esencialmente

19
00:00:35,060 --> 00:00:37,600
una extensión del método de todos contra uno.

20
00:00:38,610 --> 00:00:39,650
Entonces, digamos que tenemos

21
00:00:39,790 --> 00:00:41,660
un ejemplo de visión por computadora,

22
00:00:42,630 --> 00:00:43,810
donde en vez de sólo tratar

23
00:00:44,010 --> 00:00:46,170
de reconocer autos como en

24
00:00:46,310 --> 00:00:47,290
el ejemplo original con el que empecé,

25
00:00:47,470 --> 00:00:48,670
digamos que

26
00:00:49,060 --> 00:00:51,380
estamos tratando de reconocer cuatro

27
00:00:51,510 --> 00:00:52,820
categorías de objetos y, tomando una

28
00:00:53,030 --> 00:00:53,900
imagen, queremos

29
00:00:54,100 --> 00:00:56,360
decidir si se trata de un peatón, un auto, una moto o un camión.

30
00:00:57,200 --> 00:00:58,750
Si ese es el caso, lo

31
00:00:58,920 --> 00:01:00,480
que podemos hacer es

32
00:01:00,970 --> 00:01:02,820
construir una red neuronal con cuatro

33
00:01:03,160 --> 00:01:04,500
unidades de salida, de forma que

34
00:01:04,710 --> 00:01:08,110
nuestra red neuronal ahora muestre un vector de cuatro números.

35
00:01:09,110 --> 00:01:10,450
De este modo, ahora la salida necesita

36
00:01:11,170 --> 00:01:11,840
ser un vector de cuatro

37
00:01:12,070 --> 00:01:13,300
números, y lo que vamos a

38
00:01:13,540 --> 00:01:14,400
intentar es

39
00:01:14,780 --> 00:01:16,680
obtener la primera unidad de salida

40
00:01:17,180 --> 00:01:18,840
para clasificar: es la

41
00:01:19,160 --> 00:01:20,650
imagen de un peatón, sí o no.

42
00:01:21,200 --> 00:01:24,530
La segunda unidad para clasificar: es la imagen de un auto, sí o no.

43
00:01:25,110 --> 00:01:26,880
Esta unidad para clasificar: es la

44
00:01:27,130 --> 00:01:29,150
imagen de una motocicleta, sí o

45
00:01:29,230 --> 00:01:30,460
no, y esto clasificaría:

46
00:01:30,930 --> 00:01:32,930
es la imagen de un camión, sí o no.

47
00:01:33,720 --> 00:01:35,730
Y así, cuando la imagen

48
00:01:36,390 --> 00:01:37,630
es de un peatón, idealmente

49
00:01:37,820 --> 00:01:38,930
queremos que la red

50
00:01:39,410 --> 00:01:40,140
muestre 1, 0, 0, 0,

51
00:01:40,250 --> 00:01:41,260
cuando se trata de un

52
00:01:41,520 --> 00:01:42,310
auto, queremos que muestre

53
00:01:42,750 --> 00:01:43,530
0, 1, 0, 0, cuando es

54
00:01:43,840 --> 00:01:45,960
una motocicleta, queremos que

55
00:01:46,390 --> 00:01:47,460
muestre 0, 0,

56
00:01:47,580 --> 00:01:48,970
1, 0 y así sucesivamente.

57
00:01:50,750 --> 00:01:51,880
Entonces, éste es justo como

58
00:01:52,270 --> 00:01:53,690
el método de “todos contra uno”

59
00:01:54,190 --> 00:01:55,520
del que hablamos cuando

60
00:01:55,680 --> 00:01:58,120
describimos la regresión logística, y

61
00:01:58,320 --> 00:02:00,480
aquí tenemos esencialmente cuatro clasificadores

62
00:02:01,290 --> 00:02:03,100
de regresión logística, cada uno de los

63
00:02:03,260 --> 00:02:04,800
cuales está tratando de reconocer una

64
00:02:05,000 --> 00:02:06,780
de las cuatro clases que

65
00:02:06,940 --> 00:02:08,830
queremos distinguir entre ellas.

66
00:02:09,540 --> 00:02:10,780
Así que, si reorganizamos la diapositiva un poco,

67
00:02:10,860 --> 00:02:12,130
aquí está nuestra red neuronal

68
00:02:12,540 --> 00:02:14,070
con cuatro unidades de salida y las

69
00:02:14,330 --> 00:02:15,510
que queremos que sean h

70
00:02:15,670 --> 00:02:16,790
de x cuando

71
00:02:16,990 --> 00:02:18,930
tenemos diferentes imágenes, y

72
00:02:19,580 --> 00:02:20,860
la forma en la que vamos a representar el

73
00:02:21,110 --> 00:02:22,690
conjunto de entrenamiento en estos ajustes

74
00:02:23,260 --> 00:02:24,670
es como sigue. Entonces, cuando tenemos

75
00:02:24,890 --> 00:02:26,170
un conjunto de entrenamiento con distintas imágenes

76
00:02:27,350 --> 00:02:28,990
de peatones, autos, motocicletas y

77
00:02:29,260 --> 00:02:30,450
camiones, lo que vamos a

78
00:02:30,510 --> 00:02:31,940
hacer en este ejemplo es

79
00:02:32,190 --> 00:02:34,580
que, mientras que anteriormente habíamos

80
00:02:34,990 --> 00:02:36,780
escrito las etiquetas como

81
00:02:37,040 --> 00:02:38,320
"y" siendo un entero de

82
00:02:38,710 --> 00:02:42,180
1, 2, 3 o 4, en lugar de

83
00:02:42,280 --> 00:02:44,210
representar "y" de esta forma,

84
00:02:44,890 --> 00:02:46,340
vamos a representar "y"

85
00:02:47,050 --> 00:02:49,400
de la siguiente manera: específicacment, Yi

86
00:02:54,850 --> 00:02:55,230
será 1, 0, 0, 0

87
00:02:55,230 --> 00:02:57,040
o  0, 1, 0, 0  o  0, 0, 1, 0  o  0, 0, 0, 1 dependiendo de cuál sea la

88
00:02:57,490 --> 00:02:59,100
imagen Xi correspondiente.

89
00:02:59,410 --> 00:03:00,700
Así, un ejemplo de entrenamiento

90
00:03:01,230 --> 00:03:03,090
sería un par Xi : Yi

91
00:03:04,530 --> 00:03:06,340
En donde Xi es una imagen con

92
00:03:06,440 --> 00:03:08,000
uno de los cuatro objetos y

93
00:03:08,170 --> 00:03:09,640
Yi será uno de estos vectores.

94
00:03:10,970 --> 00:03:12,020
Con suerte, podemos encontrar

95
00:03:12,420 --> 00:03:13,670
una forma para lograr que

96
00:03:14,020 --> 00:03:15,100
nuestras redes neuronales arrojen algún

97
00:03:15,290 --> 00:03:16,480
valor. Entonces, la h de x

98
00:03:17,310 --> 00:03:20,360
es aproximadamente "y" y

99
00:03:20,550 --> 00:03:22,000
h de x y Yi

100
00:03:22,600 --> 00:03:23,770
ambas van a

101
00:03:24,020 --> 00:03:25,170
ser, en nuestro ejemplo,

102
00:03:26,060 --> 00:03:28,700
vectores de cuatro dimensiones cuando tenemos cuatro clases.

103
00:03:31,810 --> 00:03:33,020
Así que, así es como puede

104
00:03:33,170 --> 00:03:34,830
hacer que las redes neuronales hagan una clasificación multiclase.

105
00:03:36,290 --> 00:03:37,780
Esto concluye nuestra discusión sobre

106
00:03:38,050 --> 00:03:39,620
cómo representar las redes neuronales,

107
00:03:40,120 --> 00:03:41,620
esto es, en la representación de nuestra hipótesis.

108
00:03:42,780 --> 00:03:44,180
En la siguiente serie de vídeos, vamos a

109
00:03:44,690 --> 00:03:45,830
empezar a hablar sobre cómo tomar

110
00:03:45,990 --> 00:03:47,360
un conjunto de entrenamiento y sobre cómo

111
00:03:47,570 --> 00:03:49,970
aprender automáticamente los parámetros de la red neuronal.