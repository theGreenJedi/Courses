En este video quiero hablarte sobre cómo utilizar la redes neuronales para hacer una clasificación multiclase en donde podemos tener más de una categoría en donde queremos que se distingan entre si. En la última parte del último video, en donde teníamos el problema del reconocimiento de dígitos escritos a mano, que, de hecho, era un problema de clasificación multiclase porque habían diez categorías posibles para reconocer los dígitos desde Del 0 al 9 y si quieres que te llenemos con los detalles sobre cómo hacerlo. La forma en la que hacemos la clasificación multiclase en una red neuronal es esencialmente una extensión del método de todos contra uno. Entonces, digamos que tenemos un ejemplo de visión por computadora, donde en vez de sólo tratar de reconocer autos como en el ejemplo original con el que empecé, digamos que estamos tratando de reconocer cuatro categorías de objetos y, tomando una imagen, queremos decidir si se trata de un peatón, un auto, una moto o un camión. Si ese es el caso, lo que podemos hacer es construir una red neuronal con cuatro unidades de salida, de forma que nuestra red neuronal ahora muestre un vector de cuatro números. De este modo, ahora la salida necesita ser un vector de cuatro números, y lo que vamos a intentar es obtener la primera unidad de salida para clasificar: es la imagen de un peatón, sí o no. La segunda unidad para clasificar: es la imagen de un auto, sí o no. Esta unidad para clasificar: es la imagen de una motocicleta, sí o no, y esto clasificaría: es la imagen de un camión, sí o no. Y así, cuando la imagen es de un peatón, idealmente queremos que la red muestre 1, 0, 0, 0, cuando se trata de un auto, queremos que muestre 0, 1, 0, 0, cuando es una motocicleta, queremos que muestre 0, 0, 1, 0 y así sucesivamente. Entonces, éste es justo como el método de “todos contra uno” del que hablamos cuando describimos la regresión logística, y aquí tenemos esencialmente cuatro clasificadores de regresión logística, cada uno de los cuales está tratando de reconocer una de las cuatro clases que queremos distinguir entre ellas. Así que, si reorganizamos la diapositiva un poco, aquí está nuestra red neuronal con cuatro unidades de salida y las que queremos que sean h de x cuando tenemos diferentes imágenes, y la forma en la que vamos a representar el conjunto de entrenamiento en estos ajustes es como sigue. Entonces, cuando tenemos un conjunto de entrenamiento con distintas imágenes de peatones, autos, motocicletas y camiones, lo que vamos a hacer en este ejemplo es que, mientras que anteriormente habíamos escrito las etiquetas como "y" siendo un entero de 1, 2, 3 o 4, en lugar de representar "y" de esta forma, vamos a representar "y" de la siguiente manera: específicacment, Yi será 1, 0, 0, 0 o  0, 1, 0, 0  o  0, 0, 1, 0  o  0, 0, 0, 1 dependiendo de cuál sea la imagen Xi correspondiente. Así, un ejemplo de entrenamiento sería un par Xi : Yi En donde Xi es una imagen con uno de los cuatro objetos y Yi será uno de estos vectores. Con suerte, podemos encontrar una forma para lograr que nuestras redes neuronales arrojen algún valor. Entonces, la h de x es aproximadamente "y" y h de x y Yi ambas van a ser, en nuestro ejemplo, vectores de cuatro dimensiones cuando tenemos cuatro clases. Así que, así es como puede hacer que las redes neuronales hagan una clasificación multiclase. Esto concluye nuestra discusión sobre cómo representar las redes neuronales, esto es, en la representación de nuestra hipótesis. En la siguiente serie de vídeos, vamos a empezar a hablar sobre cómo tomar un conjunto de entrenamiento y sobre cómo aprender automáticamente los parámetros de la red neuronal.