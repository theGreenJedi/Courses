1
00:00:00,320 --> 00:00:01,410
이 영상에서

2
00:00:01,490 --> 00:00:02,710
하나 이상의 카테고리로

3
00:00:02,900 --> 00:00:04,390
분류하는

4
00:00:04,830 --> 00:00:06,690
다중 분류(multiclass classification)를

5
00:00:06,820 --> 00:00:07,840
신경망을 이용하여

6
00:00:07,930 --> 00:00:09,600
만드는 방법을 알아보겠습니다

7
00:00:10,470 --> 00:00:12,280
이전 영상의

8
00:00:12,600 --> 00:00:13,920
마지막 부분에서

9
00:00:14,400 --> 00:00:15,320
손으로 쓴 숫자를 인식하는

10
00:00:15,830 --> 00:00:17,030
문제를 보았고

11
00:00:17,700 --> 00:00:19,000
그 문제는 사실 알고보면 다중 분류입니다

12
00:00:19,440 --> 00:00:20,730
각 숫자를 0 부터 9까지

13
00:00:21,550 --> 00:00:22,820
총 10개의 분류 가능한

14
00:00:23,040 --> 00:00:23,980
카테고리가 있었죠

15
00:00:24,060 --> 00:00:25,430
이제 그것을 어떻게 하는지

16
00:00:25,830 --> 00:00:27,840
자세하게 얘기해보려 합니다

17
00:00:30,410 --> 00:00:31,870
우리가 다중 분류를

18
00:00:32,990 --> 00:00:34,380
신경망을 이용해서 하기 위해서는

19
00:00:35,060 --> 00:00:37,600
one vs all의 확장된 방법을 이용해야 합니다

20
00:00:38,610 --> 00:00:39,650
이미지 인식하는

21
00:00:39,790 --> 00:00:41,660
영상처리 문제를 예로 보죠

22
00:00:42,630 --> 00:00:43,810
원래 문제인 차냐 차가 아니냐를

23
00:00:44,010 --> 00:00:46,170
인식하는 것으로 끝내는 것이 아닌

24
00:00:46,310 --> 00:00:47,290
차를 4가지

25
00:00:47,470 --> 00:00:48,670
카테고리로 나눠서

26
00:00:49,060 --> 00:00:51,380
주어진 이미지가

27
00:00:51,510 --> 00:00:52,820
보행자인지 차인지

28
00:00:53,030 --> 00:00:53,900
오토바이인지 트럭인지

29
00:00:54,100 --> 00:00:56,360
분류하고 싶은겁니다

30
00:00:57,200 --> 00:00:58,750
이렇게 분류하기 위해서는

31
00:00:58,920 --> 00:01:00,480
신경망을 구성할 때

32
00:01:00,970 --> 00:01:02,820
출력 레이어에

33
00:01:03,160 --> 00:01:04,500
4개의 유닛을

34
00:01:04,710 --> 00:01:08,110
넣도록 구성하면 됩니다

35
00:01:09,110 --> 00:01:10,450
그렇게 되면 이제 출력레이어는

36
00:01:11,170 --> 00:01:11,840
길이가 4인

37
00:01:12,070 --> 00:01:13,300
벡터를 주게 되죠

38
00:01:13,540 --> 00:01:14,400
우리가 하려는 일은

39
00:01:14,780 --> 00:01:16,680
이 벡터를 이용해서

40
00:01:17,180 --> 00:01:18,840
첫번째 유닛은

41
00:01:19,160 --> 00:01:20,650
보행자를 분류하는데 쓰고

42
00:01:21,200 --> 00:01:24,530
2번째를 자동차인지

43
00:01:25,110 --> 00:01:26,880
3번째를 오토바이인지

44
00:01:27,130 --> 00:01:29,150
3번째를 오토바이인지

45
00:01:29,230 --> 00:01:30,460
그리고 마지막을

46
00:01:30,930 --> 00:01:32,930
트럭인지를 구분하는데 사용할 것입니다

47
00:01:33,720 --> 00:01:35,730
이렇게 하면

48
00:01:36,390 --> 00:01:37,630
보행자로 분류된 경우에는

49
00:01:37,820 --> 00:01:38,930
우리의 신경망이

50
00:01:39,410 --> 00:01:40,140
출력으로

51
00:01:40,250 --> 00:01:41,260
[1 0 0 0]을 줄 것이고

52
00:01:41,520 --> 00:01:42,310
만약에 자동차라면

53
00:01:42,750 --> 00:01:43,530
[0 1 0 0]일 것이고

54
00:01:43,840 --> 00:01:45,960
오토바이라면

55
00:01:46,390 --> 00:01:47,460
[0 0 1 0]일 것이고

56
00:01:47,580 --> 00:01:48,970
마지막은 [0 0 0 1]일 것입니다

57
00:01:50,750 --> 00:01:51,880
이거는 딱

58
00:01:52,270 --> 00:01:53,690
one vs all을 배울 때

59
00:01:54,190 --> 00:01:55,520
얘기한 로지스틱 회귀를

60
00:01:55,680 --> 00:01:58,120
보여주고 있죠

61
00:01:58,320 --> 00:02:00,480
여기에 4개의

62
00:02:01,290 --> 00:02:03,100
로지스틱 회귀 분류자들이 있고

63
00:02:03,260 --> 00:02:04,800
각각은 4개의 분류중

64
00:02:05,000 --> 00:02:06,780
하나씩을 나타내게 됩니다

65
00:02:06,940 --> 00:02:08,830
하나씩을 나타내게 됩니다

66
00:02:09,540 --> 00:02:10,780
다시 슬라이드를 조정해서

67
00:02:10,860 --> 00:02:12,130
여기에 4개의 출력 유닛을 갖는

68
00:02:12,540 --> 00:02:14,070
신경망이 있고

69
00:02:14,330 --> 00:02:15,510
각 유닛은

70
00:02:15,670 --> 00:02:16,790
서로 다른 사진이

71
00:02:16,990 --> 00:02:18,930
어떤 사진을 나타내는지

72
00:02:19,580 --> 00:02:20,860
각각의 학습(training) 예제의

73
00:02:21,110 --> 00:02:22,690
각 분류에 대한 h(x)를 나타내게 됩니다

74
00:02:23,260 --> 00:02:24,670
그래서 만약에

75
00:02:24,890 --> 00:02:26,170
학습 예제로

76
00:02:27,350 --> 00:02:28,990
보행자, 자동차, 오토바이

77
00:02:29,260 --> 00:02:30,450
그리고 트럭의 사진이 있다고 하면

78
00:02:30,510 --> 00:02:31,940
이 예제들을 가지고

79
00:02:32,190 --> 00:02:34,580
예전에는 우리가

80
00:02:34,990 --> 00:02:36,780
사진에 대한 라벨을

81
00:02:37,040 --> 00:02:38,320
1, 2, 3, 4 와 같은

82
00:02:38,710 --> 00:02:42,180
숫자로 붙였다면

83
00:02:42,280 --> 00:02:44,210
이제는

84
00:02:44,890 --> 00:02:46,340
이미지 Xi에 대한 결과를

85
00:02:47,050 --> 00:02:49,400
숫자로 된 라벨 대신

86
00:02:54,850 --> 00:02:55,230
[1, 0, 0, 0], [0, 1, 0, 0],

87
00:02:55,230 --> 00:02:57,040
[0, 0, 1, 0], [0, 0, 0, 1]과 같이 표현하고

88
00:02:57,490 --> 00:02:59,100
Yi라고 명명할 것 입니다

89
00:02:59,410 --> 00:03:00,700
결과적으로 하나의 예제는

90
00:03:01,230 --> 00:03:03,090
(Xi , Yi) 쌍이 될 것입니다

91
00:03:04,530 --> 00:03:06,340
Xi는 4가지 분류 중 하나인

92
00:03:06,440 --> 00:03:08,000
이미지이고

93
00:03:08,170 --> 00:03:09,640
Yi는 해당 이미지의 분류를 나타내는 벡터일 것입니다

94
00:03:10,970 --> 00:03:12,020
그리고 공교롭게도

95
00:03:12,420 --> 00:03:13,670
우리는 이 신경망의

96
00:03:14,020 --> 00:03:15,100
출력값이

97
00:03:15,290 --> 00:03:16,480
이미지의 분류를 예측하는

98
00:03:17,310 --> 00:03:20,360
h(x)임을 알고

99
00:03:20,550 --> 00:03:22,000
결과적으로 이미지에 대한

100
00:03:22,600 --> 00:03:23,770
h(x)가 모인

101
00:03:24,020 --> 00:03:25,170
벡터로된 Yi를

102
00:03:26,060 --> 00:03:28,700
나타내게 됩니다

103
00:03:31,810 --> 00:03:33,020
그래서 이것이

104
00:03:33,170 --> 00:03:34,830
신경망이 어떻게 다중 분류를 하는지 보여줍니다

105
00:03:36,290 --> 00:03:37,780
이번 영상에서는 신경망이 어떻게

106
00:03:38,050 --> 00:03:39,620
우리의 가설을 나타내는지에 대해서

107
00:03:40,120 --> 00:03:41,620
얘기를 해보았습니다

108
00:03:42,780 --> 00:03:44,180
다음 영상에서는

109
00:03:44,690 --> 00:03:45,830
학습 데이터로부터

110
00:03:45,990 --> 00:03:47,360
신경망의 파라미터를 자동으로

111
00:03:47,570 --> 00:03:49,970
배우게 하는 방법을 알아보겠습니다