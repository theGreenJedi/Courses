Neste vídeo, eu quero contar-lhes sobre como usar Redes Neurais para classificações de múltiplas classes, onde podemos ter mais de uma categoria para distinguir das outras. Na última parte do último vídeo, no qual vimos o problema de reconhecimento de números escritos à mão, já foi uma classificação multi-classe, pois havia 10 categorias possíveis, para reconhecer os dígitos de 0 até 9. Então, vamos apresentar para você os detalhes de como fazer isso. Fazemos a classificação multi-classe em uma Rede Neural , basicamente, como uma extensão do método "um contra todos". Então, digamos que temos um exemplo de Visão Computacional, no qual, ao invés de apenas tentar reconhecer carros, como no exemplo original, digamos que vamos tentar reconhecer 4 categorias de objetos. E dada uma imagem, queremos decidir se é um pedestre, carro, moto, ou caminhão. Se for esse o caso, o que faríamos seria: construir uma Rede Neural com 4 unidades de saída, assim, nossa Rede Neural irá gerar um vetor com 4 números. A saída, agora, será um vetor precisa ser um vetor de quatro números de 4 números, e tentaremos fazer será pegar a primeira unidade de saida para classificar: é uma imagem de um pedestre? Sim ou não. segunda unidade para classificar: esta imagem é um carro? Sim ou não. Terceira unidade para classificar: essa é a imagem de uma moto? Sim ou não. E a última classificaria: é uma imagem de um caminhão? Sim ou não. E desta forma, quando a imagem for de um pedestre, o ideal é que a rede gere [1  0  0  0]. Quando for um carro, queremos a saída [0  1  0  0]. Quando for uma moto, queremos que a saída seja [0  0  1  0] , e assim por diante. Então, fica assim, como no método "um contra todos" que falamos, quando descrevíamos a Regressão Logística, e aqui nós temos, essencialmente, 4 regressões logísticas classificadoras, cada uma tentando reconhecer uma das quatro classes que queremos distinguir das outras. Portanto, reorganizando o slide: aqui está a nossa Rede Neural, com 4 unidades de saída, e aqui está o que queremos que o h(x) seja, quando tivermos imagens diferentes. E, a maneira que representaremos o conjunto de treinamento nesse modelo será como segue: para um conjunto de treinamento com diferentes imagens de pedestres, carros, motos e caminhões; o que faremos é: enquanto anteriormente nós tínhamos as classes como "Y" sendo um inteiro, "1, 2, 3 ou 4". Ao invés de representar "Y" desta forma, agora vamos representá-lo da seguinte forma: será ou 1, 0, 0, 0; y⁽ᴵ⁾ será um desses, dependendo de que imagem x⁽ᴵ⁾ corresponde. Então, um exemplo será um par (x⁽ᴵ⁾, y⁽ᴵ⁾), onde x⁽ᴵ⁾ é uma imagem, de um dos 4 objetos, e y⁽ᴵ⁾ será um desses vetores. E esperamos poder encontrar uma maneira de fazer nossa Rede Neural gerar uma saída, tal que h(X) seja aproximadamente y⁽ᴵ⁾. E tanto h(X) quanto  y⁽ᴵ⁾ serão, nesse nosso exemplo, vetores de 4 dimensões, quando tivermos 4 classes. É assim que fazemos com que Rede Neural faça classificação multi-classe. Isso resume nossa discussão de como representar Redes Neurais, isso é, a representação da hipótese. Nos próximos vídeos começaremos a falar sobre como pegar um conjunto de treinamento, e encontrar automaticamente os parâmetros da nossa Rede Neural.
Tradução: Luís Moneda | Revisão: Pablo de Morais Andrade