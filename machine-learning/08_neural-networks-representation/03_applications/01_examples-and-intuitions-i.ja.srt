1
00:00:00,130 --> 00:00:00,980
このビデオとこの次のビデオで

2
00:00:01,240 --> 00:00:02,030
具体的な詳細例を

3
00:00:02,140 --> 00:00:03,650
やっていく事で、

4
00:00:04,530 --> 00:00:05,920
ニューラルネットワークがどのように

5
00:00:06,220 --> 00:00:07,740
入力の複雑な非線形の

6
00:00:07,970 --> 00:00:09,780
関数を計算出来るのかを見ていき、

7
00:00:09,950 --> 00:00:10,950
これを通して何故

8
00:00:11,510 --> 00:00:12,470
ニューラルネットワークが複雑で

9
00:00:13,050 --> 00:00:14,810
非線形な仮説を学習するのに用いる事が出来るか、その心を伝えたいと思う。

10
00:00:16,790 --> 00:00:18,210
以下のような問題を考えてみよう。

11
00:00:18,900 --> 00:00:20,560
二値の値のフィーチャー、

12
00:00:20,770 --> 00:00:21,680
x1とx2があるとしよう。

13
00:00:22,310 --> 00:00:23,760
値は0か1のどちらか。

14
00:00:23,990 --> 00:00:25,320
つまりx1とx2は

15
00:00:25,510 --> 00:00:27,160
2つの可能な値のどちらかしかとれない。

16
00:00:28,660 --> 00:00:29,670
この例では、2つの陽性の

17
00:00:29,990 --> 00:00:31,420
手本と2つの陰性の手本

18
00:00:31,530 --> 00:00:33,240
だけを描いたが、

19
00:00:33,320 --> 00:00:34,370
これを、より複雑な

20
00:00:34,540 --> 00:00:36,210
学習問題を

21
00:00:36,290 --> 00:00:37,710
単純化した物と考える事が出来て、

22
00:00:37,920 --> 00:00:38,910
その複雑な問題では、たくさんの

23
00:00:39,030 --> 00:00:40,320
陽性の手本が

24
00:00:40,480 --> 00:00:41,350
右上と左下にあり、

25
00:00:41,470 --> 00:00:43,090
そしてたくさんの陰性の手本が

26
00:00:43,580 --> 00:00:46,110
丸で示されていて、

27
00:00:46,140 --> 00:00:46,900
やりたい事は非線型の

28
00:00:48,330 --> 00:00:50,090
陽性と陰性の手本を分離する為の

29
00:00:50,210 --> 00:00:52,210
決定境界を学習させたい、という物。

30
00:00:53,750 --> 00:00:54,590
では、どのようにニューラルネットワークが

31
00:00:55,070 --> 00:00:56,160
これを行う事が出来るだろうか？

32
00:00:56,710 --> 00:00:57,550
そこで右の例をそのまま使うのでは無く、

33
00:00:57,600 --> 00:00:59,260
この左側の、より簡単に精査出来る例を

34
00:00:59,680 --> 00:01:01,670
使っていく。

35
00:01:02,620 --> 00:01:03,940
具体的には、これが実際になんなのかというと、

36
00:01:04,110 --> 00:01:05,570
ターゲットのラベルyを計算する物で、

37
00:01:05,990 --> 00:01:09,810
それはイコール x1 XOR x2だ。

38
00:01:10,070 --> 00:01:11,650
またはこれは実際には

39
00:01:11,910 --> 00:01:13,880
x1 XNOR x2関数だ、

40
00:01:14,700 --> 00:01:15,750
ここでXNORはNOT x1 OR x2の

41
00:01:16,400 --> 00:01:18,420
別の書き方に過ぎない。

42
00:01:19,350 --> 00:01:20,730
つまり、 x1 XOR x2は、

43
00:01:20,760 --> 00:01:22,730
x1とx2のどちらかだけが

44
00:01:23,210 --> 00:01:24,820
1と等しい時だけ

45
00:01:25,190 --> 00:01:27,900
1となる。

46
00:01:27,960 --> 00:01:29,160
具体例としては

47
00:01:29,450 --> 00:01:30,680
実はXNORを使う方が

48
00:01:30,810 --> 00:01:32,840
ちょっとだけ

49
00:01:33,020 --> 00:01:35,000
良い事が判明している。

50
00:01:35,460 --> 00:01:36,290
これら二つはもちろん等しい。

51
00:01:36,720 --> 00:01:38,540
つまり、NOTのx1 XOR x2。

52
00:01:38,780 --> 00:01:40,140
つまり陽性の手本となるのは

53
00:01:40,320 --> 00:01:42,360
両方ともtrueか、

54
00:01:42,950 --> 00:01:44,150
両方ともfalseの

55
00:01:44,530 --> 00:01:46,470
時だけだ。そしてその場合に限り

56
00:01:46,620 --> 00:01:49,600
y=1, y=1となる。

57
00:01:49,990 --> 00:01:51,480
そしてどちらかだけがtrueの時は

58
00:01:51,860 --> 00:01:52,650
y=0となる。

59
00:01:52,760 --> 00:01:53,830
そして我らは

60
00:01:54,000 --> 00:01:54,710
この種のトレーニングセットにフィットするような

61
00:01:54,860 --> 00:01:57,210
ニューラルネットワークが得られるのか？という事を見出したい。

62
00:01:59,160 --> 00:02:00,200
xnorの例に適合する

63
00:02:00,450 --> 00:02:01,610
ネットワークを構築する為に、

64
00:02:02,080 --> 00:02:04,900
もう少し簡単な例である

65
00:02:05,350 --> 00:02:06,590
AND関数に適合するネットワークを

66
00:02:07,050 --> 00:02:09,710
見る事から始めて行こう。

67
00:02:10,760 --> 00:02:12,150
具体的には、

68
00:02:12,310 --> 00:02:14,070
ふたたび二値の入力である

69
00:02:14,240 --> 00:02:17,190
x1とx2の入力があるとしよう。つまりそれは0か1だ。

70
00:02:17,820 --> 00:02:18,680
そしてターゲットのラベルyは

71
00:02:18,760 --> 00:02:20,980
イコール

72
00:02:21,910 --> 00:02:23,470
x1 AND x2としよう。

73
00:02:23,860 --> 00:02:24,870
これは論理積のANDだ。

74
00:02:30,740 --> 00:02:31,820
さて、一ユニットの

75
00:02:32,060 --> 00:02:34,330
ネットワークで、

76
00:02:35,060 --> 00:02:36,120
このAND関数を計算する物が得られるだろうか？

77
00:02:37,400 --> 00:02:38,530
それを行う為に、

78
00:02:38,690 --> 00:02:40,000
バイアスユニットも

79
00:02:40,580 --> 00:02:42,780
描いておく、この+1のユニットを。

80
00:02:45,030 --> 00:02:46,500
いま、単に適当な値を

81
00:02:46,770 --> 00:02:48,050
このネットワークのウェイト、あるいはパラメータに

82
00:02:48,160 --> 00:02:50,130
割り振ってみよう。

83
00:02:50,450 --> 00:02:52,220
この図にパラメータを書きこんでいく。

84
00:02:52,820 --> 00:02:54,090
-30をここに書き、

85
00:02:56,360 --> 00:02:57,740
+20、そして+20。

86
00:02:58,710 --> 00:02:59,600
つまり

87
00:02:59,970 --> 00:03:01,320
値、-30を

88
00:03:01,860 --> 00:03:03,790
x0の係数に

89
00:03:04,120 --> 00:03:05,770
割り振ったという事。

90
00:03:06,120 --> 00:03:07,230
このx0は+1で、

91
00:03:07,530 --> 00:03:08,840
このユニットになる。

92
00:03:09,420 --> 00:03:10,890
そしてパラメータの値+20は、

93
00:03:11,250 --> 00:03:12,960
x1に掛ける物で、

94
00:03:13,070 --> 00:03:14,300
そして+20は

95
00:03:14,680 --> 00:03:15,980
x2に掛けるパラメータだ。

96
00:03:17,190 --> 00:03:18,860
具体的には、これは

97
00:03:19,060 --> 00:03:20,340
仮説hのxが

98
00:03:20,420 --> 00:03:21,780
イコール

99
00:03:22,410 --> 00:03:24,500
g(-30 + 20x1 + 20x2) だと言っている訳だ。

100
00:03:25,490 --> 00:03:31,390
つまり、こういう風に

101
00:03:31,640 --> 00:03:33,240
ニューラルネットワークの図の上に

102
00:03:33,810 --> 00:03:34,880
これらのウェイト、パラメータを、

103
00:03:35,620 --> 00:03:38,250
書きこむコンベンションもある、という事だ。

104
00:03:38,790 --> 00:03:40,230
そしてもちろん、この-30は

105
00:03:40,390 --> 00:03:42,500
これは実際は

106
00:03:43,670 --> 00:03:44,830
シータ1の1, 0だ。

107
00:03:45,290 --> 00:03:47,390
これはシータ1の1, 1。

108
00:03:47,600 --> 00:03:50,550
そしてこれは

109
00:03:51,560 --> 00:03:52,990
シータ1の1, 2。

110
00:03:53,290 --> 00:03:54,320
だがそうするよりも、

111
00:03:54,590 --> 00:03:56,660
これらのパラメータがネットワークのエッジに関連づけられている、と

112
00:03:56,840 --> 00:03:58,430
考える方が分かりやすい。

113
00:04:01,170 --> 00:04:04,170
ではこの小さな一つのニューロンのネットワークが何を計算しているか、見ていこう。

114
00:04:05,050 --> 00:04:06,290
思い出せるように、sigmoidのアクティベーション関数である

115
00:04:06,720 --> 00:04:08,820
gのzはこんな物だった。

116
00:04:09,110 --> 00:04:10,810
それは0から始まり、

117
00:04:11,160 --> 00:04:12,270
スムースに上昇していき、0.5で交わり、

118
00:04:12,750 --> 00:04:14,720
そして1に漸近していく。

119
00:04:15,730 --> 00:04:16,510
目印になりそうな点を置いておくと、

120
00:04:17,350 --> 00:04:18,850
横軸の値、

121
00:04:19,460 --> 00:04:21,770
zがイコール4.6だと、

122
00:04:23,840 --> 00:04:25,910
sigmoid関数はイコール0.99となる。

123
00:04:26,220 --> 00:04:27,950
これはとても1に近い。

124
00:04:28,150 --> 00:04:29,560
そしてある種対称的な位置として

125
00:04:30,350 --> 00:04:32,270
-4.6の時は、

126
00:04:33,090 --> 00:04:34,970
sigmoid関数はイコール0.01となる、

127
00:04:35,080 --> 00:04:37,820
これはとても0に近い。

128
00:04:39,440 --> 00:04:40,700
x1とx2の、4つの可能な

129
00:04:41,040 --> 00:04:41,680
入力値の組み合わせを見ていこう、

130
00:04:41,730 --> 00:04:43,470
そしてそれぞれの場合に仮説が

131
00:04:43,620 --> 00:04:47,090
何を出力するかを見ていこう。

132
00:04:47,220 --> 00:04:47,910
x1とx2がどちらも0なら、

133
00:04:48,150 --> 00:04:49,160
これを見ると、

134
00:04:49,460 --> 00:04:50,560
x1とx2がどちらも

135
00:04:50,710 --> 00:04:51,650
イコール0なら、その場合は

136
00:04:52,010 --> 00:04:54,780
仮説はgの-30の点となる。

137
00:04:55,120 --> 00:04:56,790
つまり、これはこの図の

138
00:04:57,290 --> 00:04:58,510
遥か左の彼方だ。

139
00:04:58,750 --> 00:05:01,380
これはとても0に近い。

140
00:05:01,590 --> 00:05:03,160
もしx1=0で

141
00:05:03,330 --> 00:05:05,100
x2=1なら、この式は

142
00:05:05,550 --> 00:05:07,610
評価するとgとなる、

143
00:05:07,830 --> 00:05:09,470
つまりsigmoid関数が-10に

144
00:05:09,890 --> 00:05:12,000
適用される。そしてこれもまた、

145
00:05:12,450 --> 00:05:13,640
このプロット上では

146
00:05:13,880 --> 00:05:14,970
左の遥か彼方なので、

147
00:05:15,150 --> 00:05:16,540
これもまたとても0に近い。

148
00:05:16,660 --> 00:05:19,180
これもまたgの-10となる。

149
00:05:19,270 --> 00:05:21,320
つまりx1が

150
00:05:22,000 --> 00:05:24,110
イコール1で、

151
00:05:24,560 --> 00:05:26,110
x2が0だと、これは-30+20で、-10。

152
00:05:26,230 --> 00:05:28,450
そして最後に、

153
00:05:28,590 --> 00:05:29,940
x1=1でx2=1の時は、

154
00:05:30,670 --> 00:05:31,970
その時はgの-30+20+20で、

155
00:05:32,770 --> 00:05:34,020
つまりそれは

156
00:05:34,190 --> 00:05:35,370
gの+10となる、

157
00:05:35,440 --> 00:05:36,480
それはとても1に

158
00:05:36,710 --> 00:05:38,140
近い値となる。

159
00:05:39,040 --> 00:05:40,210
そしてこの列を

160
00:05:40,490 --> 00:05:42,700
見てみると、

161
00:05:43,010 --> 00:05:45,280
これは論理積のAND関数だ。

162
00:05:45,820 --> 00:05:47,790
つまり、これはhのxは、

163
00:05:47,890 --> 00:05:49,870
だいたい x1 AND x2を

164
00:05:50,260 --> 00:05:54,910
計算している。

165
00:05:55,200 --> 00:05:56,210
言い換えると、

166
00:05:56,650 --> 00:05:57,820
それはx1とx2の両方が

167
00:05:58,270 --> 00:05:59,470
1の時にだけ、

168
00:06:00,950 --> 00:06:02,410
1を出力する。

169
00:06:03,360 --> 00:06:04,840
そこで簡単な真理値表を

170
00:06:05,320 --> 00:06:07,070
書いてみると、

171
00:06:07,780 --> 00:06:09,060
我らのニューラルネットワークが計算してる

172
00:06:09,350 --> 00:06:11,170
論理関数が何か、が

173
00:06:11,650 --> 00:06:12,870
分かりやすい。

174
00:06:16,990 --> 00:06:18,350
ここのネットワークは

175
00:06:18,880 --> 00:06:20,280
OR関数を計算している。

176
00:06:20,370 --> 00:06:21,810
どう機能するか見てみよう。

177
00:06:22,530 --> 00:06:23,230
仮説を書き下してみれば

178
00:06:23,680 --> 00:06:25,240
それが計算する事は

179
00:06:25,360 --> 00:06:26,690
gの

180
00:06:27,110 --> 00:06:29,980
-10+20 x1 + 20 x2 だ。

181
00:06:30,170 --> 00:06:32,040
つまり、

182
00:06:32,270 --> 00:06:33,380
もしこれらの値を埋めれば、

183
00:06:33,520 --> 00:06:35,110
gの-10は

184
00:06:35,460 --> 00:06:37,080
だいたい0となり、

185
00:06:37,820 --> 00:06:38,840
gの10は

186
00:06:39,040 --> 00:06:40,550
だいたい1、という感じになる。

187
00:06:40,930 --> 00:06:42,650
これらはだいたい1、そしてだいたい1、

188
00:06:43,550 --> 00:06:45,410
そしてこれらの数は

189
00:06:46,160 --> 00:06:47,650
本質的には論理和のOR関数となっている。

190
00:06:47,860 --> 00:06:50,210
以上で、

191
00:06:50,590 --> 00:06:52,010
いまやニューラルネットワークの

192
00:06:52,350 --> 00:06:53,930
一つのニューロンが、

193
00:06:54,020 --> 00:06:54,980
論理関数である所の

194
00:06:55,180 --> 00:06:58,390
ANDとかORを計算するのにどう使えるのか、分かったんじゃないかなぁ。

195
00:06:59,000 --> 00:07:00,280
次のビデオでは、引き続きこれらの例を構築していき、

196
00:07:00,790 --> 00:07:03,870
さらにより複雑な例を見ていく。

197
00:07:04,730 --> 00:07:05,610
そこではニューラルネットワークが

198
00:07:06,170 --> 00:07:07,570
どのように、ユニットの複数のレイヤーで、

199
00:07:07,820 --> 00:07:09,780
もっと複雑な関数を

200
00:07:09,960 --> 00:07:10,960
計算する事が出来るのかを見ていく、

201
00:07:11,400 --> 00:07:13,870
xor関数とかxnor関数のような。