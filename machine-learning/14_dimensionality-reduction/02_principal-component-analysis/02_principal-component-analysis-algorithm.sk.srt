1
00:00:00,340 --> 00:00:01,410
V tejto časti by som chcel

2
00:00:01,550 --> 00:00:03,020
hovoriť o algoritme zvanom

3
00:00:03,340 --> 00:00:04,570
analýza hlavných komponent (Principal Component Analysis - PCA)

4
00:00:05,600 --> 00:00:06,560
Na konci tejto časti

5
00:00:06,710 --> 00:00:09,200
budete schopní implementovať PCA samostatne.

6
00:00:10,170 --> 00:00:12,540
A použiť ho na redukciu dimenzionality vaších dát.

7
00:00:13,100 --> 00:00:14,690
Použitiu PCA predchádza

8
00:00:14,800 --> 00:00:17,760
pred prípravný krok, na ktorý netreba nikdy zabudnúť.

9
00:00:18,510 --> 00:00:20,220
Vzhľadom na trénovacie dáta

10
00:00:20,520 --> 00:00:22,290
je dôležíté

11
00:00:22,600 --> 00:00:24,070
zakaždým dáta normalizovať vzhľadom na priemer

12
00:00:25,330 --> 00:00:26,140
a v závisloti od numerických hodnôt dát,

13
00:00:26,840 --> 00:00:28,540
možno tiež vykonať škálovanie.

14
00:00:29,620 --> 00:00:30,950
Toto je veľmi podobné

15
00:00:31,650 --> 00:00:33,250
procesu normalizácie vzhľadom na priemer a škáovaniu faktorov,

16
00:00:34,080 --> 00:00:36,580
s ktorým sme sa stretli pri dozorovanom učení.

17
00:00:36,910 --> 00:00:38,240
V skutočnosti je to presne

18
00:00:38,390 --> 00:00:40,160
rovnaký postup avšak

19
00:00:40,310 --> 00:00:41,790
teraz aplikovaný na neoznačené

20
00:00:42,930 --> 00:00:43,670
dáta X1 až Xm.

21
00:00:44,180 --> 00:00:45,530
Takže pri normovaní vzhľadom na priemer

22
00:00:45,720 --> 00:00:47,080
najprv určíme priemery

23
00:00:47,390 --> 00:00:49,070
jednotlivých faktorov a následne

24
00:00:49,340 --> 00:00:50,900
nahradíme jednotlivé hodnoty X

25
00:00:51,150 --> 00:00:52,680
hodnotou X zmenšenou o hodnotu priemeru.

26
00:00:52,810 --> 00:00:54,120
Tým dosiahneme, že každý z faktorov

27
00:00:54,520 --> 00:00:57,450
má priemer presne nula.

28
00:00:58,690 --> 00:01:00,690
Jednotlivé faktory môžu mať veľmi rozdielne numerické hodnoty.

29
00:01:01,540 --> 00:01:03,050
Takže ak napríklad x1

30
00:01:03,080 --> 00:01:04,060
je rozmer domu

31
00:01:04,100 --> 00:01:05,390
a x2 je počet spální,

32
00:01:05,580 --> 00:01:07,370
používajúc náš predchádzajúci príklad,

33
00:01:07,480 --> 00:01:08,680
potom tiež preškálujeme každý z faktorov,

34
00:01:09,130 --> 00:01:10,540
aby mali porovnateľné rozsahy hodnôt.

35
00:01:10,980 --> 00:01:12,490
Takže podobne,

36
00:01:12,680 --> 00:01:13,860
ako v prípade dozorovaného učenia,

37
00:01:14,060 --> 00:01:16,200
vezmeme x(i,j)

38
00:01:16,680 --> 00:01:17,620
čo predstavuje faktor j,

39
00:01:23,250 --> 00:01:25,530
a odčítali by sme

40
00:01:25,890 --> 00:01:27,610
priemer.

41
00:01:28,370 --> 00:01:29,520
To teda máme v čitateli, ktorý predelíme s(j),

42
00:01:29,610 --> 00:01:30,020
kde s(j) je nejaká miera rozptylu hodnôt faktoru j. Takže by napríklad mohlo ísť o rozdiel medzi maximom

43
00:01:30,080 --> 00:01:31,310
a minimom, prípadne bežnejšie,

44
00:01:31,890 --> 00:01:33,540
je to štandardná odchýlka

45
00:01:33,640 --> 00:01:35,520
faktoru j. Vykonajúc

46
00:01:36,230 --> 00:01:39,480
takúto predprípravu dát, si teraz ukážeme čo vlastne PCA robí.

47
00:01:40,620 --> 00:01:41,630
V predchádzajúcom videu sme videli,

48
00:01:41,960 --> 00:01:43,050
že sa PCA

49
00:01:43,170 --> 00:01:44,520
snaží nájsť

50
00:01:44,790 --> 00:01:46,080
menej rozmerný podpriestor,

51
00:01:46,170 --> 00:01:47,500
na ktorý je možné projektovať dáta tak,

52
00:01:47,650 --> 00:01:49,780
aby sa pritom mimalizovala

53
00:01:50,540 --> 00:01:51,660
štandardná chyba

54
00:01:51,740 --> 00:01:53,080
projekcie. V tomto prípade

55
00:01:53,420 --> 00:01:54,800
ide o kvadrát dĺžky

56
00:01:54,870 --> 00:01:56,790
týchto modrých úsečiek.

57
00:01:57,110 --> 00:01:58,510
Čo sme vlastne chceli

58
00:01:59,210 --> 00:02:02,730
je nájsť vektor u1, ktorý

59
00:02:03,280 --> 00:02:04,750
určuje smer,

60
00:02:05,040 --> 00:02:06,630
prípadne v prípade 2D, nájsť

61
00:02:06,880 --> 00:02:08,760
vektory u1 a

62
00:02:10,640 --> 00:02:12,980
u2, ktoré určujú plochu,

63
00:02:13,590 --> 00:02:14,610
na ktorú možno projektorvať dáta.

64
00:02:16,620 --> 00:02:17,920
Takže len na

65
00:02:18,040 --> 00:02:19,160
rýchle pripomenutie,

66
00:02:19,730 --> 00:02:20,820
čo rozmernosť dát znamená

67
00:02:21,490 --> 00:02:22,430
v tomto príklade

68
00:02:22,470 --> 00:02:23,560
naľavo máme

69
00:02:23,680 --> 00:02:26,010
dáta x(i), ktoré sa nachádzajú v R2

70
00:02:26,300 --> 00:02:28,390
a čo by sme

71
00:02:28,660 --> 00:02:29,500
chceli dosiahnuť, je nájsť

72
00:02:29,970 --> 00:02:32,400
súbor reálnych čísel z(i),

73
00:02:33,000 --> 00:02:34,950
pomocou ktorých by sme ich mohli reprezentovať.