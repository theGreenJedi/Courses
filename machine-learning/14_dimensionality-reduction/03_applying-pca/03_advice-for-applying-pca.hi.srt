1
00:00:00,090 --> 00:00:01,450
पहले के एक वीडियो मे मैने

2
00:00:01,610 --> 00:00:02,710
कहा था कि पीसीए का

3
00:00:02,840 --> 00:00:05,410
कभी कभी उपयोग किया जा सकता है एक लर्निंग एल्गोरिथ्म / विधि के रनिंग  समय को स्पीड अप करने के लिए॰

4
00:00:07,070 --> 00:00:08,140
इस वीडियो में, मैं 

5
00:00:08,370 --> 00:00:09,520
बताना चाहूँगा कि ऐसा वास्तव मे

6
00:00:09,820 --> 00:00:11,270
कैसे करते है, और साथ ही साथ

7
00:00:11,460 --> 00:00:12,900
प्रयास करूंगा देने की 

8
00:00:12,990 --> 00:00:14,550
कुछ सलाह कि पीसीए कैसे इस्तेमाल करे

9
00:00:17,110 --> 00:00:19,630
तो यह है कि कैसे आप पीसीए का उपयोग कर सकते हैं एक लर्निंग विधि को स्पीड अप / तेज़ करने के लिए,

10
00:00:20,270 --> 00:00:21,940
और यह सूपरवाइज़्ड लर्निंग एल्गोरिथ्म

11
00:00:22,270 --> 00:00:23,630
को तेज़ बनाना वास्तव में है इसका  

12
00:00:23,870 --> 00:00:25,870
सबसे आम इस्तेमाल जो मैं 

13
00:00:26,530 --> 00:00:27,720
व्यक्तिगत तौर पर करता हूँ पीसीए का॰

14
00:00:28,710 --> 00:00:29,640
मान लीजिए कि आपके पास है एक सूपरवाइज़्ड 

15
00:00:30,300 --> 00:00:31,660
लर्निंग प्रॉबलम, ध्यान रहे कि 

16
00:00:31,810 --> 00:00:33,380
कि यह एक सूपरवाइज़्ड लर्निंग प्रॉबलम जिसके इनपुट्स

17
00:00:33,690 --> 00:00:35,510
 एक्स और लेबल्ज़ वाई, और

18
00:00:35,810 --> 00:00:37,330
मान लेते हैं कि आपके उदाहरण

19
00:00:37,830 --> 00:00:39,140
एक्स आई बहुत हाई डाईमेन्शनल / आयाम बहुत बड़ा है॰

20
00:00:39,840 --> 00:00:41,670
और मान लेते हैं कि आपके उदाहरण मे एक्स आई हैं 

21
00:00:41,800 --> 00:00:44,000
10000 डाईमेन्शनल फीचर वेक्टरज़॰ 

22
00:00:45,510 --> 00:00:46,550
इसका एक उदाहरण यह होगा, जब 

23
00:00:46,700 --> 00:00:48,130
आप किसी कंप्यूटर 

24
00:00:48,540 --> 00:00:50,390
विजन प्रॉबलम, जहाँ आप 

25
00:00:50,650 --> 00:00:52,410
एक 100*100 इमेजीज इस्तेमाल कर रहे होंगे, तो 

26
00:00:52,780 --> 00:00:55,550
अगर आप के पास है एक 100*100, मतलब कि 10000 

27
00:00:55,850 --> 00:00:57,520
पिक्सेल्ज़, तो अगर एक्स आई हैं,

28
00:00:57,780 --> 00:00:59,240
आप जानते हैं, फीचर वेक्टर्ज

29
00:00:59,760 --> 00:01:01,670
जिनमें हैं आपके 10000 पिक्सेल्

30
00:01:02,470 --> 00:01:03,580
ईंटेंसिटी वेलयूज, तो 

31
00:01:04,410 --> 00:01:05,580
आपके पास हैं 10000 आयाम के फीचर वेक्टरज़॰

32
00:01:06,880 --> 00:01:08,530
तो बहुत बड़े आयाम 

33
00:01:09,300 --> 00:01:10,890
फीचर वेक्टरज़ इस तरह के साथ,

34
00:01:11,320 --> 00:01:12,860
लर्निंग एल्गोरिथ्म रन करने की रफ़्तार कम हो सकती है, सही?

35
00:01:13,030 --> 00:01:14,300
अगर आप फीड करते हैं 10000 आयाम के

36
00:01:14,790 --> 00:01:16,980
फीचर वेक्टर लजिस्टिक रिग्रेशन मे,

37
00:01:17,570 --> 00:01:19,780
या एक नये नेटवर्क मे, या सपोर्ट वेक्टर मशीन मे, या जो भी आपके पास हो,

38
00:01:20,450 --> 00:01:22,000
केवल इसलिए कि यह बहुत ज़्यादा डाटा है, 

39
00:01:22,200 --> 00:01:23,060
वह है 10000 नंबर्ज,

40
00:01:24,130 --> 00:01:25,970
यह आपकी लर्निंग एल्गोरिथ्म को बहुत धीमा कर सकता है॰ 

41
00:01:27,170 --> 00:01:28,530
सौभाग्य से, पीसीए के साथ हम कर पाएंगे

42
00:01:28,680 --> 00:01:29,810
आँकड़ो के आयाम को कम करना 

43
00:01:30,060 --> 00:01:31,050
इस डाटा के और करना 

44
00:01:31,180 --> 00:01:32,410
हमारी एल्गोरिथ्म्ज़ को रन अधिक 

45
00:01:32,920 --> 00:01:34,440
सक्षमता से॰ ऐसा आप  

46
00:01:34,590 --> 00:01:35,780
इस तरह से  कर सकते हैं॰ हम 

47
00:01:35,980 --> 00:01:37,030
पहले जाँच करेंगे अपने लेबल्ड 

48
00:01:37,400 --> 00:01:39,520
ट्रेनिंग सेट की और एक्स्ट्ररेक्ट करेंगे केवल 

49
00:01:39,800 --> 00:01:41,830
इनपुट्स, अभी हम सिर्फ़ X को एक्स्ट्ररेक्ट करेंगे 

50
00:01:42,730 --> 00:01:45,130
और Y को अस्थाई रूप से छोड़ेंगे

51
00:01:45,860 --> 00:01:46,750
इससे हमे मिल जाएगा

52
00:01:47,090 --> 00:01:49,150
एक अनलेबल्ड ट्रेनिंग सेट x1 

53
00:01:49,400 --> 00:01:51,000
से xm  जो कि

54
00:01:51,240 --> 00:01:53,600
यह डाटा दस हज़ार आयाम का है,

55
00:01:53,940 --> 00:01:55,800
हमारे पास दस हज़ार आयाम के एग्जम्पल्स हैं॰

56
00:01:55,870 --> 00:01:57,230
तो केवल इनपुट वेकटर्स को अलग करें

57
00:01:58,370 --> 00:01:58,930
x1 से xm तक॰

58
00:02:00,650 --> 00:02:01,810
उसके बाद हम पीसीए का उपयोग करेंगे

59
00:02:02,700 --> 00:02:03,740
और यह मुझे देगा एक 

60
00:02:03,980 --> 00:02:06,100
कम आयाम का प्रतिरूप, 

61
00:02:06,410 --> 00:02:08,010
डाटा का, तो बजाए 

62
00:02:08,260 --> 00:02:09,540
10000 के फीचर वेक्टर के अब हमारे पास 

63
00:02:09,780 --> 00:02:11,880
शायद 1000 आयाम के फीचर वेक्टर होंगे॰

64
00:02:12,330 --> 00:02:13,500
तो मतलब कि 10x की बचत॰

65
00:02:15,110 --> 00:02:17,260
अगर आप ऐसा करेंगे तो यह एक नया ट्रैनिंग सेट देगा॰

66
00:02:17,910 --> 00:02:19,430
तो जहाँ पहले हमारे पास

67
00:02:19,620 --> 00:02:21,180
 x1, y1 का उदाहरण था

68
00:02:21,490 --> 00:02:24,340
मेरा पहला ट्रेनिंग इनपुट, अब z1 से रेप्रेज़ेंटेड है॰

69
00:02:24,580 --> 00:02:25,800
और इस तरह से हमारे पास होंगे

70
00:02:26,050 --> 00:02:27,010
नये तरह के ट्रेनिंग के उदाहरण,

71
00:02:28,210 --> 00:02:29,240
जैसे कि z1 का y1 के साथ पेयर॰

72
00:02:30,700 --> 00:02:33,170
और इसी तरह z2,  y2 का, और क्रमश: zm, ym तक॰

73
00:02:33,770 --> 00:02:35,300
पर चूँकि अब मेरे ट्रेनिंग के उदाहरण 

74
00:02:35,460 --> 00:02:36,980
अब इस तरह से रेप्रेज़ेंट हो रहे हैं 

75
00:02:37,480 --> 00:02:41,040
बहुत कम आयाम के द्वारा z1, z2....zm तक॰

76
00:02:41,310 --> 00:02:42,340
अंततः मैं ले सकता हूँ इन

77
00:02:43,650 --> 00:02:45,060
घटे हुए आयाम के ट्रेनिंग सेट को और 

78
00:02:45,240 --> 00:02:46,540
इन्हे डाल सकता हूँ एक लर्निंग अल्गोरिथम 

79
00:02:46,640 --> 00:02:47,900
जैसे कि न्यूरल नेटवर्क, या लजिस्टिक 

80
00:02:48,280 --> 00:02:49,450
रिग्रेशन, और मैं 

81
00:02:49,750 --> 00:02:51,990
बना सकता हूँ एक ऐसी ह्य्पोथेसिस H, जोकि 

82
00:02:52,230 --> 00:02:53,830
यह इनपुट लेती है, इन कम आयाम के 

83
00:02:54,330 --> 00:02:56,230
Z रेप्रिस्न्टेशन का, और प्रेडिक्शॅन करने का प्रयास करती है॰

84
00:02:57,890 --> 00:02:59,030
अगर मैं इस्तेमाल कर रहा होता लजिस्टिक

85
00:02:59,460 --> 00:03:00,880
रिग्रेशन उदाहरण के लिए मान लीजिए, तो मैं 

86
00:03:01,060 --> 00:03:02,760
एक ऐसी ह्य्पोथेसिस ट्रेन करता /  बनाता जिसका आउटपुट होता, आप जानते हैं,

87
00:03:03,080 --> 00:03:04,020
एक बटा एक प्लस e

88
00:03:04,180 --> 00:03:06,020
की घात माइनस-थेटा ट्रॅनस्पोज़ 

89
00:03:07,620 --> 00:03:10,150
Z, जो कि 

90
00:03:10,610 --> 00:03:11,530
इनपुट लेता इनमे से एक 

91
00:03:11,960 --> 00:03:13,660
z वेक्टर को, और प्रेडिक्शॅन करने का प्रयास करता॰

92
00:03:15,260 --> 00:03:16,310
और फाइनली, अगर आपके पास है

93
00:03:16,630 --> 00:03:17,800
है एक नया उदाहरण, जैसे कि नया 

94
00:03:17,920 --> 00:03:20,060
टेस्ट एग्ज़ॅंपल X, तो आप क्या

95
00:03:20,220 --> 00:03:21,340
 करते कि आप 

96
00:03:22,130 --> 00:03:23,730
लेते टेस्ट एग्ज़ॅंपल x, 

97
00:03:24,960 --> 00:03:26,590
उसे मैप करते इसी मॅपिंग के द्वारा

98
00:03:26,990 --> 00:03:27,860
 जो कि पीसीए द्वारा बनाई गयी है 

99
00:03:28,220 --> 00:03:29,610
उसका करेस्पॉंडिंग z प्राप्त करने के लिये॰

100
00:03:30,390 --> 00:03:31,280
और उस z को फिर 

101
00:03:31,950 --> 00:03:33,740
देते इस ह्य्पोथेसि मे, और यह 

102
00:03:33,910 --> 00:03:35,450
ह्य्पोथेसिस फिर करती 

103
00:03:35,750 --> 00:03:36,740
है आपके इनपुट x के बारे मे प्रेडिक्शॅन॰

104
00:03:38,110 --> 00:03:40,090
एक आख़िरी बात, पीसीए ये करता है कि 

105
00:03:40,510 --> 00:03:42,350
यह मैपिंग डिफाइन करता है 

106
00:03:42,710 --> 00:03:45,090
x से z की और

107
00:03:45,960 --> 00:03:46,970
 ये मैपिंग x से 

108
00:03:47,050 --> 00:03:48,280
z की  निर्धारित की जानी चाहिए रन करके

109
00:03:48,580 --> 00:03:50,840
पीसीए को केवल ट्रेनिंग सेटों पर॰

110
00:03:51,650 --> 00:03:53,310
और विशेष रूप से, यह मैपिंग जो 

111
00:03:53,530 --> 00:03:54,770
पीसीए सीख रहा है, बिल्कुल यही 

112
00:03:54,950 --> 00:03:57,650
मैपिंग, यह ये करती है कि पैरामीटरज़ के सेट को कम्प्यूट करती है॰

113
00:03:58,210 --> 00:04:00,500
यह फीचर स्केलिंग और मीन नॉर्मालिज़ेशन है॰

114
00:04:01,240 --> 00:04:04,040
और साथ मे इस मेट्रिक्स U reduced को भी कॅल्क्युलेट करना है 

115
00:04:04,680 --> 00:04:05,510
पर ये सारी चीज़े जो 

116
00:04:05,670 --> 00:04:06,980
U reduce, वह है जैसे

117
00:04:07,120 --> 00:04:08,420
एक पैरामीटर की तरह है जो सीखी हैं

118
00:04:08,670 --> 00:04:09,950
पीसीए ने और हमे चाहिए कि 

119
00:04:10,150 --> 00:04:12,270
फिट करें अपने पैरामीटरज़ को केवल  

120
00:04:12,480 --> 00:04:13,990
अपने उसी ट्रेनिंग सेट के लिए न कि 

121
00:04:14,040 --> 00:04:16,250
अपनी क्रॉस वेलीडेशन के लिए या टेस्ट सेटस के लिए और 

122
00:04:16,370 --> 00:04:17,560
तो ये चीज़ें U reduced

123
00:04:18,180 --> 00:04:19,460
आदि, करना चाहिए

124
00:04:19,820 --> 00:04:22,430
प्राप्त पीसीए को केवल ट्रेनिंग सेट पर चला कर॰ 

125
00:04:23,300 --> 00:04:26,930
और तब U reduced मिल जाने पर, या वो पैरामीटरज़ मिल जाने पर जो फीचर 

126
00:04:27,350 --> 00:04:28,620
स्केलिंग के लिए चाहिए, जहाँ मीन नॉर्मालिज़ेशन   

127
00:04:29,320 --> 00:04:31,790
और स्केल का पुन: मापन 

128
00:04:32,180 --> 00:04:34,500
जो कि फीचर को बाँटता है उन्हे तुलनात्मक स्केल पर लाकर॰

129
00:04:34,760 --> 00:04:36,010
और वे सारे पैरामीटर मिल जाने पर

130
00:04:36,570 --> 00:04:38,010
उस ट्रेनिंग सेट पर, आप कर सकते हो

131
00:04:38,220 --> 00:04:41,560
लागू उसके बाद उसी मैपिंग का उपयोग दूसरे उदाहरणों पर भी शायद

132
00:04:41,820 --> 00:04:45,020
अपनी क्रॉस वेलीडेशन सेटस या

133
00:04:45,180 --> 00:04:46,680
अपनी टेस्ट सेट के लिए, समझ गये न ?

134
00:04:47,150 --> 00:04:48,340
सारांश के लिए, जब भी आप 

135
00:04:48,450 --> 00:04:49,790
पीसीए को रन करो, उपयोग उस

136
00:04:49,900 --> 00:04:51,070
पीसीए का करो केवल 

137
00:04:51,220 --> 00:04:52,450
ट्रेनिंग सेट वाले भाग पर चला कर करो 

138
00:04:52,490 --> 00:04:55,880
न कि अपने डाटा के क्रॉस वेलीडेशन / तिर्यक जांच सेट पर या डेटा के टेस्ट सेट वाले भाग पर॰

139
00:04:56,410 --> 00:04:57,620
और यह डिफाइन करता है मैपिंग

140
00:04:57,870 --> 00:04:58,770
 x से z की और तुम कर सकते हो 

141
00:04:58,950 --> 00:05:00,320
उसी मैपिंग का उपयोग 

142
00:05:00,560 --> 00:05:02,240
अपनी तिर्यक जांच सेट के लिए या अपनी

143
00:05:02,290 --> 00:05:03,370
टेस्ट सेट आदि के लिए और

144
00:05:03,450 --> 00:05:04,660
 मैने इस उदाहरण मे बताया है 

145
00:05:05,000 --> 00:05:06,660
डाटा को कम करने के लिए 

146
00:05:06,950 --> 00:05:08,510
दस हज़ार के आयाम से एक 

147
00:05:08,740 --> 00:05:10,350
हज़ार के आयाम तक, वास्तव मे यह 

148
00:05:10,660 --> 00:05:11,950
उतना काल्पनिक नहीं है. बहुत सी 

149
00:05:12,280 --> 00:05:14,720
प्राब्लम्ज़ के लिए हम वास्तव में कम करते हैं डिमेन्शंज़ डेटा की. आप 

150
00:05:17,600 --> 00:05:18,700
जानते हैं, 5x शायद 10x से

151
00:05:18,780 --> 00:05:20,910
फिर भी क़ायम रख सकते हैं अधिकांश वेरीयन्स और हम यह कर सकते हैं 

152
00:05:21,270 --> 00:05:22,680
केवल नाम मात्र को प्रभावित करते हुए पर्फ़ॉर्मन्स,

153
00:05:23,900 --> 00:05:25,840
क्लैसिफ़िकेशन एक्यूरेसी की टर्म्ज़ में, मान लो,

154
00:05:26,240 --> 00:05:27,970
केवल नाम मात्र को प्रभावित करते हुए क्लैसिफ़िकेशन 

155
00:05:28,770 --> 00:05:30,320
एक्यूरेसी लर्निंग अल्गोरिद्म की.

156
00:05:31,090 --> 00:05:32,140
और काम करने से कम डिमेन्शंज़ के 

157
00:05:32,590 --> 00:05:33,730
डेटा के साथ हमारा लर्निंग अल्गोरिद्म 

158
00:05:34,060 --> 00:05:36,500
अक्सर रन कर सकता है ज़्यादा तीव्रता से.

159
00:05:36,910 --> 00:05:38,120
सारांश में, हमने अभी तक बात की है 

160
00:05:38,410 --> 00:05:40,920
पीसीए की निम्न ऐप्लिकेशन के बारे में.

161
00:05:41,970 --> 00:05:43,780
पहली है कम्प्रेशन ऐप्लिकेशन जहाँ 

162
00:05:44,020 --> 00:05:45,140
हम शायद वह करते हैं कम करने के लिए 

163
00:05:45,500 --> 00:05:46,440
मेमरी या डिस्क स्पेस 

164
00:05:46,590 --> 00:05:47,960
जो आवश्यक है डेटा को स्टोर करने के लिए और हमने 

165
00:05:48,240 --> 00:05:49,390
अभी बात की कि कैसे 

166
00:05:49,460 --> 00:05:51,630
इस्तेमाल करते हैं इसे तेज़ करने के लिए एक लर्निंग अल्गोरिद्म को.

167
00:05:52,100 --> 00:05:53,870
इन ऐप्लिकेशन्स में, करने के लिए 

168
00:05:54,130 --> 00:05:56,240
चुनाव K का, अक्सर हम 

169
00:05:56,420 --> 00:05:58,770
करेंगे वह समझ कर 

170
00:05:59,160 --> 00:06:00,590
कितना प्रतिशत 

171
00:06:00,810 --> 00:06:03,880
वेरीयन्स का रखना है के अनुसार, और इसलिए 

172
00:06:04,780 --> 00:06:06,320
इस लर्निंग अल्गोरिद्म के लिए, स्पीड 

173
00:06:06,570 --> 00:06:10,050
अप ऐप्लिकेशन अक्सर रखेगी 99% वेरीयन्स.

174
00:06:10,530 --> 00:06:11,690
वह होगा एक काफ़ी आम विकल्प 

175
00:06:12,100 --> 00:06:14,270
कि कैसे चुनना है K. अत: 

176
00:06:14,730 --> 00:06:16,640
वह है कि कैसे आप चुनेंगे K इन कम्प्रेशन ऐप्लिकेशन्स के लिए.

177
00:06:17,850 --> 00:06:19,590
जबकि विज़ूअलाइज़ेशन ऐप्लिकेशन के लिए 

178
00:06:20,760 --> 00:06:22,100
यद्यपि अक्सर हम जानते हैं 

179
00:06:22,230 --> 00:06:23,550
कैसे प्लॉट करना है केवल दो डिमेन्शनल 

180
00:06:24,020 --> 00:06:25,520
डेटा या तीन डिमेन्शनल डेटा,

181
00:06:26,540 --> 00:06:28,650
और इसलिए विज़ूअलाइज़ेशन ऐप्लिकेशन के लिए, हम करेंगे 

182
00:06:28,830 --> 00:06:29,660
चुनाव अक्सर K बराबर 2

183
00:06:29,710 --> 00:06:31,930
या K बराबर 3, क्योंकि हम कर सकते हैं प्लॉट 

184
00:06:32,740 --> 00:06:33,500
केवल 2डी और 3डी डेटा सेट्स.

185
00:06:34,510 --> 00:06:35,720
तो वह प्रस्तुत करता है सार मुख्य 

186
00:06:36,020 --> 00:06:37,230
ऐप्लिकेशन्स पीसीए का, तथा 

187
00:06:37,870 --> 00:06:39,580
कैसे चुनना है 

188
00:06:39,670 --> 00:06:41,540
वैल्यू K की इन विभिन्न ऐप्लिकेशन्स के लिए.

189
00:06:42,890 --> 00:06:45,710
मुझे उल्लेख करना चाहिए कि प्रायः एक अधिकतर होने वाला ग़लत प्रयोग 

190
00:06:46,400 --> 00:06:48,100
पीसीए का और 

191
00:06:48,800 --> 00:06:50,300
आप कभी-कभी सुनते हैं दूसरों को 

192
00:06:50,580 --> 00:06:51,820
इसे करते हुए आशा है अधिक बार नहीं.

193
00:06:52,230 --> 00:06:54,780
मैं सिर्फ़ ज़िक्र करना चाहता हूँ इसे ताकि आप जान लें कि इसे नहीं करना है.

194
00:06:55,480 --> 00:06:56,460
और वहाँ है एक ग़लत उपयोग 

195
00:06:56,540 --> 00:06:59,170
पीसीए का, जो है इसे इस्तेमाल करने का प्रयास करना बचाने के लिए ओवर-फ़िटिंग.

196
00:07:00,380 --> 00:07:00,660
यहाँ है विचार.

197
00:07:01,910 --> 00:07:03,080
यह नहीं है एक बढ़िया 

198
00:07:03,730 --> 00:07:04,610
ढंग पीसीए के इस्तेमाल का,

199
00:07:04,670 --> 00:07:05,630
लेकिन यहाँ है विचार पीछे 

200
00:07:05,690 --> 00:07:07,080
इस मेथड के, जो है, आप जानते हैं 

201
00:07:07,350 --> 00:07:09,090
यदि हमारे पास है एक्स आइ, तब 

202
00:07:09,300 --> 00:07:10,660
शायद हमारे पास होंगे एन फ़ीचर्ज़, लेकिन 

203
00:07:10,830 --> 00:07:12,640
यदि हम कम्प्रेस करते हैं डेटा को, और 

204
00:07:12,750 --> 00:07:13,700
इस्तेमाल करते हैं ज़ी आइ इसके स्थान पर 

205
00:07:14,270 --> 00:07:15,410
और वह कम करता है संख्या 

206
00:07:15,560 --> 00:07:17,050
फ़ीचर्ज़ की K तक, जो 

207
00:07:17,290 --> 00:07:19,300
हो सकता है काफ़ी कम डिमेन्शनल. और 

208
00:07:19,410 --> 00:07:21,130
इसलिए यदि हमारे पास है एक काफ़ी छोटी 

209
00:07:21,490 --> 00:07:22,520
संख्या फ़ीचर्ज़ की, यदि K 

210
00:07:22,770 --> 00:07:25,800
है 1,000 और एन है 

211
00:07:26,090 --> 00:07:27,010
10,000, तब यदि हमारे पास हैं 

212
00:07:27,780 --> 00:07:29,390
केवल 1,000 डिमेन्शनल डेटा, शायद 

213
00:07:29,670 --> 00:07:30,580
हमारी ओवर-फ़िट करने की सम्भावना कम है 

214
00:07:31,260 --> 00:07:32,230
तुलना में यदि हम लेते 10,000 डिमेन्शनल 

215
00:07:33,280 --> 00:07:34,980
डेटा एक दस हज़ार फ़ीचर्ज़ के साथ.

216
00:07:35,950 --> 00:07:37,160
अत: कुछ लोग सोचते हैं 

217
00:07:37,360 --> 00:07:39,360
पीसीए को एक तरीक़े की तरह बचाने के लिए ओवर-फ़िटिंग.

218
00:07:39,950 --> 00:07:41,940
लेकिन केवल ज़ोर देनें के लिए यह 

219
00:07:42,110 --> 00:07:44,000
है एक ग़लत ऐप्लिकेशन पीसीए की 

220
00:07:44,260 --> 00:07:46,080
और मैं स्वीकृति नहीं देता इसे करने की.

221
00:07:46,520 --> 00:07:48,430
और ऐसा नहीं है यह विधि काम बुरे ढंग से करती हैं. 

222
00:07:49,000 --> 00:07:49,920
अगर आप इतेमाल करना चाहते हैं 

223
00:07:50,330 --> 00:07:51,560
इस विधि को कम करने के लिए डिमेन्शंज़ 

224
00:07:51,890 --> 00:07:52,830
डेटा, प्रयास करते हुए ओवर-फ़िटिंग बचाने का,

225
00:07:53,690 --> 00:07:54,830
यह शायद सही काम करे.

226
00:07:55,560 --> 00:07:56,720
लेकिन यह बिल्कुल नहीं है 

227
00:07:57,040 --> 00:07:58,340
एक अच्छा ढंग सम्बोधित करने का 

228
00:07:58,680 --> 00:08:00,390
ओवर-फ़िटिंग और इसके स्थान पर, यदि आप 

229
00:08:00,510 --> 00:08:01,810
चिंतित हैं ओवर-फ़िटिंग के लिए, है 

230
00:08:02,030 --> 00:08:03,420
एक अधिक बेहतर ढंग सम्बोधित करने का 

231
00:08:03,800 --> 00:08:05,680
इसे, इस्तेमाल करें रेग्युलराइज़ेशन बजाय 

232
00:08:05,900 --> 00:08:07,910
इस्तेमाल करने के पीसीए कम करने के लिए डिमेन्शन्स डेटा की.

233
00:08:08,670 --> 00:08:10,000
और कारण है, यदि 

234
00:08:11,010 --> 00:08:12,150
आप सोचें कि कैसे पीसीए काम करता है,

235
00:08:12,900 --> 00:08:13,950
यह इस्तेमाल नहीं करता लेबल्ज़ 

236
00:08:14,530 --> 00:08:15,680
वाय का. आप सिर्फ़ देख रहे हैं 

237
00:08:16,050 --> 00:08:17,220
आपकी इन्पुट्स एक्स आइ पर, और आप कर रहे हैं 

238
00:08:17,340 --> 00:08:19,070
इस्तेमाल उसका ढूँढने के लिए एक 

239
00:08:19,130 --> 00:08:21,150
कम डिमेन्शन्स का लगभग सही अनुमान आपके डेटा के लिए.

240
00:08:21,390 --> 00:08:22,840
तो पीसीए क्या करता है, 

241
00:08:23,190 --> 00:08:25,410
यह कुछ इन्फ़र्मेशन को छोड़ देता है.

242
00:08:26,460 --> 00:08:28,040
यह छोड़ देता है या कम करता है 

243
00:08:28,180 --> 00:08:29,680
डिमेन्शन्स आपके डेटा की बिना 

244
00:08:30,110 --> 00:08:31,390
जाने क्या वैल्यूज़ वाय की 

245
00:08:32,380 --> 00:08:33,700
हैं, अत: यह शायद 

246
00:08:34,250 --> 00:08:35,770
है इस्तेमाल करना पीसीए का इस तरह से 

247
00:08:35,920 --> 00:08:37,750
शायद सही है यदि, मान लो 

248
00:08:37,990 --> 00:08:39,190
99 प्रतिशत 

249
00:08:39,410 --> 00:08:40,400
वेरीयन्स रखा जा सकता है, यदि आप रख रहे हैं अधिकांश 

250
00:08:40,830 --> 00:08:41,970
वेरीयन्स, लेकिन 

251
00:08:42,100 --> 00:08:44,230
यह शायद निकाल फेंके कुछ मूल्यवान जानकारी भी.

252
00:08:45,010 --> 00:08:45,980
और ऐसा हुआ कि 

253
00:08:46,310 --> 00:08:47,580
यदि आप रख रहे हैं 99% 

254
00:08:47,820 --> 00:08:49,260
वेरीयन्स का या 95% 

255
00:08:49,360 --> 00:08:50,940
वेरीयन्स या ऐसा कुछ, ऐसा 

256
00:08:51,020 --> 00:08:52,310
है कि सिर्फ़ इस्तेमाल करने से 

257
00:08:52,720 --> 00:08:54,650
रेग्युलराइज़ेशन अक्सर देगा 

258
00:08:54,790 --> 00:08:56,010
आपको कम से कम उतनी अच्छी 

259
00:08:56,220 --> 00:08:57,880
विधि बचाने के लिए ओवर-फ़िटिंग 

260
00:08:58,900 --> 00:09:00,340
और रेग्युलराइज़ेशन अक्सर 

261
00:09:00,590 --> 00:09:02,220
बेहतर काम करेगा, क्योंकि जब आप 

262
00:09:02,350 --> 00:09:03,890
अप्लाई कर रहे हैं लिनीअर रेग्रेशन या लजिस्टिक 

263
00:09:04,250 --> 00:09:05,240
रेग्रेशन या कोई और विधि 

264
00:09:05,600 --> 00:09:07,390
रेग्युलराइज़ेशन के साथ, अच्छा, यह मिनीमाईज़ेशन 

265
00:09:08,010 --> 00:09:09,420
की समस्या वास्तव में जानती है क्या हैं 

266
00:09:09,480 --> 00:09:10,740
वैल्यूज़ वाय की, और 

267
00:09:10,960 --> 00:09:12,680
इसलिए कम संभावना है फेंक देने की 

268
00:09:12,880 --> 00:09:14,330
कुछ मूल्यवान जानकारी की, जबकि 

269
00:09:14,730 --> 00:09:15,790
पीसीए नहीं करता इस्तेमाल 

270
00:09:16,060 --> 00:09:17,810
लेबल्ज़ का और है अधिक 

271
00:09:17,850 --> 00:09:19,940
सम्भावित निकाल फेंकने के लिए मूल्यवान जानकारी.

272
00:09:20,230 --> 00:09:21,370
अत: सारांश में, यह है 

273
00:09:21,620 --> 00:09:22,900
एक अच्छा इस्तेमाल पीसीए का, यदि आपका 

274
00:09:23,010 --> 00:09:24,380
मुख्य उद्देश्य है तीव्र करना 

275
00:09:24,530 --> 00:09:26,490
आपका लर्निंग अल्गोरिद्म, लेकिन इस्तेमाल करके 

276
00:09:26,790 --> 00:09:28,360
पीसीए बचाने के लिए ओवर-फ़िटिंग, वह 

277
00:09:28,650 --> 00:09:29,630
नहीं है एक अच्छा इस्तेमाल 

278
00:09:30,030 --> 00:09:32,270
पीसीए का, और इस्तेमाल करना रेग्युलराइज़ेशन बजाय इसके 

279
00:09:32,900 --> 00:09:36,190
है वास्तव में जो बहुत लोग 

280
00:09:36,440 --> 00:09:40,490
रेकमेंड करते हैं करना. अंत में 

281
00:09:41,310 --> 00:09:43,350
एक आख़िरी ग़लत इस्तेमाल पीसीए का.

282
00:09:43,750 --> 00:09:45,760
और इसलिए मुझे कहना चाहिए कि पीसीए एक बहुत उपयोगी अल्गोरिद्म है,

283
00:09:46,270 --> 00:09:49,170
मैं अक्सर प्रयोग करता हूँ इसे कम्प्रेशन के लिए विज़ूअलाईज़ेशन के उद्देश्य से.

284
00:09:50,230 --> 00:09:51,400
लेकिन मैं कभी-कभी क्या 

285
00:09:51,570 --> 00:09:53,310
देखता हूँ, कि लोग कभी-कभी 

286
00:09:53,710 --> 00:09:56,080
प्रयोग करते हैं जहाँ नहीं करना चाहिए.

287
00:09:56,220 --> 00:09:57,940
तो, यहाँ है काफ़ी कॉमन / सामान्य चीज़ जो 

288
00:09:58,030 --> 00:09:59,140
मैं देखता हूँ, जो है यदि कोई 

289
00:09:59,330 --> 00:10:00,330
डिज़ाइन कर रहा है एक मशीन-लर्निंग सिस्टम,

290
00:10:01,010 --> 00:10:02,130
वे शायद लिखें 

291
00:10:02,200 --> 00:10:04,150
प्लान इस तरह से: चलो डिज़ाइन करते हैं एक लर्निंग सिस्टम. 

292
00:10:05,060 --> 00:10:06,080
लेते हैं एक ट्रेनिंग सेट और तब, 

293
00:10:06,570 --> 00:10:07,350
आप जानते हैं, मैं क्या करूँगा कि 

294
00:10:07,400 --> 00:10:08,700
रन करेंगे पीसीए, फिर ट्रेन करेंगे 

295
00:10:08,860 --> 00:10:11,200
लजिस्टिक रेग्रेशन और टेस्ट करेंगे मेरे टेस्ट डेटा पर.

296
00:10:11,680 --> 00:10:12,770
अत: अक्सर बहुत 

297
00:10:13,090 --> 00:10:14,360
शुरुआत में एक प्रोजेक्ट की,

298
00:10:14,600 --> 00:10:15,600
कोई लिखेगा एक 

299
00:10:15,720 --> 00:10:16,980
प्रोजेक्ट प्लान जो बताएगा कि चलो 

300
00:10:17,310 --> 00:10:18,610
करो ये चार स्टेप्स पीसीए के साथ जो अंदर है॰

301
00:10:20,210 --> 00:10:21,220
लिखने से पहले एक प्रोजेक्ट 

302
00:10:21,530 --> 00:10:23,350
प्लान जो शामिल करता है पीसीए 

303
00:10:23,560 --> 00:10:24,860
इस तरह, एक बहुत बढ़िया 

304
00:10:25,030 --> 00:10:27,110
प्रश्न जो पूछना चाहिए है, अच्छा, क्या होगा यदि हम 

305
00:10:27,630 --> 00:10:28,560
करते सिर्फ़ यह पूरा काम 

306
00:10:29,540 --> 00:10:31,470
बिना इस्तेमाल करे पीसीए.

307
00:10:32,170 --> 00:10:33,450
और अक्सर लोग नहीं 

308
00:10:33,800 --> 00:10:34,940
ग़ौर नहीं करते इस स्टेप पर पहले 

309
00:10:35,440 --> 00:10:37,080
बनाने से एक जटिल प्रोजेक्ट प्लान और 

310
00:10:37,920 --> 00:10:40,620
पीसीए इम्प्लमेंट करने से पहले इत्यादि.

311
00:10:40,810 --> 00:10:42,360
और कभी-कभी, और इसलिए ख़ासतौर पर, 

312
00:10:43,050 --> 00:10:44,300
मैं अक्सर लोगों को क्या परामर्श देता हूँ 

313
00:10:44,670 --> 00:10:45,980
कि, इम्प्लमेंट करने से पहले 

314
00:10:46,450 --> 00:10:47,970
पीसीए, मैं पहले 

315
00:10:48,220 --> 00:10:49,410
सुझाव दूँगा कि, आप जानते हैं, करें 

316
00:10:49,600 --> 00:10:50,770
जो भी आपको करना है, लें जो भी वह 

317
00:10:50,850 --> 00:10:52,030
है जो आप करना चाहते हैं और पहले 

318
00:10:52,450 --> 00:10:53,650
ग़ौर करें इसे करने के लिए आपके 

319
00:10:53,980 --> 00:10:56,420
आरम्भिक रॉ डेटा एक्स आइ पर, और 

320
00:10:56,600 --> 00:10:57,860
केवल तब यदि वह नहीं करता है 

321
00:10:57,960 --> 00:10:59,650
जो आप चाहते हैं, तब इम्प्लमेंट करें पीसीए ज़ी आइ इस्तेमाल करने से पहले. 

322
00:11:01,010 --> 00:11:02,420
अत: पीसीए इस्तेमाल करने से पहले, आप जानते हैं,

323
00:11:03,030 --> 00:11:03,930
बजाय कम करने के डिमेन्शन्स 

324
00:11:04,360 --> 00:11:05,710
डेटा की, मैं ग़ौर करूँगा 

325
00:11:06,640 --> 00:11:08,020
अच्छा, चलिए छोड़ देते हैं यह पीसीए स्टेप, 

326
00:11:08,420 --> 00:11:09,690
और मैं ग़ौर करूँगा, चलो 

327
00:11:10,040 --> 00:11:11,460
सिर्फ़ ट्रेन करते हैं मेरे लर्निंग अल्गोरिद्म को 

328
00:11:12,440 --> 00:11:13,560
मेरे मूल डेटा पर.

329
00:11:14,410 --> 00:11:15,990
चलो इस्तेमाल करते हैं सिर्फ़ मेरा मूल अपरिपक्व 

330
00:11:16,300 --> 00:11:17,770
इन्पुट्स एक्स आइ, और मैं 

331
00:11:18,180 --> 00:11:19,550
रेकमेंड करूँगा, बजाय रखने के 

332
00:11:19,720 --> 00:11:20,910
पीसीए अल्गोरिद्म में, सिर्फ़ 

333
00:11:21,030 --> 00:11:23,250
प्रयास करें जो भी आप कर रहे हैं पहले एक्स आइ साथ करने के लिए.

334
00:11:24,090 --> 00:11:25,000
और सिर्फ़ तब जब यदि आपके पास है 

335
00:11:25,150 --> 00:11:26,180
एक कारण विश्वास करने का कि उसने 

336
00:11:26,480 --> 00:11:27,590
नहीं किया, ताकि सिर्फ़ तब जब आपका 

337
00:11:27,790 --> 00:11:29,470
लर्निंग अल्गोरिद्म हो जाता 

338
00:11:29,510 --> 00:11:31,100
काफ़ी रन करता है, या केवल यदि 

339
00:11:31,280 --> 00:11:32,680
मेमरी की अवश्यकता या 

340
00:11:32,910 --> 00:11:34,140
डिस्क स्पेस की आवश्यकता काफ़ी अधिक है,

341
00:11:34,430 --> 00:11:35,850
अत: आप कम्प्रेस करना चाहते हैं आपका 

342
00:11:36,190 --> 00:11:37,810
रेप्रेज़ेंटेशन, लेकिन यदि केवल 

343
00:11:38,000 --> 00:11:39,020
इस्तेमाल करने से एक्स आइ कम नहीं होता है, 

344
00:11:39,360 --> 00:11:40,640
केवल तब जब आपके पास प्रमाण है या मज़बूत 

345
00:11:40,950 --> 00:11:41,890
कारण हैं विश्वास करने के कि इस्तेमाल करने से 

346
00:11:42,380 --> 00:11:43,890
एक्स आइ कम नहीं होगा, तब इम्प्लमेंट करें 

347
00:11:44,380 --> 00:11:46,730
पीसीए और ग़ौर करें इस्तेमाल करना कम्प्रेस्ड इम्प्लमेंटेशन.

348
00:11:47,990 --> 00:11:48,830
क्योंकि मैं जो अवश्य देखता हूँ, है 

349
00:11:49,100 --> 00:11:50,380
कि कभी कभी लोग शुरुआत करते हैं 

350
00:11:50,530 --> 00:11:51,520
एक प्रोजेक्ट प्लान से जिसमें शामिल होता है पीसीए 

351
00:11:52,100 --> 00:11:54,580
और कभी कभी वे,

352
00:11:54,650 --> 00:11:55,620
जो भी वे कर रहे हैं 

353
00:11:55,820 --> 00:11:57,380
काम करेगा सिर्फ़ 

354
00:11:57,660 --> 00:11:59,520
सही, बिना पीसीए इस्तेमाल किए भी.

355
00:11:59,840 --> 00:12:01,650
तो, सिर्फ़ सोचें उसे 

356
00:12:01,860 --> 00:12:03,130
एक विकल्प की तरह भी, इससे पहले कि आप 

357
00:12:03,320 --> 00:12:04,170
व्यतीत करें काफ़ी 

358
00:12:04,300 --> 00:12:05,570
समय करने के लिए पीसीए, समझने के 

359
00:12:05,770 --> 00:12:08,100
लिए कि क्या है K इत्यादि.

360
00:12:08,250 --> 00:12:09,330
तो, इतना ही पीसीए के लिए.

361
00:12:09,800 --> 00:12:11,000
बावजूद इन आख़िरी सेट 

362
00:12:11,080 --> 00:12:12,380
कामेंट्स के, पीसीए है एक 

363
00:12:12,690 --> 00:12:14,060
अविश्वसनीय रूप से उपयोगी अल्गोरिद्म, जब आप 

364
00:12:14,150 --> 00:12:15,330
इस्तेमाल करते हैं इसे उचित ऐप्लिकेशन के लिए 

365
00:12:16,070 --> 00:12:17,480
और मैंने वास्तव में इस्तेमाल किया है पीसीए काफ़ी 

366
00:12:17,770 --> 00:12:19,330
बार और मेरे लिए,

367
00:12:19,580 --> 00:12:20,650
मैं इस्तेमाल करता हूँ इसे अधिकतर तीव्र 

368
00:12:20,850 --> 00:12:22,150
करने के लिए रनिंग टाइम मेरे लर्निंग अल्गोरिद्म्स का.

369
00:12:22,880 --> 00:12:24,310
लेकिन मैं सोचता हूँ, केवल 

370
00:12:24,400 --> 00:12:25,690
एक आम ऐप्लिकेशन पीसीए की, 

371
00:12:26,020 --> 00:12:27,300
है इस्तेमाल करना इसे 

372
00:12:27,410 --> 00:12:29,030
कम्प्रेस करने के लिए डेटा को, कम करने के लिए 

373
00:12:29,620 --> 00:12:30,650
मेमरी या डिस्क स्पेस 

374
00:12:30,990 --> 00:12:33,130
आवश्यकताएँ, या इस्तेमाल करना इसे विज़ूअलाइज करने के लिए डेटा को.

375
00:12:34,270 --> 00:12:35,710
और पीसीए है एक 

376
00:12:35,750 --> 00:12:36,960
सबसे ज़्यादा आम तौर पर इस्तेमाल किया जाने वाला और एक 

377
00:12:36,990 --> 00:12:39,420
सबसे अधिक प्रभावशाली अनसूपर्वायज़्ड लर्निंग अल्गोरिद्म. 

378
00:12:40,060 --> 00:12:41,210
और जो सीखा है आपने 

379
00:12:41,420 --> 00:12:43,120
इन विडीओज़ में, मैं सोचता हूँ आशा है 

380
00:12:43,500 --> 00:12:44,710
आप कर पाएँगे इम्प्लमेंट 

381
00:12:45,150 --> 00:12:46,280
पीसीए और इस्तेमाल कर पाएँगे उसे 

382
00:12:46,500 --> 00:12:47,930
इन सब उद्देश्यों के लिए भी.