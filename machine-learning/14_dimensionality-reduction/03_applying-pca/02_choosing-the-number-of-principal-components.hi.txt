पी सी ए अल्गोरिद्म में हम लेते हैं एन डायमेंशनल फीचर्स और कम करते हैं उन्हें कुछ के डायमेंशनल फीचर रिप्रेजेंटेशन में. यह संख्या के है एक पेरामिटर पी सी ए अल्गोरिद्म की. इस संख्या के को भी कहते हैं नंबर ऑफ प्रिंसिपल कंपोनेंट्स या नंबर ऑफ प्रिंसिपल कंपोनेंट्स जो हमने  कायम रखे हैं. और इस वीडियो में, मैं चाहूँगा आपको देना कुछ दिशा निर्देश, बताऊंगा आपको कि कैसे लोग सोचते हैं कि कैसे लेना है यह पेरामिटर के पी सी ए के लिए. चुनने के लिए के, मतलब, चुनने के लिए संख्या प्रिंसिपल कंपोनेंट्स की, यहाँ हैं कुछ सहायक सिद्धांत. पी सी ए क्या करने की कोशिश करता है कि यह कोशिश करता है मिनीमाइज / न्यूनतम करने की एवरेज स्क़ुएर्ड प्रोजेक्शन एरर. अत: यह कोशिश करता है मिनीमाइज / न्यूनतम करने की इस मात्रा को, जो मैं लिख रहा हूँ, जो है अंतर बीच का मूल डेटा एक्स और प्रोजेक्टेड वर्शन एक्स-अप्प्रोक्स-आई, जो परिभाषित किया था पिछले विडियो में, अत: यह कोशिश करता है मिनीमाइज / न्यूनतम करने की स्क़ुएर्ड दूरी एक्स और इसके प्रोजेक्शन के बीच की उस लोअर डायमेंशनल सरफेस पर. तो वह है एवरेज स्क़ुएर्ड प्रोजेक्शन एरर. मैं परिभाषित करता हूँ टोटल वेरिएशन भी डेटा में इस प्रकार एवरेज लेंग्थ स्क़ुएर्ड इन एग्जामपल्स एक्स आई की अत: टोटल वेरिएशन डेटा में  है एवरेज मेरे ट्रेनिंग सेट की प्रत्येक ट्रेनिंग एग्जामपल्स की लेंग्थ का और यह कहता है, "औसतन, कितने दूर हैं मेरे ट्रेनिंग एग्जामपल्स वेक्टर से, सारे जीरो होने के बजाय?" कितने दूर हैं, कितने दूर हैं औसतन मेरे ट्रेनिंग एग्जामपल्स ओरिजिन से? जब हम कोशिश कर रहे हैं चुनने के लिए के, आम अनुभवसिद्ध ढंग है के का चयन करने के लिए कि लें छोटी वैल्यूज़ ताकि रेशो इनके बीच में 0.01 से कम हो. अत: दूसरे शब्दों में, एक काफ़ी कॉमन / सामान्य तरीक़ा सोचने का कि कैसे चुने के है हमें चाहिए एवरेज स्क़ुएर्ड प्रोजेक्शन एरर. वह है ऐव्रिज / औसत दूरी एक्स और उसके प्रजेक्शनज़ के बीच जिसे विभाजित करते हैं डेटा के टोटल वेरिएशन से. वह है कि डेटा कितना वेरी करता है. हम चाहते हैं इस रेशो को कम, मान लीजिए, 0.01 से. या कम 1% से, जो एक और ढंग है सोचने का इसके बारे में. और जिस तरह बहुत से लोग सोचते हैं के का चयन करने के लिए है बजाय लेने से के सीधे ही जैसे बहुत से लोग कहते हैं इसके बारे में वह है कि क्या है यह संख्या, चाहे वह है 0.01 या कोई और नम्बर. और यदि यह है 0.01,  और तरीक़ा इसको कहने का है इस्तेमाल करते हुए पीसीए की भाषा कि 99% वेरीयन्स रिटेनड / बचा है. मैं वास्तव में नहीं चाहता, मत करें चिंता कि इस फ़्रेज़ का असली में मतलब क्या है टेक्निक्ली लेकिन यह फ़्रेज़ "99% अव वेरीयन्स इज़ रिटेंड" का अर्थ है कि यह मात्रा बाईं तरफ़ है 0.01 से कम. और इसलिए, याद आप इस्तेमाल कर रहे हैं पीसीए और यदि आप चाहते हैं किसी को बताना, आप जानते हैं, कि कितने प्रिन्सिपल कम्पोनेंट्स आपने रखें है यह होगा अधिक सामान्य/ कॉमन कहना कि, मैंने लिया है के ऐसे ताकि 99% वेरीयन्स वॉज़ रिटेंड / रखा था. और वह है एक लाभदायक जानकारी, इसका अर्थ है आप जानते हैं, एवरेज स्क़ुएर्ड प्रोजेक्शन एरर विभाजित की गई टोटल वेरीएशन से जो अधिक से अधिक 1% थी. और वह है एक सोचने की बात, जबकि यदि आप किसी को बताते हैं कि, " अरे, मैंने लिए 100 प्रिन्सिपल कम्पोनेंट्स" या "के था बराबर 100 के एक हज़ार डिमेन्शनल डेटा में" यह थोड़ा कठिन होता है लोगों को समझना उसे. तो यह संख्या 0.01 है जो लोग अक्सर प्रयोग करते हैं. दूसरी कॉमन वैल्यू होगी 0.05, और इसलिए यह होगी 5%. और यदि आप यह करते हैं तब आप जाएँ और कहें कि 95% वेरीयन्स इज़ रिटेंड और, आप जानते हैं दूसरे नम्बर्ज़ शायद 90% वेरीयन्स इज़ रिटेंड, शायद इतना कम जैसे 85%. अत: 90% कॉरेस्पॉंड करेगा 0.10 को, एक प्रकार से 10%. और इसलिए रेंज वैल्यूज़ की है आप जानते हैं, 90, 95, 99, शायद इतना कम जैसे 85% रिटेंड यह होगी एक काफ़ी साधारण रेंज वैल्यूज़ की. शायद 95 से 99 तक वास्तव में सबसे अधिक कॉमन रेंज हैं वैल्यूज़ की जो लोग प्रयोग करते हैं. अनेक डेटा सेट्स के लिए आपको आश्चर्य होगा, रिटेन करने के लिए 99% वेरीयन्स, आप कर सकते हैं अक्सर कम डिमेन्शंज़ डेटा की काफ़ी ज़्यादा और फिर भी रिटेन कर सकते हैं अधिकतम वेरीयन्स. क्योंकि बहुत से रियल लाइफ़ डेटा में  कई फ़ीचर्ज़ होते हैं केवल अत्यधिक कोरिलेटिड, और इसलिए इसलिए सम्भव हो पाता है कम्प्रेस करना डेटा को अधिक और साथ ही  रिटेन कर सकते हैं आप जानते हैं 99% वेरीयन्स या 95% वेरीयन्स. अत: कैसे करते हैं आप इसे इम्प्लमेंट? यह है एक अल्गोरिद्म जो शायद आप ले सकते हैं. आप शुरू कर सकते हैं, यदि आप चयन करना चाहते हैं वैल्यू के की, हम शायद शुरू कर सकते हैं के बराबर 1 के साथ. और तब हम रन करते हैं पीसीए. आप जानते हैं, अत: हम कम्प्यूट करते हैं, आप कम करते हैं, आप कम्प्यूट करते हैं ज़ी 1, ज़ी 2, ज़ी एम तक. कम्प्यूटर करें वे सब एक्स 1 एपरोक़्स और आगे एक्स एम एपरोक्स तक और तब हम चैक करते हैं कि क्या 99% वेरीयन्स रिटेन हुआ है. तब हमारा काम हो गया और हम लेते हैं के बराबर है 1. लेकिन यदि ऐसा नहीं है क्या करेंगे इसके बाद कि देखेंगे के बराबर है 2 को. और तब हम एक बार फिर से रन करेंगे यह पूरी प्रक्रिया और देखेंगे, आप जानते हैं कि क्या यह इक्स्प्रेशन सैटिस्फ़ाई हुआ? क्या यह कम है 0.01 से. और यदि नहीं तो हम करते हैं दोबारा से इसे. चलिए लेते हैं के बराबर 3, फिर लेते हैं के बराबर 4, और इसी प्रकार तब तक जब तक शायद हम पहुँच नहीं जाते के बराबर 17 और हमें मिलता है 99% वेरीयन्स रिटेंड और तब हम ले लेंगे के बराबर 17, सही है? यह एक ढंग है चयन करने का न्यूनतम वैल्यू के की, ताकि 99% वेरीयन्स रिटेन हो. लेकिन जैसा कि आप देख सकते हैं, यह प्रक्रिया काफ़ी इनएफ़िशिएँट  है. हम लेते हैं के बराबर एक, के बराबर दो,हम कर रहे हैं ये सब कैल्क्युलेशंज़. सौभाग्य से, जब आप इम्प्लमेंट करते हैं पीसीए यह वास्तव में, इस स्टेप में, यह वास्तव में हमें देता है एक संख्या जो इसे बनाती है काफ़ी सरल इन सब को कम्प्यूट करना भी. ख़ासतौर पर जब आप कॉल कर रहे हैं एसवीडी बनाने के लिए ये मेट्रिसीज़ यू, एस, और डी, जब आप कॉल कर रहे हैं यूएसवीडी कोवेरीयन्स मेट्रिक्स सिग्मा पर, यह हमें देता है पलट कर यह मेट्रिक्स एस भी और क्या है एस, यह होगी एक स्क्वेर मेट्रिक्स एक एन बाई एन मेट्रिक्स वैसे वह है डाइऐगनल. अत: हैं डाइऐगनल एंट्रीज़ एस वन वन, एस टू टू, एस थ्री थ्री आगे नीचे एस एन एन तक होंगी केवल वे ही नॉन-ज़ीरो एलेमेंट्स इस मेट्रिक्स के, और बाक़ी सब अलग डाइऐगनल से होंगे ज़ीरो. ठीक है? तो वे बड़े ओ जो मैं बना रहा हूँ, उससे मेरा मतलब है कि सब कुछ ऑफ़ डाइऐगनल इस मेट्रिक्स में सारी वे एंट्रीज़ वहाँ होंगी ज़ीरोज़. और इसलिए, क्या सम्भव है दिखाना, और मैं प्रूव नहीं करूँगा इसे यहाँ, और ऐसा होता है कि एक दी हुई के की वैल्यू के लिए, यह संख्या यहाँ पर कम्प्यूट की जा सकती है बहुत कुछ सरल ढंग से. और वह संख्या कम्प्यूट कर सकते हैं वन माइनस सम आइ 1 से के सब एस आई आई का विभाजित द्वारा सम आइ बराबर 1 से एन तक एस आइ आइ का. अत: यही शब्दों में कहेंगे, या सिर्फ़ लेने के एक दूसरा व्यू कि कैसे समझना है उसे, यदि के बराबर है 3 मान लीजिए. क्या करेंगे हम कम्प्यूट करने के लिए नूमरेटर कि सम करेंगे एक से - आइ ईक्वल्ज़ 1 से 3 तक एस आई आई का, तो सिर्फ़ कीजिए कम्प्यूट सम इन पहले तीन एलेमेंट्स का. तो यह है नूमरेटर. और फिर डिनॉमिनेटर के लिए, वह है सम इन सब डाइऐगनल एंट्रीज़ का. और वन माइनस रेशो उसकी, वह देता है मुझे यह राशि यहाँ पर, जो मैंने सर्कल की है नीले से. और इसलिए, हम क्या कर सकते हैं कि सिर्फ़ टेस्ट करें कि क्या यह कम है या बराबर है 0.01 के. या इस के समान, हम टेस्ट कर सकते हैं यदि सम आइ ईक्वल 1 से के तक, एस आई आई डिवाइडेड बाई सम आई ईक्वल्ज़ 1 से एन तक, एस आइ आइ यदि यह बड़ा है या बराबर है 0.99, यदि आप सुनिश्चित करना चाहते हैं कि 99% वेरीयन्स रिटेन हुआ है. और इसलिए, आप क्या कर सकते हैं कि धीरे-धीरे बढ़ाएँ के, सेट करें के ईक्वल्ज़ एक, सेट करें के ईक्वल्ज़ दो, सेट करें के ईक्वल्ज़ तीन और इसी प्रकार आगे, और सिर्फ़ टेस्ट करें यह राशि देखने के लिए कि क्या है न्यतम वैल्यू के की जिससे यह सुनिश्चित होता है कि 99% वेरीयन्स रिटेन हुआ है. और यदि आप करते हैं इसे, तब आपको कॉल करना पड़ेगा एसवीडी फ़ंक्शन केवल एक बार. क्योंकि इससे आपको मिलता है एस मेट्रिक्स और एक बार आपको मिल गया एस मेट्रिक्स, आप तब करते रह सकते हैं यह कैल्क्युलेशन बढ़ाते हुए के की वैल्यू नूमरेटर में और इसलिए आपको नहीं है आवश्यकता बुलाने की एसवीडी को बार-बार टेस्ट करने के लिए के की अलग अलग वैल्यूज़. तो यह प्रक्रिया काफ़ी अधिक एफ़िशियींट है, और यह आपको चुनाव करने देती है के की वैल्यू बिना रन किए पीसीए शुरुआत से बार-बार. आप रन करते हैं एसवीडी  केवल एक बार, यह देता है अपको ये सब डाइऐगनल नम्बर्ज़, सारे ये नम्बर्ज़ एस 11, एस 22 नीचे एस एन एन तक, और तब आप कर सकते हैं केवल, आप जानते हैं, वेरी के इस इक्स्प्रेशन मैं जानने के लिए न्यूनतम वैल्यू के की, ताकि 99% वेरीयन्स रिटेन हो. अत: सारांश में, जिस तरह मैं अक्सर प्रयोग करता हूँ, जिस तरह मैं अक्सर चुनाव करता हूँ के का जब मैं इस्तेमाल कर रहा हूँ पीसीए कम्प्रेशन के लिए वह है कि मैं कॉल करूँगा एसवीडी एक बार कोवेरीयन्स मेट्रिक्स में, और तब मैं इस्तेमाल करूँगा यह फ़ॉर्म्युला और लूँगा न्यूनतम वैल्यू के की जिससे यह इक्स्प्रेशन सैटिस्फ़ाई हुआ. और वैसे तो, यदि आपको करना भी होता चुनाव एक अलग वैल्यू का के की, यदि आपको करना भी होता चुनाव के की वैल्यू का स्वयं, आप जानते है शायद आपके पास है एक हज़ार डिमेन्शनल / आयामों वाला डेटा और मैं सिर्फ़ लेना चाहता हूँ के ईक्वल एक सौ के. तब, यदि आप समझाना चाहते हैं दूसरों को जो आपने अभी किया, एक अच्छा ढंग समझाने का पर्फ़ॉर्मन्स आपके पीसीए इम्प्लमेंटेशन की उनको, है वास्तव में लेना इस राशि को और कम्प्यूट करना क्या है यह, और वह बताएगा आपको कि कितने प्रतिशत वेरीयन्स रिटेन हुआ. और यदि आप वह नम्बर रिपोर्ट करते हैं, तब, आप जानते है, लोग जो परिचित हैं पीसीए से, और लोग कर सकते इसका प्रयोग पाने के लिए एक अच्छी समझ कि कितना बेहतर आपका सौ डिमेन्शनल / आयामों वाला रेप्रेज़ेंटेशन अप्रॉक्सिमट करता /  निकट पहुँचता है आपके मूल डेटा सेट के, क्योंकि वहाँ 99% वेरीयन्स रिटेन हुआ है. वह वास्तव में एक माप है आपकी स्क्वेर ऑफ़ कन्स्ट्रक्शन एरर का,  वह रेशो के 0.01 होने से, केवल देता है लोगों को एक बढ़िया अनुभव समझ कि क्या आपकी इम्प्लमेंटेशन पीसीए की ढूंढ पा रही है अच्छी अप्रॉक्सिमेशन आपके मूल डेटा की. आशा है, इससे आपको मिलती है एक एफ़िशिएँट विधि चुनाव करने की संख्या के. चुनाव करने के लिए कितनी डिमेन्शन / आयाम तक कम करना है आपका डेटा, और यदि आप अप्लाई करते हैं पीसीए बहुत हाई डिमेन्शनल डेटा सेट्स को, आप जानते है, जैसे एक हज़ार डिमेन्शनल / आयामों वाला डेटा, बहुधा केवल इसलिए कि डेटा सेट्स में प्रवृति होती है होने की अत्यधिक कोरिलेटिड फ़ीचर्ज़ की, यह है केवल एक प्रॉपर्टी / गुण लगभग सभी डेटा सेट्स की जो आप देखते हैं, आपको अक्सर मिलेगा कि पीसीए रिटेन कर पाएगा निनयान्वे प्रतिशत वेरीयन्स या मान लीजिए, पिचायनवे निनयान्वे, कुछ बड़ा अंश वेरीयन्स का, जब वह कम्प्रेस भी कर रहा है डेटा को एक बहुत बड़े फ़ैक्टर से.