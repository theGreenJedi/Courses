पहले के एक वीडियो मे मैने कहा था कि पीसीए का कभी कभी उपयोग किया जा सकता है एक लर्निंग एल्गोरिथ्म / विधि के रनिंग  समय को स्पीड अप करने के लिए॰ इस वीडियो में, मैं बताना चाहूँगा कि ऐसा वास्तव मे कैसे करते है, और साथ ही साथ प्रयास करूंगा देने की कुछ सलाह कि पीसीए कैसे इस्तेमाल करे तो यह है कि कैसे आप पीसीए का उपयोग कर सकते हैं एक लर्निंग विधि को स्पीड अप / तेज़ करने के लिए, और यह सूपरवाइज़्ड लर्निंग एल्गोरिथ्म को तेज़ बनाना वास्तव में है इसका सबसे आम इस्तेमाल जो मैं व्यक्तिगत तौर पर करता हूँ पीसीए का॰ मान लीजिए कि आपके पास है एक सूपरवाइज़्ड लर्निंग प्रॉबलम, ध्यान रहे कि कि यह एक सूपरवाइज़्ड लर्निंग प्रॉबलम जिसके इनपुट्स एक्स और लेबल्ज़ वाई, और मान लेते हैं कि आपके उदाहरण एक्स आई बहुत हाई डाईमेन्शनल / आयाम बहुत बड़ा है॰ और मान लेते हैं कि आपके उदाहरण मे एक्स आई हैं 10000 डाईमेन्शनल फीचर वेक्टरज़॰ इसका एक उदाहरण यह होगा, जब आप किसी कंप्यूटर विजन प्रॉबलम, जहाँ आप एक 100*100 इमेजीज इस्तेमाल कर रहे होंगे, तो अगर आप के पास है एक 100*100, मतलब कि 10000 पिक्सेल्ज़, तो अगर एक्स आई हैं, आप जानते हैं, फीचर वेक्टर्ज जिनमें हैं आपके 10000 पिक्सेल् ईंटेंसिटी वेलयूज, तो आपके पास हैं 10000 आयाम के फीचर वेक्टरज़॰ तो बहुत बड़े आयाम फीचर वेक्टरज़ इस तरह के साथ, लर्निंग एल्गोरिथ्म रन करने की रफ़्तार कम हो सकती है, सही? अगर आप फीड करते हैं 10000 आयाम के फीचर वेक्टर लजिस्टिक रिग्रेशन मे, या एक नये नेटवर्क मे, या सपोर्ट वेक्टर मशीन मे, या जो भी आपके पास हो, केवल इसलिए कि यह बहुत ज़्यादा डाटा है, वह है 10000 नंबर्ज, यह आपकी लर्निंग एल्गोरिथ्म को बहुत धीमा कर सकता है॰ सौभाग्य से, पीसीए के साथ हम कर पाएंगे आँकड़ो के आयाम को कम करना इस डाटा के और करना हमारी एल्गोरिथ्म्ज़ को रन अधिक सक्षमता से॰ ऐसा आप इस तरह से  कर सकते हैं॰ हम पहले जाँच करेंगे अपने लेबल्ड ट्रेनिंग सेट की और एक्स्ट्ररेक्ट करेंगे केवल इनपुट्स, अभी हम सिर्फ़ X को एक्स्ट्ररेक्ट करेंगे और Y को अस्थाई रूप से छोड़ेंगे इससे हमे मिल जाएगा एक अनलेबल्ड ट्रेनिंग सेट x1 से xm  जो कि यह डाटा दस हज़ार आयाम का है, हमारे पास दस हज़ार आयाम के एग्जम्पल्स हैं॰ तो केवल इनपुट वेकटर्स को अलग करें x1 से xm तक॰ उसके बाद हम पीसीए का उपयोग करेंगे और यह मुझे देगा एक कम आयाम का प्रतिरूप, डाटा का, तो बजाए 10000 के फीचर वेक्टर के अब हमारे पास शायद 1000 आयाम के फीचर वेक्टर होंगे॰ तो मतलब कि 10x की बचत॰ अगर आप ऐसा करेंगे तो यह एक नया ट्रैनिंग सेट देगा॰ तो जहाँ पहले हमारे पास x1, y1 का उदाहरण था मेरा पहला ट्रेनिंग इनपुट, अब z1 से रेप्रेज़ेंटेड है॰ और इस तरह से हमारे पास होंगे नये तरह के ट्रेनिंग के उदाहरण, जैसे कि z1 का y1 के साथ पेयर॰ और इसी तरह z2,  y2 का, और क्रमश: zm, ym तक॰ पर चूँकि अब मेरे ट्रेनिंग के उदाहरण अब इस तरह से रेप्रेज़ेंट हो रहे हैं बहुत कम आयाम के द्वारा z1, z2....zm तक॰ अंततः मैं ले सकता हूँ इन घटे हुए आयाम के ट्रेनिंग सेट को और इन्हे डाल सकता हूँ एक लर्निंग अल्गोरिथम जैसे कि न्यूरल नेटवर्क, या लजिस्टिक रिग्रेशन, और मैं बना सकता हूँ एक ऐसी ह्य्पोथेसिस H, जोकि यह इनपुट लेती है, इन कम आयाम के Z रेप्रिस्न्टेशन का, और प्रेडिक्शॅन करने का प्रयास करती है॰ अगर मैं इस्तेमाल कर रहा होता लजिस्टिक रिग्रेशन उदाहरण के लिए मान लीजिए, तो मैं एक ऐसी ह्य्पोथेसिस ट्रेन करता /  बनाता जिसका आउटपुट होता, आप जानते हैं, एक बटा एक प्लस e की घात माइनस-थेटा ट्रॅनस्पोज़ Z, जो कि इनपुट लेता इनमे से एक z वेक्टर को, और प्रेडिक्शॅन करने का प्रयास करता॰ और फाइनली, अगर आपके पास है है एक नया उदाहरण, जैसे कि नया टेस्ट एग्ज़ॅंपल X, तो आप क्या करते कि आप लेते टेस्ट एग्ज़ॅंपल x, उसे मैप करते इसी मॅपिंग के द्वारा जो कि पीसीए द्वारा बनाई गयी है उसका करेस्पॉंडिंग z प्राप्त करने के लिये॰ और उस z को फिर देते इस ह्य्पोथेसि मे, और यह ह्य्पोथेसिस फिर करती है आपके इनपुट x के बारे मे प्रेडिक्शॅन॰ एक आख़िरी बात, पीसीए ये करता है कि यह मैपिंग डिफाइन करता है x से z की और ये मैपिंग x से z की  निर्धारित की जानी चाहिए रन करके पीसीए को केवल ट्रेनिंग सेटों पर॰ और विशेष रूप से, यह मैपिंग जो पीसीए सीख रहा है, बिल्कुल यही मैपिंग, यह ये करती है कि पैरामीटरज़ के सेट को कम्प्यूट करती है॰ यह फीचर स्केलिंग और मीन नॉर्मालिज़ेशन है॰ और साथ मे इस मेट्रिक्स U reduced को भी कॅल्क्युलेट करना है पर ये सारी चीज़े जो U reduce, वह है जैसे एक पैरामीटर की तरह है जो सीखी हैं पीसीए ने और हमे चाहिए कि फिट करें अपने पैरामीटरज़ को केवल अपने उसी ट्रेनिंग सेट के लिए न कि अपनी क्रॉस वेलीडेशन के लिए या टेस्ट सेटस के लिए और तो ये चीज़ें U reduced आदि, करना चाहिए प्राप्त पीसीए को केवल ट्रेनिंग सेट पर चला कर॰ और तब U reduced मिल जाने पर, या वो पैरामीटरज़ मिल जाने पर जो फीचर स्केलिंग के लिए चाहिए, जहाँ मीन नॉर्मालिज़ेशन और स्केल का पुन: मापन जो कि फीचर को बाँटता है उन्हे तुलनात्मक स्केल पर लाकर॰ और वे सारे पैरामीटर मिल जाने पर उस ट्रेनिंग सेट पर, आप कर सकते हो लागू उसके बाद उसी मैपिंग का उपयोग दूसरे उदाहरणों पर भी शायद अपनी क्रॉस वेलीडेशन सेटस या अपनी टेस्ट सेट के लिए, समझ गये न ? सारांश के लिए, जब भी आप पीसीए को रन करो, उपयोग उस पीसीए का करो केवल ट्रेनिंग सेट वाले भाग पर चला कर करो न कि अपने डाटा के क्रॉस वेलीडेशन / तिर्यक जांच सेट पर या डेटा के टेस्ट सेट वाले भाग पर॰ और यह डिफाइन करता है मैपिंग x से z की और तुम कर सकते हो उसी मैपिंग का उपयोग अपनी तिर्यक जांच सेट के लिए या अपनी टेस्ट सेट आदि के लिए और मैने इस उदाहरण मे बताया है डाटा को कम करने के लिए दस हज़ार के आयाम से एक हज़ार के आयाम तक, वास्तव मे यह उतना काल्पनिक नहीं है. बहुत सी प्राब्लम्ज़ के लिए हम वास्तव में कम करते हैं डिमेन्शंज़ डेटा की. आप जानते हैं, 5x शायद 10x से फिर भी क़ायम रख सकते हैं अधिकांश वेरीयन्स और हम यह कर सकते हैं केवल नाम मात्र को प्रभावित करते हुए पर्फ़ॉर्मन्स, क्लैसिफ़िकेशन एक्यूरेसी की टर्म्ज़ में, मान लो, केवल नाम मात्र को प्रभावित करते हुए क्लैसिफ़िकेशन एक्यूरेसी लर्निंग अल्गोरिद्म की. और काम करने से कम डिमेन्शंज़ के डेटा के साथ हमारा लर्निंग अल्गोरिद्म अक्सर रन कर सकता है ज़्यादा तीव्रता से. सारांश में, हमने अभी तक बात की है पीसीए की निम्न ऐप्लिकेशन के बारे में. पहली है कम्प्रेशन ऐप्लिकेशन जहाँ हम शायद वह करते हैं कम करने के लिए मेमरी या डिस्क स्पेस जो आवश्यक है डेटा को स्टोर करने के लिए और हमने अभी बात की कि कैसे इस्तेमाल करते हैं इसे तेज़ करने के लिए एक लर्निंग अल्गोरिद्म को. इन ऐप्लिकेशन्स में, करने के लिए चुनाव K का, अक्सर हम करेंगे वह समझ कर कितना प्रतिशत वेरीयन्स का रखना है के अनुसार, और इसलिए इस लर्निंग अल्गोरिद्म के लिए, स्पीड अप ऐप्लिकेशन अक्सर रखेगी 99% वेरीयन्स. वह होगा एक काफ़ी आम विकल्प कि कैसे चुनना है K. अत: वह है कि कैसे आप चुनेंगे K इन कम्प्रेशन ऐप्लिकेशन्स के लिए. जबकि विज़ूअलाइज़ेशन ऐप्लिकेशन के लिए यद्यपि अक्सर हम जानते हैं कैसे प्लॉट करना है केवल दो डिमेन्शनल डेटा या तीन डिमेन्शनल डेटा, और इसलिए विज़ूअलाइज़ेशन ऐप्लिकेशन के लिए, हम करेंगे चुनाव अक्सर K बराबर 2 या K बराबर 3, क्योंकि हम कर सकते हैं प्लॉट केवल 2डी और 3डी डेटा सेट्स. तो वह प्रस्तुत करता है सार मुख्य ऐप्लिकेशन्स पीसीए का, तथा कैसे चुनना है वैल्यू K की इन विभिन्न ऐप्लिकेशन्स के लिए. मुझे उल्लेख करना चाहिए कि प्रायः एक अधिकतर होने वाला ग़लत प्रयोग पीसीए का और आप कभी-कभी सुनते हैं दूसरों को इसे करते हुए आशा है अधिक बार नहीं. मैं सिर्फ़ ज़िक्र करना चाहता हूँ इसे ताकि आप जान लें कि इसे नहीं करना है. और वहाँ है एक ग़लत उपयोग पीसीए का, जो है इसे इस्तेमाल करने का प्रयास करना बचाने के लिए ओवर-फ़िटिंग. यहाँ है विचार. यह नहीं है एक बढ़िया ढंग पीसीए के इस्तेमाल का, लेकिन यहाँ है विचार पीछे इस मेथड के, जो है, आप जानते हैं यदि हमारे पास है एक्स आइ, तब शायद हमारे पास होंगे एन फ़ीचर्ज़, लेकिन यदि हम कम्प्रेस करते हैं डेटा को, और इस्तेमाल करते हैं ज़ी आइ इसके स्थान पर और वह कम करता है संख्या फ़ीचर्ज़ की K तक, जो हो सकता है काफ़ी कम डिमेन्शनल. और इसलिए यदि हमारे पास है एक काफ़ी छोटी संख्या फ़ीचर्ज़ की, यदि K है 1,000 और एन है 10,000, तब यदि हमारे पास हैं केवल 1,000 डिमेन्शनल डेटा, शायद हमारी ओवर-फ़िट करने की सम्भावना कम है तुलना में यदि हम लेते 10,000 डिमेन्शनल डेटा एक दस हज़ार फ़ीचर्ज़ के साथ. अत: कुछ लोग सोचते हैं पीसीए को एक तरीक़े की तरह बचाने के लिए ओवर-फ़िटिंग. लेकिन केवल ज़ोर देनें के लिए यह है एक ग़लत ऐप्लिकेशन पीसीए की और मैं स्वीकृति नहीं देता इसे करने की. और ऐसा नहीं है यह विधि काम बुरे ढंग से करती हैं. अगर आप इतेमाल करना चाहते हैं इस विधि को कम करने के लिए डिमेन्शंज़ डेटा, प्रयास करते हुए ओवर-फ़िटिंग बचाने का, यह शायद सही काम करे. लेकिन यह बिल्कुल नहीं है एक अच्छा ढंग सम्बोधित करने का ओवर-फ़िटिंग और इसके स्थान पर, यदि आप चिंतित हैं ओवर-फ़िटिंग के लिए, है एक अधिक बेहतर ढंग सम्बोधित करने का इसे, इस्तेमाल करें रेग्युलराइज़ेशन बजाय इस्तेमाल करने के पीसीए कम करने के लिए डिमेन्शन्स डेटा की. और कारण है, यदि आप सोचें कि कैसे पीसीए काम करता है, यह इस्तेमाल नहीं करता लेबल्ज़ वाय का. आप सिर्फ़ देख रहे हैं आपकी इन्पुट्स एक्स आइ पर, और आप कर रहे हैं इस्तेमाल उसका ढूँढने के लिए एक कम डिमेन्शन्स का लगभग सही अनुमान आपके डेटा के लिए. तो पीसीए क्या करता है, यह कुछ इन्फ़र्मेशन को छोड़ देता है. यह छोड़ देता है या कम करता है डिमेन्शन्स आपके डेटा की बिना जाने क्या वैल्यूज़ वाय की हैं, अत: यह शायद है इस्तेमाल करना पीसीए का इस तरह से शायद सही है यदि, मान लो 99 प्रतिशत वेरीयन्स रखा जा सकता है, यदि आप रख रहे हैं अधिकांश वेरीयन्स, लेकिन यह शायद निकाल फेंके कुछ मूल्यवान जानकारी भी. और ऐसा हुआ कि यदि आप रख रहे हैं 99% वेरीयन्स का या 95% वेरीयन्स या ऐसा कुछ, ऐसा है कि सिर्फ़ इस्तेमाल करने से रेग्युलराइज़ेशन अक्सर देगा आपको कम से कम उतनी अच्छी विधि बचाने के लिए ओवर-फ़िटिंग और रेग्युलराइज़ेशन अक्सर बेहतर काम करेगा, क्योंकि जब आप अप्लाई कर रहे हैं लिनीअर रेग्रेशन या लजिस्टिक रेग्रेशन या कोई और विधि रेग्युलराइज़ेशन के साथ, अच्छा, यह मिनीमाईज़ेशन की समस्या वास्तव में जानती है क्या हैं वैल्यूज़ वाय की, और इसलिए कम संभावना है फेंक देने की कुछ मूल्यवान जानकारी की, जबकि पीसीए नहीं करता इस्तेमाल लेबल्ज़ का और है अधिक सम्भावित निकाल फेंकने के लिए मूल्यवान जानकारी. अत: सारांश में, यह है एक अच्छा इस्तेमाल पीसीए का, यदि आपका मुख्य उद्देश्य है तीव्र करना आपका लर्निंग अल्गोरिद्म, लेकिन इस्तेमाल करके पीसीए बचाने के लिए ओवर-फ़िटिंग, वह नहीं है एक अच्छा इस्तेमाल पीसीए का, और इस्तेमाल करना रेग्युलराइज़ेशन बजाय इसके है वास्तव में जो बहुत लोग रेकमेंड करते हैं करना. अंत में एक आख़िरी ग़लत इस्तेमाल पीसीए का. और इसलिए मुझे कहना चाहिए कि पीसीए एक बहुत उपयोगी अल्गोरिद्म है, मैं अक्सर प्रयोग करता हूँ इसे कम्प्रेशन के लिए विज़ूअलाईज़ेशन के उद्देश्य से. लेकिन मैं कभी-कभी क्या देखता हूँ, कि लोग कभी-कभी प्रयोग करते हैं जहाँ नहीं करना चाहिए. तो, यहाँ है काफ़ी कॉमन / सामान्य चीज़ जो मैं देखता हूँ, जो है यदि कोई डिज़ाइन कर रहा है एक मशीन-लर्निंग सिस्टम, वे शायद लिखें प्लान इस तरह से: चलो डिज़ाइन करते हैं एक लर्निंग सिस्टम. लेते हैं एक ट्रेनिंग सेट और तब, आप जानते हैं, मैं क्या करूँगा कि रन करेंगे पीसीए, फिर ट्रेन करेंगे लजिस्टिक रेग्रेशन और टेस्ट करेंगे मेरे टेस्ट डेटा पर. अत: अक्सर बहुत शुरुआत में एक प्रोजेक्ट की, कोई लिखेगा एक प्रोजेक्ट प्लान जो बताएगा कि चलो करो ये चार स्टेप्स पीसीए के साथ जो अंदर है॰ लिखने से पहले एक प्रोजेक्ट प्लान जो शामिल करता है पीसीए इस तरह, एक बहुत बढ़िया प्रश्न जो पूछना चाहिए है, अच्छा, क्या होगा यदि हम करते सिर्फ़ यह पूरा काम बिना इस्तेमाल करे पीसीए. और अक्सर लोग नहीं ग़ौर नहीं करते इस स्टेप पर पहले बनाने से एक जटिल प्रोजेक्ट प्लान और पीसीए इम्प्लमेंट करने से पहले इत्यादि. और कभी-कभी, और इसलिए ख़ासतौर पर, मैं अक्सर लोगों को क्या परामर्श देता हूँ कि, इम्प्लमेंट करने से पहले पीसीए, मैं पहले सुझाव दूँगा कि, आप जानते हैं, करें जो भी आपको करना है, लें जो भी वह है जो आप करना चाहते हैं और पहले ग़ौर करें इसे करने के लिए आपके आरम्भिक रॉ डेटा एक्स आइ पर, और केवल तब यदि वह नहीं करता है जो आप चाहते हैं, तब इम्प्लमेंट करें पीसीए ज़ी आइ इस्तेमाल करने से पहले. अत: पीसीए इस्तेमाल करने से पहले, आप जानते हैं, बजाय कम करने के डिमेन्शन्स डेटा की, मैं ग़ौर करूँगा अच्छा, चलिए छोड़ देते हैं यह पीसीए स्टेप, और मैं ग़ौर करूँगा, चलो सिर्फ़ ट्रेन करते हैं मेरे लर्निंग अल्गोरिद्म को मेरे मूल डेटा पर. चलो इस्तेमाल करते हैं सिर्फ़ मेरा मूल अपरिपक्व इन्पुट्स एक्स आइ, और मैं रेकमेंड करूँगा, बजाय रखने के पीसीए अल्गोरिद्म में, सिर्फ़ प्रयास करें जो भी आप कर रहे हैं पहले एक्स आइ साथ करने के लिए. और सिर्फ़ तब जब यदि आपके पास है एक कारण विश्वास करने का कि उसने नहीं किया, ताकि सिर्फ़ तब जब आपका लर्निंग अल्गोरिद्म हो जाता काफ़ी रन करता है, या केवल यदि मेमरी की अवश्यकता या डिस्क स्पेस की आवश्यकता काफ़ी अधिक है, अत: आप कम्प्रेस करना चाहते हैं आपका रेप्रेज़ेंटेशन, लेकिन यदि केवल इस्तेमाल करने से एक्स आइ कम नहीं होता है, केवल तब जब आपके पास प्रमाण है या मज़बूत कारण हैं विश्वास करने के कि इस्तेमाल करने से एक्स आइ कम नहीं होगा, तब इम्प्लमेंट करें पीसीए और ग़ौर करें इस्तेमाल करना कम्प्रेस्ड इम्प्लमेंटेशन. क्योंकि मैं जो अवश्य देखता हूँ, है कि कभी कभी लोग शुरुआत करते हैं एक प्रोजेक्ट प्लान से जिसमें शामिल होता है पीसीए और कभी कभी वे, जो भी वे कर रहे हैं काम करेगा सिर्फ़ सही, बिना पीसीए इस्तेमाल किए भी. तो, सिर्फ़ सोचें उसे एक विकल्प की तरह भी, इससे पहले कि आप व्यतीत करें काफ़ी समय करने के लिए पीसीए, समझने के लिए कि क्या है K इत्यादि. तो, इतना ही पीसीए के लिए. बावजूद इन आख़िरी सेट कामेंट्स के, पीसीए है एक अविश्वसनीय रूप से उपयोगी अल्गोरिद्म, जब आप इस्तेमाल करते हैं इसे उचित ऐप्लिकेशन के लिए और मैंने वास्तव में इस्तेमाल किया है पीसीए काफ़ी बार और मेरे लिए, मैं इस्तेमाल करता हूँ इसे अधिकतर तीव्र करने के लिए रनिंग टाइम मेरे लर्निंग अल्गोरिद्म्स का. लेकिन मैं सोचता हूँ, केवल एक आम ऐप्लिकेशन पीसीए की, है इस्तेमाल करना इसे कम्प्रेस करने के लिए डेटा को, कम करने के लिए मेमरी या डिस्क स्पेस आवश्यकताएँ, या इस्तेमाल करना इसे विज़ूअलाइज करने के लिए डेटा को. और पीसीए है एक सबसे ज़्यादा आम तौर पर इस्तेमाल किया जाने वाला और एक सबसे अधिक प्रभावशाली अनसूपर्वायज़्ड लर्निंग अल्गोरिद्म. और जो सीखा है आपने इन विडीओज़ में, मैं सोचता हूँ आशा है आप कर पाएँगे इम्प्लमेंट पीसीए और इस्तेमाल कर पाएँगे उसे इन सब उद्देश्यों के लिए भी.