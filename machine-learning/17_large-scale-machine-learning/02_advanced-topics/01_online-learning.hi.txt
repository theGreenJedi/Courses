इस वीडियो में, मैं बात करना चाहूँगा एक नई लार्ज-स्केल मशीन लर्निंग सेट्टिंग की जिसे कहते है ऑनलाइन लर्निंग सेट्टिंग. ऑनलाइन लर्निंग सेट्टिंग हमें मॉडल करने देता है समस्याएँ जहाँ हमारे पास है एक निरंतर आने वाली बाढ़ या एक लगातार / कंटिन्यूअस स्ट्रीम डेटा की आते हुए और हम चाहेंगे एक अल्गोरिद्म उससे लर्न करने के लिए. आजकल, बहुत सी बड़ी वेब साइट्स, या बहुत सी बड़ी वेब साइट कम्पनीज़ प्रयोग करती हैं विभिन्न वर्ज़न्स ऑनलाइन लर्निंग अल्गोरिद्म्स के लर्न करने के लिए उन यूज़र्ज़ की बाढ़ से जो आते रहते हैं, वापिस वेब साइट पर. विशेषत:, यदि आपके पास है एक लगातार / कंटिन्यूअस स्ट्रीम डेटा की जो उत्पन्न की गई है एक लगातार प्रवाह यूज़र्ज़ के द्वारा जो आते हैं आपकी वेब साइट पर, आप क्या कर सकते हैं कि कभी कभी इस्तेमाल करें एक ऑनलाइन लर्निंग अल्गोरिद्म लर्न करने के लिए यूज़र की प्राथमिकताएँ / प्रेफ्रेंसिज डेटा के प्रवाह से और इस्तेमाल करें उसे ऑप्टिमायज़ करने के लिए कुछ निर्णय आपकी वेब साइट पर. मान लीजिए आप रन करते हैं एक शिपिंग सर्विस, तो, आप जानते हैं, यूज़र्ज़ आते है और पूछते हैं आपको सहायता के लिए शिप करने में उनके पार्सल स्थान ए से स्थान बी तक और मान लो आप रन करते हैं एक वेब साइट, जहाँ यूज़र्ज़ बार बार आते हैं और वे बताते हैं आपको कहाँ से वे चाहते हैं भेजना उनका पार्सल, और कहाँ वे चाहते हैं इसे भेजना (अत: आरम्भ और गंतव्य स्थान) और आपकी वेबसाइट प्रस्तावित करती है शिप करने के लिए पार्सल को कुछ मांगी हुई क़ीमत पर, तो मैं शिप करूँगा आपका पार्सल $50 में. मैं शिप करूँगा इसे $20 में. और निर्भर करते हुए क़ीमत पर जो आप बोलते हैं यूज़र्ज़ को, यूज़र्ज़ कभी-कभी ले लेते हैं एक शिपिंग सर्विस; जो है एक पॉज़िटिव इग्ज़ाम्पल और कभी वे वापिस चले जाते हैं और वे नहीं चुनते ख़रीदना आपकी शिपिंग सर्विस. तो मान लो कि हम चाहते हैं एक लर्निंग अल्गोरिद्म जो हमें सहायता करे ऑप्टिमायज़ करने में क्या है माँगी हुई क़ीमत जो हम देना चाहते हैं हमारे यूज़र्ज़ को. और ख़ासतौर पर, मान लो हम बनाते हैं कुछ तरह के फ़ीचर्ज़ जो कैप्चर करते हैं  गुण स्वभाव यूज़र्ज़ के. यदि हम जानते है कुछ भी जनसांख्यिकीय / डेमग्राफ़िक्स, वे कैप्चर करते हैं, आप जानते हैं, आरम्भ और गंतव्य पार्सल का, कहाँ वे भेजना चाहते है पार्सल. और क्या है क़ीमत जो हम पेश करते हैं उन्हें शिप करने के लिए पार्सल को. और हम क्या करना चाहते हैं कि लर्न करें कि क्या है प्रोबेबिलिटी / सम्भावना कि वे चुनेगें शिप करना पार्सल को, लेते हुए हमारी शिपिंग सर्विस दिए होने पर ये फ़ीचर्ज़, और फिर से सिर्फ़ आपको याद कराने के लिए ये फ़ीचर्ज़ एक्स कैप्चर करते हैं क़ीमत भी जो हम माँग रहे हैं. और यदि हम कर पाए अनुमान सम्भावना का कि वे राज़ी होंगे हमारी सर्विस लेने के लिए किसी दी हुई क़ीमत पर, तब हम कर सकते हैं कोशिश चुनने की एक क़ीमत ताकि उनके पास है एक अधिक सम्भावना चुनने की हमारी वेब साइट जबकि साथ ही आशापूर्वक हमें देने की एक उचित लाभ, दे हमें उचित लाभ शिप करने के लिए उनका पार्सल. तो यदि हम लर्न कर सकते हैं यह गुण कि वाय बराबर है 1 दिया होने पर कोई भी क़ीमत और दिए होने पर दूसरे फ़ीचर्ज़ जो हम वास्तव में कर सकते हैं इस्तेमाल उन्हें चुनने के लिए उचित क़ीमत जैसे नए यूज़र्ज़ आते हैं हमारे पास. अत: करने के लिए मॉडल प्रॉबबिलिटी वाय की बराबर 1, हम क्या कर सकते हैं कि इस्तेमाल करें लजिस्टिक रेग्रेशन या न्यूरल नेटवर्क या कोई और अल्गोरिद्म वैसा. लेकिन चलो शुरू करते हैं लॉजिस्टिक रिग्रेशन से. अब यदि आपके पास है एक वेब साइट जो रन करती है लगातार, यहाँ है जो एक ऑनलाइन लर्निंग अल्गोरिद्म करेगा. मैं लिखूँगा रिपीट फ़रेवर. जिसका सिर्फ़ मतलब है कि हमारी वेब साइट होगी, आप जानते हैं, रहेगी हमेशा अप / उपलब्ध. क्या होता है वेब साइट पर कि यदा कदा एक यूज़र आएगा और उस यूज़र के लिए जो आता है हमें मिलेगा कुछ एक्स, वाय युग्म सम्बंधित होगा एक ग्राहक से या एक यूज़र से वेब साइट पर. अत: फ़ीचर्ज़ एक्स हैं, आप जानते हैं, आरम्भ और गंतव्य जो बताए है इस यूज़र ने और क़ीमत जो हमने ऑफर की है उन्हें इस बार, और वाय है या एक या ज़ीरो निर्भर करते हुए कि हाँ या नहीं वे चुनते लेना हमारी शिपिंग सर्विस. अब जब हमें यह मिल जाता है {एक्स,वाय} युग्म, क्या एक ऑनलाइन लर्निंग अल्गोरिद्म करता है तब अप्डेट करता है पेरमिटर्स थीटा लेते हुए सिर्फ़ यह इग्ज़ाम्पल एक्स, वाय, और विशेषत: हम करेंगे अप्डेट मेरे पेरमिटर्स थीटा थीटा जे होता है अप्डेट थीटा जे माईनस लर्निंग रेट अल्फ़ा टाइम्ज़ मेरा हमेशा का ग्रेडीयंट डिसेंट रूल लॉजिस्टिक रिग्रेशन का. तो हम यह करते हैं जे बराबर ज़ीरो से एन तक के लिए, और वह है मेरा क्लोज़ कर्ली ब्रेस. अत, दूसरे लर्निंग अल्गोरिद्म्स के लिए बजाय लिखने के एक्स-वाय, सही, मैं लिख रहा था चीज़ें जैसे एक्स आइ, वाय आइ लेकिन इस ऑनलाइन लर्निंग सेट्टिंग में जहाँ वास्तव में हम हटा रहे है ख़याल कि एक निर्धारित ट्रेनिंग सेट है इसके स्थान पर हमारे पास एक अल्गोरिद्म. अब क्या होता है जब हमें मिलता है एक इग्ज़ाम्पल और तब हम लर्न करते हैं उस इग्ज़ाम्पल से वैसे ही और तब हम फेंक देते हैं वह इग्ज़ाम्पल. हम निकाल देते हैं वह इग्ज़ाम्पल और हम उसे दुबारा इस्तेमाल नहीं करते और इसलिए यह वजह है कि हम सिर्फ़ एक इग्ज़ाम्पल देखते हैं एक समय में. हम लर्न करते हैं उस इग्ज़ाम्पल से. हम फेंक देते हैं उसे. जिस वजह से, आप जानते हैं, हम हटा भी रहे हैं यह ख़याल कि इस प्रकार का है एक फिकसड ट्रेनिंग सेट इंडेक्स किया गया आइ से. और, यदि आप वास्तव में रन करते हैं एक बड़ी वेब साइट जहाँ आपके पास है वास्तव में एक लगातार / कंटिन्यूअस स्ट्रीम आते हुए यूज़र्ज़ का, तब इस प्रकार का ऑनलाइन लर्निंग अल्गोरिद्म हैं वास्तव में एक काफ़ी उचित अल्गोरिद्म. क्योंकि डेटा आवश्यक रूप से है फ्री यदि आपके पास है बहुत डेटा, वह डेटा है वास्तव में असीमित तब वास्तव में शायद नहीं है आवश्यकता देखने की एक ट्रेनिंग इग्ज़ाम्पल पर एक बार से ज़्यादा. निश्चय ही यदि हमारे पास होती केवल एक छोटी संख्या यूज़र्ज़ की तब बजाय इस्तेमाल करने के एक ऑनलाइन लर्निंग अल्गोरिद्म इस तरह का, आप के लिए शायद बेहतर होता जमा करके रखना सारा आपका डेटा एक निर्धारित ट्रेनिंग सेट में और तब रन करना कोई अल्गोरिद्म उस ट्रेनिंग सेट पर. लेकिन यदि आपके पास है वास्तव में एक लगातार / कंटिन्यूअस स्ट्रीम डेटा की, तब एक ऑनलाइन लर्निंग अल्गोरिद्म काफ़ी उपयोगी हो सकता है. मुझे बताना चाहिए कि एक दिलचस्प परिणाम भी इस प्रकार के ऑनलाइन लर्निंग अल्गोरिद्म का है कि यह रूपांतरित कर सकता है बदलती हुई यूज़र की प्राथमिकताओं के साथ. और विशेष रूप से, यदि समय के साथ बदलाव की वजह से अर्थ व्यवस्था / इकॉनमी में शायद यूज़र्ज़ होने लगें अधिक क़ीमत के प्रति संवेदनशील और राज़ी हो भुगतान करने के लिए आप जानते है, कम इच्छा हो देने की अधिक क़ीमत. या यदि वे हो जाते हैं कम भाव संवेदनशील और वे राज़ी हों देने के लिए अधिक क़ीमत. या यदि अलग चीज़ें बन जाती हैं अधिक महत्वपूर्ण यूज़र्ज़ के लिए, यदि आपके पास आने लगते हैं नए तरह के यूज़रज़ आपकी वेब साइट पर. इस प्रकार का ऑनलाइन लर्निंग अल्गोरिद्म कर भी सकता है रूपांतरित बदलती हुई यूज़र्ज़ की प्राथमिकताओं के अनुसार और एक प्रकार से निगाह रखता है क्या आपकी बदलती हुई जनसंख्या यूज़र्ज़ की राज़ी मूल्य चुकाने के लिए. और यह वह करता है क्योंकि यदि आपका समूह यूज़र्ज़ का बदलता है, तब ये अप्डेट्स आपके पेरमिटर्स थीटा में केवल धीरे-धीरे अनुरूप करेंगे आपके पेरमिटर्स को आपके हाल ही के यूज़र्ज़ के समूह के अनुसार. यहाँ है एक और उदाहरण एक प्रकार की ऐप्लिकेशन का जहाँ आप शायद अप्लाई कर सकते हैं ऑनलाइन लर्निंग. यह है एक ऐप्लिकेशन प्रोडक्ट सर्च में जहाँ हम चाहते हैं अप्लाई करना लर्निंग अल्गोरिद्म लर्न करने के लिए अच्छी सर्च लिस्टिंज़ देने के लिए एक यूज़र को. मान लीजिए आप रन करते हैं एक ऑनलाइन स्टोर जो बेचता है फ़ोन - जो बेचता है मोबाइल फ़ोन या बेचता है सेल फ़ोन. और आपका है एक यूज़र इंटर्फ़ेस जहाँ एक यूज़र आ सकता है आपकी वेब साइट पर और टाइप करता है पूछताछ  "ऐंड्रॉड फ़ोन 1080 पी कैमरा". तो 1080पी है एक तरह की एक स्पेसिफ़िकेशन एक विडीओ कैमरा के जो शायद आपके पास है एक फ़ोन पर, ए सेल फ़ोन पर, एक मोबाइल फ़ोन पर. मान लो, मान लो हमारे पास हैं एक सौ फ़ोन हमारे स्टोर में. और क्योंकि जिस तरह से हमारी वेब साइट बनी हैं, जब एक यूज़र टाइप करता हैं एक क्वेरी / कुछ पूछने के लिए, यदि यह थी एक सर्च की तरह की पूछताछ, हम चाहेंगे ढूँढना एक पसंद दस भिन्न फ़ोन की दिखाने के लिए कि क्या ऑफर करना है यूज़र को. क्या करना चाहेंगे हम कि लेंगे एक लर्निंग अल्गोरिद्म हमारी सहायता के लिए जानने के लिए कि कौन से दस फ़ोन 100 में से जो हमें दिखाने चाहिए यूज़र को जवाब में यूज़र की सर्च में जैसी यहाँ है. यहाँ है कि हम कैसे आरम्भ करते हैं प्रॉब्लम के बारे में. प्रत्येक फ़ोन के लिए और दी होने पर एक विशेष पूछताछ यूज़र की, हम बना सकते हैं एक फ़ीचर वेक्टर एक्स. तो फ़ीचर वेक्टर एक्स कैप्चर करता हैं  विभिन्न गुणस्वभाव फ़ोन के. यह शायद कैप्चर करता है चीज़ें जैसे, कैसी समान है यूज़र की पूछताछ फ़ोन में. हम कैप्चर करते हैं चीज़ें जैसे कितने शब्द हैं यूज़र की सर्च पूछताछ में जो मैच करते हैं नाम से फ़ोन के, कितने शब्द यूज़र की सर्च की पूछताछ में मैच करते हैं फ़ोन की व्याख्या से और इसी प्रकार आगे. अत फ़ीचर एक्स कैप्चर करता है गुण स्वभाव फ़ोन के और यह कैप्चर करता है चीज़ें कि कितने समान हैं या कितने अच्छे से फ़ोन मैच करता है यूज़र की पूछताछ से अलग अलग डिमेन्शंज़ में. क्या करना चाहते हैं हम कि अनुमानित करेंगे प्रोबेबिलिटी / संभावना कि एक यूज़र क्लिक करेगा लिंक पर एक विशेष फ़ोन के, क्योंकि हम चाहते है दिखाना यूज़र को फ़ोन जो वे कदाचित चाहेंगे ख़रीदना, चाहते हैं दिखाना यूज़र को फ़ोन जिनकी है अधिक सम्भावना क्लिक होने की वेब ब्राउज़र में. तो मैं करूँगा परिभाषित वाय बराबर एक यदि यूज़र क्लिक करता है लिंक पर एक फ़ोन के लिए और वाय बराबर ज़ीरो अन्यथा और मैं क्या करना चाहूंगा कि लर्न करूँगा प्रॉबबिलिटी कि यूज़र क्लिक करेगा एक विशेष दिए फ़ोन पर, आप जानते हैं, फ़ीचर एक्स, जो कैप्चर करता हैं गुणस्वभाव फ़ोन के और कितनी समान है यूज़र की पूछताछ फ़ोन के साथ. देने के लिए इस प्रॉब्लम को एक नाम भाषा में लोगों की जो रन करते हैं वेब साइट्स इस प्रकार की, लर्निंग की प्रोबलेम इसे हैं वास्तव में कहते प्रॉब्लम ऑफ़ लर्निंग प्रिडिक्टेड क्लिक-थ्रू रेट, प्रिडिक्टेड सीटीआर. इसका केवल मतलब है लर्न करना प्रॉबबिलिटी कि यूजर उसे क्लिक करेगा विशेष लिंक पर जो आप देते हैं उन्हें, अत: सीटीआर है एक संक्षिप्त नाम क्लिक थ्रू रेट का. और यदि आप अनुमानित कर सकते हैं प्रिडिक्टेड क्लिक-थ्रू रेट किसी ख़ास फ़ोन के लिए, हम क्या कर सकते हैं कि इस्तेमाल करें इसे दिखाने के लिए यूज़र को दस फ़ोन जो हैं अधिक सम्भावित क्लिक होने के लिए, क्योंकि सौ फ़ोन में से, हम कम्प्यूट कर सकते हैं यह 100 फ़ोन में से प्रत्येक के लिए और सिर्फ़ चुन सकते हैं 10 फ़ोन जो हैं अधिक सम्भावित क्लिक होने के लिए यूज़र के द्वारा, और यह होगा एक काफ़ी उचित ढंग निर्णय लेने के लिए कि कौन से 10 उत्तर दिखाने हैं यूज़र को. सिर्फ़ स्पष्ट करने के लिए, मान लीजिए कि हर बार एक यूज़र करता है एक सर्च, हम देते हैं 10 उत्तर वह क्या करेगा कि यह वास्तव में देगा हमें दस एक्स,वाय युग्म, यह वास्तव में देता है हमें दस ट्रेनिंग इग्ज़ाम्पल्ज़ हर बार एक यूज़र आता है हमारी वेब साइट पर क्योंकि, क्योंकि दस फ़ोन के लिए जो हमने चुने यूज़र को दिखाने के लिए, प्रत्येक उन 10 फ़ोन से हमें मिलता है एक फ़ीचर वेक्टर एक्स, और प्रत्येक उन 10 फ़ोन के लिए जो हम दिखाते हैं यूज़र को हमें भी मिलती हैं एक वैल्यू वाय के लिए, हम ध्यान भी करेंगे वैल्यू का वाय की, निर्भर करते हुए कि क्या हमने क्लिक किया है या नहीं उस यूआरएल पर या नहीं और इसलिए, एक तरीक़ा रन करने के लिए एक वेब साइट को इस प्रकार की होगा कि लगातार दिखाएँ यूज़र को, आप जानते हैं, आपके दस श्रेष्ठतम अनुमान कि कौन से दूसरे फ़ोन उन्हें शायद पसंद आएँ और इसलिए, हर बार जब एक यूज़र आता है आप लेंगे दस इग्ज़ाम्पल्ज़, दस एक्स,वाय युग्म, और तब इस्तेमाल करेंगे एक ऑनलाइन लर्निंग अल्गोरिद्म अप्डेट करने के लिए पेरमिटर्स लेकर वास्तव में 10 स्टेप्स ग्रेडीयंट डिसेंट के इन 10 इग्ज़ाम्पल्ज़ पर, और तब आप फेंक सकते हैं डेटा, और यदि आपके पास है एक लगातार / कंटिन्यूअस प्रवाह यूज़र्ज़ का जो आते हैं आपकी वेब साइट पर, यह होगा एक काफ़ी उचित ढंग लर्न करने का पेरमिटर्स का आपके अल्गोरिद्म के लिए ताकि आप दिखा सके दस फ़ोन आपके यूज़र को जो शायद सबसे अधिक आशा जनक और सबसे अधिक संभावित क्लिक होने के लिए. तो, यह है एक प्रोडक्ट सर्च प्रॉब्लम, या लर्न करने का रैंक करने के लिए फ़ोन को, लर्न करने का सर्च करने के लिए फ़ोन इग्ज़ाम्पल्ज़ को. अत:, मैं शीघ्रता से ज़िक्र करूँगा कुछ और का. एक है, यदि आपके पास है एक वेब साइट और आप कोशिश कर रहे है निर्णय करने की, आप जानते हैं, क्या विशेष ऑफ़र दिखानी चाहिए यूज़र को, यह काफ़ी समान है फ़ोन के, या यदि आपके पास है एक वेब साइट और आप दिखाते हो विभिन्न यूज़र्ज़ को विभिन्न समाचार लेख. तो, यदि आप हैं एक समाचार समूहक वेब साइट, तब आप कर सकते हैं फिर से इस्तेमाल एक इसी तरह के सिस्टम का चुनने के लिए, ताकि दिखा सकें यूज़र को, आप जानते हैं, क्या हैं समाचार लेख जिनमें वे अधिकतर रुचि रखते होंगे और कौन से हैं समाचार लेख जो अधिक सम्भावित हैं क्लिक होने के लिए. स्पेशल ऑफ़रज़ के जैसे ही, हमें रेकमेंडेशन्स से भी लाभ होगा. और वैसे तो, यदि आपके पास है एक कलैबरटिव फ़िल्टरिंग सिस्टम, आप कर सकते हैं कल्पना भी कि एक कलैबरटिव फ़िल्टरिंग सिस्टम आपको दे रहा है अतिरिक्त फ़ीचर्ज़ फ़ीड करने के लिए एक लजिस्टिक रेग्रेशन क्लैसिफ़ायअर को कोशिश करने के लिए प्रिडिक्ट करने की क्लिक थ्रू रेट विभिन्न प्रॉडक्ट्स की जो शायद रेकमेंड करें एक यूज़र को. निस्संदेह, मैं कहूँगा कि इनमें से कोई भी प्रॉब्लम हो सकती थी फ़ॉर्म्युलेट एक स्टैंडर्ड मशीन लर्निंग प्रॉब्लम की तरह, जहाँ आपके पास है एक निर्धारित ट्रेनिंग सेट. शायद, आप कर सकते हैं रन आपकी वेब साइट कुछ दिनों के लिए और तब इकट्ठा कर सकते है एक ट्रेनिंग सेट, एक निर्धारित ट्रेनिंग सेट , और रन कर सकते हैं एक लर्निंग अल्गोरिद्म उस पर. लेकिन ये है सचमुच की समस्याएँ, जहाँ आप अवश्य देखते हैं बड़ी कम्पनीज़ को मिलता हुआ इतना अधिक डेटा, कि वहाँ वास्तव में शायद कोई आवश्यकता नहीं है जमा करके रखने की एक निर्धारित ट्रेनिंग सेट, लेकिन इसके स्थान पर आप इस्तेमाल कर सकते हैं एक ऑनलाइन लर्निंग अल्गोरिद्म करने के लिए सिर्फ़ लगातार लर्न. डेटा से जो यूज़र्ज़ जेनरेट कर रहे हैं आपकी वेब साइट पर. तो, वह था ऑनलाईन लर्निंग सेट्टिंग और जैसे हमने देखा, अल्गोरिद्म जो हम अप्लाई करते हैं इसे वह है वास्तव में काफ़ी समान इस ग्रेडीयंट डिसेंट अल्गोरिद्म के, केवेल बजाय स्कैन करने के एक निर्धारित ट्रेनिंग सेट में से, हम इसके स्थान पर लेते हैं एक इग्ज़ाम्पल एक यूज़र से, लर्न करते हैं उस इग्ज़ाम्पल से, तब उसे फेंक देते हैं और ऐसा चलता रहता हैं. और यदि आपके पास है एक लगातार / कंटिन्यूअस प्रवाह डेटा का किसी ऐप्लिकेशन के लिए, इस प्रकार का लर्निंग अल्गोरिद्म शायद योग्य होगा ग़ौर करने के लिए आपकी ऐप्लिकेशन के लिए. और निश्चय ही, एक लाभ ऑनलाइन लर्निंग का है यह भी है कि यदि आपके पास है एक बदलता हुआ समूह यूज़र्ज़ का, या, यदि चीज़ें जो आप कोशिश कर रहे हैं प्रिडिक्ट करने की धीरे-धीरे बदल रही हैं जैसे आपके यूज़र की रुचि धीरे-धीरे बदल रही है, ऑनलाइन लर्निंग अल्गोरिद्म कर सकता है धीरे-धीरे रूपांतरित आपकी लरंड हायपॉथिसस को जो भी आपका सबसे हाल का सेट यूज़र के आचरण का भी.