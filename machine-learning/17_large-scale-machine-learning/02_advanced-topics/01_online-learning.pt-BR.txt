Neste vídeo gostaria de falar sobre um novo cenário de aprendizado de máquina em larga escala: aprendizagem online Aprendizagem online nos possibilita modelar problemas onde temos um fluxo contínuo ou um "stream" contínuo de dados entrando e nós gostaríamos que um algoritmo aprendesse disso. Hoje, muitos dos maiores websites, ou muitas das maiores empresas de websites usam diferentes versões de algoritmos de aprendizagem online para aprender do fluxo de usuários que acessam o website. Especificamente, se você tem um fluxo contínuo de dados gerado por um fluxo contínuo de usuários que acessam o website, o que você pode fazer é, às vezes, usar um algoritmo de aprendizagem online para aprender as preferências do usuário do fluxo de dados e usar isso para otimizar algumas das decisões do seu website. Supomos que você tenha um serviço de envio, onde usuários pedem ajuda para enviar seus pacotes da localidade A para a localidade B e suponha que você tenha um website, onde os usuários repetidamente vem e dizem a você que querem enviar um pacote de um lugar para outro (dessa forma, a origem e o destino) e seu website se oferece para enviar o pacote por um preço então enviarei o seu pacote por $50, eu enviarei seu pacote por $20. E baseado no preço que você oferecer para os seus usuários os usuário algumas vezes escolherão usar o serviço de envio, esse é um exemplo positivo, e algumas vezes eles irão embora e decidirão por não comprar o seu serviço de envio. Então, digamos que queremos um algoritmo de aprendizagem nos ajude a otimizar qual é o preço que queremos oferecer para nossos usuários. E especificamente, digamos que temos algumas características que capturam algumas propriedades dos usuários. Se sabemos algo sobre a demografia, eles capturam, você sabe, a origem e o destino do pacote, ou seja, para onde eles querem enviar o pacote. E qual é o preço que ofereceremos para que eles enviem o pacote. E o que nós queremos fazer é aprender qual é a probabilidade deles escolherem, para enviar o pacote, nosso serviço de envio  considerando essas características, e novamente, somente para relembrar, essas diversas características também capturam o preço que estamos cobrando. E se pudéssemos estimar as chances deles concordarem em usar nossos serviços por um preço dado, então nós poderíamos tentar escolher um preço que eles teriam uma alta probabilidade de escolher nosso website enquando ao mesmo tempo oferecessem a nós um valor justo e um lucro justo para enviar o pacote. Então, se pudermos aprender essa propriedade onde y é igual a 1 dado um preço e dado a outra característica nos poderíamos realmente utilizar isso para escolher apropriadamente preços para os novos usuários que vem a nós. Então, de forma a modelar a probabilidade de Y ser igual a 1, o que podemos fazer é utilizar regressão logistica ou rede neural ou algum outro algoritmo desse tipo. Começaremos com a regressão logística. Agora se você tem um website que funciona continuamente, aqui está o que o algoritmo de aprendizagem faria. Escreverei repita para sempre. Isso significa que o nosso website irá continuar no ar. O que acontece com o website é que, ocasionalmente, um usuário virá e para esse usuário que veio obteremos algum par x,y de informação correspondente a um consumidor ou a um usuário do website. Então as características X são a origem e o destino especificados pelo usuário e o preço que nós ofertamos para eles nesse momento, e Y é 1 ou 0 dependendo se eles escolheram ou não utilizar o nosso serviço de envio. Agora, uma vez que obtemos o par {x,y} o que um algoritmo de aprendizagem online faz é atualizar os parâmetros "teta" usando somente este exemplo x e y. Em particular nós poderíamos atualizar meus parâmetros "teta" "Teta" J seria atualizado como "Teta" J menos a razão de aprendizado "Alfa" vezes minha regra de gradiente descendente habitual para a regressão logística. Então fazemos isso para o J igual a 0 até N, e isso fecha as chaves. Então, para outros algorítmos de aprendizagem ao invés de escrever X-Y, escrevi coisas como Xi, Yi, mas nesse cenário de aprendizagem online onde não existe a noção de um conjunto de treinamento fixo, mas ao invés temos um algoritmo. Agora, quanto pegamos um exemplo e aprendemos usando ele podemos descartá-lo. Descartaremos esse exemplo e nós nunca o usaremos novamente e é por isso que obersvamos um exemplo por vez. Nós aprendemos a partir daquele exemplo. Nós o descartamos. É por isso que nós estamos também eliminando essa noção de haver este tipo de conjunto de treinamento fixo indexado por "I". E, se você realmente roda um grande website onde você realmente tem um fluxo contínuo de usuários acessando, então esse tipo de algoritmo de aprendizagem online é, na verdade, um algorítmo bastante razoável. Porque o dado é essencialmente grátis, se você tem muitos dados, esses dados são essencialmente ilimitados então não existe realmente a necessidade de treinar o exemplo mais de uma vez. Claro que se tivermos somente um pequeno número de usuários então ao invés de usar um algoritimo de aprendizagem online como esse, seria melhor utilizar seus dados em um conjunto fixo de treinamento e então executar algum algoritmo sobre esse conjunto de treinamento. Mas se você realmente tem um fluxo contínuo de dados, então um algoritmo de aprendizagem online pode ser bastante efetivo. Eu devo mencionar também que um efeito interessante desse tipo de algoritmo de aprendizagem online é que ele pode se adaptar às mudanças de preferências dos usuários. E em particular, ao longo do tempo a mudanças na economia podem deixar os usuários mais sensíveis ao preço e menos dispostos a pagar preços mais altos. Ou eles se tornaram menos sensíveis ao preço e estão dispostos a pagar preços mais altos. Ou se coisas diferentes se tornam mais importantes para os usuários, se você começa a ter novos tipos de usuários visitando seu website. Esse tipo de algoritmo de aprendizagem online pode também se adaptar às mudanças das preferências dos usuários e faz um tipo de monitoração do que sua nova população de usuários pode estar disposta a pagar. E ele fez isso porque se o seu grupo de usuários muda, então essas atualizações em seus parâmetros "Teta" adaptarão lentamente seus parâmetros para qualquer que seja o seu último grupo de usuários. Aqui temos outro exemplo de um tipo de aplicação a qual você poderá aplicar a aprendizagem online. Esta é uma aplicação num produto de busca no qual nós queremos aplicar o algoritmo de aprendizagem online para aprender a dar bons resultados de busca ao usuário. Digamos que você tenha uma loja online que venda telefones celulares. E você tem uma interface com o usuário onde o usuário pode entrar no seu website e digita no campo de busca algo como "Câmera 1080p Android". Então 1080p é um tipo de especificação para uma câmera de vídeo que você pode ter num telefone celular. Suponha que temos cem telefones na nossa loja. E pelo modo que nosso website foi definido, quando um usuário faz uma consulta, e é uma consulta de busca, nós gostaríamos de encontrar uma lista de dez diferentes telefones para mostrar o que oferecer ao usuário. O que queremos fazer é ter um algorítmo de aprendizagem que nos ajude a descobrir quais são os dez telefones entre os 100 que nós deveremos retornar ao usuário em resposta à busca como essa. Podemos resolver o problema da seguinte maneira: Para cada telefone a dada uma pesquisa específica de um usuário nós podemos construir um vetor de características X. Então esse vetor de características X pode capturar diferentes propriedades do telefone. Ele pode capturar coisas como o quão similar a busca do usuário e o telefone são. Nós capturamos coisas como quantas palavras na pesquisa do usuário correspondem ao nome do telefone, quantas palavras na busca do usuário correspondem à descrição do telefone e assim por diante. Dessa forma as características X capturam propriedades do telefone e captura coisas como o quão similar ou quão bem o telefone corresponde à busca do usuário em diferentes dimensões. O que gostaríamos de fazer é estimar a probabilidade que um usuário clicará no link de um telefone em específico porque nós queremos mostrar ao usuário telefones que possa querer comprar. Queremos mostrar ao usuário telefones que eles tenham grande probabilidade de clicar. Então eu definirei Y igual a um se o usuário clicar no link para o telefone e Y igual a zero caso contrário e o que eu gostaria de fazer é aprender a probabilidade do usuário clicar em um dado telefone, as características X, as quais capturam as propriedades do telefone e o quão bem a consulta equivale ao telefone. Para dar a este problema um nome na linguagem das pessoas que tem websites como esse o problema de aprendizagem é atualmente chamado de problema de aprendizado da frequência do clique previsto, o CTR previsto. Isso quer dizer somente aprender a probabilidade que os usuários clicarão no link específico que você ofereceu a eles, então CTR é uma abreviação de taxa de cliques. E se você consegue estimar a previsão de taxa de cliques para qualquer telefone em particular, o que nós podemos fazer é usar isso para mostrar aos usuários dez telefones que serão com maior probabilidade de serem clicados, porque dentro do universo de 100 telefones nós podemos calcular isso para cada um dos 100 telefones e selecionar somente 10 telefones que o usário provavelmente clicará, e isso será um método bastante razoável de decidir quais dez resultados mostrar aos usuários. Somente para ser claro, suponha que toda as vezes que o usuário fizer a busca, nós retornamos dez resultados o que ele fará é, na verdade, dar a nós dez pares x,y, isso na verdade nos dá dez exemplos de treinamento toda vez que o usuário vier ao nosso webiste porque, para os dez telefones que escolhemos para mostrar para o usuário, para cada um desses 10 telefones nós obtemos um vetor de características X e para cada um dos 10 telefones nós mostramos ao usuário nós também obtemos um valor para Y, nós também observaremos o valor de Y, dependendo se o usuário clicou naquela URL ou não e então, uma forma de rodar um website como esse seria mostrar continuamente aos usuários, seus dez melhores palpites para quais outros telefones eles possam gostar e então, para cada vez que um usuário vier você obteria dez exemplos, dez pares X,Y, e então usuaria um algoritmo de aprendizagem online para atualizar os parâmetros usando essencialmente 10 passos do gradiente descendente nesses 10 exemplos, e então você poderia jogar os dados fora, e se você realmente tiver um fluxo contínuo de usuários que acessam seu website, esse pode ser uma boa maneira de aprender parâmetros para o seu algorítmo como para mostrar os dez telefones para seus usuários que podem ser os mais promissores e com maior chance de serem clicados. Então, este é um problema de busca de produtos ou de como ranquear telefones, aprendendo a procurar por telefones. Então eu mencionarei rapidamente alguns outros. Uma é, se você tem um website e você está tentando decidir, você sabe, qual oferta especial para mostrar ao usuário, isso é bastante similar aos telefones, ou se você tem um website and você mostra à diferentes usuários diferentes notícias. Então, se você tem um website de agregador de notícias, então você pode novamente, utilizar um sistema similar para selecionar, para mostrar ao usuário, você sabe, quais são os artigos que eles mais se interessariam e quais seriam os artigos que seriam mais propensos a ser clicados. Estreitamente relacionado com as ofertas especiais, nós lucraremos com as recomendações. E, de fato, se você tem um sistema colaborativo de filtragem, você pode ainda imaginar um sistema colaborativo de filtragem te dando recursos adicionais para alimentar em um classificador de regressão logística para tentar predizer o clique através da taxa de clique para diferentes produtos que você pode recomendar ao usuário. Claro, eu deveria dizer que qualquer dos problemas também poderia ter sido reformulado como um problema padrão de aprendizagem de máquina, onde você tem um conjunto de treinamento fixo. Talvez, você possa rodar o seu website por alguns dias e então salvar um conjunto de treinamento, um conjunto de treinamento fixo, e executar o algoritmo de aprendizagem nele. Mas esses são problemas reais de classificação, onde você observa grandes empresas obtendo tantas informações, que não existe, talvez, a necessidade de salvar um conjunto de treinamento fixo, mas ao invés disso você pode usar um algorítmo de aprendizagem online para aprender continuamente das informações que os usuários estão gerando no seu website. Então, essa foi a definição de aprendizagem online e como vimos, o algorítmo que nós aplicamos é realmente muito similar ao algorítmo de gradiente descendente estocástico, mas ao invés de escanear através de um conjunto de treinamento fixo, nós vamos ao invés obter um exemplo do usuário aprender a partir daquele exemplo, descartá-lo e seguir. E se você tem um um fluxo contínuo de informações para alguma aplicação, esse tipo de algoritmo pode valer a pena a ser considerado para sua aplicação. E, é claro, uma vantagem da aprendizagem online é também que você pode mudar o grupo de usuários, ou se as coisas que você está tentando predizer estão mudando devagar, assim como as preferências dos usuários, o algoritmo de aprendizagem online pode se adaptar à hipótese de aprendizado para qualquer que seja os atuais comportamentos dos grupos de usuários.