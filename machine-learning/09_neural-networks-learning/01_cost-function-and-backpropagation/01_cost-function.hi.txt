इस विडीओ में हम परिभाषित करेंगे कुछ जिसे कहते हैं कॉस्ट फ़ंक्शन. यह हमें समझने देगा कि कैसे फ़िट करनी है सबसे अधिक सम्भव योग्य सीधी रेखा हमारे डेटा में. लिनीअर रेग्रेशन में, हमारे पास है एक ट्रेनिंग सेट जो मैंने यहाँ दिखाया था स्मरण करें हमारी नोटेशन M था संख्या हमारे ट्रेनिंग इग्ज़ाम्पल्ज़ की, तो शायद M है 47. और फ़ॉर्म हमारी हायपॉथिसस की, जो हम इस्तेमाल करते हैं प्रिडिक्शंज़ करने में है यह लिनीअर फ़ंक्शन. थोड़ी और जानकारी देने के लिए टर्मिनॉलॉजी की, ये थीटा ज़ीरो और थीटा एक, ये हैं जिन्हें मैं कहता हूँ पेरमिटर्स मॉडल के. और हम क्या करेंगे इस विडीओ में कि बात करेंगे कैसे करना है चुनाव इन दो पेरमिटर्स वैल्यूज़ का थीटा 0 और थीटा 1 के बारे में. पेरमिटर्स थीटा 0 और थीटा 1 के विभिन्न विकल्पों का साथ, हमें मिलती हैं विभिन्न हायपॉथिसस, विभिन्न हायपॉथिसस फ़ंक्शंज़. मैं जानता हूँ कि आपमें से कुछ शायद पहले से ही परिचित होंगे जो मैं करने जा रहा हूँ स्लाईड पर, लेकिन सिर्फ़ पुनरीक्षण के लिए, यहाँ है कुछ इग्ज़ाम्पल्ज़. यदि थीटा 0 है 1.5 और थीटा 1 है 0, तब हायपॉथिसस फ़ंक्शन दिखेगा ऐसा. क्योंकि आपका हायपॉथिसस फ़ंक्शन होगा एच ऑफ़ एक्स ईक्वल्ज़ 1.5 प्लस 0 टाइम्ज़ एक्स जो है यह कोंस्टंट वैल्यू फ़ंक्शन जो है फ़्लैट 1.5 पर. यदि थीटा 0=0, थीटा 1=0.5, तब हायपॉथिसस दिखेगी ऐसी, और यह पास होनी चाहिए इस पोईँट 2,1 से ताकि अब आपके पास है एच(एक्स). या वास्तव में एच ऑफ थीटा (एक्स), लेकिन कभी-कभी मैं छोड़ देता हूँ थीटा संक्षेप में लिखने के लिए. तो एच(एक्स)होगा सिर्फ़ 0.5 टाइम्ज़ एक्स, जो ऐसा दिखता है. और अंत में, यदि थीटा ज़ीरो है एक और थीटा एक है 0.5, तब हमें मिलती है एक हायपॉथिसस जो ऐसी दिखती है. चलो देखते हैं, यह पास होनी चाहिए इस पोईँट दो,दो से. इसी प्रकार, और यह है मेरा नया वेक्टर एक्स का, या मेरी नई एच सबस्क्रिप्ट थीटा ऑफ़ एक्स. जिस भी तरह से आप याद रखें, मैंने कहा कि यह है एच सबस्क्रिप्ट थीटा ऑफ़ एक्स, लेकिन वह है एक संक्षेप लेख, कभी-कभी में लिखूँगा इसे सिर्फ़ एच ऑफ़ एक्स. लिनीअर रेग्रेशन में, हमारे पास है एक ट्रेनिंग सेट, शायद जो मैंने यहाँ प्लॉट किया है. हम क्या करना चाहते हैं कि,ढूँढे वैल्यूज़ पेरमिटर्स थीटा ज़ीरो और थीटा एक कि ताकि सीधी लाइन जो इससे हमें मिले, वह कॉरेस्पॉंड करे सीधी लाइन से जो किसी तरह फ़िट करती डेटा को अच्छे से, शायद वह लाइन वहाँ पर. तो कैसे मिलती है हमें वह वैल्यूज़, थीटा ज़ीरो, थीटा एक, हो कॉरेस्पॉंड करती है एक गुड फ़िट को डेटा में? सुझाव यह है कि हम चुन सकते हैं पेरमिटर्स थीटा 0, थीटा 1 ताकि एच ऑफ़ एक्स मतलब वैल्यू जो हम प्रिडिक्ट करते हैं एक्स पर, कि यह हो किसी भी तरह नज़दीक वाय वैल्यूज़ के हमारे इग्ज़ाम्पल्ज़ की हमारे ट्रेनिंग सेट में, हमारे ट्रेनिंग इग्ज़ाम्पल्ज़ के लिए. तो हमारे ट्रेनिंग सेट में, हमें दिए हैं बहुत से इग्ज़ाम्पल्ज़ जहाँ हम जानते हैं एक्स निश्चित करता हैं घर और हम जानते हैं असली क़ीमत जिस पर वह बिका था. तो, चलो प्रयास करते हैं चुनने का वैल्यूज़ पेरमिटर्स के लिए ताकि, किसी तरह ट्रेनिंग सेट में, दिया होने पर एक्स ट्रेनिंग सेट में हम करें उचित प्रिडिक्शन्स वाय वैल्यूज़ के लिए. चलिए इसे औपचारिक रूप से लिखते हैं. तो तब रेग्रेशन, हम क्या करेंगे कि मैं चाहता हूँ हल करना एक मिनीमाइज़ेशन प्रॉब्लम. तो मैं लिखूँगा मिनिमाईज़ ओवर थीटा 0 थीटा 1. और मैं चाहता हूँ कि यह छोटा हो, सही? मैं चाहता हूँ अंतर एच(एक्स) और वाय के बीच कम. और एक काम जो मैं शायद कोशिश कर सकता हूँ है मिनीमाइज़ करूँ स्क्वेर्ड अंतर को हायपॉथिसस की आउट्पुट और घर की असली क़ीमत के बीच के. अच्छा. चलो देखते हैं इसे विस्तार से. आपको स्मरण होग कि मैं इस्तेमाल कर रहा था नोटेशन (एक्स(आइ),वाय(आइ)) दर्शाने के लिए ट्रेनिंग इग्ज़ाम्पल संख्या आइ. तो जो मैं वास्तव में चाहता हूँ है कि सम करूँ मेरे ट्रेनिंग सेट पर कुछ आइ = 1 से एम तक, स्क्वेर्ड अंतर को, यह है प्रिडिक्शन मेरी हायपॉथिसस की जब इसको इनपुट करते हैं साइज़ घर संख्या आइ का. सही? माइनस असली क़ीमत उस घर संख्या आइ की जिससे यह बिका था, और मैं चाहता हूँ मिनीमाइज़ करना सम मेरे ट्रेनिंग सेट पर सम आइ ईक्वल्ज़ एक से एम तक, अंतर को इस स्क्वेर्ड एरर के, स्क्वेर अंतर बीच में प्रिडिक्टेड क़ीमत, और क़ीमत जिस पर वह वास्तव में बिका था. और सिर्फ़ याद कराने के लिए आपको नोटेशन, एम यहाँ था साइज़ मेरे ट्रेनिंग सेट का सही? तो मेरा एम वहाँ है संख्या मेरे ट्रेनिंग इग्ज़ाम्पल्ज़ की. सही? वह हैश साइन है संक्षिप्त रूप ट्रेनिंग इग्ज़ाम्पल्ज़ की संख्या के लिए, अच्छा? और करने के लिए हमारा गणित थोड़ा और सरल, मैं वास्तव में देखूँगा चलो कोशिश करते हैं मिनीमाइज़ करने की ऐव्रिज मिनीमाइज़ वन ओवर 2 एम. 2 को रखने से सामने कोंस्टेंट वन हाफ पर, शायद लगे मैथ आसान अतः मिनिमाईजिंग वन हाफ किसी का, सही, देना चाहिए आपको वही वेलयूज़ प्रोसेस की, थीटा 0 थीटा 1, उस फंकशन को मिनिमाईज़ करते हुए॰ और सिर्फ़ सुनिश्चित करने के लिए, यह इक्वेज़न स्पष्ट है, सही? यह इक्स्प्रेशन यहाँ, एच सब स्क्रिप्ट थीटा (एक्स), यह हमारा हमेशा का, सही? वह है बराबर इस प्लस थीटा एक एक्स आइ. और यह नोटेशन, मिनीमाइज़ ओवर थीटा 0 थीटा 1, इसका मतलब है आप ढूँढेंगे वैल्यूज़ थीटा 0 और थीटा 1 की जो करतीं हैं इस इक्स्प्रेशन को मिनीमाइज़ और यह इक्स्प्रेशन निर्भर करता है थीटा 0 और थीटा 1 पर, ओके? तो, पुनरावृति के लिए. हम समाप्त कर रहे हैं इस प्रॉब्लम को इस तरह, ढूँढे वैल्यूज़ थीटा ज़ीरो और थीटा एक की ऐव्रिज 1 ओवर 2 एम, टाइम्ज़ सम स्क्वेर्ड एरर प्रिडिक्शन ट्रेनिंग सेट पर माइनस असली वैल्यूज़ घर की ट्रेनिंग सेट पर हो मिनीमाइज्ड. तो यह होगा मेरा ओवरॉल अब्जेक्टिव फ़ंक्शन लिनीअर रेग्रेशन के लिए. और सिर्फ़ दोबारा लिखने के लिए थोड़ा और स्पष्ट, मैं क्या करूँगा कि, परम्परा के अनुसार हम बहुधा परिभाषित करते हैं एक कॉस्ट फ़ंक्शन, जो होगा बिलकुल इसके समान, वह फ़ॉर्म्युला जो मेरे पास है ऊपर यहाँ और मैं क्या करना चाहता हूँ कि मिनिमाईज़ ओवर थीटा 0 थीटा 1. मेरा फ़ंक्शन जे(थीटा 0, थीटा 1). सिर्फ़ लिखूँगा यह. यह है मेरा कॉस्ट फ़ंक्शन. तो, यह कॉस्ट फ़ंक्शन स्क्वेर्ड एरर फ़ंक्शन भी कहलाता है. जब कभी इसे कहते हैं स्क्वेर्ड एरर कॉस्ट फ़ंक्शन ऐसा होता है कि क्यों लेते हैं हम स्क्वेर एरर्ज़ का. ऐसा होता है कि ये स्क्वेर्ड एरर कॉस्ट फ़ंक्शन एक उचित विकल्प है और सही काम करता है प्राब्लम्ज़ के लिए अधिकांश रेग्रेशन प्रोग्राम्स में. दूसरे कॉस्ट फ़ंक्शन्स भी हैं जो सही करते हैं. लेकिन स्क्वेर कोस्ट फ़ंक्शन शायद सबसे आम रूप से इस्तेमाल होता है रेग्रेशन प्राब्लम्ज़ में. बाद में इस क्लास में हम बात करेंगे दूसरे कॉस्ट फ़ंक्शन्स के बारे में भी लेकिन यह विकल्प जो हमारे पास अभी था होना चाहिए एक उचित काम करने के लिए अधिकांश लिनीअर रेग्रेशन प्राब्लम्ज़ के लिए. ठीक है. तो वह है कॉस्ट फ़ंक्शन. अभी तक हमने देखी एक गणितीय परिभाषा इस कॉस्ट फ़ंक्शन की. इस केस में यह फ़ंक्शन जे ऑफ़ थीटा ज़ीरो, थीटा एक. यदि यह फ़ंक्शन लगता है थोड़ा काल्पनिक, और आपको अभी भी समझ नहीं आया सही ढंग से कि यह क्या कर रहा है, अगले विडीओ में, अगले कुछ विडीओज़ में, मैं वास्तव में जाऊँगा थोड़ा गहराई में कि क्या कोस्ट फ़ंक्शन जे कर रहा है और प्रयास करूँगा देने का आपको एक बेहतर अहसास कि क्या यह कम्प्यूट कर रहा है और क्यों हम इसे इस्तेमाल करना चाहते हैं.