1
00:00:00,111 --> 00:00:02,628
בסרטון ההדרכה השני הזה על

2
00:00:02,630 --> 00:00:03,904
אוקטבה, הייתי רוצה להתחיל

3
00:00:03,930 --> 00:00:07,322
להסביר איך מטפלים בנתונים באוקטבה.

4
00:00:07,340 --> 00:00:08,783
אם יש לך נתונים עבור

5
00:00:08,783 --> 00:00:12,125
בעית למידה חישובית, איך טוענים את הנתונים לתוך אוקטבה?

6
00:00:12,125 --> 00:00:13,693
איך מכניסים אותם למטריצה?

7
00:00:13,693 --> 00:00:15,284
איך גורמים למטריצות האלה לעבוד?

8
00:00:15,290 --> 00:00:16,982
איך שומרים את התוצאות?

9
00:00:17,000 --> 00:00:22,185
איך מעבירים נתונים בסביבת אוקטבה ואיך מפעילים אותם?

10
00:00:22,900 --> 00:00:25,044
הנה חלון אוקטבה שלי כמו

11
00:00:25,044 --> 00:00:29,256
קודם, ונמשיך מאיפה שהפסקנו בסרטון האחרון.

12
00:00:29,290 --> 00:00:31,132
אם אני מקיש A, ​​כך

13
00:00:31,140 --> 00:00:32,258
אנו יוצרים מטריצה, נכון,

14
00:00:32,258 --> 00:00:35,197
עם הפקודה הזאת שווה אחת, שתיים,

15
00:00:35,197 --> 00:00:38,152
שלוש, ארבע, חמש, שש,

16
00:00:38,190 --> 00:00:40,696
וזו מטריצה שלוש על שתיים.

17
00:00:40,710 --> 00:00:42,415
פקודת size באוקטבה

18
00:00:42,430 --> 00:00:46,361
אומרת לך מה גודל המטריצה.

19
00:00:46,361 --> 00:00:48,207
אז הגודל שמודפס הוא שלוש, שתיים.

20
00:00:48,207 --> 00:00:50,160
מתברר כי

21
00:00:50,180 --> 00:00:52,155
שהפקודה size בעצמה בעצם

22
00:00:52,155 --> 00:00:54,591
מחזירה מטריצה אחת על שתיים.

23
00:00:54,591 --> 00:00:56,598
אז אתה בעצם יכול להגדיר SZ שווה

24
00:00:56,598 --> 00:00:58,370
size של A ותקבל משתנה SZ

25
00:00:58,380 --> 00:00:59,597
שהוא כעת מטריצה אחת על שתיים

26
00:00:59,597 --> 00:01:01,627
ובו המרכיב הראשון הוא

27
00:01:01,640 --> 00:01:04,689
שלוש, והמרכיב השני הוא שתיים.

28
00:01:04,700 --> 00:01:07,494
אז אם פשוט תקליד (size(SZ. מכיוון ש-SZ

29
00:01:07,494 --> 00:01:08,898
הוא מטריצה אחת על שתיים

30
00:01:08,898 --> 00:01:10,862
ששני האברים שלה

31
00:01:10,862 --> 00:01:13,721
מכילים את הממדים של

32
00:01:13,721 --> 00:01:15,279
המטריצה A. ​​ניתן גם

33
00:01:15,279 --> 00:01:17,787
להקליד (size(A,1

34
00:01:17,787 --> 00:01:19,505
כדי לקבל את הממד הראשון

35
00:01:19,510 --> 00:01:21,542
של A, גודל

36
00:01:21,542 --> 00:01:22,662
הממד הראשון של A.

37
00:01:22,680 --> 00:01:24,108
דהיינו מספר

38
00:01:24,110 --> 00:01:26,307
השורות, (size(A,2

39
00:01:26,320 --> 00:01:28,361
כדי לקבל שתיים שהוא

40
00:01:28,361 --> 00:01:29,598
מספר העמודות

41
00:01:29,598 --> 00:01:31,942
במטריצה A. אם יש לך

42
00:01:31,950 --> 00:01:34,034
וקטור V, נאמר

43
00:01:34,034 --> 00:01:36,016
V שווה אחת, שתיים,

44
00:01:36,030 --> 00:01:38,089
שלוש, ארבע, ואתה

45
00:01:38,089 --> 00:01:40,830
מקליד (length(V. מה

46
00:01:40,830 --> 00:01:42,097
שזה עושה הוא לתת

47
00:01:42,097 --> 00:01:44,123
את הגודל של המימד הארוך יותר.

48
00:01:44,170 --> 00:01:45,609
אז אתה יכול גם להקליד

49
00:01:45,609 --> 00:01:48,487
length A ומכיוון

50
00:01:48,500 --> 00:01:49,856
ש-A היא מטריצה שלוש

51
00:01:49,860 --> 00:01:52,305
על שתיים, תקבל

52
00:01:52,330 --> 00:01:53,825
שלוש, כי שלוש

53
00:01:53,825 --> 00:01:56,145
הוא המימד הגדול.

54
00:01:56,145 --> 00:01:58,805
אבל בדרך כלל אנחנו משתמשים בפונקציה length רק עבור וקטורים.

55
00:01:58,810 --> 00:02:00,194
דהיינו, length של הוקטור אחד, שתיים,

56
00:02:00,200 --> 00:02:02,222
שלוש, ארבע, חמש, אנחנו

57
00:02:02,230 --> 00:02:04,010
לא משתמשים בפונקציה length עבור מטריצות

58
00:02:04,010 --> 00:02:07,205
כי זה קצת מבלבל.

59
00:02:07,620 --> 00:02:10,122
עכשיו, בואו נראה

60
00:02:10,122 --> 00:02:11,843
איך טוענים נתונים

61
00:02:11,860 --> 00:02:13,732
ואיך מוצאים אותם במערכת הקבצים.

62
00:02:13,732 --> 00:02:15,254
כשאנחנו מריצים את אוקטבה

63
00:02:15,254 --> 00:02:16,882
אנחנו בדרך כלל, רוב הפעמים

64
00:02:16,920 --> 00:02:19,098
מתחילים בתיקיה

65
00:02:19,098 --> 00:02:21,738
הזו, המיקום של אוקטבה.

66
00:02:21,750 --> 00:02:24,042
אז הפקודה PWD מציגה

67
00:02:24,060 --> 00:02:25,619
את הספרייה הנוכחית, או את

68
00:02:25,640 --> 00:02:28,738
המסלול הנוכחי של אוקטבה.

69
00:02:28,738 --> 00:02:31,932
אז עכשיו אנחנו נמצאים באיזו ספרייה צדדית משהו.

70
00:02:31,932 --> 00:02:33,999
הפקודה CD משמעותה

71
00:02:34,000 --> 00:02:35,322
עבור לספרייה זו, אז אני

72
00:02:35,330 --> 00:02:40,681
יכול ללכת ל- c:/users/Ang/Desktop,

73
00:02:40,681 --> 00:02:43,657
ועכשיו אני נמצא בשולחן העבודה שלי

74
00:02:43,657 --> 00:02:45,925
ואם אני מקליד ls,

75
00:02:45,925 --> 00:02:49,447
ls היא פקודה שמקורה ביוניקס או לינוקס.

76
00:02:49,447 --> 00:02:50,648
בכל אופן, ls ייתן רשימה

77
00:02:50,648 --> 00:02:52,435
של הספריות והקבצים בשולחן העבודה שלי

78
00:02:52,435 --> 00:02:54,137
אז הנה הקבצים

79
00:02:54,140 --> 00:02:58,184
שנמצאים בשולחן העבודה שלי עכשיו.

80
00:03:15,850 --> 00:03:17,838
למעשה יש בשולחן העבודה שלי

81
00:03:17,838 --> 00:03:19,920
שני קבצים: featuresX

82
00:03:19,920 --> 00:03:21,689
ו-priceY שאולי מגיעים

83
00:03:21,689 --> 00:03:23,596
מבעיה של למידה חישובית שאותה אני מנסה לפתור.

84
00:03:23,620 --> 00:03:25,830
אז הנה שולחן העבודה שלי.

85
00:03:25,830 --> 00:03:29,144
הנה featuresX,

86
00:03:29,144 --> 00:03:31,598
וfeaturesX הוא החלון הזה,

87
00:03:31,630 --> 00:03:34,492
סליחה, הקובץ הזה עם שתי עמודות של נתונים.

88
00:03:34,492 --> 00:03:36,702
זו למעשה רשימת הנתונים של מחירי הבתים שלנו.

89
00:03:36,750 --> 00:03:38,374
אז אני חושב,

90
00:03:38,374 --> 00:03:40,652
אני חושב שיש ארבעים ושבע שורות במערך הנתונים הזה.

91
00:03:40,652 --> 00:03:42,344
אז לבית הראשון

92
00:03:42,350 --> 00:03:43,966
יש גודל של מאתיים וארבעה

93
00:03:43,970 --> 00:03:46,172
רגל רבוע, יש בו שלושה חדרי שינה; הבית

94
00:03:46,190 --> 00:03:47,367
השני הוא של אלף שש מאות רגל

95
00:03:47,367 --> 00:03:49,862
רבוע, יש בו שלושה חדרי שינה; וכולי.

96
00:03:49,880 --> 00:03:52,302
ו-priceY הוא

97
00:03:52,302 --> 00:03:55,020
הקובץ הזה שבו נמצאים

98
00:03:55,040 --> 00:03:57,575
המחירים של הבתים בסדרת האימון.

99
00:03:57,575 --> 00:03:59,735
אז featuresX

100
00:03:59,735 --> 00:04:03,061
ו-priceY הם פשוט קבצי טקסט עם נתונים.

101
00:04:03,061 --> 00:04:04,770
כיצד ניתן לטעון את הנתונים האלה לתוך אוקטבה?

102
00:04:04,770 --> 00:04:06,050
ובכן, אני פשוט מקליד

103
00:04:06,090 --> 00:04:08,163
את הפקודה load featuresX.dat

104
00:04:08,163 --> 00:04:10,069
ואם אני

105
00:04:10,069 --> 00:04:11,991
עושה את זה, אני טוען את featuresX,

106
00:04:11,991 --> 00:04:15,772
ויכול לטעון גם את priceY.dat.

107
00:04:15,772 --> 00:04:17,323
ודרך אגב, יש מספר דרכים לעשות זאת.

108
00:04:17,323 --> 00:04:19,245
הפקודה הזו אם תשים

109
00:04:19,245 --> 00:04:20,916
'featuresX.dat'

110
00:04:20,916 --> 00:04:22,533
במחרוזת ותטען אותו כך,

111
00:04:22,550 --> 00:04:25,477
סליחה, טעות,

112
00:04:25,490 --> 00:04:27,317
אז זו פקודה שקולה לראשונה.

113
00:04:27,317 --> 00:04:29,334
אז אתה יכול ככה

114
00:04:29,360 --> 00:04:31,985
פשוט לשים את שם הקובץ

115
00:04:32,000 --> 00:04:34,148
במחרוזת,

116
00:04:34,148 --> 00:04:35,716
באוקטבה

117
00:04:35,716 --> 00:04:38,902
משתמשים בגרשיים בודדים כדי

118
00:04:38,930 --> 00:04:41,876
לייצג מחרוזות, כמו כאן.

119
00:04:41,910 --> 00:04:42,837
אז זוהי מחרוזת, ואנחנו

120
00:04:42,860 --> 00:04:45,517
יכולים לטעון את הקובץ

121
00:04:45,517 --> 00:04:48,324
ששמו ניתן על ידי המחרוזת.

122
00:04:48,324 --> 00:04:50,919
עכשיו הפקודה who

123
00:04:50,960 --> 00:04:52,538
מראה לנו את המשתנים

124
00:04:52,538 --> 00:04:54,605
בסביבת העבודה באוקטבה.

125
00:04:54,605 --> 00:04:56,310
אז who מראה את

126
00:04:56,330 --> 00:04:59,952
המשתנים שיש לאוקטבה בזיכרון כרגע.

127
00:04:59,952 --> 00:05:01,367
featuresX ו-priceY

128
00:05:01,370 --> 00:05:02,991
נמצאים שם, כמו גם

129
00:05:02,991 --> 00:05:04,120
שאר המשתנים

130
00:05:04,170 --> 00:05:06,311
שיצרנו קודם לכן בהרצה הזו.

131
00:05:06,311 --> 00:05:09,198
אז אני יכול להקליד featuresX

132
00:05:09,198 --> 00:05:11,062
כדי להציג את הטבלה featuresX.

133
00:05:11,062 --> 00:05:14,164
והנה הם הנתונים.

134
00:05:14,200 --> 00:05:16,419
ואני יכול להקליד (size(featuresX

135
00:05:16,419 --> 00:05:18,022
ומקבלים

136
00:05:18,022 --> 00:05:20,519
מטריצה 47 על שתיים.

137
00:05:20,519 --> 00:05:22,307
ומה הגודל של priceY,

138
00:05:22,320 --> 00:05:23,729
זה נותן

139
00:05:23,729 --> 00:05:26,753
47 על אחת.

140
00:05:26,753 --> 00:05:30,125
זהו וקטור 47-ממדי.

141
00:05:30,125 --> 00:05:32,080
זה וקטור העמודה

142
00:05:32,080 --> 00:05:35,231
שמכיל את priceY של סדרת האימון.

143
00:05:35,240 --> 00:05:37,584
עכשיו הפונקציה who מראה

144
00:05:37,600 --> 00:05:40,086
את המשתנים בסביבת העבודה הנוכחית.

145
00:05:40,086 --> 00:05:42,195
וקיימת גם פקודת whos

146
00:05:42,195 --> 00:05:45,369
שנותנת תצוגה יותר מפורטת.

147
00:05:45,369 --> 00:05:47,252
אז עם s

148
00:05:47,270 --> 00:05:48,574
בסוף הפקודה מפרט גם

149
00:05:48,574 --> 00:05:49,979
את המשתנים וגם

150
00:05:49,979 --> 00:05:51,782
את הגדלים שלהם.

151
00:05:51,790 --> 00:05:52,759
אז A היא מטריצה שלוש על

152
00:05:52,759 --> 00:05:54,764
שתיים ו-featuresX

153
00:05:54,764 --> 00:05:56,545
היא מטריצה 47 על 2.

154
00:05:56,545 --> 00:05:59,327
priceY היא מטריצה 47 על אחת.

155
00:05:59,327 --> 00:06:01,098
כלומר זה פשוט וקטור.

156
00:06:01,130 --> 00:06:03,438
וזה מראה כמה בייט של זיכרון זה תופס.

157
00:06:03,438 --> 00:06:06,020
וגם מהו סוג הנתונים.

158
00:06:06,020 --> 00:06:07,765
double אומר שאלה משתני נקודה צפה

159
00:06:07,765 --> 00:06:08,915
בדיוק כפול, או פשוט

160
00:06:08,915 --> 00:06:13,148
שאלה הם ערכים ממשיים, מספרי נקודה צפה.

161
00:06:13,148 --> 00:06:14,190
עכשיו, כדי להיפטר

162
00:06:14,190 --> 00:06:17,316
ממשתנה השתמש בפקודה clear.

163
00:06:17,340 --> 00:06:21,124
אז אם תקיש clear featuresX ואחר כך שוב whos.

164
00:06:21,130 --> 00:06:23,448
תראה שהמשתנה featuresX

165
00:06:23,448 --> 00:06:26,465
נעלם עכשיו.

166
00:06:27,270 --> 00:06:28,567
ואיך שומרים נתונים?

167
00:06:28,567 --> 00:06:29,221
בואו נראה.

168
00:06:29,221 --> 00:06:30,411
בואו ניקח משתנה V

169
00:06:30,411 --> 00:06:33,075
ונציב בו את priceY 1:10.

170
00:06:33,075 --> 00:06:34,826
זה מגדיר את V

171
00:06:34,826 --> 00:06:38,574
כוקטור המכיל את 10 האברים הראשונים

172
00:06:38,860 --> 00:06:43,215
של priceY. בואו נריץ את who או whos.

173
00:06:43,220 --> 00:06:46,612
בעוד priceY היה וקטור של 47 על 1.

174
00:06:46,612 --> 00:06:48,474
V הוא 10 על 1.

175
00:06:48,474 --> 00:06:50,809
V שווה priceY ​​עמודה אחת

176
00:06:50,809 --> 00:06:52,451
עד עשר מציב בו

177
00:06:52,451 --> 00:06:53,520
רק את עשרת האברים

178
00:06:53,520 --> 00:06:55,705
הראשונים של priceY, נניח

179
00:06:55,705 --> 00:06:57,398
שאני רוצה לשמור את זה על הדיסק,

180
00:06:57,398 --> 00:07:00,129
אז הפקודה save hello.mat V

181
00:07:00,129 --> 00:07:02,302
תשמור

182
00:07:02,310 --> 00:07:04,357
את המשתנה V לתוך

183
00:07:04,370 --> 00:07:05,690
קובץ בשם hello.mat.

184
00:07:05,720 --> 00:07:08,490
בואו נעשה את זה.

185
00:07:08,640 --> 00:07:10,965
ועכשיו הופיע קובץ

186
00:07:11,030 --> 00:07:13,181
על שולחן העבודה שלי, אתם

187
00:07:13,181 --> 00:07:15,066
רואים, בשם Hello.mat.

188
00:07:15,066 --> 00:07:16,509
במקרה מותקן לי MATLAB

189
00:07:16,530 --> 00:07:17,962
על המחשב, וזו הסיבה,

190
00:07:17,962 --> 00:07:19,711
אתם מבינים, שהסמליל - האייקון - הזה נראה

191
00:07:19,711 --> 00:07:21,621
ככה כי Windows מזהה אותו

192
00:07:21,621 --> 00:07:23,559
כקובץ MATLAB, אבל אל

193
00:07:23,559 --> 00:07:24,882
תדאגו אם הסמליל של הקובץ הזה

194
00:07:24,890 --> 00:07:26,051
נראה שונה

195
00:07:26,051 --> 00:07:28,778
על המחשב שלכם. 

196
00:07:28,778 --> 00:07:31,017
עכשו בואו נאמר שאני מוחק ומנקה את כל המשתנים שלי.

197
00:07:31,020 --> 00:07:32,602
אז אם אתם מקלידים clear בלי

198
00:07:32,602 --> 00:07:36,061
שום פרמטרים אז זה בעצם מוחק את כל המשתנים בסביבת העבודה.

199
00:07:36,080 --> 00:07:39,078
אז עכשיו אין כלום בסביבת העבודה.

200
00:07:39,078 --> 00:07:41,856
ואם אני אטען את hello.mat,

201
00:07:41,856 --> 00:07:44,388
אני יכול עכשיו לטעון חזרה

202
00:07:44,388 --> 00:07:46,054
את המשתנה V שלי, שבו

203
00:07:46,054 --> 00:07:47,830
נמצאים הנתונים ששמרתי

204
00:07:47,830 --> 00:07:51,035
קודם בקובץ hello.mat.

205
00:07:51,035 --> 00:07:54,636
אז hello.mat, מה שעשינו עכשיו היה לשמור את hello.mat

206
00:07:54,636 --> 00:07:55,877
לתוך הדיסק, והנתונים

207
00:07:55,877 --> 00:07:57,811
נשמרו בפורמט בינארי,

208
00:07:57,850 --> 00:07:59,702
בפורמט בינארי שהוא מעט יותר דחוס.

209
00:07:59,702 --> 00:08:01,077
אז אם ב-v יש הרבה

210
00:08:01,077 --> 00:08:03,899
נתונים, אז הוא יהיה קצת יותר דחוס.

211
00:08:03,899 --> 00:08:05,645
יתפוס פחות שטח איחסון.

212
00:08:05,650 --> 00:08:06,784
אם אתה רוצה לשמור את הנתונים

213
00:08:06,784 --> 00:08:08,959
בפורמט קריא

214
00:08:08,959 --> 00:08:11,870
יותר, תקליד save hello.text V

215
00:08:11,870 --> 00:08:14,055
ואז ascii-.

216
00:08:14,110 --> 00:08:16,083
אז הוא יישמר

217
00:08:16,083 --> 00:08:18,787
כטקסט

218
00:08:18,840 --> 00:08:21,352
או כפורמט ASCII של טקסט.

219
00:08:21,352 --> 00:08:22,802
ואחרי שעשיתי את

220
00:08:22,802 --> 00:08:24,973
זה, יש לי כאן הקובץ הזה.

221
00:08:24,973 --> 00:08:26,115
Hello.text הופיע זה עתה

222
00:08:26,130 --> 00:08:28,463
על שולחן העבודה שלי,

223
00:08:28,463 --> 00:08:29,951
וכשאני פותח אותו רואים

224
00:08:29,951 --> 00:08:31,016
שזה קובץ טקסט

225
00:08:31,016 --> 00:08:33,958
בו שמורים הנתונים שלי.

226
00:08:33,958 --> 00:08:36,698
אז ככה טוענים ושומרים נתונים.

227
00:08:36,698 --> 00:08:38,832
עכשיו בואו נדבר קצת על איך מטפלים בנתונים.

228
00:08:38,832 --> 00:08:40,526
בואו להגדיר מטריצה A שווה

229
00:08:40,526 --> 00:08:44,910
לנתונים כרגיל אז היא מטריצה שלוש על שתיים.

230
00:08:45,710 --> 00:08:46,778
איך מצביעים לתוכה.

231
00:08:46,778 --> 00:08:48,493
אני מקליד A 3,2.

232
00:08:48,493 --> 00:08:51,219
זהו אינדקס או מצביע

233
00:08:51,219 --> 00:08:52,917
לאיבר במקום 3,2

234
00:08:52,917 --> 00:08:54,308
של המטריצה A, זה

235
00:08:54,370 --> 00:08:56,320
מה שאנחנו

236
00:08:56,400 --> 00:08:57,488
בדרך כלל היינו כותבים

237
00:08:57,510 --> 00:09:00,421
כA עם אינדקס תחתון 3,2

238
00:09:00,430 --> 00:09:02,280
או A אינדקס

239
00:09:03,570 --> 00:09:05,320
3,2 

240
00:09:05,380 --> 00:09:07,028
אז זה האלמנט

241
00:09:07,028 --> 00:09:08,664
בשורה השלישית בטור השני

242
00:09:08,664 --> 00:09:11,539
של A שערכו הוא שש.

243
00:09:11,590 --> 00:09:13,820
אני יכול גם להקליד A שתיים

244
00:09:14,550 --> 00:09:16,770
פסיק נקודתיים

245
00:09:16,770 --> 00:09:18,851
את כל השורה השנייה.

246
00:09:18,851 --> 00:09:22,806
הנקודתיים משמעותן כל

247
00:09:22,810 --> 00:09:27,381
האיברים בשורה או בעמודה.

248
00:09:27,420 --> 00:09:29,274
אז, A 2 פסיק

249
00:09:29,274 --> 00:09:32,425
נקודתיים היא כל השורה השנייה של A. טוב.

250
00:09:32,470 --> 00:09:35,662
ובאופן דומה, אם אני עושה A נקודתיים פסיק 2

251
00:09:35,680 --> 00:09:38,262
אז נקבל את כל

252
00:09:38,262 --> 00:09:41,328
העמודה השנייה של A, דהיינו נקבל 2 4 6.

253
00:09:41,328 --> 00:09:42,921
נכון? הפירוש הוא

254
00:09:42,930 --> 00:09:45,467
A, הכל, עמודה שנייה.

255
00:09:45,500 --> 00:09:46,967
אז זו העמודה השניה

256
00:09:46,970 --> 00:09:49,636
של A, שהיא 2 4 6.

257
00:09:49,650 --> 00:09:51,267
אפשר

258
00:09:51,280 --> 00:09:54,148
להשתמש באינדקסים גם בצורה קצת יותר מתוחכמת.

259
00:09:54,148 --> 00:09:56,575
אני אעבור בזריזות על מספר דוגמאות.

260
00:09:56,575 --> 00:09:58,537
עושים את זה כנראה בתדירות יותר נמוכה,

261
00:09:58,550 --> 00:10:02,231
לדוגמה ראו [A[1 3, פסיק, נקודה-פסיק.

262
00:10:02,231 --> 00:10:03,471
המשמעות של זה היא כל

263
00:10:03,500 --> 00:10:07,444
האיברים בשורה אחת או שלוש.

264
00:10:07,450 --> 00:10:08,765
זה אומר שנקבל את

265
00:10:08,765 --> 00:10:10,588
השורות הראשונה והשלישית של

266
00:10:10,603 --> 00:10:12,780
A ואת כל

267
00:10:13,240 --> 00:10:13,240
העמודות שלהם.

268
00:10:14,163 --> 00:10:16,430
זו הייתה

269
00:10:16,800 --> 00:10:18,260
המטריצה ​​A אז A

270
00:10:18,440 --> 00:10:21,872
1 3 פסיק נקודה-פסיק פירושו לקבל

271
00:10:21,900 --> 00:10:23,222
את השורה הראשונה

272
00:10:23,250 --> 00:10:25,023
ואת השורה

273
00:10:25,023 --> 00:10:27,172
השלישית

274
00:10:27,172 --> 00:10:28,313
והנקודה-פסיק כמובן אומר

275
00:10:28,313 --> 00:10:29,585
שאנחנו רוצים לקבל את שתי העמודות,

276
00:10:29,585 --> 00:10:31,045
ולכן

277
00:10:31,045 --> 00:10:32,842
נקבל 1 2 5 6, כך.

278
00:10:32,842 --> 00:10:34,353
אבל משתמשים בסוג פעולות

279
00:10:34,353 --> 00:10:37,182
האינדקס המתוחכמות האלה

280
00:10:37,182 --> 00:10:39,819
לעתים קצת יותר נדירות.

281
00:10:40,210 --> 00:10:41,453
וכדי להראות לך מה אפשר עוד לעשות.

282
00:10:41,453 --> 00:10:43,617
הנה המטריצה ​​A

283
00:10:43,617 --> 00:10:47,276
ו-A נקודתיים פסיק 2 מחזיר את העמודה השניה.

284
00:10:47,276 --> 00:10:49,773
אפשר להשתמש בזה גם כדי לעשות השמות.

285
00:10:49,773 --> 00:10:51,178
אני יכול לקחת את העמודה השניה של

286
00:10:51,190 --> 00:10:52,949
A ולשים בה

287
00:10:52,950 --> 00:10:55,605
10, 11, 12,

288
00:10:55,670 --> 00:10:58,084
ואז הערכים במטריצה

289
00:10:58,120 --> 00:10:59,220
משתנים, נעשה

290
00:10:59,290 --> 00:11:02,768
ניקח את העמודה השניה של A ונשים בה את וקטור העמודה הזה 10, 11, 12.

291
00:11:02,768 --> 00:11:05,440
אז, עכשיו המטריצה A היא 1, 3, 5.

292
00:11:05,480 --> 00:11:08,760
והעמודה השניה שונתה והיא עכשיו 10, 11, 12.

293
00:11:08,760 --> 00:11:14,513
הנה עוד פעולה.

294
00:11:14,680 --> 00:11:15,917
בואו נגדיר את A שווה

295
00:11:15,917 --> 00:11:17,738
A פסיק 100, 101,

296
00:11:17,750 --> 00:11:21,605
102 כמו זה ומה

297
00:11:21,605 --> 00:11:24,109
שזה יעשה הוא

298
00:11:24,120 --> 00:11:28,025
לשרשר עוד וקטור עמודה

299
00:11:28,047 --> 00:11:29,855
לימין המטריצה.

300
00:11:29,890 --> 00:11:33,230
אז, עכשיו, אופס.

301
00:11:33,260 --> 00:11:36,798
אני חושב שעשיתי טעות קטנה.

302
00:11:36,800 --> 00:11:41,065
צריך לשים שם נקודה-פסיק,

303
00:11:41,700 --> 00:11:43,910
ועכשיו A שווה לזה.

304
00:11:43,910 --> 00:11:44,564
בסדר?

305
00:11:44,564 --> 00:11:45,479
אני מקווה שזה הגיוני.

306
00:11:45,479 --> 00:11:46,480
אז 100, 101, 102.

307
00:11:46,480 --> 00:11:48,804
זה וקטור עמודה

308
00:11:48,820 --> 00:11:51,668
ומה שעשינו

309
00:11:51,668 --> 00:11:53,386
היה השמת ערך ל-A, לקחנו

310
00:11:53,386 --> 00:11:56,156
את A ושמנו בו את הערך המקורי שלו.

311
00:11:56,156 --> 00:11:57,368
ואז הוספנו עוד וקטור

312
00:11:57,380 --> 00:11:59,192
עמודה מימין,

313
00:11:59,192 --> 00:12:00,217
בסיכומו של דבר לקחנו את

314
00:12:00,217 --> 00:12:04,288
המטריצה A - שהיתה

315
00:12:04,288 --> 00:12:05,405
שישה האברים כאן משמאל.

316
00:12:05,405 --> 00:12:06,785
לקחנו את המטריצה

317
00:12:06,810 --> 00:12:08,564
A וצרפנו עוד

318
00:12:08,564 --> 00:12:09,793
וקטור עמודה בצד ימין;

319
00:12:09,793 --> 00:12:11,814
ובגלל זה היא

320
00:12:11,814 --> 00:12:16,083
עכשיו מטריצה שלוש על שלוש שנראית ככה.

321
00:12:16,200 --> 00:12:18,005
ועוד טריק אחד

322
00:12:18,010 --> 00:12:19,802
שאני לפעמים משתמש בו,

323
00:12:19,810 --> 00:12:22,022
אם תכתוב רק A נקודתיים כמו כאן.

324
00:12:22,022 --> 00:12:25,585
זהו מקרה מיוחד במקצת מבחינה תחבירית.

325
00:12:25,590 --> 00:12:28,695
מה שזה אומר הוא לשרשר את כל האברים של A לתוך

326
00:12:28,695 --> 00:12:30,751
וקטור עמודה אחד

327
00:12:30,850 --> 00:12:34,513
מה שמחזיר לנו וקטור 9 על 1.

328
00:12:34,513 --> 00:12:38,584
הם פשוט כל השורות משורשרות.

329
00:12:39,700 --> 00:12:45,258
רק עוד מעט דוגמאות. בואו נראה. נאמר

330
00:12:45,300 --> 00:12:52,073
שאני שם ב-A את האברים 1 2 3 4 5 6, בסדר?

331
00:12:52,181 --> 00:12:54,035
ונניח

332
00:12:54,060 --> 00:12:55,674
אני מגדיר את B להיות

333
00:12:55,680 --> 00:12:58,984
11, 12, 13, 14, 15, 16.

334
00:12:58,984 --> 00:13:00,346
אני יכול ליצור מטריצה

335
00:13:00,346 --> 00:13:03,161
C חדשה שווה ל-A B

336
00:13:03,200 --> 00:13:05,010
זה פשוט אומר הנה

337
00:13:05,080 --> 00:13:06,666
המטריצה A, הנה B

338
00:13:06,666 --> 00:13:08,426
ואני מגדיר C

339
00:13:08,426 --> 00:13:11,053
שווה ל-A B.

340
00:13:11,070 --> 00:13:12,225
מה שאני עושה הוא לקחת

341
00:13:12,225 --> 00:13:15,438
את שתי המטריצות האלה ופשוט לשרשר אותן זו לזו.

342
00:13:15,438 --> 00:13:18,408
אז משמאל, המטריצה A היא משמאל.

343
00:13:18,420 --> 00:13:20,786
והמטריצה B ​​מימין.

344
00:13:20,800 --> 00:13:23,738
וכך יצרתי את

345
00:13:23,830 --> 00:13:27,145
המטריצה C ה​​זאת על ידי שרשור שלהם.

346
00:13:27,145 --> 00:13:28,927
אני יכול גם לעשות C שווה

347
00:13:28,927 --> 00:13:31,975
A נקודה-פסיק B. הסימון

348
00:13:32,000 --> 00:13:35,552
נקודה-פסיק אומר

349
00:13:35,552 --> 00:13:38,881
שיש לשים את הדבר השני מתחת לראשון.

350
00:13:38,881 --> 00:13:39,880
אז כשאני כותב A

351
00:13:39,910 --> 00:13:41,169
נקודה-פסיק B, גם זה

352
00:13:41,170 --> 00:13:42,408
משרשר את שתי

353
00:13:42,460 --> 00:13:44,048
המטריצות אבל הפעם

354
00:13:44,048 --> 00:13:46,408
זו מעל זו.

355
00:13:46,408 --> 00:13:49,675
אז עכשיו יש לי A למעלה ו-B למטה, ולכן C היא

356
00:13:49,675 --> 00:13:52,038
מטריצה 6 על 2.

357
00:13:52,038 --> 00:13:54,263
אז כמו שבדרך כלל נקודה-פסיק

358
00:13:54,270 --> 00:13:56,705
משמעותו ללכת לשורה הבאה,

359
00:13:56,705 --> 00:13:58,463
גם כאן C מורכבת

360
00:13:58,463 --> 00:13:59,598
מ-A ואז יורדים שורה מתחת ל-A

361
00:13:59,598 --> 00:14:00,610
ושותלים שם את B,

362
00:14:00,690 --> 00:14:02,320
ודרך אגב,

363
00:14:02,390 --> 00:14:04,225
A B זה כמו

364
00:14:04,225 --> 00:14:05,734
A,B

365
00:14:05,750 --> 00:14:09,106
ושתי האפשרויות נותנות אותה תוצאה.

366
00:14:10,310 --> 00:14:11,916
אז עכשיו אני מקווה שאתם

367
00:14:11,916 --> 00:14:14,256
כבר יודעים איך בונים

368
00:14:14,260 --> 00:14:17,207
מטריצות ובתקווה אתם מתחילים

369
00:14:17,207 --> 00:14:18,223
לשלוט בחלק

370
00:14:18,223 --> 00:14:19,822
מהפקודות בהן משתמשים

371
00:14:19,850 --> 00:14:21,913
כדי לבנות מטריצות במהירות 

372
00:14:21,940 --> 00:14:23,390
ולקחת מטריצות

373
00:14:23,390 --> 00:14:24,984
ולהדביק אותן זו לזו כדי ליצור

374
00:14:25,000 --> 00:14:27,009
מטריצות גדולות יותר, וכל זה רק עם

375
00:14:27,009 --> 00:14:28,962
כמה שורות קוד, אוקטבה

376
00:14:28,962 --> 00:14:30,770
היא שפה מאוד נוחה מבחינת

377
00:14:30,770 --> 00:14:32,683
כמה מהר אפשר להרכיב

378
00:14:32,683 --> 00:14:36,033
מטריצות מורכבות ולהעביר ולשחק בנתונים.

379
00:14:36,050 --> 00:14:38,027
אז זהו זה בקשר לטיפול בנתונים.

380
00:14:38,027 --> 00:14:39,347
בסרטון הבא נתחיל

381
00:14:39,347 --> 00:14:40,783
לדבר על האופן בו ניתן

382
00:14:40,860 --> 00:14:46,232
לעשות חישובים מורכבים על הנתונים שלנו.

383
00:14:46,830 --> 00:14:48,256
אני מקווה שזה נתן לכם

384
00:14:48,256 --> 00:14:49,961
איזו תחושה של איך

385
00:14:49,961 --> 00:14:51,049
בעזרת מספר קטן של פקודות אפשר

386
00:14:51,049 --> 00:14:54,573
לעצב נתונים מהר מאוד באוקטבה.

387
00:14:54,590 --> 00:14:56,164
אתם מבינים, לטעון ולשמור וקטורים

388
00:14:56,180 --> 00:14:58,059
ומטריצות, לטעון ולשמור נתונים,

389
00:14:58,090 --> 00:15:00,201
להרכיב מטריצות כדי ליצור

390
00:15:00,201 --> 00:15:02,990
מטריצות גדולות, לבחור אינדקסים לתוך

391
00:15:02,990 --> 00:15:05,021
מטריצות או לבחור אלמנטים ספציפיים של המטריצות.

392
00:15:05,021 --> 00:15:06,015
אני יודע שעברתי על הרבה

393
00:15:06,015 --> 00:15:06,944
פקודות, אני חושב

394
00:15:06,980 --> 00:15:08,244
שהשיטה הכי טובה בשבילכם היא

395
00:15:08,244 --> 00:15:09,741
לעיין

396
00:15:09,741 --> 00:15:12,248
בהיסטוריה של הפקודות שכתבנו כאן.

397
00:15:12,248 --> 00:15:13,286
אתם מבינים, תסתכלו על זה.

398
00:15:13,286 --> 00:15:14,661
גשו לאתר הקורס והורידו

399
00:15:14,661 --> 00:15:15,927
משם את תמליל ההרצאה

400
00:15:15,950 --> 00:15:17,479
ועיינו בתמליל

401
00:15:17,479 --> 00:15:18,820
והקלידו מספר

402
00:15:18,820 --> 00:15:21,942
פקודות בעצמכם לתוך אוקטבה

403
00:15:21,942 --> 00:15:24,752
והתחילו לשחק עם הפקודות האלה ותגרמו להן לעבוד.

404
00:15:24,752 --> 00:15:28,113
כמובן, אין שום טעם לנסות לשנן את כל הפקודות הללו.

405
00:15:28,113 --> 00:15:30,030
מה שאתם צריכים

406
00:15:30,030 --> 00:15:31,852
לעשות הוא, אני מקווה

407
00:15:31,852 --> 00:15:32,910
שהסרטון הזה נתן לכם

408
00:15:32,910 --> 00:15:35,065
תחושה של סוגי הדברים שאפשר לעשות.

409
00:15:35,100 --> 00:15:36,519
כך שמאוחר יותר כשתנסו

410
00:15:36,520 --> 00:15:37,902
לתכנת אלגוריתמי

411
00:15:37,902 --> 00:15:39,630
למידה בעצמכם, אם אתם

412
00:15:39,630 --> 00:15:40,921
מנסים למצוא פקודה

413
00:15:40,930 --> 00:15:42,455
מסוימת שאתם חושבים שיכול

414
00:15:42,455 --> 00:15:43,878
להיות שקיימת באוקטבה, כי

415
00:15:43,878 --> 00:15:45,325
תיזכרו שאולי ראיתם אותה כאן, אז

416
00:15:45,325 --> 00:15:47,300
תחפשו בתמליל של

417
00:15:47,300 --> 00:15:48,545
ההרצאה כדי למצוא

418
00:15:48,560 --> 00:15:51,693
את הפקודות שבהן תרצו להשתמש.

419
00:15:51,693 --> 00:15:53,069
אז, זה הכל בקשר

420
00:15:53,069 --> 00:15:54,841
העתקות של נתונים.

421
00:15:54,841 --> 00:15:56,060
ובסרטון הבא מה שהייתי רוצה

422
00:15:56,120 --> 00:15:57,699
לעשות הוא להתחיל לספר

423
00:15:57,740 --> 00:15:59,257
לכם איך לעשות למעשה

424
00:15:59,257 --> 00:16:01,404
חישובים מורכבים על

425
00:16:01,410 --> 00:16:03,548
נתונים, וכיצד

426
00:16:03,550 --> 00:16:04,866
לחשב תוצאות מן הנתונים,

427
00:16:04,866 --> 00:16:06,560
ולהתחיל ליישם בצורה מעשית אלגוריתמי למידה.