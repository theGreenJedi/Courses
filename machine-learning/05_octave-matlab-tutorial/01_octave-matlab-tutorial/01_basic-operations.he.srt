1
00:00:00,090 --> 00:00:02,346
טוב, אז עכשיו אתם יודעים די הרבה על למידה חישובית.

2
00:00:02,390 --> 00:00:03,635
בסרטון הזה, אני רוצה

3
00:00:03,635 --> 00:00:05,448
ללמד אתכם שפת תכנות

4
00:00:05,470 --> 00:00:06,718
בשם אוקטבה, שבה תהיו

5
00:00:06,760 --> 00:00:08,878
מסוגלים ליישם את אלגוריתמי

6
00:00:08,890 --> 00:00:10,259
הלמידה שראינו

7
00:00:10,259 --> 00:00:11,770
וגם את אלגוריתמי הלמידה

8
00:00:11,770 --> 00:00:14,872
שנראה בהמשך הקורס במהירות רבה

9
00:00:14,900 --> 00:00:16,381
בעבר, ניסיתי ללמד למידה חישובית

10
00:00:16,381 --> 00:00:19,497
תוך שימוש במגוון גדול של שפות תכנות שונות,

11
00:00:19,500 --> 00:00:22,046
כולל ++C, ג'אווה,

12
00:00:22,825 --> 00:00:25,379
פייתון, NumPy, וגם

13
00:00:25,379 --> 00:00:27,128
אוקטבה, ומה

14
00:00:27,160 --> 00:00:28,783
שמצאתי הוא שתלמידים מצליחים

15
00:00:28,790 --> 00:00:30,535
ללמוד בצורה הפרודוקטיבית

16
00:00:30,570 --> 00:00:32,497
ביותר, במהירות ותוך

17
00:00:32,497 --> 00:00:33,780
בניית אבטיפוסים של אלגוריתמים

18
00:00:33,780 --> 00:00:35,569
אם הם משתמשים בשפה

19
00:00:35,569 --> 00:00:38,262
גבוהה יחסית כמו אוקטבה.

20
00:00:38,290 --> 00:00:39,798
למעשה, מה שאני רואה

21
00:00:39,798 --> 00:00:41,516
לעתים קרובות בעמק הסיליקון הוא

22
00:00:41,520 --> 00:00:43,655
שאם צריך לבנות,

23
00:00:43,655 --> 00:00:44,714
אם רוצים לבנות תכנה

24
00:00:44,740 --> 00:00:46,548
של למידה חישובית לשימוש

25
00:00:46,610 --> 00:00:48,242
בקנה מידה גדול, מה שאנשים עושים לעתים קרובות הוא

26
00:00:48,242 --> 00:00:50,637
לבנות אבטיפוס והשפה הכי מתאימה היא אוקטבה.

27
00:00:50,660 --> 00:00:52,200
שהיא שפה מעולה לבנות אבטיפוסים.

28
00:00:52,210 --> 00:00:55,264
בעזרתה אפשר לגרום לאלגוריתמי הלמידה לעבוד תוך זמן קצר.

29
00:00:55,270 --> 00:00:56,629
ואז אם צריך

30
00:00:56,629 --> 00:00:58,459
לגרום לה לעבוד בקנה מידה גדול מאוד

31
00:00:58,480 --> 00:01:00,362
רק אז משקיעים את הזמן

32
00:01:00,362 --> 00:01:03,059
ביישום של האלגוריתם מחדש

33
00:01:03,059 --> 00:01:05,150
בשפה כגון ++C או Java או מין שפה כזאת.

34
00:01:05,160 --> 00:01:06,273
כי הלקחים שהפקנו הם

35
00:01:06,300 --> 00:01:08,679
שזמן המפתחים, הזמן

36
00:01:08,710 --> 00:01:09,848
שלך,

37
00:01:09,870 --> 00:01:13,309
שעה של מומחה בלמידה חישובית היא מאוד יקרה.

38
00:01:13,320 --> 00:01:15,101
ואם אתה יכול

39
00:01:15,101 --> 00:01:17,898
לגרום לאלגוריתמי הלמידה שלך לעבוד בזמן קצר יותר על ידי שימוש באוקטבה.

40
00:01:17,898 --> 00:01:18,932
אז בחשבון הכולל אתה

41
00:01:18,932 --> 00:01:20,697
מרוויח המון זמן על ידי

42
00:01:20,720 --> 00:01:22,143
פיתוח האלגוריתם קודם כל

43
00:01:22,150 --> 00:01:23,971
באוקטבה, ולאחר מכן אולי יישום

44
00:01:23,971 --> 00:01:28,145
מחדש ב-++C או Java, רק אחרי שהצלחנו להפעיל את הרעיונות.

45
00:01:28,160 --> 00:01:30,238
השפות הנפוצות ביותר לבניית אבטיפוס

46
00:01:30,238 --> 00:01:31,538
שבהן משתמשים לפי דעתי

47
00:01:31,560 --> 00:01:34,058
למטרות למידה חישובית הן: אוקטבה, MATLAB,

48
00:01:34,070 --> 00:01:37,230
פייתון, NumPy, ו-R

49
00:01:38,150 --> 00:01:40,032
אוקטבה היא נחמדה, כי היא קוד פתוח.

50
00:01:40,032 --> 00:01:42,660
וגם MATLAB היא טובה,

51
00:01:42,670 --> 00:01:44,656
אבל יקרה מדי עבור

52
00:01:44,656 --> 00:01:45,956
אנשים רבים.

53
00:01:45,960 --> 00:01:47,972
אבל אם יש לך גישה לעותק של MATLAB

54
00:01:47,988 --> 00:01:50,095
אתה יכול להשתמש גם ב-MATLAB בקורס הזה.

55
00:01:50,110 --> 00:01:52,037
אם אתה יודע פייתון, NumPy,

56
00:01:52,037 --> 00:01:54,853
או אם אתה יודע R, אני רואה שאנשים משתמשים בהן.

57
00:01:54,870 --> 00:01:56,353
אבל מה שאני רואה הוא

58
00:01:56,360 --> 00:01:57,739
שאנשים בדרך כלל בסופו של דבר

59
00:01:57,760 --> 00:02:00,041
מפתחים קצת יותר לאט

60
00:02:00,050 --> 00:02:02,121
בשפות האלה.

61
00:02:02,121 --> 00:02:04,048
כי התחביר של פייתון ו-NumPy

62
00:02:04,048 --> 00:02:08,391
הוא קצת יותר מסורבל מהתחביר של אוקטבה.

63
00:02:08,410 --> 00:02:09,704
ובגלל זה,

64
00:02:09,704 --> 00:02:11,372
ומאחר שאנחנו מפרסמים ערכת

65
00:02:11,380 --> 00:02:13,039
פיתוח למתחילים באוקטבה.

66
00:02:13,039 --> 00:02:14,363
אני ממליץ בחום

67
00:02:14,363 --> 00:02:18,321
לא לנסות לעשות את התרגילים הבאים בקורס ב-NumPy ו-R

68
00:02:18,330 --> 00:02:19,805
אלא אני ממליץ לכם

69
00:02:19,805 --> 00:02:21,498
לעשות את תרגילי התכנות

70
00:02:21,520 --> 00:02:24,292
בקורס הזה במקום זאת באוקטבה.

71
00:02:24,330 --> 00:02:25,428
מה שאני עומד לעשות

72
00:02:25,428 --> 00:02:26,708
בסרטון הזה הוא לעבור

73
00:02:26,708 --> 00:02:28,667
במהירות רבה

74
00:02:28,667 --> 00:02:29,879
על רשימה של פקודות

75
00:02:29,879 --> 00:02:31,073
במטרה להראות לכם במהירות

76
00:02:31,080 --> 00:02:34,807
את מגוון הפקודות ומגוון הדברים שניתן לעשות באוקטבה.

77
00:02:34,807 --> 00:02:36,493
באתר הקורס יהיה

78
00:02:36,520 --> 00:02:38,965
תמליל של כל מה

79
00:02:38,965 --> 00:02:42,095
שנעשה כאן, ולכן לאחר

80
00:02:42,095 --> 00:02:43,185
שתצפו בסרטון הזה אתם

81
00:02:43,185 --> 00:02:44,905
יכולים להתייחס לתמליל

82
00:02:44,905 --> 00:02:46,635
שפורסם באתר הקורס

83
00:02:46,635 --> 00:02:48,247
כאשר אתם רוצים למצוא פקודה מסוימת.

84
00:02:48,247 --> 00:02:50,226
מעשית, מה שאני ממליץ

85
00:02:50,226 --> 00:02:53,225
לעשות זה קודם כל לצפות בסרטוני ההדרכה.

86
00:02:53,230 --> 00:02:55,118
ואחרי שראיתם אותם

87
00:02:55,120 --> 00:02:58,728
עד הסוף, להתקין אוקטבה על המחשב שלכם.

88
00:02:58,728 --> 00:02:59,738
ובסוף, להיכנס

89
00:02:59,738 --> 00:03:01,769
לאתר הקורס, להוריד את התמלילים

90
00:03:01,770 --> 00:03:02,983
של מה שדיברנו

91
00:03:02,983 --> 00:03:04,915
כאן בסרטון, ואז להקליד

92
00:03:04,930 --> 00:03:07,162
פקודות שנראות לכם מעניינות

93
00:03:07,200 --> 00:03:09,132
לתוך אוקטבה, כך שירוצו

94
00:03:09,132 --> 00:03:10,602
על המחשב שלכם, כדי

95
00:03:10,602 --> 00:03:12,962
שתוכלו לראות אותן בפעולה.

96
00:03:12,970 --> 00:03:15,535
ועם זה, הבה נתחיל.

97
00:03:15,920 --> 00:03:19,363
הנה שולחן העבודה שלי ב-Windows, ואני מאתחל את אוקטבה.

98
00:03:19,370 --> 00:03:20,977
ועכשיו אני בתוך אוקטבה.

99
00:03:20,977 --> 00:03:22,522
וזו שורת הפקודה באוקטבה.

100
00:03:22,522 --> 00:03:24,475
בואו נראה קודם כל את הפקודות

101
00:03:24,475 --> 00:03:27,291
הבסיסיות שאפשר להריץ באוקטבה.

102
00:03:27,330 --> 00:03:28,505
אז נקליד 5 + 6.

103
00:03:28,505 --> 00:03:30,493
ונקבל את התשובה 11.

104
00:03:30,493 --> 00:03:31,516
2 - 3.

105
00:03:31,540 --> 00:03:33,710
5x8, 1/2, 2^6

106
00:03:35,733 --> 00:03:37,747
הם 64.

107
00:03:37,810 --> 00:03:42,361
אלה הם הפעולות המתמטיות הבסיסיות.

108
00:03:42,390 --> 00:03:44,495
אפשר לעשות גם פעולות לוגיות.

109
00:03:44,550 --> 00:03:45,929
אחת = שתיים.

110
00:03:45,929 --> 00:03:47,722
מקבלים שקר, false.

111
00:03:47,722 --> 00:03:51,658
סימן האחוז כאן פירושו הערה.

112
00:03:51,658 --> 00:03:53,861
אז, התוצאה של אחת = שתיים היא שקר.

113
00:03:53,861 --> 00:03:55,622
ושקר מיוצג כאפס.

114
00:03:55,650 --> 00:03:58,028
אחת לא שווה לשתיים.

115
00:03:58,028 --> 00:03:59,312
זו אמת.

116
00:03:59,312 --> 00:04:00,718
אז זה מחזיר אחת.

117
00:04:00,718 --> 00:04:02,146
שימו לב שאנחנו כותבים לא שווה

118
00:04:02,146 --> 00:04:05,478
על ידי הסימן טילדה שווה, =~.

119
00:04:05,550 --> 00:04:07,336
ולא על ידי סימן קריאה שווה.

120
00:04:07,336 --> 00:04:09,267
כמו שכותבים במספר

121
00:04:09,267 --> 00:04:10,878
שפות תכנות אחרות.

122
00:04:10,910 --> 00:04:13,616
הבה נראה פעולות לוגיות, אחד וגם אפס,

123
00:04:13,616 --> 00:04:15,545
השתמשו בסימן אמפרסנד כפול

124
00:04:15,545 --> 00:04:17,340
לציין וגם לוגי.

125
00:04:18,120 --> 00:04:20,188
וזה יוצא שקר.

126
00:04:20,188 --> 00:04:23,886
אחת או אפס היא פעולת או לוגי.

127
00:04:23,900 --> 00:04:25,736
וזה יוצא אמת.

128
00:04:25,736 --> 00:04:27,131
ואפשר לעשור XOR בין אחת

129
00:04:27,131 --> 00:04:30,333
ואפס, וזה יוצא אחת.

130
00:04:30,333 --> 00:04:32,928
הדבר הזה בצד שמאל, אוקטבה 3.2.4

131
00:04:32,928 --> 00:04:35,683
11, זו שורת הפקודה של אוקטבה כבררת מחדל.

132
00:04:35,700 --> 00:04:37,513
היא מציגה

133
00:04:37,520 --> 00:04:39,150
את הגירסה של אוקטבה וכו'.

134
00:04:39,150 --> 00:04:40,423
אם אתה רוצה לשנות את הפרומפט,

135
00:04:40,450 --> 00:04:43,025
יש פקודה קצת לא מובנת, PS,

136
00:04:43,025 --> 00:04:44,670
גרש, גדול מ, גדול מ,

137
00:04:44,670 --> 00:04:46,602
רווח, ועוד גרש,

138
00:04:46,602 --> 00:04:48,800
בה אפשר להשתמש כדי לשנות את הפרומפט.

139
00:04:48,810 --> 00:04:51,272
וכאן בפנים אתה מכניס את המחרוזת אותה אתה רוצה.

140
00:04:51,272 --> 00:04:53,362
גרש, גדול מ, גדול מ, רווח.

141
00:04:53,400 --> 00:04:55,592
כך אני אוהב ששורת הפקודה שלי נראית באוקטבה.

142
00:04:55,592 --> 00:04:57,722
אז אם אני מקיש Enter.

143
00:04:57,920 --> 00:04:59,763
אופס, סליחה.

144
00:04:59,763 --> 00:05:00,786
ככה.

145
00:05:00,786 --> 00:05:02,622
לא PS אלא PS1, כך.

146
00:05:02,622 --> 00:05:05,420
עכשיו שורת הפקודה באוקטבה השתנתה לגדול מ, גדול מ, שכפי

147
00:05:05,500 --> 00:05:09,263
שאתם רואים נראה ממש יותר טוב.

148
00:05:09,710 --> 00:05:12,384
עכשו בואו נדבר על משתנים באוקטבה.

149
00:05:12,384 --> 00:05:13,865
אני יכול לקחת משתנה

150
00:05:13,865 --> 00:05:16,165
A ולשים בו ערך 3.

151
00:05:16,165 --> 00:05:18,421
ומקיש Enter.

152
00:05:18,440 --> 00:05:20,043
ועכשיו A שווה 3.

153
00:05:20,070 --> 00:05:22,861
אם אתה רוצה לשים ערך במשתנה, אבל אתה לא רוצה שהתוצאה תודפס.

154
00:05:22,861 --> 00:05:26,758
שים נקודה פסיק, נקודה פסיק

155
00:05:26,920 --> 00:05:30,824
מבטלת את הדפסת הפלט.

156
00:05:30,824 --> 00:05:33,160
אז נעשה את זה, נקיש Enter, זה לא מדפיס שום דבר.

157
00:05:33,160 --> 00:05:35,399
אבל הפקודה A = 3

158
00:05:35,420 --> 00:05:36,719
סתם השמה מדפיסה את הערך

159
00:05:36,719 --> 00:05:39,845
אבל A שווה 3 נקודה פסיק לא מדפיסה שום דבר.

160
00:05:39,850 --> 00:05:41,845
אני יכול להציב מחרוזת.

161
00:05:41,845 --> 00:05:43,473
B שווה 'היי'.

162
00:05:43,520 --> 00:05:45,047
עכשיו, אם אני מקיש

163
00:05:45,047 --> 00:05:46,072
סתם B אז אוקטבה מדפיסה את

164
00:05:46,072 --> 00:05:48,338
המשתנה B, אז B הוא המחרוזת היי.

165
00:05:48,370 --> 00:05:51,118
C שווה 3 גדול או שווה 1.

166
00:05:51,130 --> 00:05:54,538
אז עכשיו הערך של C הוא אמת.

167
00:05:55,710 --> 00:05:57,999
אם אתם רוצים להדפיס

168
00:05:58,030 --> 00:06:00,832
או להציג משתנה, הנה השיטה.

169
00:06:00,832 --> 00:06:03,725
הרשו לי להגדיר A שווה Pi.

170
00:06:03,760 --> 00:06:04,985
כדי להדפיס את

171
00:06:04,985 --> 00:06:08,545
A אני יכול פשוט להקליד A כך, והיא תדפיס אותו.

172
00:06:08,545 --> 00:06:10,344
כדי להדפיס דברים יותר מסובכים יש

173
00:06:10,344 --> 00:06:13,674
פקודת DISP שהיא קיצור של המילה הַצֵּג.

174
00:06:13,710 --> 00:06:15,858
הַצֵּג A פשוט מדפיס אותו.

175
00:06:15,890 --> 00:06:18,337
ניתן גם להציג מחרוזות

176
00:06:18,350 --> 00:06:21,392
כך: DISP, sprintf, שתי

177
00:06:21,460 --> 00:06:24,990
נקודות עשרוניות, %0.2,

178
00:06:25,260 --> 00:06:28,273
F, פסיק, A, כך.

179
00:06:28,273 --> 00:06:29,863
וזה ידפיס את המחרוזת.

180
00:06:29,863 --> 00:06:31,722
שתי ספרות עשרוניות, נקודתיים, 3.14.

181
00:06:31,722 --> 00:06:33,651
זהו מעין

182
00:06:33,670 --> 00:06:35,993
תחביר של שפת C הישנה.

183
00:06:35,993 --> 00:06:37,404
לאלו מכם

184
00:06:37,420 --> 00:06:39,073
שתכנתו ב-C בעבר, זה

185
00:06:39,073 --> 00:06:41,378
בעיקרון התחביר בו משתמשים כדי להדפיס מחרוזות.

186
00:06:41,380 --> 00:06:44,498
אז sprintf יוצרת

187
00:06:44,510 --> 00:06:46,021
מחרוזת עם

188
00:06:46,021 --> 00:06:48,274
2 נקודות עשרוניות, המחרוזת 3.14.

189
00:06:48,290 --> 00:06:50,644
%0.2f פירושו

190
00:06:50,644 --> 00:06:52,475
הכנס הנה את הערך של A

191
00:06:52,475 --> 00:06:55,926
עם שתי ספרות אחרי הנקודה העשרונית.

192
00:06:55,926 --> 00:06:58,104
והפקודה DISP לוקחת את המחרוזת

193
00:06:58,130 --> 00:07:00,691
שנוצרה על ידי הפקודה sprintf.

194
00:07:00,691 --> 00:07:01,683
sprintf.

195
00:07:01,683 --> 00:07:03,091
פקודת sprintf.

196
00:07:03,091 --> 00:07:05,835
ו-DISP מציגה למעשה את המחרוזת.

197
00:07:05,870 --> 00:07:07,020
בואו נראה עוד

198
00:07:07,020 --> 00:07:11,360
דוגמה, sprintf שש נקודות עשרוניות

199
00:07:11,361 --> 00:07:14,551
%0.6f פסיק A

200
00:07:14,930 --> 00:07:17,075
זה צריך להדפיס את פיי

201
00:07:17,090 --> 00:07:21,100
בדיוק של שש ספרות אחרי הנקודה העשרונית.

202
00:07:22,060 --> 00:07:25,728
עוד דבר אחד, כשמדפיסים את A סתם, הוא נראה ככה.

203
00:07:25,740 --> 00:07:28,633
ישנם קיצורי דרך שימושיים, לדוגמה הפקודה format long.

204
00:07:28,633 --> 00:07:31,759
גורמת למספרים כברירת מחדל

205
00:07:31,760 --> 00:07:33,748
להיות מוצגים עם הרבה ספרות אחרי הנקודה העשרונית.

206
00:07:33,748 --> 00:07:35,593
ו-format short היא

207
00:07:35,593 --> 00:07:37,095
פקודה המחזירה את ברירת המחדל

208
00:07:37,120 --> 00:07:40,113
של הדפסת מספר קטן של ספרות.

209
00:07:40,600 --> 00:07:43,934
אוקיי, אז ככה עובדים עם משתנים.

210
00:07:43,934 --> 00:07:47,047
עכשיו בואו נסתכל על וקטורים ומטריצות.

211
00:07:47,070 --> 00:07:49,274
נניח שאני רוצה להגדיר מטריצה A עם ערכים.

212
00:07:49,280 --> 00:07:50,974
לדוגמא: 1, 2,

213
00:07:50,980 --> 00:07:54,593
נקודה פסיק, 3, 4, נקודה פסיק, 5, 6.

214
00:07:54,600 --> 00:07:56,235
זה יוצר מטריצה שלש על

215
00:07:56,240 --> 00:07:58,572
שתיים בה השורה

216
00:07:58,580 --> 00:07:59,818
הראשונה היא 1, 2. השורה השנייה

217
00:07:59,820 --> 00:08:02,030
3, 4. והשורה שלישית היא 5, 6.

218
00:08:02,030 --> 00:08:04,385
מה שהנקודה-פסיק עושה זה

219
00:08:04,390 --> 00:08:05,818
בעצם אומר, עבור

220
00:08:05,820 --> 00:08:07,915
לשורה הבאה של המטריצה.

221
00:08:07,915 --> 00:08:09,016
ישנן דרכים אחרות להקליד את זה.

222
00:08:09,016 --> 00:08:11,536
לדוגמה עם שורות A מקבלת 1, 2 נקודה פסיק

223
00:08:11,536 --> 00:08:15,046
שורה חדשה 3, 4, נקודה פסיק שורה חדשה 5, 6, כך.

224
00:08:15,046 --> 00:08:17,038
וזו פשוט עוד דרך של

225
00:08:17,038 --> 00:08:18,576
בניית אותה מטריצה

226
00:08:18,576 --> 00:08:22,183
A שלוש על שתיים.

227
00:08:22,200 --> 00:08:23,568
באופן דומה ניתן לבנות וקטורים.

228
00:08:23,568 --> 00:08:25,532
V שווה 1, 2, 3.

229
00:08:25,560 --> 00:08:27,359
זהו למעשה וקטור שורה.

230
00:08:27,359 --> 00:08:29,915
או וקטור 3  על 1.

231
00:08:29,940 --> 00:08:32,016
זה וקטור שטוח ורחב,

232
00:08:32,030 --> 00:08:34,375
סליחה, לא, התכוונתי שזו

233
00:08:34,380 --> 00:08:37,998
מטריצה 1 על 3, כן.

234
00:08:37,998 --> 00:08:39,256
לא 3 על 1.

235
00:08:39,256 --> 00:08:41,015
לו רציתי לבנות אותו

236
00:08:41,015 --> 00:08:43,975
כוקטור עמודה,

237
00:08:43,975 --> 00:08:48,778
הייתי עושה במקום זה  V = 1; 2; 3.

238
00:08:48,830 --> 00:08:50,030
וזה היה יוצא 3 על 1.

239
00:08:50,100 --> 00:08:51,797
אבל זה וקטור 1 על 3.

240
00:08:51,797 --> 00:08:55,892
ההוא היה יוצא וקטור עמודה.

241
00:08:56,250 --> 00:08:57,968
הנה עוד כמה סימונים שימושיים.

242
00:08:57,968 --> 00:09:02,343
V = 1: 0.1: 2.

243
00:09:02,343 --> 00:09:03,598
מה שזה עושה הוא

244
00:09:03,620 --> 00:09:05,716
מאתחל V לסדרה של

245
00:09:05,716 --> 00:09:08,714
אברים שמתחילה מ-1.

246
00:09:08,714 --> 00:09:10,392
ומתקדמת בצעדים

247
00:09:10,410 --> 00:09:13,657
של 0.1 עד שהיא מגיעה ל-2.

248
00:09:13,660 --> 00:09:19,168
אז אם נעשה את זה, V יהיה כמובן וקטור שורה.

249
00:09:19,168 --> 00:09:23,022
זו למעשה מטריצה אחת על אחת עשרה.

250
00:09:23,022 --> 00:09:23,739
עם הערכים 1, 1.1, 1.2, 1.3

251
00:09:23,739 --> 00:09:26,921
וכן הלאה

252
00:09:27,630 --> 00:09:30,141
עד שתיים.

253
00:09:31,440 --> 00:09:33,269
ואני יכול גם

254
00:09:33,269 --> 00:09:35,049
להגדיר V שווה לאחד נקודתיים שש,

255
00:09:35,060 --> 00:09:38,270
שמציבה ב-V את המספרים האלה.

256
00:09:38,270 --> 00:09:41,291
מ-1 עד 6, כן.

257
00:09:41,620 --> 00:09:44,254
עכשיו הנה עוד כמה דרכים לייצר מטריצות.

258
00:09:44,254 --> 00:09:47,426
(ones(2,3 היא פקודה

259
00:09:47,426 --> 00:09:49,134
שיוצרת מטריצה שהיא

260
00:09:49,140 --> 00:09:50,790
מטריצה שתיים על שלוש

261
00:09:50,790 --> 00:09:52,712
שכל איבריה המספר אחת.

262
00:09:52,712 --> 00:09:53,991
אז אם אני מגדיר את C להיות

263
00:09:54,000 --> 00:09:56,845
שתיים כפול (ones(2,3

264
00:09:56,845 --> 00:09:59,798
אני אקבל

265
00:09:59,798 --> 00:10:03,061
מטריצה ​​שתיים על שלוש שכולה שתיים.

266
00:10:03,080 --> 00:10:04,258
אתה יכול לחשוב על זה כעל

267
00:10:04,258 --> 00:10:05,513
דרך קצרה לכתוב

268
00:10:05,550 --> 00:10:06,943
C שווה 2,2,2 נקודה פסיק

269
00:10:06,943 --> 00:10:10,951
2,2,2, שייתן גם הוא את אותה תוצאה.

270
00:10:11,450 --> 00:10:13,910
הבה ננסה W שווה

271
00:10:13,920 --> 00:10:15,485
(ones(1,3, אז זה הוא

272
00:10:15,485 --> 00:10:17,937
וקטור שורה

273
00:10:17,940 --> 00:10:20,998
או שורה של

274
00:10:20,998 --> 00:10:23,853
שלוש אחדות, ובדומה

275
00:10:23,853 --> 00:10:25,463
אפשר גם לכתוב w שווה

276
00:10:25,463 --> 00:10:27,469
(zeros(1,3

277
00:10:27,469 --> 00:10:30,209
וזה מייצר מטריצה,

278
00:10:30,220 --> 00:10:34,732
מטריצה אחת על שלוש שכולה אפסים.

279
00:10:34,732 --> 00:10:36,910
נזכיר רק עוד שתי דרכים ליצור מטריצות.

280
00:10:36,930 --> 00:10:39,175
אם אני עושה W שווה

281
00:10:39,175 --> 00:10:41,512
(rand(1,3,

282
00:10:41,520 --> 00:10:43,050
זה נותן לי מטריצה

283
00:10:43,050 --> 00:10:45,370
אחת על שלוש ​​של מספרים אקראיים.

284
00:10:45,372 --> 00:10:47,118
אם אני עושה rand

285
00:10:47,215 --> 00:10:49,008
3,3

286
00:10:49,050 --> 00:10:50,417
זה נותן לי מטריצה ​

287
00:10:50,417 --> 00:10:51,918
שלוש על שלוש של

288
00:10:51,930 --> 00:10:54,009
מספרים אקראיים

289
00:10:54,009 --> 00:10:55,830
בהתפלגות אחידה בין אפס ואחת.

290
00:10:55,830 --> 00:10:56,937
כל פעם שאני מריץ

291
00:10:56,937 --> 00:10:58,608
את זה, אני מקבל קבוצה

292
00:10:58,608 --> 00:11:00,510
שונה של מספרים אקראיים שמוגרלים

293
00:11:00,540 --> 00:11:02,573
באופן אחיד בין אפס ואחת.

294
00:11:02,573 --> 00:11:03,718
לאלו מכם

295
00:11:03,718 --> 00:11:05,375
שיודעים מהם משתנים אקראיים גאוסיאניים

296
00:11:05,410 --> 00:11:06,275
או לאלו מכם

297
00:11:06,275 --> 00:11:07,659
שיודעים מה זה משתנה אקראי בהתפלגות נורמלית,

298
00:11:07,660 --> 00:11:09,112
אפשר גם להגדיר W מקבל

299
00:11:09,112 --> 00:11:11,956
randn אחת פסיק שלוש.

300
00:11:11,990 --> 00:11:13,565
ואז נקבל

301
00:11:13,570 --> 00:11:15,435
שלושה ערכים

302
00:11:15,435 --> 00:11:17,798
בהתפלגות נורמלית או גאוסיאנית עם ממוצע

303
00:11:17,798 --> 00:11:19,266
אפס ושונות או

304
00:11:19,266 --> 00:11:21,642
סטיית תקן שווה לאחת.

305
00:11:21,642 --> 00:11:23,148
ואפשר להגדיר דברים מורכבים

306
00:11:23,150 --> 00:11:24,698
יותר כמו W שווה 6-

307
00:11:24,698 --> 00:11:26,194
ועוד השורש הריבועי של

308
00:11:26,210 --> 00:11:28,656
עשר כפול נניח

309
00:11:28,660 --> 00:11:31,978
randn אחת על עשרת אלפים.

310
00:11:31,978 --> 00:11:33,106
ואני שם כאן בסוף נקודה-פסיק,

311
00:11:33,106 --> 00:11:35,623
כי אני לא רוצה שזה יוצג על המסך.

312
00:11:35,623 --> 00:11:37,599
אז מה יתקבל?

313
00:11:37,599 --> 00:11:38,905
זה יהיה

314
00:11:38,910 --> 00:11:40,582
וקטור של

315
00:11:40,610 --> 00:11:44,481
עשרת אלפים אלמנטים.

316
00:11:44,490 --> 00:11:47,596
בעצם, אתם יודעים מה?

317
00:11:47,596 --> 00:11:48,373
בואו כן נדפיס את זה.

318
00:11:48,373 --> 00:11:51,570
אז יוצאת מטריצה כזו.

319
00:11:51,570 --> 00:11:52,408
נכון?

320
00:11:52,408 --> 00:11:53,978
עם 10,000 אלמנטים.

321
00:11:53,978 --> 00:11:55,835
אז זה מה שיצא W.

322
00:11:55,835 --> 00:11:57,392
ואם אני עכשיו

323
00:11:57,392 --> 00:11:59,442
משרטט היסטוגרמה של W

324
00:11:59,442 --> 00:12:01,818
עם הפקודה היסט (hist), אני יכול

325
00:12:01,820 --> 00:12:04,752
לעשות את זה. והפקודה הדפס היסטוגרמה (print hist)

326
00:12:04,752 --> 00:12:06,130
של אוקטבה, לוקח לה

327
00:12:06,130 --> 00:12:07,297
כמה שניות להעלות את זה,

328
00:12:07,297 --> 00:12:08,965
אבל זו ההיסטוגרמה של

329
00:12:08,970 --> 00:12:10,646
המשתנה האקראי שלי W.

330
00:12:10,650 --> 00:12:12,732
שהיא 6- פלוס שורש

331
00:12:12,732 --> 00:12:15,537
עשר כפול המשתנה האקראי הנורמלי הזה.

332
00:12:15,537 --> 00:12:17,537
ואפשר לשרטט היסטוגרמה עם

333
00:12:17,560 --> 00:12:21,032
יותר דליים, עם יותר חלקים, נניח 50 דליים.

334
00:12:21,032 --> 00:12:22,578
וזו ההיסטוגרמה

335
00:12:22,578 --> 00:12:25,735
שלי של גאוסיאן עם ממוצע 6-.

336
00:12:25,735 --> 00:12:27,285
כי בנינו אותה עם

337
00:12:27,285 --> 00:12:29,208
6-, ועוד השורש הריבועי של 10 כפול זה.

338
00:12:29,230 --> 00:12:32,952
אז השונות של

339
00:12:32,952 --> 00:12:34,961
המשתנה האקראי הגאוסיאני הזה

340
00:12:34,961 --> 00:12:36,696
היא 10 וסטיית התקן היא

341
00:12:36,700 --> 00:12:38,935
השורש הריבועי של 10, שזה בערך כמה?

342
00:12:38,950 --> 00:12:41,063
שלוש נקודה אחת.

343
00:12:41,780 --> 00:12:43,857
אחת הפקודות האחרונות

344
00:12:43,857 --> 00:12:46,208
בהרצאה היא הפקודה ליצירת מטריצת היחידה, שנקראת פקודת eye.

345
00:12:46,208 --> 00:12:48,394
זה מין

346
00:12:48,394 --> 00:12:51,028
משחק מלים על ה-I של המילה זהות.

347
00:12:51,050 --> 00:12:52,650
זוהי הפקודה (eye(4.

348
00:12:52,720 --> 00:12:56,004
מקבלים את מטריצת היחידה 4 על 4.

349
00:12:56,004 --> 00:12:57,681
I מקבל (eye(4.

350
00:12:57,681 --> 00:13:00,458
זה נותן לי את מטריצת היחידה 4 על 4.

351
00:13:00,458 --> 00:13:04,475
ו-I מקבל (eye(5 או (eye(6.

352
00:13:04,475 --> 00:13:05,611
זה נותן לנו את מטריצת הזהות ​​6 על

353
00:13:05,611 --> 00:13:08,089
6, (eye(3

354
00:13:08,120 --> 00:13:09,134
היא מטריצת היחידה 3 על 3.

355
00:13:09,134 --> 00:13:12,064
ופקודה אחרונה ממש

356
00:13:12,064 --> 00:13:14,263
לסיכום הסרטון הזה, יש עוד פקודה שימושית.

357
00:13:14,280 --> 00:13:15,479
וזו הפקודה help.

358
00:13:15,479 --> 00:13:17,454
אז תוכל להקליד help eye

359
00:13:17,454 --> 00:13:21,181
וזה מעלה את העזרה עבור פונקציית מטריצת היחידה.

360
00:13:21,190 --> 00:13:22,803
הקש Q לצאת מהעזרה.

361
00:13:22,803 --> 00:13:25,375
ואתה גם יכול להקליד help rand.

362
00:13:25,380 --> 00:13:27,793
וזה יראה את התיעוד של ראנד או

363
00:13:27,793 --> 00:13:29,734
פונקצית יצירת מספר אקראי.

364
00:13:29,734 --> 00:13:31,898
אתה יכול אפילו להקיש help help,

365
00:13:31,900 --> 00:13:35,615
שיראה לך, כמובן, עזרה על שימוש בפונקצית העזרה.

366
00:13:36,455 --> 00:13:39,022
טוב, אז אלה הם

367
00:13:39,022 --> 00:13:41,612
הפעולות הבסיסיות באוקטבה.

368
00:13:41,612 --> 00:13:42,699
ועם זה אתה אמור להיות

369
00:13:42,699 --> 00:13:47,131
מסוגל ליצור קצת מטריצות, להכפיל, לחבר אברים.

370
00:13:47,131 --> 00:13:50,553
ולהשתמש בפעולות הבסיסיות באוקטבה.

371
00:13:50,560 --> 00:13:51,893
בסרטון הבא, הייתי רוצה

372
00:13:51,920 --> 00:13:53,818
להתחיל לדבר על פקודות

373
00:13:53,818 --> 00:13:55,700
מתוחכמות יותר וכיצד

374
00:13:55,750 --> 00:13:59,180
להעביר נתונים ממקום למקום ולהתחיל בעיבוד נתונים באוקטבה.