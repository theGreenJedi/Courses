En el desarrollo de algoritmos de aprendizaje, muy a menudo unos pocos trazos simples pueden darte un mejor sentido de lo que el algoritmo está haciendo y realizar una revisión de saneamiento para verificar que todo va bien y que el algoritmo está haciendo lo que se supone que debe hacer. Por ejemplo, en un video anterior hemos hablado de cómo trazar la función de costos de «theta» puede ayudar a asegurar que el gradiente de descenso está convergiendo. A menudo, los trazos de los datos o de todos los resultados del algoritmo de aprendizaje también te darán ideas de cómo mejorar tu algoritmo de aprendizaje. Afortunadamente, Octave tiene herramientas muy sencillas para generar muchos trazos diferentes y cuando uso algoritmos de aprendizaje, encuentro que el trazado de los datos, el trazado del algoritmo de aprendizaje y así sucesivamente son a menudo una importante parte de cómo obtengo ideas para mejorar los algoritmos y en este video, me gustaría mostrarte algunas de estas herramientas de Octave para el trazado y la visualización de los datos. Esta es mi ventana de Octave. Vamos a generar rápidamente algunos datos para trazar. Así que voy a establecer que "t" es igual a, como sabes, este conjunto de números. Aquí está "t", el conjunto de números va de 0 hasta .98. Vamos a establecer que y1 es igual a seno de (2*pi*4*t) y si quiero trazar la función seno, es muy fácil. Solamente escribo plot(t,y1); y oprimo Enter. Y obtengo este trazo donde el eje horizontal es la variable "t" y el eje vertical es y1, que es el seno que viste en la función que acabamos de calcular. Vamos a establecer que y2 es igual al coseno de (2*pi*4*t), así. Y si trazo (t,y2), lo que Octave hará es tomar mi trazo de seno y lo remplazará con esta función coseno y ahora, como sabes, coseno de x comienza en 1. Ahora, ¿qué pasa si quiero tener los dos trazos de seno y coseno uno encima del otro? Lo que voy a hacer es escribir plot(t,y1). Así que aquí está mi función seno, y luego voy a utilizar la función hold on. Y lo que hold on hace es cerrar Octave para ahora trazar nuevas figuras en la parte superior de la anterior y me permite ahora trazar (t,y2). Voy a trazar la función coseno en un color diferente. Por lo tanto, permíteme escribir aquí 'r' entre comillas y en lugar de sustituir la figura actual, voy a trazar la función coseno en la parte superior y la 'r' indica que quiero que esté en color rojo. Y aquí hay comandos adicionales, xlabel('time'), para etiquetar el eje x, o el eje horizontal. Y ylabel('value'), digamos, para asignar el valor del eje vertical, y también puedo asignar valores a mis dos líneas con este comando: legend('sin', 'cos') y esto pone esta leyenda arriba en la parte superior derecha mostrando lo que son las dos líneas, y finalmente title('my plot') es el título en la parte superior de esta figura. Por último, si deseas guardar esta figura, escribes print -dpng 'myplot .png'. En donde PNG es un formato de archivo de gráficos, y si haces esto te permitirá guardar la figura en un archivo. Si hago eso, permíteme cambiar el directorio a, vamos a ver, así, y luego voy a imprimir esto. Así que esto va a tomar un rato dependiendo de cómo esté establecida tu configuración de Octave, puede tardar unos segundos, pero cambié de directorio a mi escritorio y Octave está ahora tomando algunos segundos para guardar esto. Si ahora me voy a mi escritorio, vamos a ocultar estas ventanas. Aquí está myplot.png que Octave ha guardado, y como sabes, ahí está la figura guardada como un archivo PNG. Octave puede guardad miles de otros formatos también. Puedes escribir help plot, si quieres ver los otros formatos de archivo, en lugar de PNG, en los que puedes guardar figuras. Y por último, si quieres deshacerte del trazo, el comando close hace que la figura se cierre. Así que esa es una figura, si escribo close, esa figura solamente desaparece de mi escritorio. Octave también te permite especificar los números de una figura. Puedes escribir figure(1) plot(t,y1). Eso pone en marcha la primera figura, y eso traza (t,y1). Después, si quieres una segunda figura, especificas un número de figura diferente. Así que figure(2) plot(t,y2) de esta manera, y ahora en mi escritorio, tengo en realidad 2 figuras. Así, la figura 1 y la figura 2 de modo que está trazando la función seno, y una traza la función coseno. Aquí hay otro comando genial que uso a menudo, que es el comando subplot. Así es que, vamos a utilizar subplot(1,2,1). Lo que hace es subdividir el trazo en una cuadrícula de 1x2, eso son los primeros dos parámetros, y comienza accediendo al primer elemento. Eso es lo que significa el parámetro final 1, ¿correcto? Por lo tanto, divide mi figura en una cuadrícula de 1x2, y quiero acceder al primer elemento ahora mismo. Así que, si escribo eso aquí, este producto, esta figura, está a la izquierda. Y si escribo plot(t, y1), ahora rellena este primer elemento. Y si ahora escribo subplot(1,2,2) voy a comenzar a acceder al segundo elemento y escribo plot(t,y2), bueno, tira a y2 en en el lado derecho, o en el segundo elemento. Y el último comando, puedes también cambiar las escalas de los ejes escribiendo axis([0.5 1 - 1 1]) y esto establece el rango de "x" y el rango de "y" para la figura en la derecha, y en concreto, evalúa los valores principales horizontales en la figura de la derecha del rango de 0.5 a 1, y los valores del eje vertical utilizan el rango de -1 a 1. Y, como sabes, no tienes que memorizar todos estos comandos. Si alguna vez necesitas cambiar el acceso o necesitas saber qué es algo, existe un comando de acceso y puedes obtener los detalles desde el comando usual de ayuda de Octave. Para terminar, un par de últimos comandos, clf borra la figura y aquí hay un rasgo único. Vamos a establecer que "A" es igual a un cuadro mágico de 5x5. Así que, "A" es ahora esta matriz de 5x5. Hay un genial truco que a veces uso para visualizar la matriz, puedo utilizar imagesc de "A" y lo que esto hará es trazar una matriz de 5x5, una cuadrícula de color de 5x5, en donde los diferentes colores corresponden a los diferentes valores en la matriz "A". Así es que específicamente, también puedo utilizar colorbar. Permítanme utilizar un comando más sofisticado, imagesc(A), colorbar, colormap gray. Esto realmente está ejecutando tres comandos a la vez. Estoy ejecutando imagesc, luego ejecuto colorbar, y después ejecuto colormap gray. Y lo que esto hace, es establecer un mapa de color, un mapa de color en grises, y en la derecha también pone esta barra de color. Y así esta barra de color, muestra a lo que los diferentes tonos de color corresponden. Específicamente, el elemento en la parte superior izquierda de la matriz "A" es 17, y eso corresponde a un tono de gris medio. Mientras que en contraste el segundo elemento de "A", una clase de uno, dos elementos de "A", es 24. ¿Correcto?, Así es que A(1,2) ans=24. Así que corresponde a este cuadro de aquí, lo cual es casi un tono de blanco. Y el valor pequeño, digamos, "A" ¿Qué es eso?, A(4,5), valor de ans=3 aquí, que corresponde, como puedes ver en mi barra de color que corresponde a un tono mucho más oscuro en esta imagen. Así que aquí está otro ejemplo, puedo trazar una más grande, aquí hay un magic(15) que te da un cuadro mágico de 15x15 y esto me da un trazo de cómo se ven los valores de mi cuadro mágico de 15x15. Y finalmente para terminar este video, lo que me has visto hacer aquí es utilizar llamadas a las funciones con encadenamiento de comas. Así es como en realidad se hace esto. Si escribo a=1, b=2, c=3, y presiono Enter, entonces esto en realidad está ejecutando tres comandos al mismo tiempo. O realmente lleva a cabo tres comandos, uno tras otro, e imprime los tres resultados. Y esto es muy similar a a=1;b=2; c=3, excepto que si utilizo punto y coma en lugar de una coma, no imprime nada. Así que, esto, como sabes, llamamos a esto comandos encadenados por comas, o llamada a la función por encadenamiento de comas. Y, no es más que otra manera conveniente en Octave para que varios comandos como imagesc, colorbar, colormap tengan comandos múltiples en la misma línea. Así que eso es todo. Ahora ya sabes cómo trazar diferentes figuras en Octave, y en el siguiente video la siguiente pieza principal de la que quiero hablarte es cómo escribir sentencias de control como if, while, for, sentencias en Octave, así como funciones difíciles de definir y utilizar.