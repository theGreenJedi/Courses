Saat mengembangkan algoritma belajar, sering kali beberapa plot sederhana memberi tahu Anda kerja dari algoritma tsb untuk mengecek apakah algoritma itu bekerja sebagaimana mestinya. Sebagai contoh, pada video sebelumnya, saya membahas, bagaimana memplot fungsi harga J(theta) bisa menolong Anda memastikan bila gradient descent
mencapai satu titik. Seringkali, plot-plot data atau semua output algoritma belajar akan memberi Anda ide untuk memperbaiki algoritma belajar
Anda. Untungnya, Octave punya tool yang sangat sederhana untuk menghasilkan
banyak plot-plot berbeda dan saat saya menggunakan algoritma belajar,
saya dapati bahwa memplot data, memplot algoritma belajar dan lain sebagainya, merupakan bagian penting bagaimana saya menemukan ide untuk memperbaiki algoritmanya, dan di video ini, saya akan tunjukkan beberapa tool Octave untuk memplot dan
memvisualisasi data. Ini jendela Octave saya. Mari buat beberapa data untuk diplot. Saya akan set t sama dengan deretan angka ini. Ini t, kumpulan angka dari 0 hingga 0.98. Mari kita set y1 = sin(2*pi*4*t), dan jika saya ingin memplot fungsi sin tsb,
itu sangat mudah. Ketik saja plot(t,y1) dan tekan enter. Inilah plotnya dimana sumbu horisontalnya adalah variabel t dan sumbu vertikalnya adalah y1, yaitu fungsi sinusoidal yang baru saja
dibuat. Mari set y2 = cos(2*pi*4*t) seperti itu. Jika saya plot(t,y2), yang akan Octave lakukan adalah mengambil plot sinusoidal saya, dan menggantinya dengan fungsi cos ini. Sekarang, bagaimana jika saya ingin kedua plot sin dan cos ditampilkan bersama? Yang akan saya lakukan, saya akan ketik plot(t,y1). Ini fungsi sin saya, lalu saya akan menggunakan fungsi 'hold on'. 'hold on' mengunci gambar Octave berada di atas jendela Octave, dan sekarang saya plot(t,y2). Saya akan memplotnya dengan warna yang
berbeda. Jadi, saya tambahkan r dalam tanda petik dan saya akan plot fungsi cos di gambar di atas, dan r menunjukkan warna merah. Ini perintah tambahan, xlabel('time'), untuk menamai sumbu
horisontal. Dan, ylabel('value'), untuk menamai 'value' sumbu vertikalnya. Saya juga bisa menamai dua garis saya dengan perintah legend('sin', 'cos') dan menempatkannya di kanan atas, menunjukkan apa kedua garis itu. Dan terakhir, title('my plot'), yaitu judul di atas gambar ini. Jika Anda ingin menyimpan gambar ini, ketik print -dpng myPlot .png. png adalah format fail gambar, dan jika Anda lakukan ini, sebuah fail akan tersimpan. Jika saya eksekusi itu, saya ganti direktori dulu, seperti itu, lalu mencetaknya. Ini akan makan waktu, tergantung bagaimana pengaturan konfigurasi Octave Anda, bisa beberapa detik, kecuali mengganti direktori ke desktop saya, dan sekarang Octave perlu beberapa detik untuk
menyimpannya. Jika saya ke desktop saya, inilah myPlot.png yang disimpan Octave, dan itu gambar yang disimpan sebagai
fail png. Octave juga bisa menyimpan ribuan format
lainnya. Anda bisa ketik help plot jika Anda ingin melihat format fail lainnya, selain png, yang bisa digunakan untuk menyimpan gambar. Jika Anda ingin menutup plot itu, gunakan perintah 'close'. Itu gambarnya, jika saya ketik close, gambarnya hilang dari desktop saya. Octave juga membolehkan Anda menentukan
sebuah gambar dengan angka. Ketik figure(1); plot(t,y1); Itu memulai gambar pertama, dan itu plot t, y1. Lalu, jika Anda ingin gambar kedua, Anda
tentukan nomor gambar berbeda. Jadi, figure(2); plot(t,y2); seperti itu, dan sekarang di desktop saya, saya punya
2 gambar. Gambar 1 dan gambar 2. Yang 1 memplot fungsi sin, 1 lagi memplot fungsi cos. Ini 1 perintah cerdik lain yang sering saya gunakan, yaitu perintah
'subplot'. Kita akan menggunakan subplot(1,2,1). Perintah itu membagi plot ke dalam grid 1x2, itu 2 parameter pertama, dan mulai mengakses elemen pertama. Itu parameter 1 terakhir. Jadi, bagi gambar saya ke dalam grid 1x2, dan saya ingin mengakses elemen pertama sekarang. Sehingga, jika saya ketik begitu, gambar ini berada di sebelah kiri. Jika saya plot(t,y1), hasilnya menempati elemen pertama ini. Jika saya ketik subplot(1,2,2), saya akan mulai mengakses elemen kedua. Dan, plot(t,y2) akan menempatkan y2 pada sisi kanan atau pada elemen kedua. Perintah terakhir, Anda bisa juga mengganti skala sumbu dengan axis([0.5 1 -1 1]). Ini mengatur jarak sumbu x dan y untuk gambar di kanan. Itu mengatur nilai sumbu horisontal pada gambar di kanan ini dari 0.5 s/d 1, dan nilai sumbu vertikal dari -1 s/d 1. Anda tidak perlu mengingat semua
perintah ini. Jika Anda perlu untuk mengganti sumbunya atau ingin tahu tentang itu, ada perintah axis, dan Anda bisa dapat rinciannya dari perintah help Octave. Akhirnya, 2 perintah terakhir, clf, untuk menghapus gambar, dan ada satu lagi trik cantik. Mari set A sama dengan persegi magis 5 x 5. Jadi, A adalah matriks 5 x 5. Ada suatu trik cerdik yang kadang saya gunakan untuk memvisualisasi matriks, yaitu imagesc(A) yang akan memplot matriks 5 x 5, grid warna 5 x 5. Perbedaan warnanya berkaitan dengan perbedaan nilai dalam matriks A. Saya juga bisa lakukan colorbar. Biar saya gunakan perintah yang lebih baik, imagesc(A), colorbar, colormap gray. Ini menjalankan 3 perintah sekaligus. Saya menjalankan imagesc(A), lalu colorbar, lalu colormap gray. Perintah ini menset peta warna abu-abu, dan menempatkan pita warna di sebelah kanan. Jadi, pita warna ini menunjukkan arti dari perbedaan
corak warna. Lebih jelasnya, elemen kiri atas matriks A adalah 17, dan itu berkaitan dengan corak abu-abu pada umumnya. Sebaliknya, elemen kedua A elemen baris 1 kolom 2 adalah 24. A(1,2) adalah 24. Itu berkaitan dengan abu-abu di atas ini, yakni hampir bercorak putih. Dan nilai terkecil, katakanlah A(4,5) yaitu nilai 3 ini, yang berkaitan dengan, Anda bisa lihat, itu terkait dengan corak yang jauh lebih gelap dalam
gambar ini. Ini contoh lainnya. Saya bisa plot magic(15) persegi magis 15 x 15, dan ini menghasilkan plot tampilan nilai-nilai persegi magis
15 x 15. Dan akhirnya, sebagai penutup video ini, apa yang telah Anda lihat di sini, saya menggunakan koma untuk memanggil
fungsi-fungsi. Ini cara melakukannya. Jika saya ketik a=1, b=2, c=3 dan menekan enter, maka ini sebenarnya memanggil 3 perintah secara serentak. Atau memanggil 3 perintah, satu per satu, dan mencetak ketiga hasilnya. Ini mirip dengan a=1; b=2; c=3; kecuali jika saya gunakan titik koma pengganti koma, hasilnya tidak akan dicetak. Jadi, ini kita sebut rangkaian koma perintah, atau
rangkaian koma pemanggilan fungsi. Itu hanyalah cara lain dalam Octave untuk menempatkan beberapa perintah seperti imagesc, colorbar, colormap dalam 1 baris. Itu saja. Sekarang Anda tahu cara memplot gambar-gambar berbeda dengan Octave, dan pada video berikut, hal yang ingin saya bahas adalah cara menulis pernyataan kontrol seperti if, while, for, di Octave, juga cara mendefinisikan
dan menggunakan fungsi-fungsi.