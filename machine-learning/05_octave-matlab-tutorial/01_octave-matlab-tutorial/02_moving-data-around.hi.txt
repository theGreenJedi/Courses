इस दूसरे ट्यूटोरियल वीडियो में ओकटेव पर, मैं शुरू करना चाहता हूँ बताना आपको कि कैसे डेटा को इधर उधर ले जाना हैं ओकटेव में. अत:, यदि आपके पास डेटा है, एक मशीन लर्निंग प्रॉब्लम के लिए, आप कैसे उस डेटा को लोड करते हैं ओकटेव में. आप इसे कैसे मैट्रिक्स में रखते हो? आप कैसे इन मेट्रिसीज़ को मनिप्युलेट करते हो? आप परिणाम कैसे सेव करते हो? कैसे आप डेटा को इधर उधर ले जाते हो और ऑपरेट करते हो डेटा के साथ? यह है मेरी ओकटेव विंडो पहले जैसे, उठाते हुए जहाँ हमने पिछले विडीओ में छोड़ा था. यदि मैं टाइप करता हूँ A, वह है मेट्रिक्स तो हम इसे जेनेरेट करते हैं, ठीक है, इस कमांड से ईक्वल्ज़ एक, दो, तीन, चार, पांच, छह, और यह है एक तीन बाई दो मेट्रिक्स. साइज़ कमांड ओकटेव में करने देता है आपको, बताता है आपको क्या है साइज़ एक मेट्रिक्स का. तो साइज़ A देता है तीन, दो. ऐसा होता है कि यह साइज़ कमांड ख़ुद वास्तव में देता है एक एक बाई दो मेट्रिक्स. तो आप वास्तव में सेट कर सकते हैं SZ ईक्वल्ज़ साइज़ A का और SZ है अब एक एक बाई दो मेट्रिक्स जहाँ पहला एलिमेंट इसका है तीन, और दूसरा एलिमेंट इसका है दो. तो, यदि आप सिर्फ़ टाइप करते हैं साइज़ SZ का. क्या SZ है एक एक बाई दो मेट्रिक्स जिसके दो एलिमेंट्स में हैं डिमेन्शन्स मेट्रिक्स A की. आप कर सकते हैं टाइप साइज़ A एक भी जो आपको वापिस देता है पहली डिमेन्शन A की, साइज़ A की पहली डिमेन्शन का. तो वह है संख्या रोज़ की और साइज़ A दो देता है वापिस आपको दो, जो है संख्या कॉलम्स की मेट्रिक्स A के. यदि पास है एक वेक्टर V, तो मान लो V बराबर है एक, दो, तीन, चार, और आप टाइप करते हैं लेंग्थ V. क्या यह करता है कि यह देता है आपको साइज़ सबसे लम्बी डिमेन्शन का. तो आप टाइप कर सकते हैं लेंग्थ A भी और क्योंकि A है एक तीन बाई दो मेट्रिक्स, डिमेन्शन है साइज़ तीन की, तो इसे प्रिंट करना चाहिए तीन लेकिन अक्सर हम अप्लाई करते हैं लेंग्थ सिर्फ़ वेक्टर्ज़ को. तो आप जानते हैं, लेंग्थ एक, दो तीन, चार, पांच, बजाय अप्लाई करने के लेंग्थ मेट्रिसीज़ को क्योंकि वह है थोड़ा भ्रमित करने वाला. अब, चलो देखते हैं कैसे लोड करते हैं डेटा और ढूँढते हैं फाइल सिस्टम पर डेटा. जब हम शुरू करते हैं ओकटेव हम होते हैं अक्सर, हम बहुधा होते हैं एक पाथ में जो है, आप जानते हैं, स्थान जहाँ ओकटेव स्थित है. तो pwd कमांड दिखाती है वर्तमान डिरेक्टरी, या वर्तमान पाथ जिसमें ओकटेव है. तो अभी हम हैं इस शायद कोई और डिरेक्टरी में. CD कमांड है डिरेक्टरी बदलने के लिए, अत: मैं जा सकता हूँ C:/users/Ang/Desktop में, और अब मैं हूँ, आप जानते हैं, मेरे Desktop में और यदि मैं टाइप करता हूँ ls, ls है, यह आता है एक यूनिक्स या एक लिनक्स कमांड से. लेकिन, ls लिस्ट करेगा डिरेक्टरी मेरे डेस्क्टाप पर और इसलिए ये हैं फ़ाइल्ज़ जो हैं मेरे Desktop में अभी. वास्तव में, मेरे डेस्कटॉप पर हैं दो फ़ाइल्ज़ : फ़ीचर्ज़ X और प्राइस Y जो है आयीं शायद एक मशीन लर्निंग प्रॉब्लम से जो मैं हल करना चाहता हूँ. तो, यहाँ मेरा डेस्क्टॉप. यहाँ है फ़ीचर्ज़ X, और फ़ीचर्ज़ X है यह विंडो, माफ़ करें, है यह फ़ाइल जिसमें दो कॉलम्स हैं डेटा के. यह वास्तव में है मेरा घरों की क़ीमत का डेटा. तो मुझे लगता है, आप जानते हैं, मैं सोचता हूँ मेरे पास हैं सैंतालीस रोज़ इस डेटा सेट में. और इसलिए पहले घर का साइज़ है दो सौ चार स्क्वेर फ़ुट, इसमें तीन शयन कक्ष; दूसरा घर सोलह सौ स्क्वेर फ़ुट का है, तीन शयन कक्ष हैं; और इसी प्रकार आगे. और प्राइस Y है यह फ़ाइल जिसमें हैं क़ीमतें डेटा की मेरे ट्रेनिंग सेट में. तो, फ़ीचर्ज़ X और प्राइस Y हैं सिर्फ़ टेक्स्ट फ़ाइल्ज़ मेरे डेटा की. कैसे मैं लोड करूँ यह डेटा ओकटेव में? ठीक है, मैं सिर्फ़ टाइप करता हूँ कमांड लोड फ़ीचर्ज़ X डॉट डैट और यदि मैं वह करता हूँ, मैं लोड करता हूँ फ़ीचर्ज़ X और कर सकता हूँ लोड प्राइस Y डॉट डैट. और वैसे, ऐसा करने के बहुत से तरीक़े हैं. यह कमांड यदि आप रखते हैं फ़ीचर्ज़ X डॉट डैट उस पर स्ट्रिंग में और लोड करते हैं इसे इस तरह. यह एक टाइपो है वहाँ. यह है एक समान कमांड. तो आप कर सकते हैं, इस तरह मैं सिर्फ़ लिख रहा हूँ फ़ाइल का नाम का स्ट्रिंग एक स्ट्रिंग में और ओकटेव में इस्तेमाल करें सिंगल क्वोट्स स्ट्रिंग्स को दर्शाने के लिए, इस तरह. तो वह है एक स्ट्रिंग, और हम कर सकते हैं लोड वह फ़ाइल जिसका नाम दिया है उस स्ट्रिंग के द्वारा. अब WHO कमांड अब दिखाती हैं मुझे क्या वेरियेबल्स हैं मेरे पास ओकटेव की वर्कस्पेस में. तो WHO दिखाता हैं मुझे कि क्या वेरीयबल्स है जो ओकटेव में वर्तमान में हैं मेमरी में. फ़ीचर्ज़ X और है उनमें से, तथा वेरीयबल्स जो, आप जानते हैं, हमने बनाए थे पहले इस सेशन में. तो मैं टाइप करता हूँ फ़ीचर्ज़ X प्रदर्शित करने के लिए फ़ीचर्ज़ X. और वह है मेरा डेटा. और मैं टाइप कर सकता हूँ साइज़ फ़ीचर्ज़ X और वह है मेरा 47 बाई दो मेट्रिक्स. और इसी प्रकार साइज़ प्राइस Y, वह देता हैं मुझे मेरा 47 बाई एक वेक्टर. यह है एक 47 डिमेन्शनल वेक्टर. यह है एक आम वेक्टर जिसमें हैं सारी क़ीमतें Y मेरे ट्रेनिंग सेट की. अब WHO फ़ंक्शन दिखाता है आपको वेरीयबल्स में से एक, जो हैं वर्तमान वर्कस्पेस में. वहाँ है WHO S भी वेरीयबल भी जो देता है आपको विस्तृत जानकारी. और इसलिए यह भी, अंत में एक S के साथ यह भी लिस्ट करता है मेरे वेरीयबल्स सिवाय कि यह अब लिस्ट करता है साइज़ भी. तो A है एक तीन बाई दो मेट्रिक्स और फ़ीचर्ज़ X है एक 47 बाई 2 मेट्रिक्स. प्राइस Y है एक 47 बाई एक मेट्रिक्स. मतलब यह है सिर्फ़ एक वेक्टर. और यह दिखाता है, आप जानते हैं, कितनी बाइट्स मेमरी की यह लेता है. तथा क्या है टाइप डेटा की इसकी. डबल का मतलब है डबल फ़्लोटिंग पोईँट तो उसका केवल मतलब है कि ये हैं रियल वैल्यूज़, फ़्लोटिंग पोईँट नम्बर्ज़. अब यदि आप चाहते हैं हटाना एक वेरीयबल को आप इस्तेमाल कर सकते हैं क्लीयर कमांड. अत: क्लीयर फ़ीचर्ज़ X और टाइप करें WHOS फिर से. आप ध्यान दें कि फ़ीचर्ज़ X वेरीयबल अब नहीं है. और हम कैसे सेव करते हैं डेटा को? चलिए देखते हैं. चलो लेते हैं वेरीयबल V और मान लो यह है प्राइस Y 1 : 10. यह सेट करता है V को पहले 10 एलिमेंट्स से वेक्टर Y के. तो चलो टाइप करते हैं who या whos. जहाँ Y था एक 47 बाई 1 वेक्टर. वहाँ V है अब 10 बाई 1 वेक्टर. V बराबर है प्राइस Y, एक कोलोन दस वह सेट करता है इसे सिर्फ़ पहले दस एलिमेंट्स से Y के. मान लो मैं सेव करना चाहता हूँ यह डेटा डिस्क पर कमांड सेव, हेलो.मैट V. यह करेगा सेव वेरीयबल V को एक फ़ाइल में जिसका नाम है हेलो.मैट. तो चलो करते हैं वह. और अब एक फ़ाइल आ गई है मेरे Desktop में, आप जानते हैं, जिसे कहते हैं हेलो.मैट. मैंने इंस्टॉल किया हैं मैटलैब इस विंडो में, जिसकी वजह से, आप जानते हैं, यह आइकॉन दिखता है ऐसे क्योंकि विंडो ने इसे जाना है एक मैटलैब फ़ाइल जैसे, लेकिन न करें चिंता इसके बारे में यदि यह फ़ाइल का है एक भिन्न आइकॉन आपकी मशीन पर और मान लो मैं क्लीयर करता हूँ मेरे सारे वेरीयबल्स. तो यदि आप टाइप करते हैं क्लीयर बिना किसी चीज़ के साथ तब यह वास्तव में हटा देता है सारे वेरीयबल्स आपकी वर्कस्पेस से. तो अब वहाँ कुछ भी बचा नहीं है वर्कस्पेस में. और यदि मैं लोड करता हूँ हेलो.मैट, मैं कर सकता हूँ अब लोड वापिस मेरे वेरीयबल V, जो है डेटा जो मैंने पहले सेव किया था हेलो.मैट फ़ाइल में. तो, हेलो.मैट, क्या हमने अभी किया था सेव करने के लिए हेलो.मैट देखने के लिए, यह सेव करती है डेटा को बाइनेरी फ़ॉर्मैट में, एक थोड़ा अधिक कम्प्रेस्ड बाइनेरी फ़ॉर्मैट में. तो यदि V है एक बहुत अधिक डेटा, यह, आप जानते है, होगा और अधिक कम्प्रेस्ड. लेगा कम स्पेस. यदि आप सेव करना चाहते हैं आपका डेटा एक व्यक्ति के पठनीय फ़ॉर्मैट में तब आप टाइप करें सेव हेलो.टेक्स्ट वेरीयबल V और तब -ascii. तो, यह सेव करेगा इसे एक टेक्स्ट या ascii फ़ॉर्मैट में टेक्स्ट के. और अब, जब मैं किया है वह, मेरे पास है यह फ़ाइल. हेलो.टेक्स्ट अब आ गई है मेरे डेस्क्टाप में, और यदि मैं इसे खोलता हूँ, हम देखते हैं कि यह है एक टेक्स्ट फ़ाइल जिसमें मेरा डेटा सेव किया है. तो यह है जैसे आप कैसे लोड और सेव करते हैं डेटा को. अब चलो बात करते हैं थोड़ी कि कैसे मनिप्युलेट करना है डेटा को. चलो सेट करते हैं A बराबर उस मेट्रिक्स के फिर से तो यहाँ है मेरी तीन बाई दो मेट्रिक्स. तो इंडेक्सिंग करते हुए, तो टाइप करे A 3, 2. यह इंडेक्स करता है 3,2 एलिमेंट के लिए मेट्रिक्स A में. तो, यह है क्या, आप जानते हैं, सामान्य रूप में, हम लिखते हैं इसे एक सब स्क्रिप्ट 3, 2 जैसे या A सबस्क्रिप्ट, आप जानते हैं, 3, 2 और इसलिए वह है एलिमेंट और तीसरा रो और दूसरा कॉलम A का जो है एलिमेंट छ:. मैं टाइप कर सकता हूँ A दो कॉमा कोलोन लाने के लिए सब कुछ दूसरी रो का. तो, कोलोन का मतलब है प्रत्येक एलिमेंट उस रो या कॉलम के साथ. तो A 2 कॉमा कोलोन है यह दूसरी रो A की. ठीक है. और इसी प्रकार यदि मैं करता हूँ A कोलोन कॉमा 2 तब इसका मतलब है लाना सब कुछ दूसरे कॉलम से A के. तो, यह देता है मुझे 2 4 6. ठीक है इसका मतलब है A के दूसरे कॉलम से सब कुछ. तो, यह है मेरा दूसरा कॉलम A का, जो है 2 4 6. अब, आप कर सकते हैं इस्तेमाल कुछ और सफ़िस्टिकेटेड / उन्नत इंडेक्स ऑपरेशन्स में. तो इसलिए, हम सिर्फ़ क्लिक करते हैं प्रत्येक उदाहरण पर. आप शायद अक्सर इसे नहीं करेंगे, लेकिन मैं करता हूँ यह A 1 3 कॉमा कोलोन. इसका मतलब हैं लाएँ सारे एलिमेंट्स जिनके पहले इंडेक्स हैं एक या तीन. तब इसका मतलब है मुझे मिलता है सब कुछ पहली और तीसरी रो से A की और सारे कॉलम्स से. तो, यह थी मेट्रिक्स A और इसलिए A 1 3 कॉमा कोलोन का मतलब है लाना सब कुछ पहली रो का. और दूसरी रो का तथा तीसरी रो का और कोलोन का मतलब है, आप जानते हैं, एक दोनो पहला और दूसरा कॉलम और इसलिए यह देता है मुझे यह 1 2 5 6. हालांकि, आप उपयोग करते हैं सोर्स का अधिक सब्स्क्रिप्ट इंडेक्स ऑपरेशन्स के शायद कम बार. आप दिखाने के लिए हम और क्या कर सकते हैं. यहाँ है मैट्रिक्स A और यह सोर्स A कोलोन, मुझे देने के लिए दूसरा कॉलम. आप इस्तेमाल कर सकते हैं इसे असायन्मेंट करने के लिए भी. तो मैं लेता हूँ दूसरा कॉलम A का और असाइन करता हूँ उसे 10, 11, 12 और यदि मैं वह करता हूँ मैं अब, आप जानते हैं, ले रहा हूँ दूसरा कॉलम A का और मैं असाइन कर रहा हूँ यह कॉलम वेक्टर 10, 11, 12 इसे. तो, अब A है यह मेट्रिक्स जो है 1, 3, 5. और दूसरा कॉलम अब हो गया है 10, 11, 12. और यहाँ है एक और ऑपरेशन. चलो सेट करते हैं A को बराबर A कॉमा 100, 101, 102 इस तरह और क्या यह करेगा कि एक और कॉलम पर निर्भर करेगा दाईं तरफ़. सो अब, अरे. मुझे लगता हैं एक छोटी ग़लती हो गई है. डालना चाहिए था सेमीकोलन वहाँ और अब A बराबर है इसके. सही है? मैं आशा करता हूँ कि यह समझ आया होगा. तो यह 100, 101, 102. यह है एक कॉलम वेक्टर और हमने क्या किया था हमने सेट किया A, लें A और सेट करें इसे प्रारम्भिक परिभाषा पर. और फिर हम रखते हैं वह कॉलम वेक्टर दाईं तरफ और इसलिए, हम लेते हैं मेट्रिक्स A और - जो थी ये छ: एलिमेंट्स बाईं तरफ़. तो हमने ली मेट्रिक्स A और हमने अपेंड कर दिया एक और कॉलम वेक्टर दाईं तरफ़; जिस वजह से अब A है एक तीन बाई तीन मेट्रिक्स जो दिखती है वैसे. और अंत में, एक साफ तरकीब जो मैं कभी-कभी इस्तेमाल करता हूँ यदि आप करते हैं सिर्फ़ एक और सिर्फ़ एक कोलोन ऐसे. यह है कुछ विशेष केस सिंटैक्स का. इसका क्या मतलब हैं कि रखें सारे एलिमेंट्स A के एक सिंगल कॉलम वेक्टर में और यह मुझे देता है मुझे एक 9 बाई 1 वेक्टर. वे मिल जाते हैं दूसरों के साथ और जुड़ जाते हैं एक साथ. बस कुछ और उदाहरण. चलो देखते हैं. मान लो मैं सेट करता हूँ A बराबर 123456, ठीक है? तो मान लो मैं सेट करता हूँ B को B बराबर 11, 12, 13, 14, 15, 16. मैं बना सकता हूँ एक नई मेट्रिक्स C AB की तरह. इसका सिर्फ़ मतलब है मेरी मेट्रिक्स A. यहाँ है मेरी मेट्रिक्स B और मैंने सेट की है C बराबर AB के. मैं क्या कर रहा हूँ कि मैं ले रहा हूँ ये दोनो मेट्रिसीज़ और सिर्फ़ जोड़ रहा हूँ उन्हें एक दूसरे से. तो बाईं, मेट्रिक्स A बाईं तरफ़. और मेरे पास है मेट्रिक्स B दाई तरफ़. और इस तरह मैंने बना दी यह मेट्रिक्स C उन्हें एक साथ रखकर. मैं कर सकता हूँ C बराबर A सेमीकोलन B भी. सेमी कोलोन नोटेशन का मतलब है कि मैं रखता हूँ अगली चीज़ तले / बॉटम पर. तो, मैं करूँगा A बराबर सेमीकोलन B. यह भी रखता है मेट्रिसीज़ A और B को एक साथ सिवाय कि यह अब रखता हैं उन्हें एक दूसरे के ऊपर. तो अब मैंने रखा हैं A ऊपर और B नीचे और C यहाँ है अब एक 6 बाई 2 मेट्रिक्स. तो, सिर्फ़ कहने के लिए सेमीकोलोन चीज़ का प्रायः मतलब होता है, आप जानते हैं, जाएँ अगली लाइन पर. तो, C बनता है A और तब नीचे जाएँ उसके और रखें B तले पर और इस तरह, यह A B है समान A, B के और इसलिए, आप जानते हैं, दोनो में से कोई भी देता है आपको वही परिणाम. तो, उसके साथ, उम्मीद है आप अब जानते हैं कैसे बनानी हैं मेट्रिसीज़ और आशा है शुरू कर सकते हैं दिखाना आपको कुछ कमांड्स जो आप इस्तेमाल कर सकते हैं जल्दी से मेट्रिसीज़ को एक साथ रखने के लिए और ले मेट्रिसीज़ और, आप जानते हैं, रखें उन्हें एक साथ बनाने के लिए बड़ी मेट्रिसीज़ और सिर्फ़ कुछ लाइन्स से कोड की, ओकटेव है बहुत सुविधाजनक इस मामले में कि कितनी जल्दी हम बना सकते हैं जटिल मेट्रिसीज़ और कर सकते हैं डेटा को इधर-उधर. तो इतना ही डेटा को इधर-उधर करने के लिए. अगले वीडियो में हम शुरू करेंगे बात करने के लिए कि कैसे वास्तव में करते हैं पेचीदा कॉम्प्यूटेशन्स इस पर, हमारे डेटा पर. तो, उम्मीद है वह देता है आपको एक अहसास कि कैसे सिर्फ़ कुछ कमांड्स से, आप कर सकते हैं बहुत शीघ्रता से डेटा यहाँ वहाँ ओकटेव में. आप जानते हैं, आप लोड और सेव करते हैं वेक्टर र्स और मेट्रिसीज़, लोड और सेव करते हैं डेटा, रखते हैं एक साथ मेट्रिसीज़ बनाने के लिए बड़ी मेट्रिसीज़, इंडेक्स कर सकते हैं यह चुनाव कर सकते हैं विशेष एलिमेंट्स का मेट्रिसीज़ के. मैं जानता हूँ मैंने बताई हैं बहुत सी कमांड्स, तो मैं सोचता हूँ सबसे बढ़िया काम जो आप कर सकते हैं बाद में, कि देखें ट्रान्स्क्रिप्ट पर चीज़ों की जो मैं टाइप कर रहा था. आप जानते हैं, देखें उसे. देखें कोर्स वर्क साइट पर और डाउनलोड करें ट्रान्स्क्रिप्ट को सेशन की वहाँ से और देखें ट्रान्स्क्रिप्ट को और टाइप करें कुछ उनमें से कमांड्स ओकटेव में अपने से और शुरू करें जानना इन कमांड्स को और काम कराएँ उनसे. और जाहिर है, आप जानते हैं, कोई मतलब नहीं है इन सभी कमांड्स को याद करने की कोशिश करने का. यह है सिर्फ़, लेकिन आपको क्या करना चाहिए कि, आशा है इस वीडियो से आपको कुछ समझ आया होगा कि किस तरह के काम आप कर सकते हैं. ताकि जब बाद में जब आप प्रयास कर रहे हैं प्रोग्राम करने का एक लर्निंग अल्गोरिद्म स्वयं, यदि आप कोशिश कर रहे हैं ढूँढने की एक विशेष कमांड जो शायद आप सोचते हैं ओकटेव कर सकता है क्योंकि आप सोचते हैं आपने शायद देखा है उसे यहाँ, आपको रेफ़र करनी चाहिए ट्रान्स्क्रिप्ट सेशन की और देखना चाहिए उसमें से ढूँढने के लिए कमांड जो आप इस्तेमाल करना चाहते हैं. तो, इतना ही डेटा इधर उधर करना और अगले वीडियो में मैं क्या करूँगा कि शुरू करूँगा बताना आपको कि कैसे वास्तव में करते हैं करते हैं पेचीदा कॉम्प्यूटेशन्स हमारे डेटा पर, और कैसे कम्प्यूट करते हैं डेटा पर और वास्तव में शुरू करते हैं इम्प्लमेंट करना लर्निंग अल्गोरिद्म्स.