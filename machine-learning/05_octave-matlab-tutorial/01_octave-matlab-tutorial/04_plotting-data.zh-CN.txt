当开发学习算法时 往往几个简单的图 可以让你更好地 理解算法的内容 并且可以完整地检查下 算法是否正常运行 是否达到了算法的目的 例如在之前的 视频中  我谈到了 绘制成本函数J(θ) 可以帮助 确认梯度下降算法是否收敛 通常情况下  绘制数据 或学习算法所有输出 也会启发你 如何改进你的学习算法 幸运的是  Octave有非常 简单的工具用来生成大量 不同的图 当我用学习算法时 我发现 绘制数据 绘制学习算法等 往往是 我获得想法 来改进算法的重要部分 在这段视频中 我想告诉你一些 Octave的工具来绘制和可视化你的数据 这是我的 Octave 窗口 我们先来快速生成一些数据 用来绘图 我先设置t 等于这个数列 这是t 是从0到0.98的集合 让我们设置y1等于sin 2*pi*4*t （此处pi表示π） 如果我想绘制正弦函数 这是很容易的 我只需要输入plot(t, y1) 并回车 就出现了这个图 横轴是 t变量 纵轴是y1 也就是我们 刚刚所输出的正弦函数 让我们设置y2 等于cos 2*pi*4*t 而如果我输入plot t逗号y2 Octave将会 消除之前的正弦图 并且用这个余弦图来代替它 这里纵轴cos(x)从1开始 如果我 要同时表示 正弦和余弦曲线 我要做的就是 输入plot(t, y1) 这是我的正弦函数 我使用函数hold on hold on函数 的功能是将 新的图像绘制在 旧的之上 我现在绘制t y2 我要以不同的颜色绘制余弦函数 所以我在这里输入 带引号的r 我将绘制余弦函数 在这之上 而不是替换了现有的图 r表示所使用的颜色 再加上命令xlabel('time') 来标记X轴即水平轴 输入ylabel('value') 来标记垂直轴的值 同时我也可以 来标记我的两条函数曲线 用这个命令 legend('sin', 'cos') 将这个 图例放在右上方 表示这两条曲线表示的内容 最后输入title('myplot') 在图像的顶部显示这幅图的标题 如​​果你想保存 这幅图像，你输入print -dpng 'myplot.png' png是一个图像 文件格式 如果你 这样做了 它可以让你保存为一个文件 如果我这样做 让我先改一下路径 像这样 然后我将它打出来 这需要一点时间 而这取决于你的 Octave的配置设置 可能需要几秒钟  但改变 路径到我的桌面 现在Octave需要几秒钟​​的时间来保存它 如果我现在去到我的桌面  先最小化这些窗口 这就是 Octave所保存的myplot.png 这就是保存为PNG的文件 Octave也可以保存为很多其他的格式 你可以键入help  plot 如果你想试试 其他格式的文件  而不是 PNG 你可以把图片 保存为其他格式 最后如​​果你想 删掉这个图像 命令close会让这个图像关掉 如果我键入 close  这个图像 就从我的桌面消失了 Octave也可以让你为图像标号 你键入figure(1); plot(t, y1); 将显示 第一张图 绘制了变量t y1 如果你想绘制第二个图 你可以指定一个不同的数字编号 键入figure(2); plot(t, y2); 正如这样 现在我的桌面上  其实有2个图 图1和图2 此时一个绘制正弦 函数  另一个绘制了余弦函数 这是另一个我经常使用的命令 subplot命令 我们要使用subplot(1,2,1) 它将图像 分为一个 1*2的格子 也就是前两个参数 然后它使用 第一个格子 也就是最后一个参数1的意思 所以，将我的图像分成 1*2的格子 我现在使用 第一个格子 如果我键入这个 那么这个图像显示在左边 如果键入plot(t, y1) 现在这个图 显示在第一个格子 如果我键入subplot(1,2,2) 那么我就要 使用第二个格子  键入plot(t, y2); 现在y2显示在右边 也就是第二个格子 最后一个命令  你可以 改变轴的刻度 比如改成 [0.5 1 -1 1] 也就是设置了 右边图的x轴 和y轴的范围 具体而言 它将 右图中的横轴 的范围调整至0.5到1 竖轴的范围为 -1到1 而且 你不需要记住所有这些命令 如果你需要 改变坐标轴或者 需要知道axis命令 你可以 用Octave中 help命令了解细节 最后  还有几个命令 clf清除 一幅图像 这里有一个独特的特点 让我们设置A等于 一个5×5 magic方阵 现在A是这个5*5 的矩阵 我有时用一个巧妙的方法 来可视化矩阵 也就是imagesc(A) 它将会 绘制一个5*5的矩阵 一个5*5的彩色格图 不同的颜色对应 A矩阵中的不同值 具体地说 我还可以使用函数colorbar 让我用一个 更复杂的命令 imagesc(A) colorbar colormap gray 这实际上是在同一时间运行三个命令 运行imagesc然后运行 colorbar 然后运行colormap gray 它生成了 一个颜色图像 一个灰度分布图 并在 右边也加入一个颜色条 所以这个颜色条 显示不同深浅的颜色所对应的值 具体地  左上 A矩阵的元素 是17  所以对应 的是这样中等的灰度 而与此相反的第二个 元素  也就是 A(1,2)元素 代表的值为24 它对应于 这里的这个方块 是接近白色的灰度 较小的值比如 A多少呢 A(4,5) 为3对应着 你可以看到在我的颜色条 它对应于 一个更暗的灰度 这里是另一个例子 我可以绘制一个较大的 比如magic（15） 给你一个15* 15 magic方阵 这将会是一幅 15*15的magic方阵值的图 最后 总结一下这段视频 你看到我所做的 是使用逗号连接函数调用 这里是你如何真正做到这一点 如果我键入a=1 b=2 c=3 然后按Enter键 其实这是将这 三个命令同时执行 或者是 将三个命令一个接一个执行 它将输出所有这三个结果 这很像 a=1; b=2; c=3; 如果我用分号来代替逗号 没有输出出任何东西 所以你知道 这里我们称之为 逗号连接的命令或函数调用 只是另一种 Octave中更便捷的方式 将多条命令例如imagesc colorbar colormap 将这多条命令写在同一行中 就是这样 现在你知道如何绘制 Octave中不同的图像 在下面的视频中 下一个主要内容 我将告诉你怎样在Octave中 写控制语句 比如if while for语句 并且定义和使用函数 【教育无边界字幕组】翻译: wangqiwhu 校对: 牛仔仔 审核:所罗门捷列夫