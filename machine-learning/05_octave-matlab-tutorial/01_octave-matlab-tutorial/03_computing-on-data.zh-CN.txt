现在 你已经学会了在Octave中 如何加载或存储数据 如何把数据存入矩阵 等等 在这段视频中 我将向你介绍 如何对数据进行运算 这是我的 Octave 窗口 运算操作来实现我们的学习算法 现在我们开始吧 这是我的 Octave 窗口 我现在快速地 初始化一些变量 比如设置A 为一个3×2的矩阵 设置B为 一个3 × 2矩阵 设置C为 2 × 2矩阵 现在 我想算两个矩阵的乘积 比如说 A × C 我只需键入A×C 这是一个 3×2 矩阵乘以 2×2 矩阵 得到这样一个3×2矩阵 你也可以对每一个元素 做运算 方法是做点乘运算A .*B 这么做 Octave将矩阵 A 中的每一个元素 与矩阵 B 中的 对应元素相乘 这是A 这是B 这是A .* B 比如说 这里第一个元素 1乘以11得到11 第二个元素是 2乘以12得到24 这就是两个矩阵的 元素位运算 通常来说 在Octave中 点号一般 用来表示元素位运算 这里是一个矩阵A 所以 让我们看看 这将对矩阵A中 每一个元素平方 所以 1的平方是1 2的平方是4 等等 我们设V是一个向量 设V为 [1; 2; 3] 是列向量 你也可以输入 1 ./ V 得到每一个元素的倒数 所以这样一来 就会分别算出 1/1  1/2  1/3 矩阵也可以这样操作 1 ./ A 得到 A中每一个元素的倒数 同样地 这里的点号 还是表示对每一个元素进行操作 我们还可以进行求对数运算 也就是对每个元素 进行求对数运算 还有自然数e的幂次运算 就是以e为底 以这些元素为幂的运算 所以这是e 这是e的平方 这是e的立方 v 矩阵是这样的 我还可以用 abs 来对 v 的每一个元素 求绝对值 当然这里 v 都是正数 我们换成另一个 这样对每个元素求绝对值 得到的结果就是 这些非负的元素 还有 -v 给出V中每个元素的相反数 这等价于 -1 乘以 v 不过一般就直接用 -v 就好了 其实就等于 -1*v 还有什么呢？ 还有一个技巧 比如说 我们想对v中的每个元素都加1 那么我们可以这么做 首先构造一个 3行1列的1向量 然后把这个1向量跟原来的向量相加 因此 v 向量从[1 2 3] 增至 [2 3 4] 我用了一个 length(v) 命令 因此这样一来 ones(length(v) ,1) 就相当于 ones(3,1) 所以这是ones(3,1) 对吧 然后我做的是 v + ones(3,1) 也就是将 v 的各元素 都加上这些1 让我们来看一看 增加了1 另一种更简单的方法是 直接用 v+1 所以这是 v v + 1 也就等于 把 v 中的每一个元素 都加上1 现在 让我们来谈谈更多的操作 这是我的矩阵A 如果你想要求它的转置 那么方法是用A‘ 这是单引号符号 并且是左引号 可能你的键盘上 有一个左引号 和一个右引号 这里用的是左引号 也就是标准的引号 因此 A’ 将得出 A 的转置矩阵 当然 如果我写 (A‘)’ 也就是 A 转置两次 那么我又重新得到矩阵 A 还有一些有用的函数 假如说 小写a 是[1 15 2 0.5] 这是一个1行4列矩阵 假如说 val=max(a) 这将返回 A矩阵中的最大值 在这里是15 我还可以写 [val, ind] = max(a) 这将返回 a矩阵中的最大值 存入val 以及该值对应的索引 因此元素15对应的索引值为2 存入ind 所以 ind 等于2 特别注意一下 如果你用命令 max(A) A是一个矩阵的话 这样做就是对每一列 求最大值 等下再仔细讲讲 我们还是用这个例子 这个 小a 矩阵 如果输入 a<3 这将进行逐元素的运算 所以 第一个元素 是小于3的 因此返回1 a的第二个元素 不小于3 所以 这个值是0 表示"非" 第三个和第四个数字 仍然是小于3 2和0.5都小于3 因此 这返回[1 1 0 1] 也就是说 对a矩阵的每一个元素 与3进行比较 然后根据每一个元素与3的大小关系 返回1和0表示真与假 现在 如果我写 find(a<3) 这将告诉我 a 中的哪些元素 是小于3的 是小于3的 在这里就是第一 第三和第四个元素 是小于3的 下一个例子 设A = magic(3) magic 函数返回什么呢 让我们查看 magic 函数的帮助文件 magic 函数将返回 一个矩阵 称为魔方阵或幻方 (magic squares) 它们具有以下 这样的数学性质 它们所有的行和列和对角线 加起来都等于相同的值 当然据我所知 这在机器学习里 基本用不上 但我可以用这个方法 很方便地生成一个 3行3列的矩阵 而这个魔方矩阵这神奇的方形屏幕。 每一行 每一列 每一个对角线 三个数字加起来