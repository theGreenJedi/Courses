अब आप काफ़ी कुछ जानते हैं मशीन लर्निंग के बारे में. इस विडीओ में, मैं चाहता हूँ सिखाना आपको एक प्रोग्रैमिंग लैंग्विज, ओकटेव, जिसमें आप कर पाएँगे शीघ्रता से इम्प्लमेंट लर्निंग अल्गोरिद्म्स जो हमने पहले देखें है, और लर्निंग अल्गोरिद्म्स जो सीखेंगे बाद में इस कोर्स में. विगत में, मैंने कोशिश की है मशीन लर्निंग सिखाने की विभिन्न प्रकार की प्रोग्रैमिंग लैंग्विजेज़ के द्वारा जिसमें शामिल हैं सी++, जावा, पाइथान, नमपाई और ओकटेव भी, और मैंने क्या पाया कि छात्र कर पाये लर्न सबसे अच्छी तरह लाभकारी तरह से लर्न अधिक शीघ्रता से प्रोटो टाइप बना पाए अपने अल्गोरिद्म का अधिक शीघ्रता से प्रयोग करके एक अपेक्षाकृत हाई लेवल लैंग्विज ओकटेव जैसी. वैसे तो, मैं अक्सर देखता हूँ सिलीकॉन वैली में कि यदि आपको बनाना भी पड़े, यदि आपको बनाना पड़े एक बड़े स्केल का डिप्लोयमेंट एक लर्निंग अल्गोरिद्म का, लोग अक्सर क्या करते हैं कि प्रोटोटायप बनाते हैं और लैंग्विज होती है ओकटेव. जो एक बेहतरीन प्रोटोटायपिंग लैंग्विज है. तो आप एक प्रकार से अपने लर्निंग अल्गोरिद्म को वर्किंग बना सकते हैं शीघ्रता से. और तब यदि आपको चाहिए एक बड़ी स्केल कि इम्प्लमेंटेशन इसकी, केवल तब व्यतीत कर सकते हैं आपका समय दोबारा इम्प्लमेंट करने में अल्गोरिद्म को सी++ जावा या ऐसी किसी लैंग्विज में. क्योंकि सब पाठ हमने जो सीखें हैं कि प्रोग्राम करें एक टाइम या डिवेलप एक टाइम. वह आपका टाइम  / समय है. मशीन लर्निंग का समय बहुत ही बहुमूल्य है. और यदि आप कर सकते हैं आपके लर्निंग अल्गोरिद्म को वर्किंग अधिक शीघ्रता से ओकटेव में तब कुल मिलाकर आपके पास होती है एक बहुत अधिक समय की बचत पहले बना के अल्गोरिद्म को ओकटेव में और फिर इम्प्लमेंट करके शायद सी++, जावा केवल तब जब हमने अपने विचारों को वर्किंग कर लिया है. सबसे आम तौर पर प्रोटोयपिंग लैंग्विज जो मैं लोगों को प्रयोग करते देखता हूँ मशीन लर्निंग के लिए वे हैं : ओकटेव, मैटलैब, पाइथान, नमपाई और आर. ओकटेव अच्छी है क्योंकि यह ओपन सोर्स है. और मैटलैब भी काम करती है अच्छे से लेकिन यह महँगी है बहुत से लोगों के लिए. लेकिन यदि आपके पास एक्सेस है मैट लैब की एक कापी का, आप मैट लैब भी प्रयोग कर सकते हो इस क्लास में. अगर आप जानते हैं पाइथान, नमपाई, या आप जानते हैं आर. मैं अवश्य ही देखता हूँ कुछ लोगों को इसे प्रयोग करते हुए. लेकिन मैं क्या देखता हूँ कि लोग अक्सर बना पाते हैं कुछ धीरे धीरे, और आप जानते हैं, ये लैंग्विजेज़. क्योंकि पाइथान, नमपाई का सिंटैक्स केवल थोड़ा ही बुरा है ओकटेव के सिंटैक्स से. और इसलिए उस वजह से, और क्योंकि हम दे रहे है शुरू का कोड ओकटेव में. मैं ज़ोर देकर रेकमेंड करूँगा कि आप न करे कोशिश आगे की एक्सर्सायज़ेज़ क्लास की करने कि नमपाई या आर में. लेकिन मैं अवश्य रेकमेंड करूँगा कि आप इसके बजाय करें प्रोग्रैमिंग एक्सर्सायज़ेज़ इस क्लास के लिए ओकटेव में. क्या करुंगा मैं इस विडीओ में कि पढ़ेंगे / देखेंगे एक लिस्ट कमांड्ज़ की बहुत, फटाफट, और इसका उद्देश्य है आपको जल्दी से दिखाना रेंज कमांड्ज़ की और रेंज उन सब कामों की जो आप कर सकते हैं ओकटेव में. कोर्स की वेब साइट पर होगी एक ट्रैन्स्क्रिप्ट सब चीज़ों की जो मैं करूँगा, और इसलिए बाद में देखने पर यह विडीओ आप रेफ़र कर सकते हैं ट्रैन्स्क्रिप्ट को जो है कोर्स कि वेब साइट पर जब आप ढूँढना चाहते हैं एक कमाँड. वास्तव में, मैं क्या रेकमेंड करूँगा कि आप पहले देख लें टूटोरीयल विडीओस. और देखने के बाद अंत तक , तब इंस्टॉल करें ओकटेव अपने कम्प्यूटर पर. और अंत में, जाइए कोर्स वेब साइट पर, डाउनलोड करें ट्रैन्स्क्रिप्ट्स उन चीज़ों की जो आप देखते हैं सेशन में, और टाइप करें जो भी कमैंड दिलचस्प लगे आपको ओकटेव में, क्योंकि यह आपके अपने कम्प्यूटर पर चल रहा है, ताकि आप देख सकें इसे रन करते हुए आपके लिए. और इसी के साथ, चलिए शुरू करते हैं. यह है मेरा विंडोज़ डेस्क्टाप, और मैं शुरू करूँगा ओकटेव. और अब मैं ओकटेव में हूँ. और वह मेरा ओकटेव प्रॉम्प्ट है. चलिए पहले में दिखाता हूँ एलेमेंटरी ऑपरेशंज़ जो आप ओकटेव में कर सकते हैं. तो आप टाइप करें 5 + 6. वह देता है उत्तर 11 का. 3-2. 5 x 8, 1/2, 2^6 है 64. तो वे हैं एलेमेंटरी गणित के ऑपरेशंज़. आप लॉजिकल ऑपरेशंज़ भी कर सकते हैं. तो एक बराबर है दो के. जो इवैल्यूएट होता है फाल्स. पर्सेंट कमैंड का यहाँ मतलब है कॉमेंट. तो, एक बराबर है दो, इवैल्यूएट होता है फाल्स. जो दर्शाते हैं ज़ीरो से. एक नहीं है बराबर दो के. यह है ट्रू. तो वह रिटर्न करता है एक. नोट कीजिए यह ईक्वल साइन नहीं है यह है तिल्डे ईक्वल्ज़ चिन्ह. और सिर्फ़ ईक्वल्ज़ नहीं. जो कुछ और प्रोग्रैमिंग लैंग्विजेज़ प्रयोग करती हैं. चलिए देखते हैं लॉजिकल ऑपरेशंज़ एक और ज़ीरो डबल ऐम्पर्सैंड साइन प्रयोग करें लॉजिकल एंड के लिए. और यह इवैल्यूएट होता है फाल्स. एक या ज़ीरो है ऑर ऑपरेशन. और यह इवैल्यूएट होता है ट्रू. और मैं कर सकता हूँ एक्स ऑर एक और ज़ीरो को, और यह इवैल्यूएट होता है एक. यह चीज़ यहाँ बाईं तरफ़, यह ओकटेव 324.ईएक्सई कोलोन : 11, यह है डिफ़ॉल्ट ओकटेव प्रॉम्प्ट. यह दिखाता है कि, क्या, वर्ज़न है ओकटेव का इत्यादि. अगर आपको नहीं चाहिए वह प्रॉम्प्ट, एक कुछ क्रिप्टिक कमैंड पीएफ़ क्वोट, ग्रेटर दैन, ग्रेटर दैन और इसी प्रकार आगे, जो आप प्रयोग कर सकते हैं प्रॉम्प्ट बदलने के लिए. और मैं सोचता हूँ कि यह क्वोट करता है एक स्ट्रिंग को बीच से. आपका क्वोट, ग्रेटर दैन, ग्रेटर दैन, स्पेस. वह है जो मैं चाहता हूँ मेरा ओकटेव प्रॉम्प्ट दिखे. तो, यदि में एंटर दबाता हूँ, अरे, मुझे माफ़ कीजिए. ऐसे. पी एस्स 1 ऐसे. अब मेरा ओकटेव प्रॉम्प्ट बदल गया है ग्रेटर दैन, ग्रेटर दैन, साइन में. जो आप जानते हैं काफ़ी बेहतर दिखता है. आगे, चलिए बात करते हैं ओकटेव के वेरीअबल्ज़ की. मैं ले सकता हूँ वेरीअबल ए और असाइन करता हूँ इसे 3. और दबाता हूँ एंटर. और अब ए बराबर है 3 के. आप असाइन करना चाहते हैं एक वेरीअबल, लेकिन आप प्रिंट नहीं करना चाहते रिज़ल्ट. अगर आप डालेंगे एक सेमी कोलोन, सेमी कोलोन दबा देता है प्रिंट आउट्पुट. और उसे करने के लिए, एंटर, यह कुछ प्रिंट नहीं करता है. जबकि ए बराबर है 3. मिक्स करें, प्रिंट करें, जहाँ A है, 3 सेमी कोलोन कुछ प्रिंट नहीं करता. मैं कर सकता हूँ स्ट्रिंग असायन्मेंट. बी बराबर है हाई अब मैं यदि सिर्फ़ करता हूँ एंटर बी यह प्रिंट करता है वेरीअबल बी. अत: बी है स्ट्रिंग हाई. सी बराबर है 3 ग्रेटर दैन ईक्वल टू 1. तो, अब सी इवैल्यूएट होता है ट्रू. यदि आप चाहें प्रिंट करना या दिखाना / डिस्प्ले करना एक वेरीअबल को, यहाँ है ऐसे करते हैं आप. चलिए मैं सेट करता हूँ ए बराबर पाई के. और यदि मैं चाहूँ प्रिंट करना ए मैं सिर्फ़ टाइप करूँगा ए ऐसे, और यह इसे प्रिंट कर देगा. अधिक जटिल प्रिंटिंग कि लिए है डिस्प कमैंड भी, jजिसका मतलब है डिस्प्ले. डिस्प्ले ए सिर्फ़ प्रिंट करता है ए ऐसे. आप डिस्प्ले कर सकते हैं स्ट्रिंग्स भी. अत: डिस्प,स्प्रिंटएफ टू डेसिमल्ज़, पर्सेंट 0.2, एफ़,कॉमा, ए. ऐसे. और यह प्रिंट करेगा स्ट्रिंग. टू डेसिमल्ज़,कोलोन, 3.14. यह है एक प्रकार से एक पुराने तरह का सी सिंटैक्स. आप में से उनके लिए जो प्रोग्राम किया है सी में पहले, यह है वास्तव में सिंटैक्स जो आप प्रयोग करते थे स्क्रीन पर प्रिंट करने के लिए. अत: स्प्रिंटएफ  बनाता है एक स्ट्रिंग जो छोटी है 2 डेसिमल्ज़ से, 3.1 प्लस स्ट्रिंग. इस पर्सेंट 0.2 एफ़ का मतलब है ए को इसकी जगह रखें, दिखाते हुए दो डिजिट्स डेसिमल पोईँट के बाद. और डिस्प लेता है स्ट्रिंग डिस्प बनाता है इसे स्प्रिंटएफ कमैंड से. स्प्रिंटएफ़. स्प्रिंटएफ कमैंड. और डिस्प वास्तव में दिखाता है स्ट्रिंग. और आपको दिखाने के लिए एक और उदाहरण, स्प्रिंटएफ़ छः डेसिमल्ज़ पर्सेंट 0.6 एफ़ कॉमा ए. और इसे प्रिंट करना चाहिए पाई छः डेसिमल प्लेसेज़ के साथ. अंत में, मैं कह रहा था, इस प्रकार, दिखता है इस प्रकार. ऐसे सहायक शॉर्ट कट्स हैं जैसे टाइप फ़ॉर्मैट लोंग. यह करता है स्ट्रिंग्स को अपने आप दिखने के लिए बहुत सारे डेसिमल प्लेसेज़ के साथ. और फ़ॉर्मैट शॉर्ट है एक कमैंड जो करता है अपने आप प्रिंटिंग बहुत कम संख्या में डिजिट्स. ओके, तो इस प्रकार आप काम करते हैं वेरीअबल्ज़ के साथ. अब चलिए देखते हैं वेक्टर्ज़ और मेट्रिसीज़. मान लीजिए मैं असाइन करना चाहता हूँ मैट ए मेट्रिक्स को. चलिए मैं दिखाता हूँ आपको एक उदाहरण: 1, 2, सेमी कोलोन, 3, 4, सेमी कोलोन, 5, 6॰ इससे बनती है एक तीन बाई दो की मेट्रिक्स ए जिसकी पहली रो है 1,2. दूसरी रो 3,4. तीसरी रो है 5,6. सेमी कोलोन क्या करता है कि वास्तव में जाता है अगली रो पर मेट्रिक्स कि. ऐसे और भी तरीक़े हैं इसे टाइप करने के. टाइप करे ए 1, 2 सेमी कोलोन 3, 4, सेमी कोलोन, 5, 6 ऐसे. और यह है एक और समतुल्य / इक्विवलेंट ढंग असाइन करने के ए को वैल्यूज़ इस तीन बाई दो मेट्रिक्स की. इसी प्रकार से, आप असाइन कर सकते हैं वेक्टर्ज़ को. अत: वी बराबर है 1, 2, 3. यह वास्तव में एक रो वेक्टर है. या यह एक 3 बाई 1 वेक्टर है. जहाँ यह बड़ा वाय वेक्टर है माफ़ कीजिए, नहीं यह है एक 1 बाई 3 मेट्रिक्स, सही है. न कि 3 बाई 1. यदि मैं असाइन करना चाहूँ इसे एक कॉलम वेक्टर को, मैं क्या करूँगा इसके बजाय कि करूँगा वी 1;2;3. और यह मुझे देगा एक 3 बाई 1. यह है एक 1 बाई 3 वेक्टर. तो यह होगा एक कॉलम वेक्टर. यहाँ है थोड़ी और सहायक नोटेशन. वी बराबर है 1: 0.1: 2. यह करता है कि यह सेट करता है वी को कुछ एलेमेंट्स से जो शुरू होते है 1 से. और बढ़ते हैं स्टेप्स में 0.1 के तब तक जब तक आप 2 पर पहुँचते है. तो यदि मैं यह करता हूँ, वी होगा यह, आप जानते है, रो वेक्टर. यह है एक बाई ग्यारह की मेट्रिक्स वास्तव में. वह है 1, 1.1, 1.2, 1.3, और इसी प्रकार आगे जब तक हम पहुँचते हैं दो तक. अब, मैं कर सकता हूँ सेट वी को बराबर एक : छः भी, और वह सेट करेगा वी को इन नम्बर्ज़. 1 से 6. ओके. अब ऐसे और भी तरीक़े हैं मेट्रिसीज़ को बनाने के. वन्स 2.3 है एक कमैंड जो बनाती है एक मेट्रिक्स जो है एक दो बाई तीन का मेट्रिक्स वह है मेट्रिक्स सारे एक का. तो यदि मैं उसे सेट करता हूँ सी ईक्वल्ज़ 2 टाइम्ज़ वन्स टू बाई थ्री यह बनाता है एक दो बाई तीन का मेट्रिक्स जिसमें सारे दो है. आप इसे सोच सकते हो एक थोड़ा छोटा ढंग है लिखने के लिए सी ईक्वल्ज़ 2,2,2 सेमी कोलोन 2,2,2 जो आपको वही रिज़ल्ट देगा. मान लीजिए डबल्यू ईक्वल्ज़ वन्स, एक बाई तीन , तो यह होगा एक रो वेक्टर या एक रो तीन वन्स की और इसी प्रकार आप कह सकते हैं डबल्यू ईक्वल्ज़ ज़ीरोज़, एक बाई तीन, और यह बनाएगा एक मेट्रिक्स. एक एक बाई तीन का मेट्रिक्स जिसमें सारे ज़ीरो है. सिर्फ़ कुछ और ढंग बनाने के मेट्रिसीज़ को. अगर मैं करता हूँ डब्ल्यू ईक्वल्ज़ रैंड एक बाई तीन, यह मुझे देता है एक एक बाई तीन का मेट्रिक्स सारे रैंडम नम्बर्ज़ का. अगर मैं करता हूँ रैंड तीन बाई तीन इससे बनती है एक तीन बाई तीन का मेट्रिक्स सारे रैंडम नम्बर्ज़ का जो लिए गए हैं यूनिफ़ोर्म डिस्ट्रिब्यूशन से ज़ीरो और एक के बीच. अत: हर बार मैं करता हूँ यह, मुझे मिलते हैं  एक अलग सेट रैंडम नम्बर्ज़ का जो लिए गए हैं यूनिफ़ोर्म डिस्ट्रिब्यूशन से ज़ीरो और एक के बीच. आप में से उनके लिए जो जानते हैं कि क्या है एक गॉशीयन रैंडम वेरीअबल या आप में से वे जो जानते हैं कि क्या है एक नोर्मल रैंडम वेरीअबल आप कर सकते हैं सेट डबल्यू को बराबर रैंड एन के, एक बाई तीन. और ये होंगी तीन वैल्यूज़ जो ली गईं होंगी एक गॉशीयन डिस्ट्रिब्यूशन से जिसकी मीन है ज़ीरो और वेरीयन्स या स्टैंडर्ड डीवीएशन बराबर है एक. और आप सेट कर सकते हो अधिक जटिल काम जैसे डबल्यू बराबर है माइनस छः, प्लस स्क्वेर रूट दस, टाइम्ज़, मान लीजिए रैंड एन, एक बाई दस हज़ार. और मैं डालूँगा एक सेमी कोलोन अंत में क्योंकि मैं वास्तव में इसे प्रिंट नहीं करना चाहता. यह क्या होगा? ठीक है, यह होगा एक वेक्टर जिसमें होगे एक सौ हज़ार, माफ़ कीजिए, दस हज़ार एलेमेंट्स. तो, ठीक है, वास्तव में, आप जानते हैं क्या? चलिए इसे प्रिंट करते हैं. तो यह बनाएगा एक मेट्रिक्स इस प्रकार की. ठीक? 10,000 एलेमेंट्स के साथ. तो, वह है डबल्यू. और यदि मैं अब प्लॉट करता हूँ एक हिस्टोग्राम डबल्यू का एक हिस्ट कमांड के साथ, मैं कर सकता हूँ अब. और ओकटेव की प्रिंट हिस्ट कमांड, आप जानते हैं, लेता है कुछ सेकंड्ज़ इसे दिखाने में, लेकिन यह है एक हिस्टोग्राम मेरे रैंडम वेरीअबल डबल्यू के लिए. वहाँ था माइनस 6 प्लस ज़ीरो टेन टाइम्ज़ यह गॉशीयन रैंडम वेरीअबल. और मैं प्लॉट कर सकता हूँ एक हिस्टोग्राम और बकेट्स के साथ, और अधिक बिन्स के साथ, मान लीजिए, 50 बिन्स. और यह है मेरा हिस्टोग्राम एक गॉशीयन का मीन माइनस 6 के साथ. क्योंकि मेरे पास है एक माइनस 6 वहाँ प्लस स्क्वेर रूट 10 टाइम्ज़ यह. इसलिए वेरीयन्स है इस गॉशीयन रैंडम वेरीअबल का है 10 या स्टैंडर्ड डीवीएशन है स्क्वेर रूट 10 का, जो लगभग कितना है? तीन पोईँट एक. अंत में, एक विशेष कमांड बनाने के लिए मेट्रिक्स, जो है आई कमांड. तो आई का मतलब है यह शायद एक कटाक्ष है शब्द आयडेंटिटी पर. लेकिन यह ऐसे काम करता है सेट आइ 4. यह है 4 बाई 4 की आयडेंटिटी मेट्रिक्स. अत: आइ ईक्वल्ज़ आइ 4. यह मुझे देता है एक 4 बाई 4 की आयडेंटिटी मेट्रिक्स. और आइ ईक्वल्ज़ आइ 5, आइ 6. यह देता है मुझे एक 6 बाई 6 आयडेंटिटी मेट्रिक्स, आइ3 है 3 बाई 3 की आयडेंटिटी मेट्रिक्स. अंत में, करने के लिए रैप उप इस विडीओ को, एक और सहायक कमांड है. जो है हेल्प कमांड. तो आप टाइप कर सकते हैं हेल्प आई और यह दिखाएगा हैल्प फ़ंक्शन आयडेंटिटी मेट्रिक्स के लिए. क्यू दबाएँ बाहर आने के लिए. और आप टाइप कर सकते हैं हेल्प रैंड भी यह दिखाएगा डॉक्युमेंटेशन रैंड के लिए या रैंडम नम्बर जेनरेशन फ़ंक्शन के लिए. या यहाँ तक कि हेल्प हेल्प, जो दिखाएगा आपको, आप जानते हैं, हेल्प हेल्प फ़ंक्शन के लिए. तो, वे है बेसिक ऑपरेशंज़ ओकटेव में. और इसके साथ आप कर सकेंगे बनाना कुछ मेट्रिसीज़ को, गुना करना, जमा करना. और प्रयोग कर पाएँगे बेसिक ऑपरेशंज़ ओकटेव में. अगले वीडियो में, मैं चाहूँगा बात करना कुछ अधिक प्रगतिशील / सफ़िस्टिकेटेड कमांड्ज़ के बारे में और कैसे प्रयोग करते हैं उन्हें डेटा के साथ और शुरू करेंगे डेटा को प्रॉसेस करना ओकटेव में.