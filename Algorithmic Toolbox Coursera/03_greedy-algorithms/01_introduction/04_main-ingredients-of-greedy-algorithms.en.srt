1
00:00:00,180 --> 00:00:01,415
Hi.
In this video,

2
00:00:01,415 --> 00:00:05,236
we will briefly review the main
ingredients of greedy algorithms and

3
00:00:05,236 --> 00:00:07,928
the first of them is
reduction to a subproblem.

4
00:00:07,928 --> 00:00:12,817
Basically, when you have some problem,
you make some first move and

5
00:00:12,817 --> 00:00:17,807
thus reduce your problem to a similar
problem, but which is smaller.

6
00:00:17,807 --> 00:00:22,776
For example, you have fewer digits left or
fewer gas stations left in front of

7
00:00:22,776 --> 00:00:27,524
you and this similar problem,
which is smaller is called a subproblem.

8
00:00:27,524 --> 00:00:30,695
Another key ingredient is a safe move and

9
00:00:30,695 --> 00:00:36,300
the move is called safe if it is
consistent with some optimal solution.

10
00:00:36,300 --> 00:00:41,695
In other words, if there exists some
optimal solution in which the first

11
00:00:41,695 --> 00:00:46,738
move is the same as your move,
then your move is called a safe move and

12
00:00:46,738 --> 00:00:50,080
not all first moves are actually safe.

13
00:00:50,080 --> 00:00:51,052
For example,

14
00:00:51,052 --> 00:00:56,317
to go until there's no fuel is not a safe
move in the problem about car fueling.

15
00:00:56,317 --> 00:01:01,253
And often, greedy moves are also not safe,
for example,

16
00:01:01,253 --> 00:01:06,288
to get to the closest gas station and
refuel at it is not a safe

17
00:01:06,288 --> 00:01:12,770
move while to get to the farthest gas
station and refuel there is a safe move.

18
00:01:12,770 --> 00:01:15,740
Now the general strategy of
solving a problem goes like this.

19
00:01:15,740 --> 00:01:20,886
First, you analyze the problem and
you come up with some greedy choice and

20
00:01:20,886 --> 00:01:25,700
then the key thing is to prove that
this greedy choice is a safe move and

21
00:01:25,700 --> 00:01:28,100
you really have to prove it.

22
00:01:28,100 --> 00:01:31,897
Because, otherwise, you can come
up with some greedy choice and

23
00:01:31,897 --> 00:01:36,315
then come up with a greedy algorithm and
then even implement it and test it and

24
00:01:36,315 --> 00:01:38,127
try to submit it in the system.

25
00:01:38,127 --> 00:01:41,057
Only to learn that
the algorithm is incorrect,

26
00:01:41,057 --> 00:01:45,744
because the first move is actually not
a safe move and there are cases in which

27
00:01:45,744 --> 00:01:49,950
this first move is not consistent
with any optimal solution.

28
00:01:49,950 --> 00:01:53,701
And in that case,
we will have to invent a new solution and

29
00:01:53,701 --> 00:01:55,585
implement it from scratch.

30
00:01:55,585 --> 00:01:58,325
All the work you've done
before will be useless.

31
00:01:58,325 --> 00:02:05,465
So please prove your algorithms and
prove that the first move is a safe move.

32
00:02:05,465 --> 00:02:10,248
When you prove that,
you reduce a problem to a subproblem.

33
00:02:10,248 --> 00:02:14,920
And hopefully, that is a similar problem,
problem of a same kind and

34
00:02:14,920 --> 00:02:19,100
then you start solving
this subproblem the same way.

35
00:02:19,100 --> 00:02:23,644
You make your greedy choice and
you reduce it to subproblem, and

36
00:02:23,644 --> 00:02:28,611
you iterate until there are no problems
left or until your problem is so

37
00:02:28,611 --> 00:02:31,833
simple that you can just
solve it right away.

38
00:02:31,833 --> 00:02:33,253
And in the next lessons,

39
00:02:33,253 --> 00:02:37,115
we will apply greedy algorithms
to solve more difficult problems.