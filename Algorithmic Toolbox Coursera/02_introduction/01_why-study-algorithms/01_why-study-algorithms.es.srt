1
00:00:03,470 --> 00:00:04,780
Hola a todos

2
00:00:04,780 --> 00:00:05,910
Soy Daniel Kane.

3
00:00:05,910 --> 00:00:09,300
¡Bienvenido a la especialización en 
estructuras de datos y algoritmos!

4
00:00:09,300 --> 00:00:12,150
En esta primera lectura, vamos a
comenzar por el principio y

5
00:00:12,150 --> 00:00:16,310
hablar de por qué necesitas
estudiar algoritmos en primer lugar.

6
00:00:16,310 --> 00:00:21,480
Así pues, el objetivo básico de esta lectura
es una especie de discurso sobre los tipos

7
00:00:21,480 --> 00:00:24,800
de problemas que vamos a discutir
en esta clase de algoritmos y

8
00:00:24,800 --> 00:00:26,460
por qué son importantes.

9
00:00:26,460 --> 00:00:30,610
Y en el contexto de hacer esto, también
vamos a discutir algunos problemas que

10
00:00:30,610 --> 00:00:34,910
en los que puedes incurrir cuando escribes
programas de ordenador que podrían no

11
00:00:34,910 --> 00:00:39,520
necesitar realmente las técnicas sofisticadas
que vamos a discutir en este curso.

12
00:00:39,520 --> 00:00:40,420
Por otro lado,

13
00:00:40,420 --> 00:00:44,310
discutiremos otros tipos de problemas
que podrías querer resolver que

14
00:00:44,310 --> 00:00:47,620
van más allá de la clase de material del
que trataremos aquí.

15
00:00:48,720 --> 00:00:52,920
Para empezar con ello, supongamos que estás
escribiendo un programa de ordenador.

16
00:00:52,920 --> 00:00:57,280
Hay un gran número de tareas que
puedes querer realizar

17
00:00:57,280 --> 00:01:00,490
en las que realmente no necesitas
pensar en ello mucho.

18
00:01:00,490 --> 00:01:05,360
Hay cosas como mostrar un texto
dado en la pantalla o copiar

19
00:01:05,360 --> 00:01:10,910
un archivo de una ubicación a otra,
o buscar en un archivo una palabra dada.

20
00:01:10,910 --> 00:01:13,920
Cada uno de estos algoritmos es
esencialmente una búsqueda lineal.

21
00:01:13,920 --> 00:01:17,160
Pasas por cada palabra en el archivo,
una cada vez y

22
00:01:17,160 --> 00:01:19,310
haces lo apropiado.

23
00:01:19,310 --> 00:01:22,280
Y en cada uno de estos problemas,
existe esencialmente una búsqueda lineal

24
00:01:23,330 --> 00:01:26,070
que realmente no puedes hacer mucho mejor.

25
00:01:26,070 --> 00:01:28,350
Con el fin de hacer cualquiera
que sea la tarea que estés haciendo,

26
00:01:28,350 --> 00:01:32,950
debes atravesar todos los datos de uno
en uno y procesarlos adecuadamente.

27
00:01:32,950 --> 00:01:35,250
Y cuando haces más o

28
00:01:35,250 --> 00:01:38,750
la cosa obvia, tienes
un programa que funciona.

29
00:01:38,750 --> 00:01:40,700
Resuelve el problema que necesitas.

30
00:01:40,700 --> 00:01:44,140
Y lo hace aproximadamente tan
eficientemente como podrías esperar.

31
00:01:45,150 --> 00:01:49,180
Así que para este tipo de problemas
no tienes que pensar mucho

32
00:01:49,180 --> 00:01:50,820
sobre qué algoritmo estás utilizando.

33
00:01:52,070 --> 00:01:56,520
Por otro lado, existen algunos otros problemas,
verdaderos problemas algorítmicos,

34
00:01:56,520 --> 00:01:59,340
donde no está tan claro
que necesitas hacer.

35
00:02:00,350 --> 00:02:02,230
Por ejemplo, puedes tener un mapa dado y

36
00:02:02,230 --> 00:02:06,910
necesitas encontrar el camino más
corto entre dos localizaciones en el mapa.

37
00:02:06,910 --> 00:02:10,990
O puedes estar intentando encontrar el mejor

38
00:02:10,990 --> 00:02:15,920
emparejamiento entre estudiantes y dormitorios
dada algún tipo de lista de preferencias, o

39
00:02:15,920 --> 00:02:18,870
puedes estar intentando medir las 
similitudes entre dos documentos diferentes.

40
00:02:20,000 --> 00:02:22,650
Para este tipo de problemas
es un poco más complicado,

41
00:02:22,650 --> 00:02:26,550
no está inmediatamente claro
cómo resolver estos problemas.

42
00:02:26,550 --> 00:02:29,820
E incluso cuando
abordas las soluciones,

43
00:02:29,820 --> 00:02:34,600
a menudo las soluciones sencillas a estos 
problemas resultan ser demasiado lentas.

44
00:02:34,600 --> 00:02:36,920
Podrías finalizar con
algún algoritmo sencillo,

45
00:02:36,920 --> 00:02:41,050
podrías encontrar todos los posibles
emparejamientos entre personas y dormitorios y

46
00:02:41,050 --> 00:02:46,230
responder el que optimiza alguna
función que intentes manejar.

47
00:02:46,230 --> 00:02:50,240
Por otro lado, si haces esto,
probablemente te tomará mucho,

48
00:02:50,240 --> 00:02:52,020
mucho tiempo.

49
00:02:52,020 --> 00:02:56,140
Y puedes no tener bastante
tiempo para esperar y por tanto

50
00:02:56,140 --> 00:02:57,409
puedes necesitar hacer algo mejor.

51
00:02:58,530 --> 00:03:02,420
Y aún cuando tengas un algoritmo
razonablemente eficiente para

52
00:03:02,420 --> 00:03:06,590
estos problemas, a menudo hay un
gran margen para una optimización adicional.

53
00:03:06,590 --> 00:03:10,030
Mejoras las cosas para que se ejecuten
en una hora en vez de en un día,

54
00:03:10,030 --> 00:03:11,780
o un minuto en vez de una hora,

55
00:03:11,780 --> 00:03:13,540
o un segundo en lugar de un minuto.

56
00:03:13,540 --> 00:03:17,350
Y todas estas mejoras
tienen un gran efecto en

57
00:03:17,350 --> 00:03:19,850
cómo de útil es el programa
que estás escribiendo.

58
00:03:21,200 --> 00:03:22,670
Ahora, por otro lado,

59
00:03:22,670 --> 00:03:26,720
hay algunas cosas que puedes querer
encontrar y hacer con tu ordenador que

60
00:03:26,720 --> 00:03:30,460
van un poco más allá del tipo
de cosas que vamos a tratar en este curso.

61
00:03:30,460 --> 00:03:33,700
Puedes querer llamarlos
problemas de inteligencia artificial.

62
00:03:33,700 --> 00:03:36,390
Y estos son problemas donde es algo

63
00:03:36,390 --> 00:03:39,680
difícil establer claramente lo
que estás tratando de hacer.

64
00:03:40,858 --> 00:03:44,060
Un ejemplo de esto puede ser intentar
escribir un programa de ordenador

65
00:03:44,060 --> 00:03:46,390
que comprenda el lenguaje natural.

66
00:03:46,390 --> 00:03:50,900
Esto es, escribir un programa en el que puedo
escribir algo, una frase en inglés,

67
00:03:50,900 --> 00:03:55,230
preguntando cuál es el precio de la
leche en el mercado local hoy.

68
00:03:55,230 --> 00:03:59,640
Y quieres que el ordenador tome 
esta frase que he escrito y

69
00:03:59,640 --> 00:04:03,520
descifre lo que significa,
encuentre la manera de traducirla

70
00:04:03,520 --> 00:04:08,080
y hacer la búsqueda apropiada y
devolverme una respuesta útil.

71
00:04:08,080 --> 00:04:12,770
Y el problema de hacer esto no
es tanto que lo que implique sea

72
00:04:12,770 --> 00:04:17,650
realmente difícil de realizar, sino que
el problema es que fundamentalmente

73
00:04:17,650 --> 00:04:22,880
no entendemos lo que significa
interpretar una frase en inglés.

74
00:04:22,880 --> 00:04:26,610
Quiero decir que todos podemos hablar inglés,
es de esperar si estás escuchando esta

75
00:04:26,610 --> 00:04:32,060
clase, pero no entendemos
realmente lo que significa.

76
00:04:32,060 --> 00:04:35,310
Es difícil ponerlo en un
lenguaje suficientemente preciso

77
00:04:35,310 --> 00:04:37,970
que puedas realmente escribir
un programa de ordenador que lo haga.

78
00:04:38,980 --> 00:04:43,300
Tienes problemas similares, como si quieres 
identificar objetos en una fotografía.

79
00:04:43,300 --> 00:04:46,270
Tienes una imagen, con tal vez un
perro y un árbol y una nube y

80
00:04:46,270 --> 00:04:49,100
quieres que el ordenador
identifique qué es qué.

81
00:04:49,100 --> 00:04:54,480
De nuevo es algo que nuestro
cerebro consigue hacer muy bien y

82
00:04:54,480 --> 00:04:57,040
entendemos cuál es la pregunta.

83
00:04:57,040 --> 00:05:01,580
Sin embargo, es difícil poner en palabras
cómo identificas qué esto es 

84
00:05:01,580 --> 00:05:03,450
un perro y esto es un árbol.

85
00:05:03,450 --> 00:05:07,338
Y esto hace muy difícil enseñar

86
00:05:07,338 --> 00:05:09,530
a un ordenador a hacer lo mismo.

87
00:05:11,040 --> 00:05:14,520
Otra cosa que puedes quere hacer es
enseñar a un ordenador a jugar juegos como

88
00:05:14,520 --> 00:05:16,880
jugar al ajedrez eficazmente.

89
00:05:16,880 --> 00:05:18,420
Y, una vez más,

90
00:05:18,420 --> 00:05:21,820
es algo donde podemos
identificar lo que significa hacer esto,

91
00:05:21,820 --> 00:05:24,510
pero realmente cómo quieres hacerlo

92
00:05:24,510 --> 00:05:29,170
es algo muy vago e intuitivo.

93
00:05:29,170 --> 00:05:32,920
No es un problema claramente definido
que estés tratando de resolver.

94
00:05:34,520 --> 00:05:38,850
Así en todos estos problemas
la dificultad no es

95
00:05:38,850 --> 00:05:40,980
tanto hacer las cosas rápidamente,

96
00:05:40,980 --> 00:05:44,050
como establecer que es
lo que estás tratando de hacer y

97
00:05:44,050 --> 00:05:46,230
descubrir cómo abordarlo.

98
00:05:46,230 --> 00:05:49,760
Estos son problemas que realmente
no vamos a cubrir en esta clase,

99
00:05:49,760 --> 00:05:54,230
vamos a enfocarnos en algoritmos,
cómo hacer las cosas rápida y eficazmente.

100
00:05:54,230 --> 00:05:58,300
Pero si quieres introducirte en la IA y
quieres intentar resolver estos problemas,

101
00:05:58,300 --> 00:06:02,230
será muy importante que tengas
un sólido conocimiento de algoritmos, 

102
00:06:02,230 --> 00:06:07,280
para que una vez que tengas alguna idea
de qué significa identificar

103
00:06:07,280 --> 00:06:11,570
árboles en imágenes, podrás tener una
idea del tipo de algoritmos 

104
00:06:11,570 --> 00:06:16,050
pueden realmente soportar estas ideas,
que tipo de ideas puedes realmente implementar

105
00:06:16,050 --> 00:06:17,350
en una cantidad razonable de tiempo.

106
00:06:18,450 --> 00:06:23,180
En lo que nos vamos a enfocar en este
curso son los problemas algorítmicos.

107
00:06:23,180 --> 00:06:26,030
Así que queremos problemas
que estén claramente formulados,

108
00:06:26,030 --> 00:06:28,110
como problemas matemáticos claros.

109
00:06:28,110 --> 00:06:32,130
Y algunas de las cosas que vamos a
ver tal vez no sean inmediatamente claras,

110
00:06:32,130 --> 00:06:36,120
como si quieres encontrar el camino más
corto entre dos puntos en un mapa,

111
00:06:36,120 --> 00:06:38,850
esto no es inmediatamente un problema matemático.

112
00:06:38,850 --> 00:06:41,580
Pero rápidamente puedes
interpretarlo como tal.

113
00:06:41,580 --> 00:06:45,580
Puedes decir, bueno, quiero
alguna secuencia de intersecciones,

114
00:06:45,580 --> 00:06:49,970
estoy viajando a través de ellas, de forma que
cada par está conectado por una carretera y

115
00:06:49,970 --> 00:06:53,480
la suma de las longitudes de las
carreteras sea tan pequeña como sea posible.

116
00:06:53,480 --> 00:06:58,220
Y rápidamente se convierte en un problema
donde puedo establecer claramente

117
00:06:58,220 --> 00:07:00,220
qué es lo que estoy intentando hacer.

118
00:07:00,220 --> 00:07:03,880
Pero que todavía no es trivial resolverlo.

119
00:07:03,880 --> 00:07:07,860
Y estas son el tipo de cosas de las
que vamos a hablar en esta clase.

120
00:07:07,860 --> 00:07:08,930
Y afortunadamente,

121
00:07:08,930 --> 00:07:12,210
al final de ella podrás tener una buena
idea sobre cómo resolver estos problemas,

122
00:07:12,210 --> 00:07:17,380
cómo escribir programas que los
resuelvan muy rápido y muy eficazmente.

123
00:07:17,380 --> 00:07:19,590
Y esto es de lo que vamos a hablar.

124
00:07:19,590 --> 00:07:21,380
Espero que disfrutes del resto de la clase.