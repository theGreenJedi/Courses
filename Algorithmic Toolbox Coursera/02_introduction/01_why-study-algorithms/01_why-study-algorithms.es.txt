Hola a todos Soy Daniel Kane. ¡Bienvenido a la especialización en 
estructuras de datos y algoritmos! En esta primera lectura, vamos a
comenzar por el principio y hablar de por qué necesitas
estudiar algoritmos en primer lugar. Así pues, el objetivo básico de esta lectura
es una especie de discurso sobre los tipos de problemas que vamos a discutir
en esta clase de algoritmos y por qué son importantes. Y en el contexto de hacer esto, también
vamos a discutir algunos problemas que en los que puedes incurrir cuando escribes
programas de ordenador que podrían no necesitar realmente las técnicas sofisticadas
que vamos a discutir en este curso. Por otro lado, discutiremos otros tipos de problemas
que podrías querer resolver que van más allá de la clase de material del
que trataremos aquí. Para empezar con ello, supongamos que estás
escribiendo un programa de ordenador. Hay un gran número de tareas que
puedes querer realizar en las que realmente no necesitas
pensar en ello mucho. Hay cosas como mostrar un texto
dado en la pantalla o copiar un archivo de una ubicación a otra,
o buscar en un archivo una palabra dada. Cada uno de estos algoritmos es
esencialmente una búsqueda lineal. Pasas por cada palabra en el archivo,
una cada vez y haces lo apropiado. Y en cada uno de estos problemas,
existe esencialmente una búsqueda lineal que realmente no puedes hacer mucho mejor. Con el fin de hacer cualquiera
que sea la tarea que estés haciendo, debes atravesar todos los datos de uno
en uno y procesarlos adecuadamente. Y cuando haces más o la cosa obvia, tienes
un programa que funciona. Resuelve el problema que necesitas. Y lo hace aproximadamente tan
eficientemente como podrías esperar. Así que para este tipo de problemas
no tienes que pensar mucho sobre qué algoritmo estás utilizando. Por otro lado, existen algunos otros problemas,
verdaderos problemas algorítmicos, donde no está tan claro
que necesitas hacer. Por ejemplo, puedes tener un mapa dado y necesitas encontrar el camino más
corto entre dos localizaciones en el mapa. O puedes estar intentando encontrar el mejor emparejamiento entre estudiantes y dormitorios
dada algún tipo de lista de preferencias, o puedes estar intentando medir las 
similitudes entre dos documentos diferentes. Para este tipo de problemas
es un poco más complicado, no está inmediatamente claro
cómo resolver estos problemas. E incluso cuando
abordas las soluciones, a menudo las soluciones sencillas a estos 
problemas resultan ser demasiado lentas. Podrías finalizar con
algún algoritmo sencillo, podrías encontrar todos los posibles
emparejamientos entre personas y dormitorios y responder el que optimiza alguna
función que intentes manejar. Por otro lado, si haces esto,
probablemente te tomará mucho, mucho tiempo. Y puedes no tener bastante
tiempo para esperar y por tanto puedes necesitar hacer algo mejor. Y aún cuando tengas un algoritmo
razonablemente eficiente para estos problemas, a menudo hay un
gran margen para una optimización adicional. Mejoras las cosas para que se ejecuten
en una hora en vez de en un día, o un minuto en vez de una hora, o un segundo en lugar de un minuto. Y todas estas mejoras
tienen un gran efecto en cómo de útil es el programa
que estás escribiendo. Ahora, por otro lado, hay algunas cosas que puedes querer
encontrar y hacer con tu ordenador que van un poco más allá del tipo
de cosas que vamos a tratar en este curso. Puedes querer llamarlos
problemas de inteligencia artificial. Y estos son problemas donde es algo difícil establer claramente lo
que estás tratando de hacer. Un ejemplo de esto puede ser intentar
escribir un programa de ordenador que comprenda el lenguaje natural. Esto es, escribir un programa en el que puedo
escribir algo, una frase en inglés, preguntando cuál es el precio de la
leche en el mercado local hoy. Y quieres que el ordenador tome 
esta frase que he escrito y descifre lo que significa,
encuentre la manera de traducirla y hacer la búsqueda apropiada y
devolverme una respuesta útil. Y el problema de hacer esto no
es tanto que lo que implique sea realmente difícil de realizar, sino que
el problema es que fundamentalmente no entendemos lo que significa
interpretar una frase en inglés. Quiero decir que todos podemos hablar inglés,
es de esperar si estás escuchando esta clase, pero no entendemos
realmente lo que significa. Es difícil ponerlo en un
lenguaje suficientemente preciso que puedas realmente escribir
un programa de ordenador que lo haga. Tienes problemas similares, como si quieres 
identificar objetos en una fotografía. Tienes una imagen, con tal vez un
perro y un árbol y una nube y quieres que el ordenador
identifique qué es qué. De nuevo es algo que nuestro
cerebro consigue hacer muy bien y entendemos cuál es la pregunta. Sin embargo, es difícil poner en palabras
cómo identificas qué esto es un perro y esto es un árbol. Y esto hace muy difícil enseñar a un ordenador a hacer lo mismo. Otra cosa que puedes quere hacer es
enseñar a un ordenador a jugar juegos como jugar al ajedrez eficazmente. Y, una vez más, es algo donde podemos
identificar lo que significa hacer esto, pero realmente cómo quieres hacerlo es algo muy vago e intuitivo. No es un problema claramente definido
que estés tratando de resolver. Así en todos estos problemas
la dificultad no es tanto hacer las cosas rápidamente, como establecer que es
lo que estás tratando de hacer y descubrir cómo abordarlo. Estos son problemas que realmente
no vamos a cubrir en esta clase, vamos a enfocarnos en algoritmos,
cómo hacer las cosas rápida y eficazmente. Pero si quieres introducirte en la IA y
quieres intentar resolver estos problemas, será muy importante que tengas
un sólido conocimiento de algoritmos, para que una vez que tengas alguna idea
de qué significa identificar árboles en imágenes, podrás tener una
idea del tipo de algoritmos pueden realmente soportar estas ideas,
que tipo de ideas puedes realmente implementar en una cantidad razonable de tiempo. En lo que nos vamos a enfocar en este
curso son los problemas algorítmicos. Así que queremos problemas
que estén claramente formulados, como problemas matemáticos claros. Y algunas de las cosas que vamos a
ver tal vez no sean inmediatamente claras, como si quieres encontrar el camino más
corto entre dos puntos en un mapa, esto no es inmediatamente un problema matemático. Pero rápidamente puedes
interpretarlo como tal. Puedes decir, bueno, quiero
alguna secuencia de intersecciones, estoy viajando a través de ellas, de forma que
cada par está conectado por una carretera y la suma de las longitudes de las
carreteras sea tan pequeña como sea posible. Y rápidamente se convierte en un problema
donde puedo establecer claramente qué es lo que estoy intentando hacer. Pero que todavía no es trivial resolverlo. Y estas son el tipo de cosas de las
que vamos a hablar en esta clase. Y afortunadamente, al final de ella podrás tener una buena
idea sobre cómo resolver estos problemas, cómo escribir programas que los
resuelvan muy rápido y muy eficazmente. Y esto es de lo que vamos a hablar. Espero que disfrutes del resto de la clase.