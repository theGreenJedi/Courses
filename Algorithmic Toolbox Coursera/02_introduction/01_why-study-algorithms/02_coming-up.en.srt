1
00:00:02,350 --> 00:00:06,550
Hello everybody, welcome back to the data
structure and algorithms specialization.

2
00:00:07,630 --> 00:00:10,260
Here I just want to give
you a brief heads up,

3
00:00:10,260 --> 00:00:13,212
about what we're going to be talking
about in the next two lectures.

4
00:00:13,212 --> 00:00:16,510
So, in the next two lectures,
we're going to dive right in.

5
00:00:16,510 --> 00:00:20,600
We're going to look into a couple of
algorithms problems, in particular

6
00:00:20,600 --> 00:00:24,080
we're going to talk about algorithms for
computing Fibonacci numbers

7
00:00:24,080 --> 00:00:27,320
And algorithms for
computing greatest common divisors.

8
00:00:27,320 --> 00:00:31,150
Now these might be,
feel a little bit weird for

9
00:00:31,150 --> 00:00:34,320
the very first algorithms that
we're going to talk to in a class.

10
00:00:34,320 --> 00:00:38,160
They're kind of number theoretic and
numerical, and they won't

11
00:00:38,160 --> 00:00:42,480
actually be that similar to what we'll be
talking about in the rest of the class.

12
00:00:42,480 --> 00:00:45,150
So you might wonder why
we're looking at them, and

13
00:00:45,150 --> 00:00:47,080
what you should be paying attention to.

14
00:00:47,080 --> 00:00:50,440
And that's really what I  want
to talk to you today about.

15
00:00:50,440 --> 00:00:53,880
In particular, these two topics were
chosen, because they were the clearest

16
00:00:53,880 --> 00:00:59,150
examples we could think of for
why algorithms are critically important.

17
00:00:59,150 --> 00:01:04,280
Why coming up with a good algorithm is
really so important on so many problems.

18
00:01:05,550 --> 00:01:06,800
And in particular,

19
00:01:06,800 --> 00:01:10,080
both of these problems have the following
very interesting properties.

20
00:01:11,280 --> 00:01:15,820
To begin with, both of these problems
have a pretty straightforward algorithm.

21
00:01:15,820 --> 00:01:19,160
One where you sort of take the definition
of the problem that you're trying to

22
00:01:19,160 --> 00:01:20,040
solve.

23
00:01:20,040 --> 00:01:23,570
And from that you more or
less immediately extract an algorithm.

24
00:01:23,570 --> 00:01:26,180
You sort of take the words that you have,
and

25
00:01:26,180 --> 00:01:28,940
you sort of interpret
them as an algorithm.

26
00:01:28,940 --> 00:01:32,520
And more or less immediately you
have some code, and it works.

27
00:01:32,520 --> 00:01:34,560
And it computes the things
that you want it to compute.

28
00:01:35,950 --> 00:01:38,920
Unfortunately, in both cases,

29
00:01:38,920 --> 00:01:43,730
these very straightforward
algorithms are far, far too slow.

30
00:01:43,730 --> 00:01:47,390
You end up with algorithms that
take thousands of years to run,

31
00:01:47,390 --> 00:01:48,990
even on very modest inputs.

32
00:01:50,240 --> 00:01:53,710
And this is not acceptable for
practical purposes,

33
00:01:53,710 --> 00:01:58,040
you don't have millenia to wait for
your computation to finish.

34
00:01:58,040 --> 00:02:00,510
And so you need something better, and

35
00:02:00,510 --> 00:02:03,229
it turns out in both of this
cases there is something better.

36
00:02:04,300 --> 00:02:07,620
There is going to be a slightly
more complicated algorithm,

37
00:02:07,620 --> 00:02:12,040
something that maybe requires one or
two bright ideas to get it to work.

38
00:02:12,040 --> 00:02:15,240
This slightly more complicated algorithm,
works fine and

39
00:02:15,240 --> 00:02:17,280
is actually incredibly fast.

40
00:02:17,280 --> 00:02:19,830
You can handle sort of any
reasonable instance of these

41
00:02:19,830 --> 00:02:21,380
problems in the blink of an eye.

42
00:02:22,600 --> 00:02:26,830
And so, the whole point of this
is to really show with these very

43
00:02:26,830 --> 00:02:30,750
concrete examples,
that at least in these instances, and

44
00:02:30,750 --> 00:02:33,210
in many others that we'll
see throughout the course,

45
00:02:33,210 --> 00:02:36,840
finding the right algorithm can make
all the difference in the world.

46
00:02:36,840 --> 00:02:39,730
It's the difference between
having an algorithm that

47
00:02:39,730 --> 00:02:43,350
takes more time than you will
have in your life to finish, and

48
00:02:43,350 --> 00:02:47,400
an algorithm that is done before
you even knew it started.

49
00:02:47,400 --> 00:02:50,680
And so really this is what you
should be paying attention to.

50
00:02:50,680 --> 00:02:54,580
Why it is so, so
important that we find good algorithms.

51
00:02:56,170 --> 00:02:59,800
So that's what's coming up, I hope you
enjoy the next couple of lectures.