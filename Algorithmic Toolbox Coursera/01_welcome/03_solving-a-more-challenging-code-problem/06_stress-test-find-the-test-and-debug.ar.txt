في هذا الفيديو سنفتتح
اختبار الإجهاد لإيجاد مدخلات يختلف فيها حلنا عن 
حلول أخرى سنستخدم هذا الاختبار لتنقيح
وإصلاح حلنا لنقم بحفظ هذا الملف الآن سنترجم هذا الملف
لأننا نريد تشغيله ولترجمة هذا الملف، نذهب إلى
قسم حل المسائل البرمجية نلقي نظرة على علامات مترجم السي++،
ننسخهم ونستخدمهم لترجمة ملفنا وبالطبع عليك كتابة اسم الملف المراد
ترجمته واسم الملف الخارج سيكون
سترس_تيست، بدون الامتداد cpp. وهكذا قمنا بترجمة اختبار الإجهاد
بعدها نشغله ونرى ما الذي سيحدث وهكذا نرى،
شاشتنا مملوءه بالسطور حسناً، هذه السطور مكونة من
الكلمة تمام (OK)، وبعض الأرقام، كالعدد ن من 2 إلى 11،
والأعداد المدخلة، وهي ذات قيمة كبيرة وهناك الكثير من الحالات حيث
لا يوجد اختلاف بين الحلين تم التنفيذ بسرعة لا بأس بها وفي الأخير هناك
العدد 11 وهو ن و 11 عدداً كبيراً، وهي المدخلات
للاختبار، وبعدها العبارة حل غير صحيح وعددان كبيران
غير متساويان هذان هما الحلان بالترتيب الحل الأول والثاني
والذي قمنا بتنفيذهما فالآن، لدينا اختبار فشل فيه
على الأقل أحد الحلين ولكنه من الصعب العمل على هذا الاختبار
حيث أن هناك 11 عدداً وكلهم أعداد كبيرة
والناتج أيضاً عددٌ أكبر لذلك فلنحاول إيجاد اختبار أصغر 
يفشل فيه حلنا عادةً، يمكننا إنشاء اختبار 
صغير جداً باستخدام هذه التقنية فلنعد إلى ملف الشفرة،
المسمى سترس_تيست ولننقص الحدود على العدد ن
وعلى الاعداد المدخلة ولذا على سبيل المثال
نريد أن لا يزيد العدد ن على 5 ولتحقيق ذلك، نولد عدد عشوائي
ذو مقياس 4 حتى نحصل على عدد بين 0 و3 وبعد إضافة 2 إليه،
سيكون عدداً عشوائياً بين 2 إلى 5 وكذلك،
نريد للأعداد المدخلة أن تكون اقل من 10 ولهذا نولد عدد ذو مقياس 10 وهذه كل التغييرات التي سنحدثها. الآن نحفظ الملف. نعيد ترجمته بنفس علامات المترجم السابقة ومجدداً نشغل اختبار الإجهاد ونحصل الآن على اختبار
يختلف فيه الحلان بشكل اسرع ربما خمسة أو سبعة اختبارات فقط
اتفقت نتائجها ولدينا الآن اختبار من 5 أعداد:
 2؛ 9؛ 3؛ 1؛ 9 يحث تختلف فيه نتيجة الحلين وناتج الحل الأول هو 81 وناتج الحل الثاني هو 27 أيهما الحل الصحيح؟ بالطبع، الحل الأول هو الصحيح،
لانه لدينا العدد 9 ومرة أخرى العدد 9، وهما العددين الأكبر
في المدخلات، وحاصل ضربهما هو 81 وبناءً على ذلك، حلنا الأول المباشر
يعطي نتيجة صحيحة بينما حلنا الثاني الأسرع
يعطي نتيجة خاطئة. ولنفكر في السبب وراء هذا. حسناً، سيحدث هذا إذا قام بضرب
العددين الخطأ من المصفوفة لنعد إلى الشفرة ولنتحقق
أي عددين هما. يمكننا العودة للشفرة ونلقي نظرة على الشفرة الخاصة بالوظيفة
(أو الدالة) ماكس_بييروايز_برودكت_فاست انه لمن المناسب جدا أننا نملك
على وظيفة (أو دالة) منفصلة لهذا الحل لأن الخطأ
يجب أن يكون في مكان ما هنا. لتبسيط هدفنا في تنقيح الحل، فلنقم بعرض فهرس العدد الأكبر
 وفهرس العدد الأكبر الثاني أو على الأقل ما تعتقد الوظيفة انهما
 العددان الأكبر في المصفوفة وسنقوم بإخراجهما ألى الخرْج القياسي
عن طريق سي_أوت أولاً الفهرس الأول،
ثم مسافة للفصل بينهما، بعدها الفهرس الثاني،
ويلي ذلك رمز السطر الجديد وهكذا نحفظ البرنامج. نقوم بترجمته مجدداً،
ونشغل اختبار الإجهاد مرة أخرى. ولاحظ أنه رغم أننا نولد أعداد
عشوائية، إلا أنه لا مشكلة في تشغيل اختبار الإجهاد مجددا
لأنها أعداد شبه عشوائية. حيث أن قيم المتتالية المتولدة
هي نفسها في كل مرة. ولذلك بالإمكان إعادة نفس الاختبار
 أكثر من مرة. وهكذا مجدداً، لدينا نفس
الاختبار حيث تختلف فيه نتيجتي الاختبار ذو الخمسة أعداد نفسها. ولكن الآن، تحت السطر حيث تظهر الأعداد
الخمسة لدينا سطر آخر يظهر فيه 1 2 هذا في خرْج التنقيح الذي قمنا
بإضافته ويعني أن فهرس العدد الأول وهو العدد الأكبر، يساوي 1
وهذا يقابل العدد 9 لأننا في لغة السي بلس بلس 
نبدأ الفهرس من الصفر  في المصفوفة والعدد الثاني يحمل الفهرس 2،
وهذا يقابل العدد 3، مجدداً لان الفهرس يبدأ من الصفر. وهكذا، يظن حلنا السريع
أن العدد الثاني من حيث القيمة في المصفوفة يساوي 3 عوضا عن
العدد 9، الذي يحمل الفهرس 4 لنعد مجددا إلى الشفرة، 
لنرى لماذا حدث هذا. مجددا، نفتح ملف الشفرة. نذهب إلى الوظيفة
ماكس_بييروايز_برودك_فاست. نتجاهل الشفرة الخاصة بالجزء ماكس_إنديكس1 ولكننا مهتمون
جدا بالجزء الخاص ب ماكس_إنديكس2 لنلقي نظرة على هذا العبارة
الشرطية المعقدة، حيث نحاول تحديد
ما إذا كان أي عدد في الموقع ج ربما يكون هو العدد الأكبر التالي 
بشرط أن لا يكون نفس العدد الأكبر الأول ولندقق في هذا الشرط الأول بالتحديد وهنا ما نقوم به هو فحص
ما إذا كان العدد في الموقع ج يختلف عن العدد الأكبر الأول ولكن هذه هي المشكلة بالتحديد. ما نحتاجه بدلاً عن هذا، هو أن تختلف ج عن المتغير ماكس_إنديكس1 لأننا
لا نريد أن نحصل على نفس العدد، ولكن أن يكون بالإمكان الحصول على عدد يساوي
 العدد الأكبر ولكن في موقع آخر ولذلك، بدلاً عن هذه المقارنة،
ما نجتاحه حقا هو مقارنة ج بالمتغير ماكس_إنديكس1. إذا قمنا بإصلاح شفرتنا بهذا الشكل،
عندها سنتمكن على الأقل من إيجاد العدد الأكبر الثاني 9 في مصفوفتنا
2 9 3 1 9،  والتي رأينها سابقاُ. فلنرى ما سيحدث
بعدما نقوم بإصلاح هذه المشكلة سنحفظ الملف ثم مجدداً
نعيد ترجمته بنفس علامات المترجم السابقة نشغل اختبار الإجهاد ما نراه الآن هو شاشة
تمتلئ بسرعة ببعض الأعداد وبعض الكلمات التي تقول
تمام (OK) ويتكرر هذا الأمر مراراً. ويجب أن ننتظر لبعض الوقت،
ربما ل 10 ثواني أو حتى 30 ثانية حتى نتأكد
أنه لا يوجد اختبار تختلف فيه النتيجتان ويبدو حتى الآن،
أن الحل صحيح وفي الفيديو القادم،
سنقوم بالمزيد من الاختبارات ثم نقوم بتسليم حلنا إلى
نظام التقييم الآلي وسنرى ما الذي سيحدث