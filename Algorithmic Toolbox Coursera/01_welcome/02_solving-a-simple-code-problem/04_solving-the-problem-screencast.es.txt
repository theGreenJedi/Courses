Hola, en este corto vídeo,
resolveremos el problema de código juntos. El problema en sí mismo es bastante elemental. El principal propósito de este vídeo es
mostrarte el plan general aplicado para resolver problemas de código en esta clase. El problema se denomina A más B. En este problema, te damos dos
dígitos en la entrada estándar y nuestro objetivo es mostrar
su suma en la salida estándar. Puedes ver dos ejemplos
de prueba aquí en la página. Por ejemplo, si la entrada para tu
programa consiste en los enteros 3 y 2, entonces tu programa debe mostrar 5. Si la entrada consiste en los
dos enteros 7 y 9, entonces se supone que tu programa
mostrará 16 por supuesto. La siguiente sección consiste
en tres ficheros de inicio. que en este caso particular son soluciones,
no sólo los ficheros de inicio. Los ficheros son para los lenguajes de
programación Python, Java y C++. Finalmente, la última sección
contiene una instrucción consistente en cuatro pasos sobre
cómo resolver este problema. Vamos a ver estos 
cuatro pasos juntos. El primer paso es descargar
uno de los ficheros de inicio. Para esto, vamos a seleccionar el fichero
de inicio de C++ y lo descargamos. Está bien. Regresa al principio 
de ésta. Ahora el fichero está aquí y
vamos a echar un vistazo dentro. Esta es una solución muy sencilla que
primero crea tres variables. Después lee a y b
desde la entrada estándar. Después calcula la suma. Y finalmente muestra la suma
en la salida estándar. Para ejecutar este programa
primero necesitamos compilarlo. Éste es el segundo paso
en la instrucción del fichero. Para ello recomendamos
encarecidamente usar la misma compilador que se muestra en esta página. Esto asegurará que tu programa
se comporte de la misma forma en el sistema de prueba y
en tu máquina local. En este caso vamos a
copiar el comando y úsala para compilar nuestro programa. Esto produce un fichero ejecutable
a.out y ahora podemos ejecutarlo. Vamos a darle al programa, 
por ejemplo, 2 y 3. La salida es 5. Bien, una prueba más. 9 y 4, la salida es 13 como se esperaba. Por ahora no hay ningún error. Ahora el siguiente paso es
mandar la solución a este problema. Vamos a mi lengüeta de entrega. Presiono "Crear Entrega", después 
reemplazo el fichero con el archivo cpp y presiono el botón "Submit". Después de un rato, el sistema de prueba muestra que nuestra solución ha pasado todas las pruebas,
lo cual es bastante satisfactorio. En este caso particular,
la salida del calificador está vacía, significando que no existe
mensaje de error en este caso. Para ilustrarlo una vez más, déjame repetir
el proceso completo rápidamente para el lenguaje de programación Python. Primero descargamos el
fichero de inicio de Python. Echemos un vistazo a lo que está dentro. El programa es de nuevo
tan simple como se esperaba. Simplemente tomamos a y b desde la entrada
estándar y mostramos en la salida la suma de a y b. Necesitamos ejecutar este programa. Para ello, podrías querer ir a la página de
lenguajes de programación disponibles una vez más sólo para comprobar
cómo ejecutamos guiones usamos Python, Python 3. Hagamos esto. Por ejemplo, 4 y 4, la salida 
es 8 como se esperaba. Sigamos adelante y
envíemos esta solución. Voy a mi lengüeta de envío aquí,
presiona el botón "Crear Envío" y reemplazas este fichero con AplusB.py Cuando el fichero se ha subido,
finalmente presionas el botón "Submit". En unos pocos segundos, esta solución
será aceptada por el sistema de prueba. Bueno, no ha sido muy desafiante, ¿verdad? En el vídeo siguiente veremos un ejemplo mucho más interesante
de un problema computacional. Para este problema, 
comenzaremos con una solución, Entregaremos esta solución al sistema de
prueba para averiguar que tiene errores en realidad. Tiene un error. Repararemos el fallo, enviaremos de nuevo,
para encontrar que nuestra solución es lenta. Tendremos un mensaje de realimentación
de tiempo límite excedido en el sistema de prueba, significando que para conjunto de datos grandes
se ejecuta en más de un segundo, por ejemplo. Esto nos obligará a idear
una solución mucho más rápida. La implementaremos, la
enviaremos al sistema de nuevo, para encontrar que aún tiene errores. Usaremos una prueba de estrés para
localizar el fallo, lo fijaremos y finalmente enviaremos una solución correcta
al sistema que pasará todas las pruebas.