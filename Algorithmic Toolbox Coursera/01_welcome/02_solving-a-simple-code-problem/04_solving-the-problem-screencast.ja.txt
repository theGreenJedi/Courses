こんにちは、この短いビデオでは、プログラミング問題を一緒に解いていきます。 問題自身はとても簡単なものです。 このビデオの主な目的は、このクラスではどのような手順でプログラミング問題を 解けばよいのかを示すことです。 これは、「A plus B」という問題です。 この問題では、標準入力で2桁の数字が与えられます。そして、 目標は、標準出力にその2数を足した値を出力することです。 問題ページには、2つのサンプルテストがみえるでしょう。 たとえば、もしあなたのプログラムに対する入力が、整数値の3と 2だったら、プログラムは5を出力しなくてはなりません。 また、入力が2つの整数値7と 9だったら、プログラムはもちろん16を出力するはずです。 次のセクションには、3つのスタート用ファイルが含まれています。 今回のケースでは、スタート用ではなく実際の解答が載っています。 ファイルはPython、Java、C++の各プログラミング言語用に用意されています。 最後のセクションにはインストラクションがあり、 ここでは4つのステップでこの問題を解く説明をしています。 実際にこの4ステップを一緒にやって見ましょう。 最初のステップでは、開始用ファイルのうちの一つをダウンロードします。 ここでは、C++の開始用ファイルを選んでダウンロードしてみます。 この線の勾配になります。この導関数項はこの線の勾配となります。しかしこの ファイルがダウンロードされたので中身を見てみましょう。 この問題はとても単純な問題ですね。まず最初に3つの変数を作っていますね。 そしてaとbの値を標準入力から読み込みます。 その後、合計を計算します。 そして最後にその合計を標準出力に出力します。 このプログラムを実行するために、まずコンパイルをする必要があります。 それがインストラクションの2つ目のステップですね。 これについてですが、このページに示してあるものと同じ コンパイラフラグを使うことを強くお勧めします。 そうすることによって、あなたのプログラムがテストシステムと あなたのローカルマシンで同じ挙動をすることを保証できるでしょう。 それではこのケースでは単純にフラグをコピーして プログラムをコンパイルするのに使いましょう。 するとa.outという実行ファイルが生成されて、それを実行することが出来ます。 ではこのプログラムに例である2と3を入れてみましょう。 アウトプットは5ですね。 では、もう一つテストを。 9と4だと13が出力されます。期待通りですね。 ここまではよいですね。 ここから、次のステップは実際に問題の解答を提出して見ます。 submissionタブへ行ってみましょう。 “create submission”を押下し、この.cppファイルを置き換えます。 そしてSubmitボタンを押下します。 しばらくたつと、テストシステムが、解答が すべてのテストをクリアした、と表示します。非常によいですね。 今回のケースでは、grader output（採点時出力）は空です。 つまり、今回はエラーメッセージが出なかったということです。 もう一度説明するために、Python言語で同じ手順を 手早く繰り返させてください。 まず最初にPython開始用ファイルをダウンロードします。 中身を見てみましょう。 今回もプログラムは期待通り非常にシンプルなものですね。 標準入力からaとbを取り、aとbの和を出力します。 ここで、このプログラムを実行しなくてはなりませんが、 まず選択可能なプログラミング言語のページに行ってみるのもよいでしょう。 Pythonのスクリプトをどう実行するかを確認するだけのためです。 単にPythonもしくはPython 3を使用します。 ではやってみましょう。 たとえば4と4では、8が期待通りに出力されます。 では解答の提出をやってみましょう。 まずmy submissionタブに行き、Create Submissionボタンを押下して、 そして、APlusB.pyにファイルを置き換えます。 ファイルがアップデートされるので、最後にSubmitボタンを押下します。 数秒のうちに、解答はテストシステムに受理されます。 そんなに難しくないですね。 次のビデオでは、もっと 興味深い計算問題の例題を見てみることにします。 その問題では、素朴な回答から始めて、 テストシステムに提出し、その解答が実はバグった解答であるということを 明らかにします。 バグがあるということをね。 そしてそのバグを直し提出しなおすと、今度は解答が遅すぎるということが明らかになります。 テストシステムから制限時間超過というフィードバックメッセージが返されます。 つまり、たとえば大きなデータセットでは一秒以上の時間がかかっているということです。 そのため、さらに速い解答を見つける必要があるのです。 その更に早い回答を実装し、システムに提出しますが、 まだバグが残っていることが明らかになります。 ストレステストを行ってバグを見つけ出して修正し、 ようやくすべてのテストを通過する正しい解答をシステムに提出することができるのです。