مرحباً، في هذا الفيديو القصير
سوف نحل مسألة برمجية معاً. المسألة في حد ذاتها بسيطة جداً. لذلك فإن الغرض الأساسى من هذا الفيديو هو
توضيح البرنامج العام الذى يتم تطبيقه لحل المسائل البرمجية فى هذا الفصل. المسألة تسمى A + B. فى هذه المسألة، معطى رقمين
عن طريق الإدخال القياسى Standard Input. و هدفنا هو أن ننتج مجموعهما 
عن طريق الإنتاج القياسى Standard Output. تستطيع أن ترى نموذجين
اختبار على الصفحة. على سبيل المثال، لو كانت المدخلات للبرنامج
تتكون من الأعداد الصحيحة 3 و 2، حينئذٍ فإن برنامجك يجب أن يخرج 5. لو كان المدخلات تتكون من العددين الصحيحين 7 و 9، حينئذٍ فإن برنامجك من المفترض 
أن يخرج 16 بالطبع. القسم التالى يتكون من
3 ملفات إبتدائية. و لكنهم في هذه الحالة الخاصة حلول
و ليس فقط ملفات ابتدائية. و بالتالى فإن هذه الملفات للغات البرمجة
بايثون، جافا و سى بلس بلس. أخيراً فإن القسم الأخير
يحتوى على تعليمات تتكون من 4 خطوات في
كيفية حل هذه المسألة. لذلك فلنستعرض
هذه الخطوات معا. أول خطوة هي أن تحمل
إحدى الملفات الابتدائية. لهذا, سنختار الملف الابتدائي
لسي بلس بلس، وسنقوم بتحميله. حسناً الآن الملف هنا و 
هيا نلقى نظرة على ما بداخله. هذا حل بسيط جداً هو 
أولاً، ينشئ 3 متغيرات. و بعد ذلك يقوم بقراءة a , b 
من الإدخال القياسي standard input. و بعد ذلك يحسب المجموع. و بعد ذلك في النهاية ينتج المجموع 
عن طريق الإنتاج القياسي. لذلك من أجل تشغيل هذا البرنامج 
نحن بحاجة فقط إلى عمل ترجمة للبرنامج. و هذه هى الخطوة الثانية فى التعليمات. من أجل هذا نوصى بشدة أن تستخدم نفس علامات المترجم Compiler Flags 
كما هى موضحة فى هذه الصفحة. هذا سوف يؤكد أن برنامجك
يتصرف بنفس الطريقة على نظام الاختبار 
وعلى جهازك المحلي. لذلك فى هذه الحالة دعونا فقط
ننسخ العلامات Flags و و نستخدمها لكى نترجم برنامجنا. و فى هذا الجزء أنت تستخدم ملف تنفيذى a.out
و يمكننا الآن تشغيله. دعونا نعطى هذا البرنامج 
على سبيل المثال 2 و 3. لذا فإن الناتج يكون 5. حسناً، لنجرى إختباراً آخر. 9 و 4, الناتج 13 كما هو متوقع. حتى الآن، جيد جداً و الآن الخطوة القادمة هي أن نقوم فعلياً 
بتسليم الحل لهذه المسألة دعونا نذهب إلى تسليماتى فالأعلى. أضغط على إنشاء تسليم 
ثم بعد ذلك أستبدل الملف بملف ال CPP لديك ثم أضغط على زر تسليم. بعد لحظة يعرض نظام الاختبار أن الحل لدينا قد أجتاز جميع الاختبارات
وهذا مُرضى تماماً. في هذه الحالة الخاصة
فإن ناتج التقييم فارغ. مما يعنى أنه ليس هناك رسالة خطأ 
في هذه الحالة. لتوضيح ذلك أكثر دعوني 
أكرر الإجراء بكامله سريعاً للغة البرمجة بايثون. لذلك أولاً نقوم بتحميل الملف الابتدائي لبايثون. دعونا نلقى نظرة على ما بداخله. البرنامج بسيط جداً كما هو المتوقع. نحن فقط نأخذ a  وb من الإدخال القياسي 
و نخرج حاصل جمع a  وb نحن نحتاج الآن إلى تشغيل هذا البرنامج و لهذا قد تحتاج إلى الذهاب إلى 
صفحة لغات البرمجة المتاحة. مرة أخرى كيف نفحص كيف يمكننا 
تشغيل تلك المخطوطات لذلك نحن فقط نستخدم بايثون3. لذلك دعونا نفعل ذلك. على سبيل المثال 4 و4
الناتج 8 كما هو متوقع. لذلك دعونا فقط نمضى قُدماً 
.و نسلم هذا الحل لذلك تذهب إلى علامة التبويب تسليماتى هنا 
أضغط على زر إنشاء تسليم و و قم باستبدال هذا الملف بملف APlusB.py و حين يتم رفع الملف
في النهاية  قم بالضغط على زر التسليم. و في غضون ثواني قليلة سوف يتم 
قبول الحل عن طريق نظام الاختبار. حسناً لم يكن هذا ليس تحدياً كبيراً، أليس كذلك ؟ في الفيديو القادم سوف نرى مثالاً أكثر متعة لمسألة حاسوبية. فى هذه المسألة 
سوف نبدأ بحل و سوف نقوم بتسليم الحل إلى نظام الاختبار
لنكتشف أنه به عيوب فى الواقع. يوجد به ثغرة (خطأ برمجي) لذلك سوف نحل هذه الثغرة و نسلمه مرة أخرى
فنكتشف أن حلنا هذا بطيء سنكتشف انه قد تجاوز الوقت المحدد
عن طريق رسالة من نظام الاختبار وذلك يعني أنه للبيانات الكبيرة يعمل البرنامج
 في أكثر من ثانية واحدة، على سبيل المثال. و لذلك سوف يتطلب ذلك منّا أن نأتي 
بحل أسرع. سوف نقوم بتنفيذه 
وتسليمه إلى النظام مرة أخرى، لنجد أنه لا زال به عيوب سوف نستخدم إختبار مشدد 
لتحديد الثرة، حلها و وفي النهاية نسلم حل صحيح إلى النظام 
و الذي سوف يجتاز جميع الاختبارات.