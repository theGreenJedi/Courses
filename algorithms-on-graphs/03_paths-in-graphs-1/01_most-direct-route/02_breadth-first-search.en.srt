1
00:00:00,280 --> 00:00:04,260
Hi, in this video we will discuss
breadth-first search an efficient

2
00:00:04,260 --> 00:00:09,380
algorithm to find distances from an origin
node to all the nodes in the graph.

3
00:00:09,380 --> 00:00:12,340
And we will use the layered
distance structure

4
00:00:12,340 --> 00:00:13,810
of the graph from the previous video.

5
00:00:13,810 --> 00:00:18,670
We will start from the version of the
algorithm which is easier to understand.

6
00:00:18,670 --> 00:00:22,230
We marked as S a blue node
which will be our origin, and

7
00:00:22,230 --> 00:00:26,040
we will find distances from this
origin to all the nodes in the graph.

8
00:00:27,190 --> 00:00:31,560
We'll start with a state when all
the nodes are colored in white.

9
00:00:32,610 --> 00:00:38,060
And the node colored in white means that
this node hasn't yet been discolored.

10
00:00:38,060 --> 00:00:42,850
During the algorithm, we'll discover some
nodes, and then we will process them.

11
00:00:42,850 --> 00:00:45,710
When we discover the node
we cover it with grey.

12
00:00:45,710 --> 00:00:48,500
At first, we discover the origin node S.

13
00:00:49,900 --> 00:00:53,550
And when we process the node
we cover it with black.

14
00:00:54,560 --> 00:00:58,439
And of course after discovering
the origin node, we start processing.

15
00:01:00,170 --> 00:01:03,310
We will process the graph layer by layer.

16
00:01:03,310 --> 00:01:04,820
We'll start with layer zero,

17
00:01:04,820 --> 00:01:09,900
which only consists of the node S and
we'll start processing it.

18
00:01:09,900 --> 00:01:15,320
When we start processing a layer, we take
all of the edges outgoing from this layer

19
00:01:15,320 --> 00:01:18,880
and we discover all of
the nodes ends of those edges.

20
00:01:19,950 --> 00:01:25,480
So basically when we start from layer
zero, we discover the whole layer one

21
00:01:25,480 --> 00:01:31,510
because the edges from the layer
zero node, S, go to layer one nodes.

22
00:01:31,510 --> 00:01:36,520
Of course there could be an additional
edge from S to itself, but

23
00:01:36,520 --> 00:01:43,230
then we would ignore this edge because it
goes to the node we've already discovered.

24
00:01:43,230 --> 00:01:48,150
In this case, there is no such edge, so
all the ends of the edges going from

25
00:01:48,150 --> 00:01:51,730
S are new nodes, white nodes,
which are not yet discovered and

26
00:01:51,730 --> 00:01:57,110
we color them with gray to mark
the fact that we have discovered them.

27
00:01:57,110 --> 00:01:59,620
After we have discovered all of them,

28
00:01:59,620 --> 00:02:05,850
all the layer one we start processing
all those nodes simultaneously.

29
00:02:05,850 --> 00:02:09,550
So we process all six
nodes of the layer one.

30
00:02:09,550 --> 00:02:13,800
And to do that we take all the edges
outgoing from those nodes and

31
00:02:13,800 --> 00:02:17,460
discover the new nodes at
the ends of those edges.

32
00:02:17,460 --> 00:02:22,410
You may notice that there
are a few red edges.

33
00:02:22,410 --> 00:02:26,780
And those are the edges which go
from the nodes in layer one, but

34
00:02:26,780 --> 00:02:31,620
which go to the nodes which were
already discovered previously to S and

35
00:02:31,620 --> 00:02:34,470
to the nodes of the same layer one.

36
00:02:34,470 --> 00:02:37,940
And there are a lot of bold black edges,

37
00:02:37,940 --> 00:02:42,150
which go also from the nodes of the layer
one, which we are not processing, but

38
00:02:42,150 --> 00:02:45,870
they go to the new nodes,
which were not discovered previously.

39
00:02:45,870 --> 00:02:48,130
And we mark those nodes with gray.

40
00:02:49,350 --> 00:02:56,060
And when we process edges from the layer
one we get all the nodes of the layer two,

41
00:02:56,060 --> 00:03:01,050
because the edges from layer one go
to layer two to the same layer and

42
00:03:01,050 --> 00:03:02,570
to the previous layers.

43
00:03:02,570 --> 00:03:07,330
When edges go to the same layer or to
previous layers, we mark them with red and

44
00:03:07,330 --> 00:03:11,200
we don't do anything with the nodes
on the ends of those edges.

45
00:03:11,200 --> 00:03:15,640
And the edges go to the next layer,
we discover nodes of the next layer.

46
00:03:15,640 --> 00:03:19,320
And of course,
all the nodes of the next layer,

47
00:03:19,320 --> 00:03:23,990
of the layer two,
have some incoming edge from layer one.

48
00:03:23,990 --> 00:03:28,730
So after processing layer one,
we've discovered the whole layer two.

49
00:03:29,990 --> 00:03:33,830
And after we've discovered it,
we start processing it.

50
00:03:33,830 --> 00:03:38,490
So we process the outer circle,
all the nodes from the layer two.

51
00:03:38,490 --> 00:03:42,660
And to that we consider all their
edges which are outgoing from them.

52
00:03:42,660 --> 00:03:47,900
And you see that there are only red edges
because all the edges from layer two

53
00:03:47,900 --> 00:03:53,210
go to either the same layer two or
to S or to layer one nodes.

54
00:03:53,210 --> 00:03:56,580
And all of them have been
discovered before that, so

55
00:03:56,580 --> 00:03:58,900
we don't do anything with those nodes.

56
00:03:58,900 --> 00:04:01,900
So we don't discover any new nodes.

57
00:04:01,900 --> 00:04:06,590
And it means that we don't have
anything new to process, so

58
00:04:06,590 --> 00:04:08,910
our algorithm stops with that.

59
00:04:08,910 --> 00:04:13,300
And we now can assign
each node to a layer.

60
00:04:13,300 --> 00:04:17,550
Obviously node s, origin node,
is in the layer 0.

61
00:04:17,550 --> 00:04:21,220
The nodes we discovered on the first
step are the nodes of the letter 1.

62
00:04:21,220 --> 00:04:24,350
So, they're at the distance 1 from S.

63
00:04:24,350 --> 00:04:28,840
And the nodes discovered on the next
step are nodes of the letter 2,

64
00:04:28,840 --> 00:04:31,440
and they're at distance 2 from S.

65
00:04:31,440 --> 00:04:36,660
And so, we've found distances from
S to all the nodes in the graph.

66
00:04:36,660 --> 00:04:41,020
But actually not to all of them,
because there can be some nodes

67
00:04:41,020 --> 00:04:44,820
which are not connected to S,
which are not reachable from S.

68
00:04:44,820 --> 00:04:49,280
And such nodes must have
infinite distance from S.

69
00:04:49,280 --> 00:04:53,430
And we'll solve this issue by
initializing all the distances from

70
00:04:53,430 --> 00:04:56,750
S to all other nodes with infinity.

71
00:04:56,750 --> 00:05:01,870
And then, setting the distance
from S itself to 0 and

72
00:05:01,870 --> 00:05:05,200
implementing the algorithm
that I've just told you.

73
00:05:05,200 --> 00:05:08,020
Then every node,
which is reachable from S,

74
00:05:08,020 --> 00:05:12,230
will get some finite distance from S, and

75
00:05:12,230 --> 00:05:16,020
all the nodes which are unreachable from
S, will stay with their infinite distance.

76
00:05:17,340 --> 00:05:23,140
Now let's look how this same algorithm
will work with an undirected graph.

77
00:05:23,140 --> 00:05:28,090
So we have basically the same graph,
we just removed the arrows from the edges.

78
00:05:28,090 --> 00:05:32,790
So all the edges became undirected,
and again we have the same origin S,

79
00:05:32,790 --> 00:05:33,850
marked with blue.

80
00:05:33,850 --> 00:05:35,930
We start with all the nodes being white,

81
00:05:35,930 --> 00:05:40,790
because they are not discovered yet, we
discover node S, and color it with grey.

82
00:05:40,790 --> 00:05:43,180
And then we start processing it, and

83
00:05:43,180 --> 00:05:48,570
color it with black to process it without
take all the edges outgoing from it.

84
00:05:48,570 --> 00:05:51,730
And you see that now there
are more edges outgoing from S,

85
00:05:51,730 --> 00:05:55,890
because some of the edges which are
incoming into S in the previous example,

86
00:05:55,890 --> 00:06:00,000
now are also outgoing from S
because they are undirected edges.

87
00:06:00,000 --> 00:06:05,070
So, we discovered seven nodes instead
of six, as in the previous example.

88
00:06:05,070 --> 00:06:11,310
And after we discovered all these
seven nodes, this is our layer one.

89
00:06:11,310 --> 00:06:15,380
These are all the nodes
of distance one from S.

90
00:06:15,380 --> 00:06:16,470
We discovered them.

91
00:06:16,470 --> 00:06:17,860
Now, we start processing them.

92
00:06:17,860 --> 00:06:23,020
And to do that, we consider all the edges
out going from those seven nodes.

93
00:06:23,020 --> 00:06:24,550
All black ones, but for S.

94
00:06:25,810 --> 00:06:28,560
And you see that some red edges appear.

95
00:06:28,560 --> 00:06:31,670
Those are edges inside layer one, and

96
00:06:31,670 --> 00:06:36,510
edges from layer one to S, and
there are a lot of bold black edges.

97
00:06:36,510 --> 00:06:42,380
Those are the edges from the nodes
of layer one to the new nodes,

98
00:06:42,380 --> 00:06:44,140
which are not discovered before.

99
00:06:44,140 --> 00:06:49,010
And we've discovered almost all
the nodes of the outer circle, but for

100
00:06:49,010 --> 00:06:52,060
the one in the bottom which
was discovered before.

101
00:06:52,060 --> 00:06:54,430
So we have discovered 11 new nodes.

102
00:06:54,430 --> 00:06:58,700
We have discovered them, and
now we need to process them.

103
00:06:58,700 --> 00:07:04,140
And to do that, we consider all
the edges outgoing from those 11 nodes.

104
00:07:04,140 --> 00:07:07,840
And all of those edges
are red because they all

105
00:07:07,840 --> 00:07:09,860
go to the nodes we previously discovered.

106
00:07:09,860 --> 00:07:14,390
So nothing new is discovered and
we stop our algorithm.

107
00:07:14,390 --> 00:07:15,980
And now we can assign distances.

108
00:07:15,980 --> 00:07:19,210
And again,
distance from S to itself is zero.

109
00:07:19,210 --> 00:07:23,800
Distance from S to the nodes discovered in
the first step is one, this is layer one.

110
00:07:23,800 --> 00:07:28,600
And distance from S to the 11
nodes in the outer circle is two.

111
00:07:28,600 --> 00:07:30,390
This is our layer too.

112
00:07:30,390 --> 00:07:33,040
And again we've found all
the distances from S.

113
00:07:34,590 --> 00:07:39,115
And we have found all the layers, and
also if there are some nodes which are not

114
00:07:39,115 --> 00:07:43,905
connected with us initially,
we initialize the distances to infinity.

115
00:07:43,905 --> 00:07:47,840
And so, they stay with this
infinite distance to them.