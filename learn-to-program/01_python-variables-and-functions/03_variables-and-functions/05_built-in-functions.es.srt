1
00:00:03,130 --> 00:00:04,760
Hemos visto que Python tiene diferentes

2
00:00:04,760 --> 00:00:08,550
operadores matemáticos, como
multiplicación y resta y

3
00:00:08,550 --> 00:00:10,800
sabemos que la operación matemática: 

4
00:00:10,800 --> 00:00:13,940
multiplicación, está asociada con un
símbolo de asterisco.

5
00:00:13,940 --> 00:00:16,190
Hay muchas otra operaciones que quisiéramos
poder hacer,

6
00:00:16,190 --> 00:00:21,170
con o sin matemáticas y no hay 
suficientes símbolos significativos para hacerlo

7
00:00:21,170 --> 00:00:24,330
Por ejemplo, queremos resolver
cual de estos diferentes

8
00:00:24,330 --> 00:00:28,980
números es el más grande y no hay
un símbolo asociado con esa operación.

9
00:00:28,980 --> 00:00:31,030
Para eso Python tiene un conjunto de

10
00:00:31,030 --> 00:00:34,530
funciones incoporadas, que permiten
realizar estas operaciones.

11
00:00:34,530 --> 00:00:35,960
Echémos un vistazo a estas ahora.

12
00:00:35,960 --> 00:00:40,220
Empecémos con un ejemplo que 
mencioné, el cual consiste en

13
00:00:40,220 --> 00:00:43,570
encontrar entre varios números cuál es el 
más grande 

14
00:00:43,570 --> 00:00:47,760
La función incporporada en Python que
usaremos para esto es la función Max.

15
00:00:47,760 --> 00:00:52,285
El nombre de la función es Max.
Yo uso un paréntesis abierto

16
00:00:52,285 --> 00:00:54,720
y noto la casilla emergente color amarillo,
esa

17
00:00:54,720 --> 00:00:54,990
[INAUDIBLE]

18
00:00:54,990 --> 00:00:56,610
ayuda a esta destinada a recordar

19
00:00:56,610 --> 00:00:59,175
a los prgramadores profesionales de Python
lo que hace la función

20
00:00:59,175 --> 00:01:01,200
Probablemente aún no lo entiendas.

21
00:01:01,200 --> 00:01:02,494
Y eso es lo que se espera por ahora.

22
00:01:02,494 --> 00:01:04,072
Voy a dar los argumentos para 
la función,

23
00:01:04,072 --> 00:01:07,262
en este caso, voy a proveer 2
argumentos.

24
00:01:07,262 --> 00:01:10,070
Pasamos 2 argumentos a la función.

25
00:01:10,070 --> 00:01:19,755
Los valores de los argumentos son 36.7 y 23.4,
de esta forma se llama a la función

26
00:01:19,755 --> 00:01:26,310
Con los argumentos 36.7 y 23.4,
cuando presiono la tecla Enter, Python evaluará

27
00:01:26,310 --> 00:01:31,250
ese llamado a la función y me dirá que 36.7
es el más grande de los 2 números.

28
00:01:32,250 --> 00:01:35,989
La manera de llamar una función es, el nombre de la función,

29
00:01:35,989 --> 00:01:41,150
y abre paréntesis, una lista de expresiones conocidas como argumentos separadas por comas.

30
00:01:41,150 --> 00:01:44,180
Y se cierra paréntesis.
Cuando se llama una función,

31
00:01:44,180 --> 00:01:47,518
Python primero evalúa los argumentos y luego
llama a la función

32
00:01:47,518 --> 00:01:52,750
Ademas de llamar la función max con dos
argumentos

33
00:01:52,750 --> 00:01:55,010
tenemos la opción de llamarla con
varios argumentos.

34
00:01:55,010 --> 00:01:58,630
Así que en este caso la llamaremos con cuatro
argumentos.

35
00:02:01,150 --> 00:02:04,840
Podemos también llamar no solo con valores float o decimales, sino
con valores int o enteros, por lo tanto

36
00:02:04,840 --> 00:02:08,420
en esta oportunidad voy a pasar tres argumentos int
a la función.

37
00:02:08,420 --> 00:02:13,700
Y finalmente es posible pasar
argumentos de dos tipos diferentes, por lo que

38
00:02:13,700 --> 00:02:19,279
pasaremos un argumento float junto
a un argumento int esta oportunidad.

39
00:02:22,280 --> 00:02:24,830
¿Cómo sabía tan siquiera que Max existía?

40
00:02:24,830 --> 00:02:26,680
Y ¿cómo sabía que argumentos

41
00:02:26,680 --> 00:02:28,720
proporcionar, y qué valores
retornarían?

42
00:02:29,810 --> 00:02:31,820
Podemos descubrir qué funciones se encuentran

43
00:02:31,820 --> 00:02:35,060
disponibles al usar otra función integrada llamada dir.

44
00:02:35,060 --> 00:02:36,451
Voy a llamar a dir ahora

45
00:02:36,451 --> 00:02:43,469
Y estoy pidiendo una lista de
las funciones incorporadas.

46
00:02:43,469 --> 00:02:47,310
Cuando presiono la tecla Enter, aquí vamos,
tenemos

47
00:02:47,310 --> 00:02:51,110
una larga lista.
Una lista abrumadora, realmente.

48
00:02:51,110 --> 00:02:55,475
La cosa es, por el momento, que
vamos a ignorar por completo todo

49
00:02:55,475 --> 00:03:01,122
esto, y nos enfocaremos en 
estos nombres que tienen letras minúsculas.

50
00:03:01,122 --> 00:03:02,046
Todas minúsculas.

51
00:03:03,120 --> 00:03:05,610
De esto nos ocuparemos por el
momento.

52
00:03:05,610 --> 00:03:10,995
Podemos ver que Max aparece en la lista
y

53
00:03:10,995 --> 00:03:11,020
[INAUDIBLE]

54
00:03:11,020 --> 00:03:14,200
por el momento exploraré otra función 
llamada ABS

55
00:03:14,200 --> 00:03:19,210
la función incorporada de ayuda help puede ser usada para
encontrar más acerca de ABS.

56
00:03:19,210 --> 00:03:23,750
Llamaremos a help, pasando a ABS cómo
un argumento de la función.

57
00:03:23,750 --> 00:03:29,780
Y obtendremos una descripción de ABS.
De esta descripción, podemos ver

58
00:03:29,780 --> 00:03:35,440
que ABS tiene un solo argumento.
Un número y que será,

59
00:03:35,440 --> 00:03:40,620
de acuerdo a este símbolo, que significa:
return o devolver, devuelve un número.

60
00:03:40,620 --> 00:03:44,310
Devolverá el valor absoluto
del argumento.

61
00:03:46,650 --> 00:03:47,620
Vamos a probarlo.

62
00:03:47,620 --> 00:03:51,660
Cuando llamamos a ABS, necesitamos pasar un
argumento numérico.

63
00:03:51,660 --> 00:03:55,780
Yo pondré un float

64
00:03:55,780 --> 00:03:58,470
Y de la misma forma, puedo poner un int.
Puedes ver 

65
00:04:01,580 --> 00:04:04,660
que cuando paso un argumento float, obtenemos
un resultado con punto

66
00:04:04,660 --> 00:04:07,590
decimal y cuando pasamos un int, obtenemos
un resultado entero.

67
00:04:10,450 --> 00:04:16,400
Ahora usaremos help para aprender más acerca de
otra función incorporada llamada Pow

68
00:04:16,400 --> 00:04:17,750
Pondremos Pow como argumento.

69
00:04:17,750 --> 00:04:18,050
Supón [risas], que hay 500 activos.
¿Qué cartera tiene 500 activos?

70
00:04:18,050 --> 00:04:20,340
y obtendremos la descripción.

71
00:04:20,340 --> 00:04:25,059
Y podemos ver de esta descripción que
Pow tiene dos argumentos.

72
00:04:26,180 --> 00:04:29,990
el tercer argumento está dentro de
corchetes.

73
00:04:29,990 --> 00:04:32,460
Indicando que es un argumento opcional.

74
00:04:32,460 --> 00:04:34,610
Así que z es opcional.

75
00:04:34,610 --> 00:04:36,600
Eso significa que cuando llamamos a pow, 
necesitamos

76
00:04:36,600 --> 00:04:41,590
llamarlo con al menos dos argumentos o 
posiblemente tres.

77
00:04:41,590 --> 00:04:43,530
Pow entonces devolverá

78
00:04:43,530 --> 00:04:45,211
un número.

79
00:04:46,300 --> 00:04:49,838
Vamos a llamar a pow con dos argumentos, 2 y
5.

80
00:04:49,838 --> 00:04:54,890
Esto da 32, y esto actualmente es
equivale al exponente,

81
00:04:54,890 --> 00:04:58,675
usando el operador para potenciación
se calcula la potencia 5.