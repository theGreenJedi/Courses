Am văzut că Python are mai mulți operatori matematici, ca înmulțirea si scăderea și știm că operația matematică înmulțire este asociată cu
 un simbol asterisc. Mai sunt o mulțime de alte operații
 pe care am dori sa le executăm, cu sau fără matematică, și nu există suficiente
 simboluri semnificative, pentru aceasta. Deci, de exemplu, poate vrem să vedem
 care dintre mai multe numere este cel mai mare, și nu există
 niciun simbol asociat cu această operație. În schimb, Python are un set de funcții 
integrate care permite, ne permite să efectuăm
 aceste operațiuni. Deci, sa ne uităm la acestea acum. Să începem cu exemplul pe care 
l–am menționat, sa aflăm care dintre mai multe numere
 este cel mai mare. Funcția Python integrată pe care o vom
 utiliza este funcția max. Deci, numele funcției este max.
 Eu folosesc o paranteză deschisă. Și observați caseta pop-up galbenă.
Aceasta [INAUDIBIL] este funcția help a lui IDLE care are
 scopul de a reaminti programatorilor Python profesioniști ce
rol are funcția. Și, probabil că, încă nu veți înțelege. Și este de așteptat. Și apoi voi furniza argumentele 
funcției, astfel, in acest caz, voi furniza 2 argumente. Transmitem 2 argumente funcției Valorile argumentelor sunt 36.7 și 23.4,
 iar aceasta este apelarea funcției, cu argumentele 36.7 și 23.4. Când apăs
 Enter, Python va evalua apelarea funcției și îmi va spune dacă 36.7
 este cel mai mare dintre cele 2 numere. Forma apelării funcției este următoarea: 
numele funcției, paranteză deschisă, o listă a expresiilor
 numite argumente, separate prin virgulă, și paranteză închisă. Atunci când
 o funcție este apelată, Python evaluează mai întâi argumentele,
 apoi apelează funcția. Pe lângă apelarea funcției max
 cu două argumente, avem și opțiunea apelării acesteia
 cu mai multe argumente. Deci, în acest caz, o vom apela
 cu patru argumente. De asemenea, o putem apela nu doar
 cu floats ci și cu ints, deci, de această dată, voi transmite
 trei argumente funcției. Și, în sfârșit, este posibil să transmitem
 argumente de 2 tipuri diferite, astfel, acum vom transmite un argument de tip
 float, împreună cu un argument de tip int. Cum de am știut că funcția max există? Și de unde am știut ce argumente să furnizez și ce valori va returna funcția? Putem afla ce funcții integrate sunt disponibile, utilizând o altă funcție
 integrată, numită "dir". Deci, acum voi apela dir. Și voi cere o listare a funcțiilor integrate. Când apăs Enter, iată. Avem o listă lungă, uriașă. Chestia e că, pentru moment, este că am
 de gând să ignor complet toate acestea și ne vom concentra doar pe
 acele nume care au litere mici. În totalitate litere mici. Deci, doar de acestea ne pasă
 în acest moment. Vedem că max apare în listă și [INAUDIBIL] pentru moment să ne uităm la altă funcție,
 numită abs. Funcția integrată help poate fi utilizată
 pentru a afla mai multe despre abs. Vom apela help, furnizând abs ca argument
 al funcției. Și vom primi o descriere a lui abs.
 Din această descriere, putem vedea că abs acceptă un argument, un număr și , conform acestui simbol, care înseamnă
 return, va returna tot un număr. Deci va returna valoarea absolută
 a argumentului. Haideți să încercăm. Când apelăm abs, trebuie să transmitem
 un argument numeric. Deci voi transmite un număr real (float). Și, în mod similar, aș putea transmite
 un număr întreg (int). Puteți vedea că, atunci când transmitem un argument
de tip float, vom obține un rezultat cu virgulă mobilă, iar atunci când furnizăm
 un int, obținem un rezultat int. Acum vom utiliza help pentru a afla mai multe
 despre altă funcție integrată, numită pow. Vom transmite pow ca argument unghiular și vom obține descrierea. Și, putem vedea din această descriere,
 că pow are două argumente. Cel de-al treilea argument este trecut
 între paranteze pătrate, care indică faptul că este un argument
 opțional. Deci, z este opțional. Aceasta înseamnă că, atunci când
 apelăm funcția pow, este nevoie să o apelăm cu cel puțin două,
 posibil trei argumente. Pow va returna atunci un număr. Haideți să apelăm pow cu două
 argumente, 2 și 5. Rezultă 32 și, de fapt, acesta este
 echivalentul folosirii operatorului exponențial pentru
 a calcula 2 la puterea a 5-a.