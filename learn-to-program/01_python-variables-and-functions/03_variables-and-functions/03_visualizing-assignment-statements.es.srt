1
00:00:02,230 --> 00:00:04,860
Han visto variables en declaraciones
 de asignación

2
00:00:04,860 --> 00:00:08,130
Lo que vamos a hacer ahora es explorar una 
herramienta llamada visualizador, que

3
00:00:08,130 --> 00:00:12,080
va a permitirles ver el estado de la
memoria de la computadora, a medida que el programa se ejecuta

4
00:00:13,850 --> 00:00:16,309
En el recuadro de texto hay tres declaraciones
de asignación.

5
00:00:16,309 --> 00:00:19,695
la primera declaración, asigna el valor 1 a la letra x.

6
00:00:19,695 --> 00:00:24,940
La segunda, evalúa la expresión x más 2

7
00:00:24,940 --> 00:00:27,644
y asigna el resultado a la letra y.

8
00:00:27,644 --> 00:00:32,140
La tercera declaración evalúa 7, y lo
asigna de nuevo a la variable x.

9
00:00:32,140 --> 00:00:35,590
Entonces, x va a cambiar en la línea 3.

10
00:00:35,590 --> 00:00:36,955
Veamos lo que ocurre.

11
00:00:36,955 --> 00:00:42,510
Esto indica la línea que está a punto de
ejecutarse.

12
00:00:42,510 --> 00:00:44,930
Como pueden ver, aún no hemos hecho ninguna

13
00:00:44,930 --> 00:00:47,782
ejecución, así que no hemos creado ninguna variable
todavía.

14
00:00:47,782 --> 00:00:52,318
Cuando hago click en forward -avanzar-, vamos a tomar
el 1 y asignarlo a x.

15
00:00:52,318 --> 00:00:52,738
Y como 

16
00:00:52,738 --> 00:00:55,846
vimos en la clase de variables, 
vamos

17
00:00:55,846 --> 00:00:58,534
a terminar con el valor 1 dentro de un

18
00:00:58,534 --> 00:01:01,850
objeto, en la memoria de la computadores, y la variable
x va a

19
00:01:01,850 --> 00:01:05,200
contener la dirección de memoria de
ese valor.

20
00:01:05,200 --> 00:01:08,410
Entonces, cuando paso el puntero sobre este recuadro,
vemos que

21
00:01:08,410 --> 00:01:12,800
hay una flecha que apunta hacia este bloque
 de memoria de la computadora.

22
00:01:12,800 --> 00:01:18,070
Entonces ahora, x se refiere al valor 1.

23
00:01:18,070 --> 00:01:19,950
Estoy a punto de ejecutar la línea 2.

24
00:01:19,950 --> 00:01:23,120
Y esa va a evaluar qué es x
 más 2.

25
00:01:23,120 --> 00:01:27,330
Bueno, sabemos que 1 más 2 es 3, entonces 
deberíamos ver el valor 3.

26
00:01:27,330 --> 00:01:29,750
Que se crea y se guarda en algún lugar
de la memoria de la computadora.

27
00:01:29,750 --> 00:01:33,360
Y después de ejecutar la línea dos, 
deberíamos ver

28
00:01:33,360 --> 00:01:37,210
una variable "y" que contiene la dirección de memoria
de ese valor.

29
00:01:37,210 --> 00:01:41,680
Entonces, voy a hacer clic Forward -avanzar- aquí, y
en efecto, vemos que eso es lo que pasa.

30
00:01:41,680 --> 00:01:43,310
Cuando paso el puntero sobre "y"

31
00:01:43,310 --> 00:01:49,820
veo que hay un vínculo entre "y" y 
el valor 3.

32
00:01:49,820 --> 00:01:51,030
También les he dicho que

33
00:01:51,030 --> 00:01:54,830
una declaración de asignación era bastante diferente
de una igualdad.

34
00:01:54,830 --> 00:01:58,690
No estamos diciendo que "y" siempre es igual a "x" más 2.

35
00:01:58,690 --> 00:01:59,831
Recuerden los dos pasos.

36
00:01:59,831 --> 00:02:03,870
Evalúen el lado derecho de la declaración de asignación.

37
00:02:03,870 --> 00:02:05,400
Eso les devuelve una dirección de memoria.

38
00:02:05,400 --> 00:02:09,050
Tomen esa dirección de memoria y guardenla en  la variable "y".

39
00:02:11,210 --> 00:02:13,120
Estamos a punto de demostrar eso aquí,
porque vamos a

40
00:02:13,120 --> 00:02:15,270
asignar el valor 7 a "x".

41
00:02:15,270 --> 00:02:21,760
Esto va a cambiar este recuadro aquí
y no el recuadro de la "y".

42
00:02:21,760 --> 00:02:28,750
Entonces, cuando hago clic en Forward -avanzar-, vemos que "y"
todavía se refiere al valor 3.

43
00:02:28,750 --> 00:02:32,280
Incluso cuando "x" ahora se refiere al valor 7.

44
00:02:32,280 --> 00:02:36,660
Entonces, la declaración de asignación cambia el
valor de la variable.

45
00:02:36,660 --> 00:02:40,449
No está estableciendo que "y" es siempre igual
 a "x" más

46
00:02:40,449 --> 00:02:43,990
2,  eso lo está haciendo sólo para esta
instantánea en este momento.