Как мы уже узнали, в Python есть несколько математических операторов, таких как умножение и вычитание, и нам известно что математический оператор умножения ассоциирован с символом "звёздочка". Существует множество других операций которые мы можем захотеть осуществить, с помощью математики или без, и с минимумом не несущих смысловой нагрузки символов. Для примера представим ситуацию, в ходе которой мы хотим выяснить, какое из представленных чисел - наибольшее, и при этом у нас нет символа предназначенного для этой операции. Вместо этого, в Python есть набор готовых функций, которые позволяют выполнять подобные операции. Давайте взглянем на некоторые из них. Начнём с упомянутого мною ранее примера, в котором нужно было определить наибольшее из нескольких чисел. Функция Python которую мы для этого используем - это функция max. Итак, нашу функцию зовут max. Я ввожу открывающую скобку и замечаю жёлтое всплывающее окошко. Это Давайте ненадолго прервемся подсказка, которая призвана напоминать программистам Python что эта функция делает. Скорее-всего, сейчас эта подсказка будет вам непонятна. И это ожидаемо. Итак, я указываю аргументы для этой функции, и в нашем случае мне нужно указать два аргумента. Передаём функции оба аргумента. Значения аргументов - 36.7 и 23.4, и это вызов функции с аргументами 36.7 и 23.4. Когда я нажму Enter, Python начнёт выполнять этот вызов функции, и скажет мне что 36.7 - большее из двух указанных чисел. Чтобы вызвать функцию, нужно указать её имя, открыть скобки, перечислить аргументы через запятую и закрыть скобки. Когда функция вызывается, Python сперва проверяет её аргументы и уже потом вызывает функцию. Функцию max можно вызывать не только с двумя аргументами, но и с большим их числом. Сейчас мы вызовем её с четырьмя аргументами. Мы можем делать вызов не только с числами с плавающей точкой, но и с целыми, и в этот раз я передам функции три целых аргумента. Кроме того, можно передавать аргументы разных типов, поэтому мы передадим число с плавающей точкой в качестве четвёртого аргумента. Откуда мне знать, что функция max действительно существует? И, более того, какие именно аргументы мне ей передать, и какие значения она мне вернёт? Мы можем узнать, какие именно встроенные функции нам доступны, с помощью другой встроенной функции dir. Сейчас я собираюсь вызвать эту функцию. И я запрашиваю список встроенных функций. Как обычно, чтобы что-то выполнить нам нужно нажать Enter. Теперь у нас есть большой, длинный список. Выглядит довольно-таки внушительно. В этот раз мы не будем отвлекаться на все эти функции, и рассмотрим только те, чьи имена написаны в нижнем регистре. Целиком в нижнем регистре. Вот и то, что мы искали. Мы видим в этом списке функцию max, и, Давайте ненадолго прервемся спустя секунду исследования, другую функцию с именем abs. Встроенная функция help поможет узнать больше о функции abs. Мы вызовем функцию help, передав ей abs в качестве аргументы. В ответ мы получим описание функции abs. В этом описании сказано, что функция abs принимает единственный аргумент - число, и она вернёт, согласно этому символу, обозначающему return, другое число. Таким образом, она возвращает абсолютное значение аргумента. Позвольте привести пример. Когда мы вызываем abs, мы должны передать числовой аргумент. Сейчас я передам число с плавающей точкой. Таким же образом я могла передать целое число. Вы можете видеть, что передавая аргумент с плавающей точкой, мы получаем результат с плавающей точкой, а передавая целый аргумент - получаем целый результат. Давайте используем help чтобы больше узнать о другой встроенной функции - pow. Мы передаём pow как аргумент Раджа Сисодиа И получаем описание. И мы видим в описании, что pow принимает два аргумента. Третий аргумент находится в квадратных скобках. Это указывает на то что этот аргумент - необязательный. Другими словами, аргумент z - опциональный. Это значит что когда мы вызываем pow, нам нужно вызвать его либо с двумя, либо с тремя аргументами. После чего pow вернёт нам число. Давайте вызовем pow с двумя аргументами, 2 и 5. Функция вернёт 32, что является эквивалентом возведения в степень, используя соответствующий оператор для вычисления степени равной 5.