1
00:00:00,012 --> 00:00:02,210
Сәлем!

2
00:00:02,210 --> 00:00:06,380
Питонда бар программаларды қолданумен қатар, өздігімізден де құрастыра аламыз. 

3
00:00:06,380 --> 00:00:08,290
Бүгінгі дәрісіміз осы жайында болмақ

4
00:00:08,290 --> 00:00:14,400
Математикада қолданылатын мысалдан бастайық. 

5
00:00:14,400 --> 00:00:19,871
X-тен  F функциясы Х-ті алып, оны квадраттайды. 
Питонда бұл келесідегідей болды. 

6
00:00:19,871 --> 00:00:19,871
[Дыбыс].

7
00:00:19,871 --> 00:00:25,475
Def Питонға біз функцияны зерттеп 

8
00:00:25,475 --> 00:00:30,799
жатқандығымызда жеткізеді. 

9
00:00:30,799 --> 00:00:37,246
F фукцияның атауы. 

10
00:00:37,246 --> 00:00:42,880
X функцияның параметрі. 

11
00:00:42,880 --> 00:00:45,470
Бұл айнымалы, оның мәнде қажет болғанда функцияға беріледі. 

12
00:00:45,470 --> 00:00:46,818
Бұл

13
00:00:46,818 --> 00:00:52,750
жолақ Питонға функция шақырылғандығын 

14
00:00:52,750 --> 00:00:55,080
жеткізіп отырады. 

15
00:00:56,810 --> 00:01:01,720
Ал Return сөзі біз мәнді қайта орнына жібергенімізді білдіреді.  

16
00:01:03,770 --> 00:01:05,730
Қайта шақырту тұжырымдамасының 

17
00:01:05,730 --> 00:01:08,710
жалпы формасы сөзді қайтару, есептен соң жүреді. 

18
00:01:08,710 --> 00:01:10,850
Қайта шақырту тұжырымдамасын жүзеге асыру  ережелері, 

19
00:01:10,850 --> 00:01:15,250
біріншіден, арнайы жадыны шығаратын есепті шығару. 

20
00:01:15,250 --> 00:01:19,320
Екіншіден, сол арнайы жадыны шақырушыға қайтару. 

21
00:01:19,320 --> 00:01:23,460
Функция сипаттамасының жалпы формасы def сөзі, функция 

22
00:01:23,460 --> 00:01:29,440
атауы соңынан жүреді, содан кейін нөл немесе үтірмен ажыратылған өзге параметрлер. 

23
00:01:29,440 --> 00:01:32,200
Содан кейін функцияның негізгі бөлігі келеді, онда әдетте қайта шақырту 

24
00:01:32,200 --> 00:01:35,820
болатын бір немесе одан да көп тұжырымдамалар бар. 

25
00:01:35,820 --> 00:01:37,939
Негізгі бөлік тұрақталған екенін естен шығармаңыз. 

26
00:01:40,160 --> 00:01:45,390
Ал енді, f функциясын шақыртайық. 
Сонымен, 3 аргументіне көшеміз. 

27
00:01:45,390 --> 00:01:48,000
Функция шақыртылған кезде, 

28
00:01:48,000 --> 00:01:48,400
[ДАУЫССЫЗ].

29
00:01:48,400 --> 00:01:51,110
периметр 3 мәнінің арнайы жады ретінде рөл атқарады. 

30
00:01:51,110 --> 00:01:57,020
Біз мұны, меншіктеу тұжырымдамасы ретінде санай аламыз, ондағы х 3 мәніне ие. 

31
00:01:57,020 --> 00:02:00,440
Мен Енгізу батырмасын басқанда, функцияны шақырту әрекеті жүзеге асады. 

32
00:02:00,440 --> 00:02:06,340
Осы әрекеттің нәтижесі ретінде 9 мәні қайта оралады. 

33
00:02:06,340 --> 00:02:08,620
Әдетте, функция ол есеп, сол себепті айнымалыны нәтижеге 

34
00:02:08,620 --> 00:02:10,490
жету үшін қолдана аламыз. 

35
00:02:12,040 --> 00:02:14,290
айнымалы нәтижесін жасайық

36
00:02:14,290 --> 00:02:16,863
3-тен f нәтижесін иеленетін 

37
00:02:18,060 --> 00:02:21,150
Жүзеге асыру ережелерін қайта шақырту жүктеу тұжырымдамасы. 

38
00:02:21,150 --> 00:02:23,385
Бұл алғашқысы, оң қол жақтағы есеп 

39
00:02:23,385 --> 00:02:26,592
арнайы жадын жасай отыра шығарылады. 

40
00:02:26,592 --> 00:02:30,265
Екіншісі, арнайы жады айнымалыда сақталады. 

41
00:02:30,265 --> 00:02:35,330
Нәтижесі 3-тен f-ті шақыртудағы арнайы жадына қол жеткізеді. 

42
00:02:35,330 --> 00:02:39,293
Басқаша айтқанда, нәтижесі 9 болады. 

43
00:02:41,530 --> 00:02:47,439
Үшбұрыш ауданын табу айнымалылар дәрісіндегі қайта 

44
00:02:47,439 --> 00:02:52,782
шақырту. 
Қабырғаны алып

45
00:02:52,782 --> 00:02:59,340
оны биіктікке көбейтіп 2 бөлу керек. 

46
00:02:59,340 --> 00:03:02,610
Ал енді, үшбұрыш ауданын табу функциясын жазалық. 

47
00:03:02,610 --> 00:03:06,400
Def сөзінен бастаймыз,

48
00:03:06,400 --> 00:03:07,770
 сосын функция атауы, оған area сөзін алайық. 

49
00:03:09,760 --> 00:03:12,420
Функция атауынан соң функция параметрлері 

50
00:03:12,420 --> 00:03:16,327
біздің жағдайда екі параметр бар. 

51
00:03:16,327 --> 00:03:18,415
Қабырға мен биіктік. 

52
00:03:18,415 --> 00:03:22,880
Осы тізімді колоннаға жазып, содан кейін функцияның негізгі бөлігіне көшеміз. 

53
00:03:22,880 --> 00:03:32,880
Қабырғаның биіктікке көбейтіліп 2 бөлінген формуласына қайта ораламыз. 

54
00:03:36,380 --> 00:03:40,390
Функцияны шақыртайық, екі аргументтен тұратын ауданды орындаймыз. 

55
00:03:40,390 --> 00:03:41,223
3 пен  4.

56
00:03:41,223 --> 00:03:47,173
Қабырға, оның параметрі  3ке тең, ал биіктік параметрі  4ке тең. 

57
00:03:47,173 --> 00:03:52,052
Осыдан кейін берілген есеп шығарылып, яғни қабырғаның 

58
00:03:52,052 --> 00:03:57,480
биіктікке көбейтіліп 2 бөлініп, қайта оралады. 
Функция арқылы 6.0 қайта оралады. 

59
00:03:59,080 --> 00:04:02,920
Осыны тағы да бір рет орындап көрейік,

60
00:04:02,920 --> 00:04:09,540
бұл жолы бөлшек сан сан мен бүтін сан қолдана отыра. 

61
00:04:09,540 --> 00:04:15,320
Функцияны шақыртуды жүзеге асырудың жетілдірілген ережелері ол, біріншіден, аргументтерді арнайы жады шығару үшін есептеу. 

62
00:04:15,320 --> 00:04:19,630
Келесі қадам, сол арнайы жадыларын сәйкесінше параметлерде сақтау керек. 

63
00:04:19,630 --> 00:04:24,230
Содан кейін, функцияның негізгі бөлігін орындау керек. 
Ал енді, Питонды қайта қосалық. 

64
00:04:24,230 --> 00:04:27,420
Осы терезешедегі менюді таңдап, Restart батырмасын басайық. 

65
00:04:29,120 --> 00:04:31,200
Осы кезде, осыған дейінгі терезешедегі 

66
00:04:31,200 --> 00:04:34,200
іс−әрекеттеріміз оның ішінді ауданды есептеу функциясының сипаттамасы жоқ болды.

67
00:04:34,200 --> 00:04:40,200
Осыдан кейін сол ауданшы шақыртатын болсақ, біз қатеге тап боламыз, себебі ол анықталмаған .

68
00:04:42,770 --> 00:04:45,250
Питонның басым көпшілік программалары файлдарда сақталады. 

69
00:04:45,250 --> 00:04:49,524
Жаңа файл ашып, оған біздің функция сипаттамасын, аудан есептеуді сақтайық. 

70
00:04:49,524 --> 00:04:57,940
New Window файлына көшіңіз. 
Біздің функция сипаттамасын соның ішіне орналастырыңыз. 

71
00:04:57,940 --> 00:05:03,520
Осы файлды triangle.py деген атпен сақтайық. 

72
00:05:03,520 --> 00:05:08,735
 Питонның барлық программалары .py файлдарында сақталатын болады. 

73
00:05:08,735 --> 00:05:13,760
Терешененің өлшемін өзгертелік, осы кезде сол қол жақта каңқа, ал оң жақта 

74
00:05:13,760 --> 00:05:18,624
өзіміздің triangle.py файлын көресіздер. 

75
00:05:19,910 --> 00:05:21,700
Енді бізде аудан функциясы 

76
00:05:21,700 --> 00:05:27,210
Triangle.py−да барда , осы файлдв іске қоса аламыз. 

77
00:05:27,210 --> 00:05:29,260
Енді біз Run және Run Module батырмасын басамыз. 

78
00:05:30,730 --> 00:05:33,940
Бұл сол жақтағы негіздегі біздің аудан функциямыз қол жетімді болу үшін қажет. 

79
00:05:33,940 --> 00:05:37,680
Осыдан соң, негізден аудан функциясын шақыртқан кезімізде

80
00:05:37,680 --> 00:05:40,810
программа ауданның не екенін және оның қол жетімді екенін білетін болады. 

81
00:05:40,810 --> 00:05:40,810
 [Дыбыс]

82
00:05:40,810 --> 00:05:45,670
Triangle.py файлында біз бірнеше функция анықтай аламыз. 

83
00:05:45,670 --> 00:05:47,570
Келесі бір функция анықтамасын енгізелік. 

84
00:05:47,570 --> 00:05:52,820
Үшбұрыштың периметрін табу үшін  функцияны анықтау керек. 

85
00:05:52,820 --> 00:05:58,810
Қабырғаларына 1, 2 және 3 деген мән береміз .

86
00:05:58,810 --> 00:06:01,530
Сол кезде, функция бізге осы қабырғалардың қосындысын 

87
00:06:01,530 --> 00:06:01,530
 [Дыбыс]

88
00:06:01,530 --> 00:06:02,030
.

89
00:06:07,380 --> 00:06:11,460
есептеп береді. 
Ол үшін triangle.py сақтадым, 

90
00:06:11,460 --> 00:06:16,216
ал егер де сол негізге қайта оралып, функцияны қайта орындайтын болсам, қатеге кезігемін. 

91
00:06:16,216 --> 00:06:22,770
Оған себеп, тура сол кезеңде функция triangle.py сақталғандығына қарамастан, 

92
00:06:22,770 --> 00:06:28,530
біз triangle.py іске қоспағандықтан негіз қай параметрлер екендігін біле алмайды. 

93
00:06:29,580 --> 00:06:32,730
Негізде функцияны орындамас бұрын модульді іске қосуымыз керек, осы әрекетті орындағанда cmd тап болдық, 

94
00:06:32,730 --> 00:06:39,820
содан кейін периметрлерге мән береміз, ал ол оны есептейді.