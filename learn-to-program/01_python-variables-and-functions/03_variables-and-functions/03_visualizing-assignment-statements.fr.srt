1
00:00:02,230 --> 00:00:04,860
 Vous avez vu les variables et
les directives d'assignement. 

2
00:00:04,860 --> 00:00:08,130
 Maintenant on va voir comment utiliser
un outils appelé le "visualizer", qui 

3
00:00:08,130 --> 00:00:12,080
 va vous permettre de voir l'état
de la mémoire pendant l'exécution d'un programme. 

4
00:00:13,850 --> 00:00:16,309
 Dans la boite de texte il y a trois
directives d'assignement. 

5
00:00:16,309 --> 00:00:19,695
 La première assigne la valeur 1 à "x". 

6
00:00:19,695 --> 00:00:24,940
 La seconde évalue l'expression "x" plus 2 

7
00:00:24,940 --> 00:00:27,644
 et assigne le résultat à "y". 

8
00:00:27,644 --> 00:00:32,140
 La troisième évalue 7 et l'assigne
encore à la variable "x". 

9
00:00:32,140 --> 00:00:35,590
 Donc "x" va changer à la ligne 3. 

10
00:00:35,590 --> 00:00:36,955
Regardons ce qui se passe.

11
00:00:36,955 --> 00:00:42,510
 Ceci indique la ligne qui est sur le
point d'être exécutée. 

12
00:00:42,510 --> 00:00:44,930
 Comme vous pouvez voir, on a encore
rien exécuté 

13
00:00:44,930 --> 00:00:47,782
 et donc les variables n'ont pas encore
été crées. 

14
00:00:47,782 --> 00:00:52,318
 Quand je clique sur "forward", on va
prendre le 1 et l'assigner à "x". 

15
00:00:52,318 --> 00:00:52,738
 Et comme 

16
00:00:52,738 --> 00:00:55,846
 on a vu dans le cours sur les variables
on va 

17
00:00:55,846 --> 00:00:58,534
 se retrouver avec la valeur 1 dans 

18
00:00:58,534 --> 00:01:01,850
 un objet retenu en mémoire, et la variable
"x" va 

19
00:01:01,850 --> 00:01:05,200
 contenir l'adresse de cette valeur. 

20
00:01:05,200 --> 00:01:08,410
 Donc quand je passe sur cette boite ici,
on voit

21
00:01:08,410 --> 00:01:12,800
 qu'il y a une flèche qui pointe sur ce
bout de mémoire. 

22
00:01:12,800 --> 00:01:18,070
Donc maintenant x réfère à la valeur 1.  

23
00:01:18,070 --> 00:01:19,950
 Je suis sur le point d'exécuter la ligne 2. 

24
00:01:19,950 --> 00:01:23,120
 Et cela va évaluer ce qu'est "x" plus 2 .

25
00:01:23,120 --> 00:01:27,330
 On sait que 1 + 2 c'est 3, donc
on devrait voir la valeur 3 

26
00:01:27,330 --> 00:01:29,750
 être crée et stockée quelque part
dans la mémoire. 

27
00:01:29,750 --> 00:01:33,360
 Et après l'exécution de la ligne 2 on
devrait voir 

28
00:01:33,360 --> 00:01:37,210
 une variable y contenant l'adresse mémoire
de cette valeur. 

29
00:01:37,210 --> 00:01:41,680
Donc je vais clique sur "Forward" ici et
en effet on voit que ça se produit.  

30
00:01:41,680 --> 00:01:43,310
 Quand je passe sur "y", 

31
00:01:43,310 --> 00:01:49,820
 je vois qu'il y a un lien entre "y" et
la valeur 3. 

32
00:01:49,820 --> 00:01:51,030
 On vous a aussi dit que 

33
00:01:51,030 --> 00:01:54,830
 la directive d'assignement était
différente de l'égalité. 

34
00:01:54,830 --> 00:01:58,690
 On ne dit pas que "y" est toujours égal à
"x" plus 2. 

35
00:01:58,690 --> 00:01:59,831
 Souvenez vous des deux étapes. 

36
00:01:59,831 --> 00:02:03,870
 Évaluez le côté droit de la
directive d'assignement, 

37
00:02:03,870 --> 00:02:05,400
 ce qui vous donne une adresse mémoire. 

38
00:02:05,400 --> 00:02:09,050
 Prenez cette adresse et stockez la dans
une variable "y". 

39
00:02:11,210 --> 00:02:13,120
 On va démontrer ça ici car on va 

40
00:02:13,120 --> 00:02:15,270
 assigner à "x" la valeur 7. 

41
00:02:15,270 --> 00:02:21,760
 Ça va changer cette boite ici mais
pas la boite de "y". 

42
00:02:21,760 --> 00:02:28,750
 Donc quand je cliques sur "Forward", on voit
que "y" réfère toujours à la valeur 3, 

43
00:02:28,750 --> 00:02:32,280
 mal-grès le fait que "x" réfère maintenant
à la valeur 7. 

44
00:02:32,280 --> 00:02:36,660
 Donc la directive d'assignement change
la valeur de la variable. 

45
00:02:36,660 --> 00:02:40,449
Elle ne dit pas que "y" est toujours
égal à "x" plus 2. 

46
00:02:40,449 --> 00:02:43,990
 Ce n'est vrai qu'a ce moment précis
dans le temps.