Сәлем!
Питонда есептерді қалай шығаруды оқыдық. Ал бүгінгі дәрісте біз сол есептердің жауаптарын кейін қайта қолдана алатындай қалай есте сақтауға болатындығын көрсетпекпіз. Осы ойды біз үшбұрыштың ауданын есептеу арқылы зерттемекпіз. 
Еске түсірсек, егер де біз үшбұрыштың биіктігін білсек, онда оның қабырғасының ұзындығын таба аламыз сол арқылы ауданын есептесек болады. Қабырғасының ұзындығын биіктігіне көбейтіп, екіге бөлеміз. Яғни, мысалы, биіктігі он екіге тең болса, қабырғасының ұзындығы жиырма, ал аудан жиырма көбейтілген он екі бөлінген екі. Енді осыны Питонда зерттеп көрелік. Есепті Питонға қалай енгізу керектігін және шығаруды сізалдыңғы курстан білесіз. Алайда, біз қос үшбұрыштың мәндерін есептемек болғандықтан сіздерге мәнді білдіретін сөздер жиынтығы мен биіктікті енгізуді көрсетпекпіз. Кіріспе кезең осымен бітті. Ал енді мысал.
Бұның жүзеге асыратыны, жиырманы есептеп, оны ұпай айнымалының мәнімен байланыстырады. Ұпай айнымалы деп аталады, себебі ол мән және ол өзгеруі мүмкін, оны алда байқаймыз. Айнымалыға ұқсас бір әрекет жасаймыз, оны биіктік деп атаймыз, содан кейін осы екі атау Python тексеруінде болғандай етіп қолданыла алады. Сонымен, негізгі мән−жиырма, биіктік он екі мәнімен байланысқан. Бірдей символ математикаға қарағанда программалауда түрлі мағына беретінін есте шығармайық, себебі компьютер тілі әлде қалай қындатылған. Енді біз айнымалылар мен олардың мәндерін сипаттайтын белгілеу жүйесін енгізбекпіз. 
Ол үшін не істейміз, он екі айнымалысы жанындағы қорап қасында орналасқан. 
Ал Питонда он екі ол қорабқа сәйкес келмейді. Керісінше, Python дағы кез келген айнымалы тәрізді он екі де белгілі бір арнайы жадыда сақталған. Сонымен, мен кез келген арнайы жадыны алып, оны өзге сандардан ажырату үшін Х3 деп белгілімекпін. Сонымен, арнайы жады x3 делік, жиырма мәні пайда болады. Меншіктеу ережесіне сәйкес x3 алынып, негізбен байланысқан қорабқа салынады
Негізгінің мәні x3.. Және, оның мағынасы, ол мәні жиырма болатын  x3 арнайы жадына сәйкес. Сәйкесінше, айнымалының биіктігі бар және сол кішкене қорабта Python оның мәнін сақтайды, және оның мәні арнайы жад.
Мен кез келген x7 алмақпын Мұндай таңдау жасауға Python  құзіретті, яғни мен қайсы арнайы жады екені жайынды ой қозғайға міндетті емеспін, алайда мен айнымалы мен оның мәні арасында байланыстың барын білемін. Программалау мәселесіне оралайық. 
Осы есепте біз биіктік пен қабырғаны қолдана аламыз. Сонымен, мен қабырға биіктік\ екі деп енгізсем менде жиырма он екі\екі есептеуімен бірдей жауап шығады. Сонымен қатар, соіғы есептің жауабын айнымалыға иелендірсем болады. 
Бұл айдан деп аталады. Осыдан соң, мәнін тексерелік. Меншіктеу ережесін қайта қолдана отырып биіктік пен қабырғаға жаңа мән беріп көргелі тұрмын. Қабырға айнымалысына 2.5 мәнін беріп көрейік. Бұл маған жаңа мән береді, 2.5, белгілі бір арнайы жад, мүмкін x4 болар. Сондағы өзгеріс, меншіктеу ережесі x3ті x4 мәнімен алмастырады, сәйкесінше қабырға жиырмаға тең емес. 
Керісінше, қабырға 2.5 байланысқан. Осыған сәйкес, биіктікті байланыстыра аламын. Мұның келесі әрекеті, әрине, жетіні белгілі бір арнайы жадқа орналастыру, мүмкін x1 болар, меншіктеу ережесі сол x1 алып, биіктік айнымалысына береді, осы байланыс бұзылып, биіктік енді жетіге тең болады. Control+P қолдана отырып, мен өзімнің бұрынғы есептеуіме оралмақпын, және қазір ғана байқағандарыңыздай, осы жаңа аудан 8.75ке тең, бұл расымен, 2.5 алып оны жетіге көбейтіп екіге бөлгендегі мәнмен бірдей. Әрбір айнымалыға ие меншіктеу ережесі белгілі бір есеп. Осы жерде меншіктеу ережесін орындау ережесі бар, және сіз бар ынтаңызбен оны есте сақтауыңыз қажет, себебі біз бұнымен курс барысында қайта қайта кездесеміз. Бірінші қадам, оң қол жақтағы есепті шығарыңыз. Бұл есептің мәні арнайы жадқа ие. Сол қол жақтағы айнымалыда осы арнайы жадты сақта. Кез келген программалау тілінде белгілі бір ережелер жиынтығы бар. Pythonда ол айнымалы атауы әріптен немесе әріпсіз, сансыз және символсыз белгілеу символынан басталуы қажет. Бас әріп те кіші әріпте қолданыла алады. Дұрыс емес құрылған айнымалы атауы синтаксистік қатеге алып келеді. Мысалы, айнымалы атауын саннан бастай алмайсыз. Сол сияқты, айнымалы атауында алфавиттік емес, символдык емес, сандық емес белгіні қолдансақ платформа қате шығарады. Питон жағдайларға төзімсіз. Минут секундтары ең дұрыс айнымалы байланысы. Алайда, бұл өзге бас әріп не кіші әріп қисындарынан өзгеше. Біріншіден, минуттар мен секундтар, әрине, бас әрептер болатын екіншісіне қарағанда жеңілірек, және дұрыс атаулар таңдау өте маңызды, себебі прграммалар жеңіл қолданыла, оқыла және жыл өте жетілдіріле алады. Әрбір программаның белгілі бір ковенциясы бар, ол оған қалай атау таңдау керегі жөнінде, веб сайттар белгілі бір стиль мен орналасуы бар тәрізді. Питонда көпшілік айнымалы атаулары тек кіші әріптер арқылы, әрбір сөздің асты сызылып жазылады, біз оны UNKNOWN жағдайы деп атаймыз.