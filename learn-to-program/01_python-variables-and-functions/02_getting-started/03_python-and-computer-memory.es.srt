1
00:00:01,770 --> 00:00:03,211
Los programas registran mucha
información.

2
00:00:03,211 --> 00:00:03,708
Parte de ella es visible para el usuario, tales como valores en una hoja de cálculo, pero mucho de ello es oculto.

3
00:00:03,708 --> 00:00:04,205
Parte de ella es visible para el usuario, tales como valores en una hoja de cálculo, pero mucho de ello es oculto.

4
00:00:04,205 --> 00:00:04,702
Parte de ella es visible para el usuario, tales como valores en una hoja de cálculo, pero mucho de ello es oculto.

5
00:00:04,702 --> 00:00:05,199
Parte de ella es visible para el usuario, tales como valores en una hoja de cálculo, pero mucho de ello es oculto.

6
00:00:05,199 --> 00:00:06,620
Parte de ella es visible para el usuario, tales como 

7
00:00:06,620 --> 00:00:09,460
valores en una hoja de cálculo, pero mucho de ello es
oculto.

8
00:00:12,190 --> 00:00:14,950
Por ejemplo, cuando un programa de hoja de cálculo
cálcula el

9
00:00:14,950 --> 00:00:17,360
promedio de un grupo de números, el programa
primero

10
00:00:17,360 --> 00:00:19,310
suma todos los números, luego cuenta cuantos

11
00:00:19,310 --> 00:00:22,190
hay y luego hace la
división apropiada

12
00:00:25,380 --> 00:00:27,725
Todos estos valores están almacenados en la memoria del
ordenador.

13
00:00:27,725 --> 00:00:31,860
Para el propósito de este curso, pensaremos
en la memoria del ordenador como una muy

14
00:00:31,860 --> 00:00:34,450
larga lista de localidad de almacenamiento, cada cual
que

15
00:00:34,450 --> 00:00:37,500
tiene un número único llamada la
dirección de la memoria

16
00:00:38,920 --> 00:00:42,660
Usualmente escribiremos en la dirección de la memoria
con un prefijo x de de tal forma que se vean

17
00:00:42,660 --> 00:00:49,640
diferente de otros números, x201 es la
dirección de memoria 201.

18
00:00:49,640 --> 00:00:50,410
Puedes pensar de ellas como

19
00:00:50,410 --> 00:00:54,559
dirección de memoria como los
números de casa en una larga calle.

20
00:00:57,940 --> 00:01:00,940
Como hemos dicho, los valores son almacenados en 
la memoria del ordenador.

21
00:01:00,940 --> 00:01:04,979
Así el número 8.5 puede estar en la
dirección de memoria x34

22
00:01:04,979 --> 00:01:10,450
x34, y el número 44 puede estar en la
dirección de memoria x35

23
00:01:10,450 --> 00:01:13,060
Los programas necesitan una forma de mantener un registro de todos
estos valores

24
00:01:13,060 --> 00:01:15,585
Ellos hacen esto usando algo llamado
variables

25
00:01:15,585 --> 00:01:18,900
Una variable es una ubicación con nombre en la memoria

26
00:01:20,510 --> 00:01:23,130
Python mantiene un registro de las variables en un
área separada

27
00:01:23,130 --> 00:01:27,160
de la memoria de los valores
Podemos tener una variable tamaño de zapatos que

28
00:01:27,160 --> 00:01:32,510
almacena dirección de memoria x34 lo que significa que
el tamaño de zapato se refiere al

29
00:01:32,510 --> 00:01:37,920
valor 8.5.
De la misma forma, podríamos tener

30
00:01:37,920 --> 00:01:43,630
la variable paul_age cuyo valor fue 44
Esto lo logramos

31
00:01:43,630 --> 00:01:49,360
almacenando la dirección de memoria x35 con
la variable paul_age.

32
00:01:49,360 --> 00:01:51,150
Lo bueno de Python es que tu
no

33
00:01:51,150 --> 00:01:54,330
tienes que preocuparte sobre que dirección de memoria particular
son escogidas

34
00:01:54,330 --> 00:01:56,710
Python va a mantener un registro de todas estas por
ti

35
00:01:56,710 --> 00:02:00,375
De hecho, nunca podrás saber qué dirección
de memoria se está usando.

36
00:02:00,375 --> 00:02:04,480
Sin embargo, es realmente una ayuda mantener
ese modelo en mente cuando estás programando.

37
00:02:05,790 --> 00:02:09,190
Estos son algunos términos que usaremos
durante el curso.

38
00:02:09,190 --> 00:02:11,345
Un valor tiene una dirección de memoria

39
00:02:11,345 --> 00:02:14,233
Una variable contiene una dirección de memoria

40
00:02:14,233 --> 00:02:20,090
Una variable se refiere o apunta a un valor
Aquí hay unos

41
00:02:20,090 --> 00:02:26,006
ejemplos de como se usa esta terminología.
El valor 8.5 tiene la dirección de memoria x34

42
00:02:26,006 --> 00:02:32,520
La variable shoe_size contiene la dirección de memoria
x34.

43
00:02:32,520 --> 00:02:38,806
El valor de shoe_size es 8.5.
shoe_size se refiere al valor 8.5

44
00:02:38,806 --> 00:02:42,319
shoe_size apunta al valor 8.5.