1
00:00:01,770 --> 00:00:03,211
برنامه ها رد بسیاری از اطلاعات را با خود دارند.

2
00:00:03,211 --> 00:00:03,708
بعضی از آن برای کاربر قابل رویت هست مثل مقادیر spreadsheet ولی بسیاری از آن ناپیدا.

3
00:00:03,708 --> 00:00:04,205
بعضی از آن برای کاربر قابل رویت هست مثل مقادیر spreadsheet ولی بسیاری از آن ناپیدا.

4
00:00:04,205 --> 00:00:04,702
بعضی از آن برای کاربر قابل رویت هست مثل مقادیر spreadsheet ولی بسیاری از آن ناپیدا.

5
00:00:04,702 --> 00:00:05,199
بعضی از آن برای کاربر قابل رویت هست مثل مقادیر spreadsheet ولی بسیاری از آن ناپیدا.

6
00:00:05,199 --> 00:00:06,620
بعضی از آنها 

7
00:00:06,620 --> 00:00:09,460
مثل بسیاری از مقادیری که در spreadsheet هستند برای کاربر قابل رویت ولی اکثرا پنهانند.

8
00:00:12,190 --> 00:00:14,950
مثلا ،وقتی که برنامه spreadsheet میانگین

9
00:00:14,950 --> 00:00:17,360
دسته ای از اعداد را محاسبه میکند،برنامه ابتدا

10
00:00:17,360 --> 00:00:19,310
همه نمرات را با هم جمع کرده و آنگاه میشمارد که چند

11
00:00:19,310 --> 00:00:22,190
چندتا هستند و آنگاه تقسیم مقتضی را انجام میدهد.

12
00:00:25,380 --> 00:00:27,725
همه این مقادیر در حافظه کامپیوتر ثبت شده اند.

13
00:00:27,725 --> 00:00:31,860
برای این برنامه تحصیلی،فکر میکنیم که حافظه کامپیوتر 

14
00:00:31,860 --> 00:00:34,450
جایگاه لیست حافظه طولانی دارد،که هر یک از آنها

15
00:00:34,450 --> 00:00:37,500
عددی منحصر به فرد موسوم به آدرس حافظه دارد.

16
00:00:38,920 --> 00:00:42,660
معمولا آدرس های حافظه را با پیشوند x مینویسیم به طوری که 

17
00:00:42,660 --> 00:00:49,640
از اعداد دیگر تمایز یابند،x201 آدرس حافظه201 میباشد.

18
00:00:49,640 --> 00:00:50,410
این آدرس های حافظه را 

19
00:00:50,410 --> 00:00:54,559
میتوانید بیشتر شبیه شماره خانه در خیابانی طولانی تصور کنیم.

20
00:00:57,940 --> 00:01:00,940
همان گونه که گفته ایم،مقادیر در حافظه کامپیوتر ضبط میشوند.

21
00:01:00,940 --> 00:01:04,979
پس امکان دارد که عدد 8.5 در آدرس حافظهx34 باشد.

22
00:01:04,979 --> 00:01:10,450
و عدد 44 در آدرس حافظه x35.

23
00:01:10,450 --> 00:01:13,060
برنامه ها نیاز به راهی برای ردیابی کلیه این اندازه ها دارد.

24
00:01:13,060 --> 00:01:15,585
آنها این کار را با متغیرها انجام میدهند.

25
00:01:15,585 --> 00:01:18,900
متغیر جای اسم و رسم داری در حافظه هست.

26
00:01:20,510 --> 00:01:23,130
پایتون رد متغیرها را در محوطه جداگانه ای 

27
00:01:23,130 --> 00:01:27,160
از حافظه که از مقادیر تفکیک شده نگهداری میکند.امکان دارد که متغیر shoe size داشته باشیم که

28
00:01:27,160 --> 00:01:32,510
آدرس حافظهx34 را ذخیره کند که به

29
00:01:32,510 --> 00:01:37,920
مقدار 8.5 نظر دارد.به همین ترتیب،میتوانیم که 

30
00:01:37,920 --> 00:01:43,630
متغیر paul_age را داشته باشیم که مقدارش 44 بود.این کار را با

31
00:01:43,630 --> 00:01:49,360
اختصاص آدرس حافظهx35 به متغیر paul_age است.

32
00:01:49,360 --> 00:01:51,150
مطلب جالب در مورد پایتون این است که

33
00:01:51,150 --> 00:01:54,330
نیازی نیست که دلواپس آدرس حافظه خاصی باشید که انتخاب شده اند.

34
00:01:54,330 --> 00:01:56,710
پایتون رد همه این ها را برای شما نگه میدارد.

35
00:01:56,710 --> 00:02:00,375
در واقع،نمیتوانید که حتی انتخاب کنید که کدام آدرس حافظه ای مورد استفاده قرار گیرد.

36
00:02:00,375 --> 00:02:04,480
به هر حال،در واقع کمک میکند که وقتی برنامه ریزی میکنید این مدل را در ذهن خود نگهدارید

37
00:02:05,790 --> 00:02:09,190
اینجا چند اصطلاح هست که در کل این دوره تحصیلی از آنها استفاده میکنیم.

38
00:02:09,190 --> 00:02:11,345
یک مقدار دارای یک آدرس حافظه است.

39
00:02:11,345 --> 00:02:14,233
یک متغیر دارای آدرس حافظه است.

40
00:02:14,233 --> 00:02:20,090
یک متغیر به مقداری نظر دارد.اینجا چندین

41
00:02:20,090 --> 00:02:26,006
مثال از نحوه استفاده از این اصطلاح.مقدار8.5 دارای آدرس حافظهx34 هست.

42
00:02:26,006 --> 00:02:32,520
متغیر shoe_size دارای آدرس حافظهx34 است.

43
00:02:32,520 --> 00:02:38,806
مقدار shoe_size برابر8.5 هست،به 8.5 نظر دارد.

44
00:02:38,806 --> 00:02:42,319
shoe_size به 8.5 اشاره میکند.