I programmi tengono traccia di molte 
informazioni. Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti. Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti. Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti. Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti. Alcuni di questi sono visibili agli utenti come dei valori all'interno di un foglio di lavoro, ma molti 
sono nascosti. Ad esempio, quando un programma del tipo foglio
elettronico calcola la media di un gruppo di numeri, il programma
per prima cosa somma tutti i numeri poi conta quanti ce ne sono e poi effettua la
divisione appropriata. Tutti questi valori sono salvati nella memoria
del computer. Per i propositi di questo corso, penseremo
alla memoria del computer come ad una lista molto lunga di posizioni di stoccaggio, 
ognuna delle quali ha un unico numero chiamato indirizzo
di memoria. Di solito scriveremo gli indirizzi di memoria
con una x come prefisso in modo che sembrino diversi dagli altri numeri, x201 è
l'indirizzo di memoria 201. Puoi pensare a questi indirizzi di memoria come se fossero delle case
di numeri su una lunga strada. Come abbiamo detto, i valori sono salvati
nella memoria del computer. Quindi il numero 8.5 potrebbe trovarsi
all'indirizzo di memoria x34, x34, e il numero 44 potrebbe essere all'indirizzo 
di memoria x35. I programmi hanno bisogno di un modo per
tenere traccia di tutti questi valori. Usano qualcosa chiamato variabili. Una variabile è una locazione in memoria
con un nome. Python tiene traccia delle variabili in 
un'area separata di memoria rispetto ai valori.
Potremmo avere una variabile shoe size che contiene l'indirizzo di memoria x34, questo significa che
shoe size fa riferimento al valore 8.5
Nello stesso modo, potremmo avere una variabile paul_age il cui valore è 44.
Lo facciamo salvando l'indirizzo di memoria x35 con
la variabile paul_age. La cosa bella di Python è che tu non devi preoccuparti di quale particolare
indirizzo di memoria venga scelto. Python terrà traccia di tutto questo per te. Infatti, non puoi nemmeno trovare quali
indirizzi di memoria siano usati. Comunque, ti aiuta molto tenere a mente
questo modello quando stai programmando. Ecco della terminologia che useremo 
durante il corso. Un valore ha un indirizzo di memoria. Una variabile contiene un indirizzo di
memoria. Una variabile si riferisce ad un punto o ad un valore.
Ecco alcuni esempi di come usare questa terminologia.
Il valore 8.5 ha indirizzo di memoria x34. La variabile shoe_size contiene l'indirizzo di
memoria x34. Il valore si shoe_size è 8.5.
shoe_size fa riferimento al valore 8.5. shoe_size punta al valore 8.5.