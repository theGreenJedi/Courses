1
00:00:01,770 --> 00:00:03,211
I programmi tengono traccia di molte 
informazioni.

2
00:00:03,211 --> 00:00:03,708
Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti.

3
00:00:03,708 --> 00:00:04,205
Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti.

4
00:00:04,205 --> 00:00:04,702
Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti.

5
00:00:04,702 --> 00:00:05,199
Alcuni di questi sono visibili agli utenti come dei
valori all'interno di un foglio di lavoro, ma molti sono nascosti.

6
00:00:05,199 --> 00:00:06,620
Alcuni di questi sono visibili agli utenti come dei

7
00:00:06,620 --> 00:00:09,460
valori all'interno di un foglio di lavoro, ma molti 
sono nascosti.

8
00:00:12,190 --> 00:00:14,950
Ad esempio, quando un programma del tipo foglio
elettronico calcola la

9
00:00:14,950 --> 00:00:17,360
media di un gruppo di numeri, il programma
per prima cosa

10
00:00:17,360 --> 00:00:19,310
somma tutti i numeri poi conta quanti

11
00:00:19,310 --> 00:00:22,190
ce ne sono e poi effettua la
divisione appropriata. 

12
00:00:25,380 --> 00:00:27,725
Tutti questi valori sono salvati nella memoria
del computer.

13
00:00:27,725 --> 00:00:31,860
Per i propositi di questo corso, penseremo
alla memoria del computer come ad una

14
00:00:31,860 --> 00:00:34,450
lista molto lunga di posizioni di stoccaggio, 
ognuna delle quali

15
00:00:34,450 --> 00:00:37,500
ha un unico numero chiamato indirizzo
di memoria.

16
00:00:38,920 --> 00:00:42,660
Di solito scriveremo gli indirizzi di memoria
con una x come prefisso in modo che sembrino

17
00:00:42,660 --> 00:00:49,640
diversi dagli altri numeri, x201 è
l'indirizzo di memoria 201.

18
00:00:49,640 --> 00:00:50,410
Puoi pensare a questi

19
00:00:50,410 --> 00:00:54,559
indirizzi di memoria come se fossero delle case
di numeri su una lunga strada.

20
00:00:57,940 --> 00:01:00,940
Come abbiamo detto, i valori sono salvati
nella memoria del computer.

21
00:01:00,940 --> 00:01:04,979
Quindi il numero 8.5 potrebbe trovarsi
all'indirizzo di memoria x34,

22
00:01:04,979 --> 00:01:10,450
x34, e il numero 44 potrebbe essere all'indirizzo 
di memoria x35.

23
00:01:10,450 --> 00:01:13,060
I programmi hanno bisogno di un modo per
tenere traccia di tutti questi valori.

24
00:01:13,060 --> 00:01:15,585
Usano qualcosa chiamato variabili.

25
00:01:15,585 --> 00:01:18,900
Una variabile è una locazione in memoria
con un nome.

26
00:01:20,510 --> 00:01:23,130
Python tiene traccia delle variabili in 
un'area separata

27
00:01:23,130 --> 00:01:27,160
di memoria rispetto ai valori.
Potremmo avere una variabile shoe size che

28
00:01:27,160 --> 00:01:32,510
contiene l'indirizzo di memoria x34, questo significa che
shoe size fa riferimento al

29
00:01:32,510 --> 00:01:37,920
valore 8.5
Nello stesso modo, potremmo avere una

30
00:01:37,920 --> 00:01:43,630
variabile paul_age il cui valore è 44.
Lo facciamo

31
00:01:43,630 --> 00:01:49,360
salvando l'indirizzo di memoria x35 con
la variabile paul_age.

32
00:01:49,360 --> 00:01:51,150
La cosa bella di Python è che tu non

33
00:01:51,150 --> 00:01:54,330
devi preoccuparti di quale particolare
indirizzo di memoria venga scelto.

34
00:01:54,330 --> 00:01:56,710
Python terrà traccia di tutto questo per te.

35
00:01:56,710 --> 00:02:00,375
Infatti, non puoi nemmeno trovare quali
indirizzi di memoria siano usati.

36
00:02:00,375 --> 00:02:04,480
Comunque, ti aiuta molto tenere a mente
questo modello quando stai programmando.

37
00:02:05,790 --> 00:02:09,190
Ecco della terminologia che useremo 
durante il corso.

38
00:02:09,190 --> 00:02:11,345
Un valore ha un indirizzo di memoria.

39
00:02:11,345 --> 00:02:14,233
Una variabile contiene un indirizzo di
memoria.

40
00:02:14,233 --> 00:02:20,090
Una variabile si riferisce ad un punto o ad un valore.
Ecco alcuni

41
00:02:20,090 --> 00:02:26,006
esempi di come usare questa terminologia.
Il valore 8.5 ha indirizzo di memoria x34.

42
00:02:26,006 --> 00:02:32,520
La variabile shoe_size contiene l'indirizzo di
memoria x34.

43
00:02:32,520 --> 00:02:38,806
Il valore si shoe_size è 8.5.
shoe_size fa riferimento al valore 8.5.

44
00:02:38,806 --> 00:02:42,319
shoe_size punta al valore 8.5.