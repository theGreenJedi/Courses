Programas mantem o controle de uma 
grande quantidade de informações Algumas delas visíveis ao usuário, tais como valores em uma planilha, mas um monte delas está oculto.
Por exemplo, quando uma planillha calcula a média de um grupo de números, o programa primeiro soma todos os números, em seguida conta quantos são e, depois, faz a divisão apropriada. como sendo numeros de casas numa rua Com disse, valores sao guardados na memoria do computador longa lista de locais de armazenamento, cada um dos quais tem um único número chamado de endereço de memória. Nós geralmente escreveremos os endereços de memória com um prefixo "x" para que eles pareçam diferentes dos outros números. x201 é o endereço de memória 201. Você pode pensar nesses endereços de memória como sendo números de casas em uma longa rua. Isso siginifica que o tamanho de sapato se refere a um valor, 8.5 por exemplo Assim, o número 8.5 pode estar no endereço de memória x34 e o número 44 pode estar no endereço de memória x35. Os programas precisam de uma maneira para manter o controle de todos esses valores.
Eles fazem isso usando algo chamado "variáveis". Uma variável é um local nomeado na memória. O Python mantém o controle das variáveis ​​em uma área da memória separada dos valores. Podemos ter uma variável shoe<u>size que
armazena o endereço de memória x34, o que significa que</u> shoe<u>size refere-se ao valor 8.5. Da mesma forma, podemos ter uma variável</u> paul<u>age, cujo valor é 44. 
Conseguimos isso armazenando o endereço de</u> memória X35 com a variável paul<u>age.
O legal do Python é que você</u> não tem que se preocupar com quais endereços
específicos de memória são escolhidos. O Python vai manter o controle de tudo isso para você. Na verdade, você nem mesmo pode escolher quais endereços são usados. No entanto, isso realmente o ajuda a manter esse modelo em mente quando você está programando. Aqui vai alguma terminologia que usaremos ao longo do curso. Um valor "possui" um endereço de memória. 
Uma variável "armazena" o endereço de memória. Uma variável "refere-se" ou "aponta" para um valor. 
Aqui estão alguns exemplos de como utilizar esta terminologia. O valor 8.5 "possui" o endereço de memória X34. A variável shoe<u>size "armazena" o endereço de memória X34.</u> O valor de shoe-size é 8.5, shoe<u>size "refere-se" ao valor 8.5.</u> shoe<u>size "aponta" para o valor 8.5.</u>