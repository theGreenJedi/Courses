Бұл дәрісте бірнеше тармақтарды көрсетпекпін. Оның аты дизайн нұсқамалығы. Бізде үшбұрыш ауданын есептеу функциясы бар. Біз doc тізбегіне бір бөлігін қостық. Қолдану мысалдары және біз күткен қайту мәндері.  
Осы функцияның сипаттамасының бес типі бар. Жоғарғы бөлігі функция атауы мен параметрден құралады. Онда каналды байланыс бар. Бұл мәндер каналы параметр үшін және қайта қайту типі үшін қолданылады. Оның сипаттамасы бар. Оны қолданудың бірнеше мысалы да бар. 
Және соңғысы, функцияның негізгі бөлігі. Біздің дизайн нұсқамалығы сол бес бөлімді құруға көмектеседі. Осыған қоса осына жазған сәтте функциямызды тексереміз. Келесі функцияны құратын болғандықтан дизайн нұсқамалығын түсіндіреміз. Мұндағы басты мәселе АҚШ температураны Фаренгейтте, ал Канада болса Цельсияда өлшейді. Осы екі ел арасында сапар шеккенде, бұл әңгімелесу функциясын құруға септігін тигізеді. Фаренгейтті Цельсияге айналдыратын функция құрастырамыз. Ең алғаш, біз жасағалы тұрған функцияны қолданатын бірнеше мысал келтіреміз. Функцияңыздың қызметі жайында ойлана тұрыңыз. Функцияны қолданудың бір немесе екі мысалын жазыңыз. Функцияңызға атау ойлап табыңыз, оны кейініректе өзгерте де аласыз. Функциялардың атаулары көбінесе етістік немесе етістікті тіркестер болады, себебі олар іс әрекет жасайды. 
Егер ойыңызға ешнәрсе келмей жатса, функция қандай қызмет атқарады деген сұраққа жауап береңіз. Біздің жағдайда жауап Фаренгейтті Цельсияға айналдыру. Алайда, атауымыз біршама ұзын болып кетті, сол себепті Цельсияға аналдыру деп қана алайық.  
Атауды кез келген сәтте өзгертуге болады 32 дәрежелі Фаренгейтті Цельсияға айналдыруды енгізгенде қандай нәтиже шыққанын қалаймыз? Нөл жауабын аламыз деген ойдамыз. Питон негізінде жазылғандай болып көрінетіндей тік жақшаны қолданбақпыз. Тағы да бір мысал енгізелік, қайнау дәрежесінде айналдыру. Келесі кезеңде контрактінің типін анықтау қажет. 
Параметрлер қандай типтер? Қайта оралатын мәннің типі қандай? Цельсияға ауыстырғанда бүтін сандармен орындалатын тәрізді, алайда ол бөлшек сандармен де жұмыс істеуі керек. Санның сөзін қолданғалы тұрмыз, ол оны да қолдануға болатынын білдіру үшін. Болжауымызша, ол да санды шығарып береді. Бірнеше қолданыстарды жаздық, сонымен бірге қандай типтер болуы керектігін де қарастырдық, ал енді функцияның жоғарғы бөлігін жазатын уақыт келді. Мағыналы параметр қолдан, сонда өзге программалаушылар мен өзіңіз де фунцияны жеңіл түсінетін боласыздар. Осында, қаласаңыз, функция атауын да өзгертсеңіз болады. Жоғарғы бөлігін бар ақпаратпен толтырайық. Біз функция атауы Цельсияға айналдыру екенін білеміз және біздің параметрлер Фаренгейттің дәрежесін көрсететін сандар. Сонымен Фаренгейтті параметр атауы ретінде қолданамыз. Одан төменгінің барлығы қорапта болмақ, осы жайын қарастырайық. Ал қазір сіз өз функцияңыз қандай іс әрекет жасау керектігі жайында анық ойыңыз болуы керек. 
Енді сипаттама жазу керек. Фаренгейт дәрежесіне сәйкес Цельсия көрсеткішін шығарып беру. Параметрді атадық және шығарып беру мәнін сипаттадық. Бұл барлық құжаттар үшін аса маңызды. Қазір сізде функцияңыздың қызметі оуралы нақты ой, оның атауы параметрлері бар кезде функцияға код жазу керек. Егер мысалдары, жоғарғы бөлігі және сипаттамасы жөнінде ойланған болсаңыз, мұны жүзеге асыру жеңіл болады. Мектепте оқығанымыздай Фаренгейттен 32 азайтып, тоғыздан беске көбейтеміз. Біз әлі бұны сақтамадық, алайда сақтааған жөн болады. pie температурасын шығармақпыз. 
Енді функциямызды мысалдар көмегімен сынап көретін кез келді. Шығарып беру мәні қандай болатынын есептеп қойғандықтан, бірден жауабын немесе мысалдың неге қате екенін айта аласыз. 
Осы модулді іске қосамыз. Терезешелерді орнатып, екеуін де бір сәтте көре аламыз, содан соң тек мысалдардың көшірмесін жасап, қоя аламыз. Нөл мәнін күтеміз, алайда 14.2 қайталауын аламыз. 
Өзгесі жөнінде ше? Ол да қате. 
Мәселеге тап боласыз. Азайту амалы көбейту немесе бөлі амалдарына қарағанда рөлі төмен, сондықтан азйтудан бұрын 32 беске көбейтіп тоғызға бөлуді орындаймыз. Оны түзеу үшін ашық жақшы қойып, содан соң сақтап, қайта іске қосамыз. Содан соң мысалымызды қайта қарастырамыз. Мысалдарымыздан күткендеріміз бізде бар тек бүтін сан орнына бөлшек санға тап болдық. Оған себеп бөлу амалы берілген сан бөлшек емес бүтін болса да көпшілік жағдайды бөлшек сан шығарып береді. Мәселе біздің есептеуімізде емес. 
Бұл біздің мысалда да контрактыда да емес. Сан тип шығарып беру үшін тым жалпы. 
Біз екеуінде түзейміз. Модульді тағы бір рет іске қосып, функциямызға көмек шықыртайық.