En esta conferencia, vamos a enseñaros una serie de pasos. Llamada la "Receta de Diseño". Que puedes usar para escribir tus propias funciones. Aqui esta nuestra funcion del area del triángulo. Hemos añadido una parte a la cadena de documentacion. Ejemplos de uso y valores de regreso esperados. Esta definicion de funcion tiene 5 partes. Tiene la cabecera, la cual incluye el nombre de la funcion y los parametros. Tiene la "pipe contract". Los tipos de valores que se espera que se pasen a los parametros, como tambien el tipo de valor de retorno. Tiene la descripcion. Tiene varios ejemplos de uso de la funcion. Y por ultimo esta el cuerpo de la funcion. Nuestra receta de diseño te ayuda a desarrollar esas 5 partes. Mas una, donde probamos que nuestra funcion funciona tras haberla escrito. Explicaremos la funcion de diseño mientras desarrollamos otra funcion. Aqui esta el problema con el que trabajaremos: La medida de temperatura de los Estados Unidos esta en Fahrenheit y Canada mide en Centígrados. Mientras viajamos entre los dos paises, ayuda tener una funcion de conversion. Escribiremos una funcion que convierte de Fahrenheit a Centígrados. El primer paso que daremos sera dar unos ejemplos de uso de tu funcion la cual escribiras. Piensa en lo que quieres que haga tu funcion. Y escribe 1 o 2 ejemplos de llamadas a la funcion que quieres escribir. Tendras que pensar un nombre para tu funcion, siempre puedes cambiarlo luego. Los nombres de las funciones suelen ser verbos, porque hacen cosas. Así que si estas atascado, responde a la pregunta, ¿Qué es lo que hace la funcion? Nuestra respuesta aqui es, convertir de Fahrenheit a Centígrados. Pero eso es muy largo, por lo que usaré convertir a Centrigrados. Siempre puedes mejorar el nombre después. ¿Qué queremos que ocurra cuando llamamos a convertir a Centígrados con 32 grados Fahrenheit? Esperamos que devuelva 0. Añadiremos el signo mayor que para que parezca que esta escrito en la consola de python. Vamos a añadir otro ejemplo para convertir al punto de ebullición. El siguiente paso es pensar en el tipo de la variable. ¿De qué tipo son los parametros? ¿Y cual e sel tipo de valor que devuelve? Parece que queremos que "convertir a Centígrados" trabaje con enteros, pero podemos imaginar que trabajará bien tambien con floats. Vamos a usar la palabra numero para indicar que puede devolver ambos. Y presumiblemente, devolverá un numero también. Ahora que has escrito algunas llamadas y tienes una idea de como deberian ser los tipos, es hora de escribir la cabecera de la función. Escoge un nombre de parametro significativo para que otros programadores y tu entendais mejor tu función. Tambien puedes modificar el nombre de tu funcion aqui si quieres. Vamos a rellenar lo que sabemos para la cabecera. Sabemos que el nombre de la funcion es convertir a Centigrados y que nuestro parametro es el numero de grados Fahrenheit. Asi que usaremos Fahrenheit como nuestro nombre de parametro. Todo lo de abajo se supone que esta en una "box spring", asi que encarguemonos de ello ahora. Por ahora, deberias tener una buena idea de que es lo que quieres que la funcion haga. Es hora de escribir la descripcion sobre que hace nuestra funcion. Devuelve el numero de grados Centigrados equivalentes a los grados Fahrenheit. Ten en cuenta que mencionamos el parametro explicitamente y también describimos el valor de retorno. Esto es muy importante en toda documentación. Ahora que tienes una buena idea de lo que hace la funcion, y tu has decidido los nombres de la funcion y parámetros, puedes escribir el codigo para la función. Esto te sera mucho más facil de hacer si dedicas tiempo pensando en los ejemplos, cabecera y descripción. Como aprendimos en el colegio, restamos 32 a los grados Fahrenheit y los multiplicamos por cinco novenos (5/9). No hemos guardado esto todavia y deberiamos hacerlo. Vamos a llamar a esta "temperature.pie". Es hora de probar nuestra funcion en los ejemplos. Una vez has pensado que valores retorna, puedes decir si tu codigo o tal vez los ejemplos son incorrectos. Ejecutaremos este módulo. Configura la ventana para que podamos ver ambos a la vez y despues podemos copiar y pegar nuestros ejemplos. Y vemos que esperamos 0 pero obtenemos 14.2 periodico. ¿Qué pasa con el otro? No, tampoco funciona. Tal vez hallas visto el problema. La resta tiene menos prioridad que la multiplicación o la division y entonces la resta pasa despues de que hallamos calculado 32 veces 5 dividido por 9. Arreglamos esto añadiendo parentesis, guardando, volviendo a ejecutar. Y entonces probamos nuestros ejemplos de nuevo. Casi obtenemos los esperado en nuestros ejemplos, excepto que estamos obteniendo un float en lugar de un int. Esto es porque la división siempre produce un float y el operador produce un float tanto si el operando es float como si no. El problema no esta en nuestro calculo. Está en nuestros ejemplos y en nuestros tipos. Numero es demasiado general. Lo arreglaremos. Vamos a ejecutar el módulo otra vez, llamar a ayuda en nuestra funcion y mostrar en