1
00:00:01,470 --> 00:00:05,950
در این مبحث،قصد داریم که سری قدم هایی را نشان دهیم که موسوم به دستور کار طراحی است

2
00:00:05,950 --> 00:00:07,980
که میتوانید آنها را به کار بسته و تابع خودتان را بنویسید.

3
00:00:09,180 --> 00:00:11,250
اینجا تابع مثلثی ما هست.

4
00:00:11,250 --> 00:00:14,439
یک قسمت به مثالهای مربوط به کاربرد doc strip افزوده ایم.

5
00:00:14,439 --> 00:00:17,100
و بردار مورد نظردر مقادیر.

6
00:00:17,100 --> 00:00:19,360
این تعریف تابع پنج بخش دارد.

7
00:00:19,360 --> 00:00:23,490
عنوان،که شامل نام تابع و پارامترها است.

8
00:00:23,490 --> 00:00:25,950
دارای قرارداد تایپ هست،انواع یا

9
00:00:25,950 --> 00:00:29,140
مقدارهای مورد نظر که برای پارامترها گذر داده میشوند.

10
00:00:29,140 --> 00:00:31,580
و نیز نوع تابع تحویل داده شده.

11
00:00:31,580 --> 00:00:33,490
دارای توضیح است.

12
00:00:33,490 --> 00:00:37,300
دارای دو مثال از کاربرد این تابع هست.

13
00:00:37,300 --> 00:00:39,270
و سرانجام،دارای بدنه تابع هست.

14
00:00:40,480 --> 00:00:43,670
دستور کار طراحی ما به ما کمک میکند تا آن پنج قسمت را ردیف کنیم.

15
00:00:43,670 --> 00:00:47,050
به علاوه یکی بیشتر که وقتی تابع را نوشته ایم در آن می آزماییم که تابع کار میکند.

16
00:00:48,100 --> 00:00:51,793
وقتی تابع دیگری را ردیف میکنیم دستور کار طراحی را تشریح خواهیم کرد.

17
00:00:55,986 --> 00:00:57,740
اینجا مساله ای که میخواهیم رویش کار کنیم.

18
00:00:57,740 --> 00:01:00,360
درجه حرارت در امریکا با فارنهایت و

19
00:01:00,360 --> 00:01:02,300
در کانادا به سلسیوس اندازه گیری میشود.

20
00:01:02,300 --> 00:01:06,000
وقتی که بین این دو کشور مسافرت میکنیم به ما کمک میکند که ضریب تبدیلی داشته باشیم.

21
00:01:06,000 --> 00:01:09,790
تابعی را خواهیم نوشت که فارنهایت را به سلسیوس تبدیل کند.

22
00:01:09,790 --> 00:01:12,630
اولین قدم مثالی از

23
00:01:12,630 --> 00:01:14,970
مثالهایی است که از تابعی که میخواهد بنویسید داشته باشید.

24
00:01:14,970 --> 00:01:17,620
فکر کنید که میخواهید که تابعتان چه نقشی داشته باشد و یک یا دو

25
00:01:17,620 --> 00:01:19,900
مثال فراخوانی تابعی که میخواهید بنویسید را تایپ کنید.

26
00:01:20,900 --> 00:01:22,930
لازم است در مورد نام تابع فکر کنید.

27
00:01:22,930 --> 00:01:24,730
همیشه میتوانید آن را بعدا عوض کنید.

28
00:01:24,730 --> 00:01:28,820
نام توابع اغلب فعل یا عبارت فعلی هست زیرا کاری انجام میدهد.

29
00:01:28,820 --> 00:01:33,250
پس،اگر گیر کردید که سوالی را وارد کنید،تابع چه عملکردی دارد؟

30
00:01:33,250 --> 00:01:36,975
جواب ما در اینجا تبدیل فارنهایت به سلسیوس است.

31
00:01:36,975 --> 00:01:40,335
ولی آن کمی طولانی است،پس از convert to Celsius استفاده میکنم.

32
00:01:40,335 --> 00:01:43,080
همیشه میتوانید بعدا نام را بپرورانید.

33
00:01:43,080 --> 00:01:47,315
وقتی که convert to Celsius را روی 32 درجه فارنهایت فرا میخوانیم میخواهیم 

34
00:01:47,315 --> 00:01:48,300
که چه شود؟

35
00:01:48,300 --> 00:01:49,510
امیدواریم که صفر تحویل دهد.

36
00:01:50,520 --> 00:01:52,460
میخواهیم که براکت زاویه دار اضافه کنیم،به طوری که

37
00:01:52,460 --> 00:01:54,439
مانند این باشد که در shell پایتون تایپ شده باشد.

38
00:01:55,700 --> 00:01:58,960
مثالی دیگر برای تبدیل در نقطه جوش را بیافزاییم.

39
00:02:00,330 --> 00:02:03,410
قدم بعدی دریافتن قرارداد تایپی است.

40
00:02:03,410 --> 00:02:07,535
نوع پارامترها و مقداری که تحویل میدهد چیست .

41
00:02:09,160 --> 00:02:13,580
به نظر میاید که میخواهیم که در تبدیل به سلیسیوس از اعداد صحیح استفاده کنیم.

42
00:02:13,580 --> 00:02:16,730
میتوانیم که تصور کنیم که با اعداد اعشاری هم باید عمل کند.

43
00:02:16,730 --> 00:02:21,360
میخواهیم که از کلمه number استفاده کنیم که نشان دهد که از هر دو نوع استفاده میکند،

44
00:02:21,360 --> 00:02:25,270
و از قرار معلوم،عددی را نیز تحویل دهد.

45
00:02:25,270 --> 00:02:29,820
اکنون که شما چندین فراخوان را نگاشته و حدسهایی را در مورد اینکه نوع چه باشد داشته اید.

46
00:02:29,820 --> 00:02:32,420
زمان نوشتن عنوان تابع است.

47
00:02:32,420 --> 00:02:34,130
نام معنی داری را برگزینید تا

48
00:02:34,130 --> 00:02:38,760
سایر برنامه نویسان و خودتان راحت تر از تابعتان سر در آورید.

49
00:02:38,760 --> 00:02:41,360
در صورتی که مایل باشید میتوانید که نام تابعتان را نیز عوض کنید.

50
00:02:43,010 --> 00:02:44,520
آن چه را که برای عنوان میدانیم بنویسیم.

51
00:02:45,590 --> 00:02:49,140
نام تابع convert_to Celsius است.

52
00:02:51,320 --> 00:02:54,240
و میدانیم که پارامتر ما degrees Fahrenheit است،

53
00:02:54,240 --> 00:02:58,169
بنابراین نام پارامتر ما Fahrenheit است.

54
00:03:00,260 --> 00:03:02,760
هر چیزی که پایین قرار گرفته به نظر doc string است پس

55
00:03:02,760 --> 00:03:04,725
اکنون مواظبش باشیم.

56
00:03:04,725 --> 00:03:10,336
[صدا]اکنون باید دید بسیار خوبی در مورد کارکرد تابع داشته باشید.

57
00:03:10,336 --> 00:03:11,540
زمان نوشتن توضیحات است.

58
00:03:12,900 --> 00:03:14,190
آیا تابع ما

59
00:03:14,190 --> 00:03:18,400
درجه ساسیوس معادل با درجه فارنهایت را تحویل میدهد.

60
00:03:18,400 --> 00:03:21,310
توجه داشته باشید که پارامتر را به طور صریح توضیح دادیم و

61
00:03:21,310 --> 00:03:23,700
نیز مقدار تحویلی را تشریح کردیم.

62
00:03:23,700 --> 00:03:27,332
در همه مستندات این بسیار مهم است.

63
00:03:30,764 --> 00:03:33,840
اکنون که دید قوی از آن چه که تابعتان باید باشد دارید

64
00:03:33,840 --> 00:03:36,270
و در مورد نام تابع و پارامتر تصمیم گرفته اید.

65
00:03:36,270 --> 00:03:38,320
میتوانید برنامه تابع را بنویسید.

66
00:03:38,320 --> 00:03:42,030
اگر وقت برسر مثالها بگذاریم این بسیار ساده تر خواهد بود،

67
00:03:42,030 --> 00:03:44,167
قرارداد،عنوان،و توضیحات.

68
00:03:45,200 --> 00:03:48,520
آن گونه که در مدرسه آموختیم،32 را  از فارنهایت کم میکنیم.

69
00:03:49,550 --> 00:03:52,580
و آنگاه در 5/9 ضرب میکنیم.

70
00:03:52,580 --> 00:03:55,030
هنوز این را ذخیره نکرده ایم،و در واقع باید این کار را انجام دهیم.

71
00:03:56,260 --> 00:04:00,617
قصد داریم که این را فراخوانیم،

72
00:04:00,617 --> 00:04:04,310
[صدا]temperature.pi.

73
00:04:04,310 --> 00:04:07,090
وقت آن رسیده که تابع خود را در مثال ها بیازماییم.

74
00:04:07,090 --> 00:04:09,580
چون که از قبل فهمیدید که مقدار تحویلی چه باید باشد

75
00:04:09,580 --> 00:04:13,525
میتوانید بلافاصله بگویید که آیا برنامه،یا شاید مثالها،نادرست باشد.

76
00:04:16,231 --> 00:04:17,390
روی این برنامه جلو میرویم.

77
00:04:18,970 --> 00:04:22,280
ویندوز را به طوری تنظیم کنید که هر دو را بتوانیم هم زمان ببینیم.

78
00:04:22,280 --> 00:04:26,930
و آنگاه تنها میتوانیم مثالهای خود را copy و paste کنیم.

79
00:04:28,640 --> 00:04:34,900
و میبینیم که منتظر 0 هستیم ،ولی 14.2 تکرار میشود.

80
00:04:36,180 --> 00:04:37,484
در مورد دیگر چه؟

81
00:04:42,308 --> 00:04:43,870
آن نیز درست نیست.

82
00:04:45,360 --> 00:04:47,400
امکان دارد که قبلا این مساله را دیده باشید.

83
00:04:47,400 --> 00:04:51,570
حق تقدم عملیات برای تفریق پایین تر از ضرب و تقسیم است.

84
00:04:51,570 --> 00:04:57,284
و بنابراین تفریق در انتهای محاسبات انجام میگیرد،

85
00:04:57,284 --> 00:04:59,656
32 ضربدر5تقسیم بر9.

86
00:04:59,656 --> 00:05:05,394
این را با افزودن پرانتز اصلاح میکنیم،

87
00:05:05,394 --> 00:05:09,034
ذخیره و پردازش مجدد.

88
00:05:09,034 --> 00:05:11,094
و آنگاه آزمودن دوباره مثالهایمان

89
00:05:16,368 --> 00:05:18,630
تقریبا هرچه که در مثالها انتظارش را میکشیدیم داریم.

90
00:05:18,630 --> 00:05:22,240
به جز این که به جای عدد صحیح عدد اعشاری تحول میگیریم.

91
00:05:22,240 --> 00:05:25,930
دلیلش این است که تقسیم همیشه عدد اعشاری تولید میکند.

92
00:05:25,930 --> 00:05:31,170
و عملگرهای مختلف اگر یکی ازآنها عدد اعشاری نباشد تولید عدد اعشاری میکند.

93
00:05:31,170 --> 00:05:35,870
مساله در مورد محاسبات نیست،در مثالها و قرارداد است.

94
00:05:35,870 --> 00:05:38,320
number نوع بسیار عامی از تحویل است

95
00:05:39,500 --> 00:05:40,155
هر دو را اصلاح میکنیم.

96
00:05:40,155 --> 00:05:46,260
[صدا]

97
00:05:46,260 --> 00:05:51,450
برنامه خود را بار دیگری به جریان بیاندازید،help را برای تابع فراخوانید و از شفافیت لذت ببرید.