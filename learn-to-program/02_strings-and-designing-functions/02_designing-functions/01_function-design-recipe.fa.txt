در این مبحث،قصد داریم که سری قدم هایی را نشان دهیم که موسوم به دستور کار طراحی است که میتوانید آنها را به کار بسته و تابع خودتان را بنویسید. اینجا تابع مثلثی ما هست. یک قسمت به مثالهای مربوط به کاربرد doc strip افزوده ایم. و بردار مورد نظردر مقادیر. این تعریف تابع پنج بخش دارد. عنوان،که شامل نام تابع و پارامترها است. دارای قرارداد تایپ هست،انواع یا مقدارهای مورد نظر که برای پارامترها گذر داده میشوند. و نیز نوع تابع تحویل داده شده. دارای توضیح است. دارای دو مثال از کاربرد این تابع هست. و سرانجام،دارای بدنه تابع هست. دستور کار طراحی ما به ما کمک میکند تا آن پنج قسمت را ردیف کنیم. به علاوه یکی بیشتر که وقتی تابع را نوشته ایم در آن می آزماییم که تابع کار میکند. وقتی تابع دیگری را ردیف میکنیم دستور کار طراحی را تشریح خواهیم کرد. اینجا مساله ای که میخواهیم رویش کار کنیم. درجه حرارت در امریکا با فارنهایت و در کانادا به سلسیوس اندازه گیری میشود. وقتی که بین این دو کشور مسافرت میکنیم به ما کمک میکند که ضریب تبدیلی داشته باشیم. تابعی را خواهیم نوشت که فارنهایت را به سلسیوس تبدیل کند. اولین قدم مثالی از مثالهایی است که از تابعی که میخواهد بنویسید داشته باشید. فکر کنید که میخواهید که تابعتان چه نقشی داشته باشد و یک یا دو مثال فراخوانی تابعی که میخواهید بنویسید را تایپ کنید. لازم است در مورد نام تابع فکر کنید. همیشه میتوانید آن را بعدا عوض کنید. نام توابع اغلب فعل یا عبارت فعلی هست زیرا کاری انجام میدهد. پس،اگر گیر کردید که سوالی را وارد کنید،تابع چه عملکردی دارد؟ جواب ما در اینجا تبدیل فارنهایت به سلسیوس است. ولی آن کمی طولانی است،پس از convert to Celsius استفاده میکنم. همیشه میتوانید بعدا نام را بپرورانید. وقتی که convert to Celsius را روی 32 درجه فارنهایت فرا میخوانیم میخواهیم که چه شود؟ امیدواریم که صفر تحویل دهد. میخواهیم که براکت زاویه دار اضافه کنیم،به طوری که مانند این باشد که در shell پایتون تایپ شده باشد. مثالی دیگر برای تبدیل در نقطه جوش را بیافزاییم. قدم بعدی دریافتن قرارداد تایپی است. نوع پارامترها و مقداری که تحویل میدهد چیست . به نظر میاید که میخواهیم که در تبدیل به سلیسیوس از اعداد صحیح استفاده کنیم. میتوانیم که تصور کنیم که با اعداد اعشاری هم باید عمل کند. میخواهیم که از کلمه number استفاده کنیم که نشان دهد که از هر دو نوع استفاده میکند، و از قرار معلوم،عددی را نیز تحویل دهد. اکنون که شما چندین فراخوان را نگاشته و حدسهایی را در مورد اینکه نوع چه باشد داشته اید. زمان نوشتن عنوان تابع است. نام معنی داری را برگزینید تا سایر برنامه نویسان و خودتان راحت تر از تابعتان سر در آورید. در صورتی که مایل باشید میتوانید که نام تابعتان را نیز عوض کنید. آن چه را که برای عنوان میدانیم بنویسیم. نام تابع convert_to Celsius است. و میدانیم که پارامتر ما degrees Fahrenheit است، بنابراین نام پارامتر ما Fahrenheit است. هر چیزی که پایین قرار گرفته به نظر doc string است پس اکنون مواظبش باشیم. [صدا]اکنون باید دید بسیار خوبی در مورد کارکرد تابع داشته باشید. زمان نوشتن توضیحات است. آیا تابع ما درجه ساسیوس معادل با درجه فارنهایت را تحویل میدهد. توجه داشته باشید که پارامتر را به طور صریح توضیح دادیم و نیز مقدار تحویلی را تشریح کردیم. در همه مستندات این بسیار مهم است. اکنون که دید قوی از آن چه که تابعتان باید باشد دارید و در مورد نام تابع و پارامتر تصمیم گرفته اید. میتوانید برنامه تابع را بنویسید. اگر وقت برسر مثالها بگذاریم این بسیار ساده تر خواهد بود، قرارداد،عنوان،و توضیحات. آن گونه که در مدرسه آموختیم،32 را  از فارنهایت کم میکنیم. و آنگاه در 5/9 ضرب میکنیم. هنوز این را ذخیره نکرده ایم،و در واقع باید این کار را انجام دهیم. قصد داریم که این را فراخوانیم، [صدا]temperature.pi. وقت آن رسیده که تابع خود را در مثال ها بیازماییم. چون که از قبل فهمیدید که مقدار تحویلی چه باید باشد میتوانید بلافاصله بگویید که آیا برنامه،یا شاید مثالها،نادرست باشد. روی این برنامه جلو میرویم. ویندوز را به طوری تنظیم کنید که هر دو را بتوانیم هم زمان ببینیم. و آنگاه تنها میتوانیم مثالهای خود را copy و paste کنیم. و میبینیم که منتظر 0 هستیم ،ولی 14.2 تکرار میشود. در مورد دیگر چه؟ آن نیز درست نیست. امکان دارد که قبلا این مساله را دیده باشید. حق تقدم عملیات برای تفریق پایین تر از ضرب و تقسیم است. و بنابراین تفریق در انتهای محاسبات انجام میگیرد، 32 ضربدر5تقسیم بر9. این را با افزودن پرانتز اصلاح میکنیم، ذخیره و پردازش مجدد. و آنگاه آزمودن دوباره مثالهایمان تقریبا هرچه که در مثالها انتظارش را میکشیدیم داریم. به جز این که به جای عدد صحیح عدد اعشاری تحول میگیریم. دلیلش این است که تقسیم همیشه عدد اعشاری تولید میکند. و عملگرهای مختلف اگر یکی ازآنها عدد اعشاری نباشد تولید عدد اعشاری میکند. مساله در مورد محاسبات نیست،در مثالها و قرارداد است. number نوع بسیار عامی از تحویل است هر دو را اصلاح میکنیم. [صدا] برنامه خود را بار دیگری به جریان بیاندازید،help را برای تابع فراخوانید و از شفافیت لذت ببرید.