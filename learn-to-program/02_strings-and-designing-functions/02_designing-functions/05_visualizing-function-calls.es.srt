1
00:00:00,082 --> 00:00:05,087
En este vídeo vamos a utilizar el visualizador python para comprender cómo las llamadas a una función

2
00:00:05,087 --> 00:00:12,005
son gestionadas en la memoria del ordenador. Hemos escrito una función denominada Transformar en  Minutos,

3
00:00:12,005 --> 00:00:18,003
la cual transforma un número de horas en su equivalente en minutos.

4
00:00:18,003 --> 00:00:21,072
Por ejemplo, si ejecutamos Transformar en Minutos con argumento 2,

5
00:00:21,072 --> 00:00:27,076
se supone que obtendremos 120, ya que hay 120 minutos en dos horas.

6
00:00:27,076 --> 00:00:30,020
Fíjate en la sangría.

7
00:00:30,020 --> 00:00:35,051
Todo el código que forma parte de una función debe tener sangría, normalmente cuatro espacios.

8
00:00:35,051 --> 00:00:39,050
Vamos a ver qué ocurre cuando ejecutamos el programa.

9
00:00:41,057 --> 00:00:45,959
Cuando leemos la definición de la función o cuando lo hace Python

10
00:00:45,959 --> 00:00:50,071
vemos que se crea una variable llamada transformar en minutos.

11
00:00:50,071 --> 00:00:54,055
Contiene la dirección de memoria de un objeto función.

12
00:00:54,055 --> 00:01:00,007
Ese objeto función contiene toda la información sobre dicha función,

13
00:01:00,007 --> 00:01:05,009
incluyendo todo el código necesario para su ejecución, el parámetro y la cadena.