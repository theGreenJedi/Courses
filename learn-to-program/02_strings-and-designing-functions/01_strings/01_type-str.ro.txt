Ernest Hemingway a scris: "Toată viața am privit cuvintele ca și cum le vedeam
 pentru prima oară". Cuvintele se găsesc peste tot în programare, începând de la căutările Google la bioinformatică,
 unde ADN-ul este uneori reprezentat ca o secvență de litere A, T, C și G, până la
 lucruri simple, cum ar fi dialogurile din mesaje. Chiar acum, vom explora reprezentarea
 string-urilor (șiruri de caractere) în Python și cum putem manipula aceste valori. Un string este o secvență de caractere. În Python, acest tip este denumit str. String-urile încep și se termină
 cu un apostrof sau cu ghilimele. Cum ar fi 'hello' sau 'how are you?'. Putem include semne de punctuație,
 așa cum am văzut, sau cratime. String-urile sunt valori și pot fi utilizate
 în instrucțiuni de atribuire. Dacă este o zi însorită, putem decide
 să spunem cuiva: 'Ce zi frumoasă!'. Iar dacă este furtună, am putea
 dori să spunem 'Vai, ești ud leoarcă.' Dar, deja putem vedea că avem o problemă, deoarece la cea de-a doua cratimă,
 se schimbă din verde în negru, și într-adevăr avem o eroare de sintaxă. Desigur, problema este că încercăm să folosim un apostrof în interiorul
 unui string delimitat de apostrofuri. Iar Python, desigur, nu prea știe ce facem. Deci, din cauza aceasta, Python îți permite
 să folosești ghilimele. Acum, sunny_greeting este asta, iar storm_greeting este complet ud. Avem și o altă opțiune, în loc să folosim ghilimelele la acest string avem voie să folosim ceea ce se numește
 caracterul 'escape', o secvență escape. Dacă folosim un \ (backslash), veți observa
 mai întâi că string-ul devine verde, iar când apăs Return, vom vedea că string-ul va apărea, dar nu vom
 vedea caracterul \. Mai mult, delimitatorii apostrof de la începutul
 și sfârșitul acestui string se vor transforma în ghilimele. Putem concatena string-urile utilizând
 operatorul +. Observați că trebuie să punem noi spațiile albe. Astfel, putem să scriem o versiune a MatLibs,
 în care să-i cerem unui prieten un substantiv. Să presupunem că a ales râmă. Deci vom avea începutul unui puzzle și poate vom dori să încheiem cu,
 să zicem, un semn de exclamare, iar substantivul pe care l-a ales este râmă. Acum haideți să le punem împreună. Putem construi un string care se repetă,
 folosind operatorul înmulțire, și, ca în matematica obișnuită, înmulțirea
 are prioritate înaintea adunării. Putem să schimbăm asta, folosind parantezele. Totuși, nu putem să adunăm un string
 cu un număr întreg sau zecimal. Nu poate converti un număr zecimal
 într-un string, în mod implicit. Trimite o mică atenționare de pericol,
 că este o eroare de tip. Veți vedea într-o lecție ulterioară cum să
 combinați string-uri cu numere. Asta se va întâmpla în curând. Nu putem nici să înmulțim string-uri,
 chiar dacă string-ul are un număr în el. Nu putem înmulți o secvență cu
 ceva care nu este int, de tip str. Alți operatori nu vor funcționa. Eroare de tip: tip(-uri) de operand fără
 suport pentru semnul -: 'str' și 'str'. Nu putem folosi două string-uri
 împreună cu scăderea. Nu putem nici să împărțim. Tipuri de operanzi fără suport pentru
 împărțire, pentru ridicarea la putere. Observați că fiecare dintre acestea
 este o eroare de tip.