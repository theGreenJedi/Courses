سلام . در این مبحث،میخواهیم که با string ها کار بیشتری بکنیم و با فورمت های آن آشنا شویم. و نیز قصد داریم که برنامه های هوشمندی را بنویسیم که پیام ها را در آن به کاربر نشان داده و از او ورودی میگیریم. پس بیایید شروع کنیم. تابع فابریک Print را در پایتون فرا میخوانیم، یک مولفه هم برای آن در نظر میگیریم در این حالت string موسوم به Hello را گذر میدهیم،و Hello Hello در صفحه ظاهر میشود. توجه داشته باشید که به صورت hello ظاهر میشود، بدون علامت نقل قول. علامت های نقل قول تنها برای نشان دادن string های داخلی پایتون هستند، و کاربر آنها را نمیبیند. print را مجددا فراخوانیم،عبارت ریاضی را به عنوان مولفه تابع گذر دهیم. در این حالت عبارت3+7-3 است. و آن عبارت ابتدا ارزیابی و سپس چاپ میشود. برای سومین بار print را فرا میخوانیم و این بار با گذر دادن دو مولفه،دو string،یکی hello و دیگری there. و وقتی که آنها نشان داده میشوند با فاصله ظاهر میشوند که طراحی اصلیشان چنین است. پس hello فضای خالی هست که در نمایشگر چاپ میشود. اکنون،دو تابع را تعریف میکنیم. توابع را در یک فایل تعریف خواهیم کرد که calc.pi خوانده میشود که از قبل به وجود آوردم و ذخیره کردم. هر دو تابع مربع عددی را محاسبه خواهد کرد. یک تابع آن نتیجه را تحویل میدهد و دیگری آن را چاپ میکند. تعریف تابع را با کلمه def شروع میکنم و نام تابع square return است. یک پارامتر را میپذیرد. آن را فرا میخوانم این عدد. و نقش این تابع تحویل عدد به قوه دو است. دومین تابع،نامش square print خواهد بود. آن نیز یک پارامتر دارد،num،و آن نیز مربع عددی را محاسبه میکند. ولی بجای تحویل آن مقدار،این تابع آن را چاپ خواهد کرد. همزمان این دو تابع را در shell فرا میخوانم. مایلم که خروجی این فراخواندن چاب نگاه متفاوتی از مقدار تحویل داده شده با square print باشد. جهت انجام این کار، string را به لیست مولفه ها برای چاپ تابع فراخوان میافزایم به نحوی که مربع عدد را پیش از عدد به قوه دو رسیده نشان دهد. دومین قدم به جریان انداختن برنامه است. به Run menu مراجعه و Run Module را انتخاب میکنم. و اکنون در shell به دو تابع دسترسی داریم و قصد داریم که این توابع را فرا خوانیم و نتایج فراخواندن آنها را در متغیری ذخیره خواهیم کرد. بنابراین متغیر answer_return نتیجه فراخوانی تابع square_return را به دست خواهد آورد. قصد داریم که مولفه ای را برای square_return بگذرانیم و من مقدار 4 را برمیگزینم. میتوانستم که در اینجا هر مقداری را برگزینم. آن چه که برای تنها مثالی برای فراخوان تابع به کار میبرم. اکنون وقت به جریان انداختن تابع است. وقتی که تابع پردازش میشود،نیاز است که توجه شود که آیا چیزی چاپ میشود یا نه و ما میتوانیم ببینیم که وقتی اکنون آن را پردازش میکنیم،که بلافاصله prompt را تحویل میگیریم، با square return چیزی در نمایشگر چاپ نشد. سپس میخواهیم که مقدار answer term variable را کنترل کنیم و میتوانیم ببینیم که جواب ابتدا مقدار16 را تحویل میدهد. بنابراین،square return آدرس حافظه 16 را تحویل داد و آن آدرس حافظه درمتغیر answer return ذخیره شد. اکنون زمان فراخواندن تابع square print است، و نیز چهار را به عنوان مولفه میگذرانیم،میتوانستیم که هر چیزی را برگزینیم،و این بار میبینیم که چیزی در نمایشگر نمایشگر نشان داده شده،مربع عدد 16 است. بعد،محتویات متغیر answer printرا بررسی میکنیم و این بار چیزی نمیبینیم. وقتی تابعی عبارت return ندارد پردازش میشود،پایتون None تحویل میدهد،و آن چیزی است که در این حالت پیش میاید. زیرا answer_return به مقدلر عددی برمیگردد،میتوانیم که آن را در عبارت ریاضی،چون ضرب کردن آن در پنج به کار بریم. به هر صورت،answer_print  مقدار عددی ندارد. دلیل تحویل گرفتن پیام خطا در این مورد این است که به مقدار None برمیگردد،یا از جنس None Type.اکنون میدانیم که چگونه تابع فابریک پایتون برای کاربر پیام میفرستد. قدم بعدی استفاده از تابع فابریک input برای گرفتن اطلاعات از کاربر است. input را با گذر دادن string واحدی به عنوان مولفه فرا میخوانیم. در این مورد میخواهیم که از کاربر بپرسیم که نامت چیست؟ وقتی که تابع پردازش میشود آن string روی صفحه چاپ میشود،و منتظر میمانیم که کاربر در prompt چیزی را چاپ کند. توجه کنید که خط چشمک زن منتظر ما است که چیزی را تایپ کنیم. اکنون نام خود را به عنوان کاربر این برنامه تایپ میکنم،گفتم که نامم Jen است، و وقتی که enter را میفشارم ،پردازشش را تکمیل میکند. string که تایپ کردم،Jen،به عنوان string از تابع تحویل داده میشود. میبینیم که در اطراف آن نقل قول تکی هست که نشانگر این است که مقدار از نوع string میباشد. تابع input را برای دومین بار فرا میخوانیم،این بار گرچه نتیجه تحویلی با input را در متغیری به نام name ذخیره خواهد کرد. وقتی که تابع را پردازش میکنیم کاربرها نام خود را تایپ میکنند و مقدار به صورت یک string تحویل داده میشود،بنابراین آدرس حافظه مقدار در متغیر name ذخیره میشود. و وقتی که محتوای name را بررسی میکنیم، خواهیم دید که آن میشود string jet. از input برای تشویق کاربر به وارد کردن محلش استفاده میکنیم. string، آن جا که محلتان هست چاپ میشود و من محل خودم Toronto را وارد میکنم. مقدار توسط تابع تحویل داده میشود. پس location میشود Torontoو name میشود Jen. اکنون دو متغیر را به کار میبریم،nameو location،تا پیامی را به کاربر بازگردانیم. قصد داریم که print را فراخوانیم که سه مولفه را گذر دهد. اولین name دومی string که میگوید lives in و سومی location. بنابراین روشی که این فراخوان را تعبیر میکنیم که چاپ کند آن است که ابتدا از مقداری که مربوط به name میشود استفاده کنیم. اتصال دادن آن با فضای خالی بین آن و string موسوم به lives in و آنگاه،از فضای خالی و مقداری که به location مربوط میشود،برای چاپ Jen lives in Toronto. اوائل کار،توضیح دادم که nameو location هردو string هستند. در واقع،همه مقادیر،نوع همه مقادیری که input تحویل میدهد string خواهد بود. بار دیگرinput را فراخوانیم،با این پرسش که امروز چند فنجان قهوه صرف کردید. وقتی که مقداری را وارد میکنم به عنوان کاربر1 را وارد میکنم 2 را،و این مقدار توسط تابع input به صورت string تحویل داده میشود. بنابراین میتوانیم که ببینیم کهnum_coffee ، عدد صحیح 2 را تحویل نمیدهد بلکه string دو را تحویل میدهد. سابقا دیده اید که میتوانیم نقل قول تک خط و دو خط string را نشان میدهد. و اکنون میخواهم سومین فورمت نمایش string را نشان دهم،که string با سه خط نقل قول است. string های با سه خط نقل قول میتوانند که تا چندین سطر امتداد یابند. مثلا،string با نقل قول سه خط را چاپ کنیم با how در سطر اول،are در سطر دوم،و you در سطر سوم. [SOUND] . پس میشود یک کلمه در هر سطر. میخواهم که از همین string استفاده کنم. تنها،به جای چاپ آن،آن را در متغیری ذخیره میکنم. و وقتی که محتوای متغیر s را بررسی میکنیم، به نظر با آن چه که وارد کرده ایم تفاوت زیادی دارد. اول از همه،نقل قول سه خط دیگر ندارد. یک خط نقل قول دارد. و ثانیا،در جاهایی که دکمه Enter یا Return را زدم، در دو جا backslash n را میبینیم. این کاراکتر کاراکتر سطر جدید خوانده میشود،و در پایتون کاراکتر خاصی است. نشانه backslash کاراکتر فرار است. و ترکیب آن با n ،فرار و بعد از آن سطر جدید است آنجا خاص متعدد دیگری وجود دارند. مثلا،اعداد سه چهار و پنج را که با tab جدا شده اند را چاپ کنیم. از سه استفاده میکنیم،و آنگاه نشانه tab،ما از فرار پشتش backslash t،چهار،backslash t و پنج. بنابراین سه tab چهار tab پنج،و آن به این صورت جلوه میکند. علاوه بر سطر جدید و tab،پشت بند فرار متعدد دیگری وجود دارند. جفتی که برای ما مفید خواهد بود،فرار بعدش backslash،backslash است. که وقتی که میخواهیم یک backslash را چاپ کنیم،یا در string یک backslash بگنجانیم از آن استفاده میکنیم. علت این است که کاراکتر backslash،کاراکتر فرار است و وقتی که خودش را به تنهایی کار میزنیم پیام خطا تحویل میگیریم. آن گونه که انتظار میرود، چیزی پشتش میاید.ترتیب مفید دیگر،ترتیب یک نقل قول تک خط است، برای وقتی که میخواهید در داخل یک string نقل قول تک خط بگنجانیم. مثلا، در صورتی که بخواهم بگویم،don\'t،آنگاه از backslash استفاده میکنم، نقل قول،برای جایی که نقل قول تک خط بخواهم و به طور مشابه، وقتی که بخواهم از نقل قول دو خط در یک string استفاده کنم، میتوانم از فرار پشتش backslash،نقل قول دو خط استفاده کنم. پس،تصور کنید که میخواهیم این کار را کنیم،says،He says. [SOUND] و از نقل قول دو خط \ استفاده میکنم میخواهم که از نقل قول دو خط در string استفاده کنم.