Эрнест Хэмингуэй бүкін өмірім бойында бірінші рет көргендей сөздерге қарап келем деп жазған. Программалауда сөздерді кез келген жерде кездестіруге болады. 
Google іздеу жүйесінен бастап, ДНК кей кезде As, Ts, Cs және Gs түрінде болатын Биоинформатика, тіптен хабарлама диалогы тәрізді ең қарапайым заттарға дейін. Дәл қазір Pythonның жолма−жол көрінісін зерттемекпіз, және сол мәндерді қолданамыз. Жолма−жол дәлдік символдар жүйелілігі. 
Pythonда бұл тип str деп аталады. Жолдар жалғыз немесе екі еселенген, сілем немесе калайсың деген тәрізді цитаталармен басталып, аяқталады. Пунктуациясын дұрастасақ та болады. Жолақтар олар мәндер және меншіктеу тұжырымдамасында қолданыла алады. .  Аспан ашық күн болса, біз біреуге қандай керемет күн деуіміз мүмкін. Ал боранды күн болған болса, жаңбыр қашан жауады екен деуіміз мүмкін. Сол екінші дефисте жасылдан қараға алмасып жатқандықтан, бір мәселеге тап болдық деп айтуымыз да мүмкін. Расында, бізде синтаксистік қате бар. Мұндағы мәселе, жалғыз цитаталық жолақ ішінде бір йитата қолданбақ болып отырмыз, ал Python шын мәнінде не істегелі тұрғанымызды түсініп тұрған жоқ. Сол себепті, Python сізге екі еселенген цитата қолдануға рұқсат береді. Ал енді ашық аспанды қарса алу ол сол, ал боранда су болу деген. Бізде басқа таңдау бар. 
Осы жолақта екі цитата қолданудың орнына атрқа қайту деп аталатын символды қолдану қалады, артқа қайту реті. Қисық символын қолданатын болсақ, ең бірінші жолақ түгелімен жасыл болып кеткенін байқайсыз, ал арқа қайтсам, жолақ пайда болады, алайда қисық символын көрмейміз. Ары қарай жолақтың басы мен аяғындағы жалғыз цитата белгілеуі екі еселенеді. Қосуда қолдана отырып оны кішірейте аламыз. Әрқайсысын өз орнына орналастыру керектігін естен шығармаңыз. Осымен қатар, MatLibs версиясын жаза аламыз. 
Олар жаңбар құртын ұстап алды делік. Ал енді пазлың бастамасын жасаймыз. Енді осыны аяқтау үшін леп белгісімен олар алған зат есім қал сөзі делік. Осының бәрін бірге қосайық. Көбейту амалы арқылы қайталанба жол құрамыз. Жалпы математикаға негізделсек, көбейту қосу амалынан басымдалақ рөлге ие. Біз бұны жақша қолдана отыра қайта жаза аламыз. Алайда, бүтін сан мен бөлшек санға жолақ сала алмаймыз. Бөлшек объектіні str айналдырамыз. 
Дауыстылар, а, біршама қауіпті. Бұл типтік қате екенін ескеріңіз. Келесі дәрісте жолақтар мен сандарды қалай біріктіретінін үйренеміз. Жақында болады. 
Жолақты да егер оның ішінде сан болатын болса көбейте аламыз. Str типті non-int ретін көбейте алмаймыз. Өзге амалдар да орындалмайды. Типтік қате, минус str мен str қамтылмаған оперант типі жолақты азайтумен қатар қоладан алмайды. Қамтылмаған оперантты бөлшектерге бөле алмайсыз . Оның әрбірі тип екенін естен шығармаңыз.