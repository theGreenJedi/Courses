1
00:00:00,025 --> 00:00:02,160
Сәлем.

2
00:00:02,160 --> 00:00:03,820
Бүгінгі дәрісте біз тізбектермен жұмыс істеп, 

3
00:00:03,820 --> 00:00:05,840
оларды форматтауды жасаймыз. 

4
00:00:05,840 --> 00:00:09,950
Сонымен қатар, қолданушыға хабарламаны жеткізіп, 

5
00:00:09,950 --> 00:00:13,948
одан жауап алатын интерактивті программалар жазамыз. 

6
00:00:13,948 --> 00:00:17,060
Ал енді бастайық. 

7
00:00:17,060 --> 00:00:19,500
Питонның ішіндегі Print функциясына 

8
00:00:19,500 --> 00:00:22,780
жалғыз аргументті мән беріп қолданамыз.  

9
00:00:22,780 --> 00:00:25,630
Бұл жолы біз Hello тізбегін енгізіп, 

10
00:00:25,630 --> 00:00:26,975
дисплейде соны көреміз. 

11
00:00:26,975 --> 00:00:32,020
Hello экранға шықты дегеніміз ол экранда 

12
00:00:32,020 --> 00:00:33,840
тұр және оған ешқандай түсіндірме қажет емес.

13
00:00:33,840 --> 00:00:37,540
Түсіндірмелер тек Питон үшкі тізбектерінің көрінісіне 

14
00:00:37,540 --> 00:00:40,449
арналған және қолданушыға көрінбейді. 

15
00:00:41,510 --> 00:00:44,210
Енді қайта print шақыртайық, функцияға аргумент 

16
00:00:44,210 --> 00:00:46,490
ретінде математикалақ есепті қолдана отыра. 

17
00:00:47,580 --> 00:00:51,250
Бұл жолы 3 қосу 7 минус 3 біздің есептің берілгені. 

18
00:00:51,250 --> 00:00:55,800
Бұл біріншіе шығарылып барып, экран бетіне шығады. 

19
00:00:57,040 --> 00:00:59,910
Біз үшінші рет екі аргумент қолдана отыра print жүгінеміз, 

20
00:00:59,910 --> 00:01:03,740
екі тізбек; hello жіне there.

21
00:01:03,740 --> 00:01:05,840
Және бұл тізбектер экран бетіне шыққан кезде олардың арасында 

22
00:01:05,840 --> 00:01:09,200
өздігінен ара қашықтық болады. 

23
00:01:09,200 --> 00:01:12,140
Сонымен, экран бетінен көретініміз hello ара қашықтық there.  

24
00:01:15,080 --> 00:01:16,973
Енді біз екі функцияны анықтаймыз. 

25
00:01:16,973 --> 00:01:19,119
Бұл функцияны мен жасап сақтап 

26
00:01:19,119 --> 00:01:23,040
қойған calc.pi файлында анықтаймыз. 

27
00:01:23,040 --> 00:01:25,820
Екі функцияда да біз санның квадратын есептейміз. 

28
00:01:25,820 --> 00:01:30,180
Бір функция сол нәтижені қайтарып, екіншісі оны басып шығарады. 

29
00:01:31,600 --> 00:01:34,620
Функцияны анықтауды біз def сөзінен бастаймыз, 

30
00:01:34,620 --> 00:01:37,830
ал атауы квадраттау болады. 

31
00:01:37,830 --> 00:01:39,180
Жалғыз параметрді қажет етеді. 

32
00:01:39,180 --> 00:01:40,220
Мен оны 

33
00:01:40,220 --> 00:01:41,310
num деп атаймын. 

34
00:01:41,310 --> 00:01:45,390
Яғни, бұл функцияның қызметі num−ды квадраттау. 

35
00:01:48,450 --> 00:01:52,350
Екінші функцияның атауы square print.

36
00:01:52,350 --> 00:01:55,046
Ол да жалғыз параметр иеленеді, яғни num, 

37
00:01:55,046 --> 00:01:58,810
және бұл да num−ның квадратын шығарады. 

38
00:01:58,810 --> 00:02:03,680
Мәнін шығарып беретін функцияға қарағанда, бұл мәнді басып шығарады. 

39
00:02:03,680 --> 00:02:07,160
Осы екі функцияны негізден шақыртамыз. 

40
00:02:07,160 --> 00:02:09,730
Басып шығаруға квадраттаудан өзге мән бергім келіп отыр.

41
00:02:09,730 --> 00:02:13,170
Ол үшін басып шығару функциясының аргументтер 

42
00:02:13,170 --> 00:02:13,480
тізіміне тізбек қосамын, 

43
00:02:13,480 --> 00:02:17,390
сонда ол квадратталушы num санды квадратталған 

44
00:02:17,390 --> 00:02:22,221
саннан бұрын шығарады. 

45
00:02:22,221 --> 00:02:25,199
Келесі қадам, модульді іске қосу. 

46
00:02:25,199 --> 00:02:29,740
Run менюінен Run Module таңдаймыз. 

47
00:02:29,740 --> 00:02:32,330
Енді бізде негіздегі екі функцияға қол жеткізе аламыз. 

48
00:02:33,530 --> 00:02:36,060
Осы екі функцияны қолданып, оның 

49
00:02:36,060 --> 00:02:38,550
оның нәтижелерін 

50
00:02:38,550 --> 00:02:40,020
айнымалыда сақтамақпыз. 

51
00:02:40,020 --> 00:02:42,500
Сонымен, answer_return айнымалысы 

52
00:02:42,500 --> 00:02:44,500
функцияға мін бергендегі нәтиже square_return болады. 

53
00:02:44,500 --> 00:02:50,150
Мен аргументті square_return қолданып, оған 4 деген мән бермекшімін. 

54
00:02:50,150 --> 00:02:51,555
Мен кез келген мән бере аламын. 

55
00:02:51,555 --> 00:02:54,835
Мен тек мысал үшін функцияны қолданамын. 

56
00:02:54,835 --> 00:02:57,570
Енді функцияны іске қосатын сәт келді. 

57
00:02:57,570 --> 00:03:02,350
Осы функция орындалған кезде басып шығарылған нәрсе бар ма деп қараймыз. 

58
00:03:02,350 --> 00:03:03,650
Оны орындаған сәтте

59
00:03:03,650 --> 00:03:06,940
бізге бірден нұсқау беріледі, 

60
00:03:06,940 --> 00:03:10,870
яғни ешнәрсе басылып шыққан жоқ. 

61
00:03:10,870 --> 00:03:15,000
Келесіде бізге айнымалы мәнінің жауабын тексеру керек, 

62
00:03:15,000 --> 00:03:18,950
жіне жауап мәні 16 болғанын байқаймыз.

63
00:03:18,950 --> 00:03:22,840
Яғни квадраттау 16 арнайы жадысын қайтарып, 

64
00:03:22,840 --> 00:03:26,439
ол арнайы жады қайта жауап айнымалысында сақталған.

65
00:03:28,060 --> 00:03:28,790
Квадраттап басып шығару функциясын қолданатын уақыт келді, 

66
00:03:28,790 --> 00:03:31,850
сонымен қатар төрт мінін 

67
00:03:31,850 --> 00:03:34,010
аргумент ретінде қолданамыз, кез келген мән алсақ та болар еді

68
00:03:34,010 --> 00:03:37,060
осы жолы біз экранда бір 

69
00:03:37,060 --> 00:03:41,090
нәрсе шыққанын байқаймыз, саннын квадраты 16.

70
00:03:41,090 --> 00:03:43,470
Келесіде answer print айнымалысының құрамын байқаймыз, 

71
00:03:43,470 --> 00:03:46,820
нітижесінде ештеңе жоқ. 

72
00:03:47,910 --> 00:03:50,200
Функция ешқандай нітиже бермесе Python бізге None

73
00:03:50,200 --> 00:03:53,830
деген жауап шығарады, осы 

74
00:03:53,830 --> 00:03:54,520
жолы біз тап болған осы. 

75
00:03:55,870 --> 00:04:00,180
Оған себеп answer_return тек сандық мәнге қатысты, 

76
00:04:00,180 --> 00:04:03,920
біз оны математикалық есепте оны беске көбейту тәрізді қолдансақ болады. 

77
00:04:03,920 --> 00:04:08,570
Алайда, answer_print болса сандық мәнге қатысты емес. 

78
00:04:08,570 --> 00:04:12,940
Бұл жағдайда қатеге тап болдық, себебі 

79
00:04:12,940 --> 00:04:18,840
себебі ол None мәніне немесе NoneType типіне қатысты болды. 

80
00:04:18,840 --> 00:04:22,480
Қолданушыға Питонның орнатылған функциясын экранға хабарлама шығарып беруі үшін қалай қолдануды білеміз.  

81
00:04:22,480 --> 00:04:25,460
Келесі қадам қолданушыдан ақпарат алу үшін Питонның орнатылған бағдарламасын 

82
00:04:25,460 --> 00:04:28,959
енгізуді қолданамыз. 

83
00:04:30,120 --> 00:04:34,650
Енгізуге жалғыз тізбекті аргумент ретінде қолданамыз. 

84
00:04:34,650 --> 00:04:38,850
Бұл жолы қолданушының есімін сұраймыз. 

85
00:04:38,850 --> 00:04:41,310
Осы тізбекті функция орындаған кезді, экранға шығады, 

86
00:04:41,310 --> 00:04:43,900
содан соң қолданушының 

87
00:04:43,900 --> 00:04:47,580
жолаққа жауап жазғанын күтеміз. 

88
00:04:47,580 --> 00:04:51,040
Курсордық жыпылықтап тұрғанын байқаңыз, ол бізден жауап күтіп тұр. 

89
00:04:53,089 --> 00:04:56,833
Енді осы программаның қолданушы ретінде өз атымды 

90
00:04:56,833 --> 00:05:02,530
жазамын, менің атм Джен дедім, содан соң енгізу батырмасын басып іске қостым. 

91
00:05:02,530 --> 00:05:07,760
Мен жазған тізбек, Джен, функция ретінде қайтып келді. 

92
00:05:07,760 --> 00:05:09,720
Осының айналасында жалғыз тібектер оынң мәні тізбек типі екенін 

93
00:05:09,720 --> 00:05:12,690
білдіретінін байқаймыз. 

94
00:05:12,690 --> 00:05:18,333
Екініші рет функцияны енгізуді қолданамыз, 

95
00:05:18,333 --> 00:05:23,196
бұл жолы енгізуден шыққан нәтижені name деген атпен сақтаймын. 

96
00:05:23,196 --> 00:05:25,580
Функцияны орындаған кезде қолданушылар өз есімдерін 

97
00:05:25,580 --> 00:05:28,500
жазады жіне ол мән тізбек ретінде қайта беріледі, 

98
00:05:28,500 --> 00:05:34,280
солай арнайы жады мәні name деген атпен сақталады. 

99
00:05:34,280 --> 00:05:36,350
Атаудың құрылымын зерттегенде, оның тізбекке қатысты 

100
00:05:36,350 --> 00:05:39,400
екенін байқаймыз. 

101
00:05:39,400 --> 00:05:43,250
Енді енгізу арқылы қолданушыға өз мекенін енгізуге нұсқаулық береміз. 

102
00:05:43,250 --> 00:05:43,810
Тізбек

103
00:05:43,810 --> 00:05:50,116
мекеніңіз жазылып, мен өз мекенімді жазамын; Торонто.

104
00:05:51,220 --> 00:05:53,300
Функция арқылы мән қайта оралады. 

105
00:05:53,300 --> 00:05:57,580
Мекен Торонто мәніне қатысты, ала атау Дженге қатысты. 

106
00:05:58,670 --> 00:06:01,465
Енді екі айнымалыны қолданайық, атау мен мекен, 

107
00:06:01,465 --> 00:06:04,960
хабарламаны қолданушыға құайта жеткізу үшін. 

108
00:06:04,960 --> 00:06:08,000
Үш аргумент бере отырып, print қарастырғалы жатырмын. 

109
00:06:08,000 --> 00:06:08,970
Біріншіден атау қатысы бар 

110
00:06:08,970 --> 00:06:15,990
бар мәнді қолданғалы тұрмын. 

111
00:06:15,990 --> 00:06:18,760
Оны тізбек арасындағы ара қашықтыққа біріктіремін. 

112
00:06:18,760 --> 00:06:22,450
Біріншіден атау қатысы бар мәнді қолданғалы тұрмын. 

113
00:06:22,450 --> 00:06:26,370
Оны тізбек арасындағы ара қашықтыққа біріктіремін. 

114
00:06:28,550 --> 00:06:31,540
Келесі, ара қашықтық пен мекенді білдіретін мәнді қолданамыз, 

115
00:06:31,540 --> 00:06:36,050
Джен Торонтода тұрады дегенді жазу үшін. 

116
00:06:36,050 --> 00:06:39,450
Осының алдында, атау мен мекен екуі де тізбекке қатысты екнін көрсеткенбіз. 

117
00:06:39,450 --> 00:06:42,660
Негізінде, барлық мәндер, енгізудегі мәндер 

118
00:06:42,660 --> 00:06:45,690
 Тізбек типі болады. 

119
00:06:45,690 --> 00:06:50,120
Енгізуді қайта шақыртып, одан бүгін мен қанша кесе кофе ішкенімді сұрайық. 

120
00:06:51,460 --> 00:06:53,590
Мәнді қолданушы ретінде енгізгенімде, 

121
00:06:53,590 --> 00:06:57,200
2 деп, бұл мән енгізу функциясы арқылы тізбек 

122
00:06:57,200 --> 00:07:00,190
ретінде қайта оралады. 

123
00:07:00,190 --> 00:07:06,210
Енді біз num_coffee 2 тізбегіне қатысты 

124
00:07:07,310 --> 00:07:08,790
екенін байқаймыз. 

125
00:07:08,790 --> 00:07:11,750
Ал енді мен сіздерге келесі үшінші 

126
00:07:11,750 --> 00:07:16,900
тізбек форматын көрсетемін,

127
00:07:21,230 --> 00:07:24,780
 ол үшеулік тізбек цитатасы. 

128
00:07:24,780 --> 00:07:29,360
Мысалы, үш жолақты тізбек жазайық, бірінші жолақта how, 

129
00:07:29,360 --> 00:07:33,920
екіншісінде are, ал үшіншісінде you. 

130
00:07:33,920 --> 00:07:33,920
 [Дыбыс]

131
00:07:33,920 --> 00:07:33,922
.

132
00:07:33,922 --> 00:07:42,150
Әр жолақта бір сөзден екенін байқадық. 

133
00:07:42,150 --> 00:07:43,790
Тура сол тізбекті қолданғалы тұрмын. 

134
00:07:43,790 --> 00:07:46,639
Тек оны жазғаннан гөрі, айнымалыда сақтаймын. 

135
00:07:51,770 --> 00:07:54,580
S айнымалысының құрамын зерттеген кезде

136
00:07:55,610 --> 00:07:58,480
біз енгізгеннен біршама өзгеше болып көрінеді. 

137
00:07:58,480 --> 00:08:00,910
Ең біріншіден, онда басқа үш жолақты тізбек жоқ. 

138
00:08:00,910 --> 00:08:02,352
Онда жалғаз цитата бар. 

139
00:08:02,352 --> 00:08:07,988
Ал екіншіден, Enter key немес Return key қолданған 

140
00:08:07,988 --> 00:08:12,940
жерлерімнің екі жерінде қисық символын көремін. 

141
00:08:12,940 --> 00:08:16,940
Ол жаңа жол символы деп аталады және Питонда 

142
00:08:16,940 --> 00:08:18,370
ол арнайы символ болып саналады. 

143
00:08:18,370 --> 00:08:23,510
Қисық сызық символы артқа кету символы. 

144
00:08:23,510 --> 00:08:28,150
Бұл қисық сызық комбинациясы, ал n артқа қайту ретіндегі жаңа жол. 

145
00:08:28,150 --> 00:08:28,650
 Мұнда 

146
00:08:31,860 --> 00:08:34,530
өзге де басқа арнайы символдар бар. 

147
00:08:34,530 --> 00:08:40,950
Мысалы, таблицамен ажыратылған үш, төрт және бес сандарын жазайық. 

148
00:08:40,950 --> 00:08:44,220
Үшті қолданған кезде tab символы үшін, артқа 

149
00:08:44,220 --> 00:08:49,930
 артқа қайту ретін қисық символын t, төрт, қисық символ t, және бес. 

150
00:08:49,930 --> 00:08:55,060
Сонымен, үш tab төрт tab бес түрінде болады. 

151
00:08:55,060 --> 00:08:57,180
Жаңа жол мен tab қосымша 

152
00:08:57,180 --> 00:09:00,460
өзге артқа қайту реті бар. 

153
00:09:00,460 --> 00:09:05,850
Біз үшін пайдалы болатын жұп артқа қайту реті, қисық символ, қисық символ. 

154
00:09:05,850 --> 00:09:08,190
Біз оны жалғыз қисық символын қолданғымыз келген сәтте немесе 

155
00:09:08,190 --> 00:09:11,200
немесе оны тізбекке қосөымыз келгенде қолдана береміз. 

156
00:09:12,800 --> 00:09:16,760
Оған себеп қисық символ ол артқа қайту символы жіне 

157
00:09:16,760 --> 00:09:20,990
біз оны өздігінен қолданған кезде қате хабарламасын аламыз. 

158
00:09:20,990 --> 00:09:22,040
Күткеніміздей, 

159
00:09:22,040 --> 00:09:29,020
оның соңынан еретін нәрсе бар. 

160
00:09:29,020 --> 00:09:33,800
Келесі бір пайдалы рет ол жалғыз рет, тізбек үшінде жалғыз ретті қолданғыңыз келгенде қажет.

161
00:09:33,800 --> 00:09:40,540
Мысалы, don't деп айтқыңыз келсе, ұиысқ символды 

162
00:09:40,540 --> 00:09:46,310
қолданамыз, сәйкесінше, леп белгісін қолданғым келген кезде мен артқа қайту ретін, қисық 

163
00:09:46,310 --> 00:09:51,200
символды, еселенген цитатаны 

164
00:09:51,200 --> 00:09:56,200
қолдана аламын. 

165
00:09:56,200 --> 00:10:02,819
Біз мынаны жүзеге асырғымыз келіп тұрғанын елестетіңіз, Ол айтады. 

166
00:10:02,819 --> 00:10:02,822
 [Дыбыс]

167
00:10:02,822 --> 00:10:09,030
сонда соны көрсету үшін мен  \ еселенген нұсқауын қолданамын

168
00:10:09,030 --> 00:10:11,200
мен еселенген нұсқауын тізбекте қолданғым келеді.