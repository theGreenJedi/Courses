1
00:00:00,025 --> 00:00:02,160
سلام .

2
00:00:02,160 --> 00:00:03,820
در این مبحث،میخواهیم که

3
00:00:03,820 --> 00:00:05,840
با string ها کار بیشتری بکنیم و با فورمت های آن آشنا شویم.

4
00:00:05,840 --> 00:00:09,950
و نیز قصد داریم که برنامه های هوشمندی را بنویسیم که پیام ها را 

5
00:00:09,950 --> 00:00:13,948
در آن به کاربر نشان داده و از او ورودی میگیریم.

6
00:00:13,948 --> 00:00:17,060
پس بیایید شروع کنیم.

7
00:00:17,060 --> 00:00:19,500
تابع فابریک Print را در پایتون فرا میخوانیم،

8
00:00:19,500 --> 00:00:22,780
یک مولفه هم برای آن در نظر میگیریم

9
00:00:22,780 --> 00:00:25,630
در این حالت string موسوم به Hello را گذر میدهیم،و Hello

10
00:00:25,630 --> 00:00:26,975
Hello در صفحه ظاهر میشود.

11
00:00:26,975 --> 00:00:32,020
توجه داشته باشید که به صورت hello ظاهر میشود،

12
00:00:32,020 --> 00:00:33,840
بدون علامت نقل قول.

13
00:00:33,840 --> 00:00:37,540
علامت های نقل قول تنها برای نشان دادن string های داخلی پایتون هستند،

14
00:00:37,540 --> 00:00:40,449
و کاربر آنها را نمیبیند.

15
00:00:41,510 --> 00:00:44,210
print را مجددا فراخوانیم،عبارت ریاضی را به

16
00:00:44,210 --> 00:00:46,490
عنوان مولفه تابع گذر دهیم.

17
00:00:47,580 --> 00:00:51,250
در این حالت عبارت3+7-3 است.

18
00:00:51,250 --> 00:00:55,800
و آن عبارت ابتدا ارزیابی و سپس چاپ میشود.

19
00:00:57,040 --> 00:00:59,910
برای سومین بار print را فرا میخوانیم و این بار با گذر دادن

20
00:00:59,910 --> 00:01:03,740
دو مولفه،دو string،یکی hello و دیگری there.

21
00:01:03,740 --> 00:01:05,840
و وقتی که آنها نشان داده میشوند با

22
00:01:05,840 --> 00:01:09,200
فاصله ظاهر میشوند که طراحی اصلیشان چنین است.

23
00:01:09,200 --> 00:01:12,140
پس hello فضای خالی هست که در نمایشگر چاپ میشود.

24
00:01:15,080 --> 00:01:16,973
اکنون،دو تابع را تعریف میکنیم.

25
00:01:16,973 --> 00:01:19,119
توابع را در یک فایل تعریف خواهیم کرد

26
00:01:19,119 --> 00:01:23,040
که calc.pi خوانده میشود که از قبل به وجود آوردم و ذخیره کردم.

27
00:01:23,040 --> 00:01:25,820
هر دو تابع مربع عددی را محاسبه خواهد کرد.

28
00:01:25,820 --> 00:01:30,180
یک تابع آن نتیجه را تحویل میدهد و دیگری آن را چاپ میکند.

29
00:01:31,600 --> 00:01:34,620
تعریف تابع را با کلمه def شروع میکنم

30
00:01:34,620 --> 00:01:37,830
و نام تابع square return است.

31
00:01:37,830 --> 00:01:39,180
یک پارامتر را میپذیرد.

32
00:01:39,180 --> 00:01:40,220
آن را فرا میخوانم

33
00:01:40,220 --> 00:01:41,310
این عدد.

34
00:01:41,310 --> 00:01:45,390
و نقش این تابع تحویل عدد به قوه دو است.

35
00:01:48,450 --> 00:01:52,350
دومین تابع،نامش square print خواهد بود.

36
00:01:52,350 --> 00:01:55,046
آن نیز یک پارامتر دارد،num،و

37
00:01:55,046 --> 00:01:58,810
آن نیز مربع عددی را محاسبه میکند.

38
00:01:58,810 --> 00:02:03,680
ولی بجای تحویل آن مقدار،این تابع آن را چاپ خواهد کرد.

39
00:02:03,680 --> 00:02:07,160
همزمان این دو تابع را در shell فرا میخوانم.

40
00:02:07,160 --> 00:02:09,730
مایلم که خروجی این فراخواندن چاب

41
00:02:09,730 --> 00:02:13,170
نگاه متفاوتی از مقدار تحویل داده شده با square print باشد.

42
00:02:13,170 --> 00:02:13,480
جهت انجام این کار،

43
00:02:13,480 --> 00:02:17,390
string را به لیست مولفه ها برای چاپ تابع فراخوان میافزایم

44
00:02:17,390 --> 00:02:22,221
به نحوی که مربع عدد را پیش از عدد به قوه دو رسیده نشان دهد.

45
00:02:22,221 --> 00:02:25,199
دومین قدم به جریان انداختن برنامه است.

46
00:02:25,199 --> 00:02:29,740
به Run menu مراجعه و Run Module را انتخاب میکنم.

47
00:02:29,740 --> 00:02:32,330
و اکنون در shell به دو تابع دسترسی داریم و

48
00:02:33,530 --> 00:02:36,060
قصد داریم که این توابع را فرا خوانیم و

49
00:02:36,060 --> 00:02:38,550
نتایج فراخواندن آنها را 

50
00:02:38,550 --> 00:02:40,020
در متغیری ذخیره خواهیم کرد.

51
00:02:40,020 --> 00:02:42,500
بنابراین متغیر answer_return 

52
00:02:42,500 --> 00:02:44,500
نتیجه فراخوانی تابع square_return را به دست خواهد آورد.

53
00:02:44,500 --> 00:02:50,150
قصد داریم که مولفه ای را برای square_return بگذرانیم و من مقدار 4 را برمیگزینم.

54
00:02:50,150 --> 00:02:51,555
میتوانستم که در اینجا هر مقداری را برگزینم.

55
00:02:51,555 --> 00:02:54,835
آن چه که برای تنها مثالی برای فراخوان تابع به کار میبرم.

56
00:02:54,835 --> 00:02:57,570
اکنون وقت به جریان انداختن تابع است.

57
00:02:57,570 --> 00:03:02,350
وقتی که تابع پردازش میشود،نیاز است که توجه شود که آیا چیزی چاپ میشود یا نه

58
00:03:02,350 --> 00:03:03,650
و ما

59
00:03:03,650 --> 00:03:06,940
میتوانیم ببینیم که وقتی اکنون آن را پردازش میکنیم،که بلافاصله prompt را تحویل میگیریم،

60
00:03:06,940 --> 00:03:10,870
با square return چیزی در نمایشگر چاپ نشد.

61
00:03:10,870 --> 00:03:15,000
سپس میخواهیم که مقدار answer term variable را کنترل کنیم

62
00:03:15,000 --> 00:03:18,950
و میتوانیم ببینیم که جواب ابتدا مقدار16 را تحویل میدهد.

63
00:03:18,950 --> 00:03:22,840
بنابراین،square return آدرس حافظه 16 را تحویل داد و

64
00:03:22,840 --> 00:03:26,439
آن آدرس حافظه درمتغیر answer return ذخیره شد.

65
00:03:28,060 --> 00:03:28,790
اکنون زمان

66
00:03:28,790 --> 00:03:31,850
فراخواندن تابع square print است،

67
00:03:31,850 --> 00:03:34,010
و نیز چهار را به عنوان مولفه میگذرانیم،میتوانستیم که

68
00:03:34,010 --> 00:03:37,060
هر چیزی را برگزینیم،و این بار میبینیم که چیزی در نمایشگر

69
00:03:37,060 --> 00:03:41,090
نمایشگر نشان داده شده،مربع عدد 16 است.

70
00:03:41,090 --> 00:03:43,470
بعد،محتویات متغیر answer printرا بررسی میکنیم

71
00:03:43,470 --> 00:03:46,820
و این بار چیزی نمیبینیم.

72
00:03:47,910 --> 00:03:50,200
وقتی تابعی عبارت return ندارد

73
00:03:50,200 --> 00:03:53,830
پردازش میشود،پایتون None تحویل میدهد،و آن چیزی است که

74
00:03:53,830 --> 00:03:54,520
در این حالت پیش میاید.

75
00:03:55,870 --> 00:04:00,180
زیرا answer_return به مقدلر عددی برمیگردد،میتوانیم که آن را

76
00:04:00,180 --> 00:04:03,920
در عبارت ریاضی،چون ضرب کردن آن در پنج به کار بریم.

77
00:04:03,920 --> 00:04:08,570
به هر صورت،answer_print  مقدار عددی ندارد.

78
00:04:08,570 --> 00:04:12,940
دلیل تحویل گرفتن پیام خطا در این مورد این است که به مقدار None برمیگردد،یا از جنس

79
00:04:12,940 --> 00:04:18,840
None Type.اکنون میدانیم که چگونه

80
00:04:18,840 --> 00:04:22,480
تابع فابریک پایتون برای کاربر پیام میفرستد.

81
00:04:22,480 --> 00:04:25,460
قدم بعدی استفاده از تابع فابریک

82
00:04:25,460 --> 00:04:28,959
input برای گرفتن اطلاعات از کاربر است.

83
00:04:30,120 --> 00:04:34,650
input را با گذر دادن string واحدی به عنوان مولفه فرا میخوانیم.

84
00:04:34,650 --> 00:04:38,850
در این مورد میخواهیم که از کاربر بپرسیم که نامت چیست؟

85
00:04:38,850 --> 00:04:41,310
وقتی که تابع پردازش میشود آن string 

86
00:04:41,310 --> 00:04:43,900
روی صفحه چاپ میشود،و منتظر میمانیم که

87
00:04:43,900 --> 00:04:47,580
کاربر در prompt چیزی را چاپ کند.

88
00:04:47,580 --> 00:04:51,040
توجه کنید که خط چشمک زن منتظر ما است که چیزی را تایپ کنیم.

89
00:04:53,089 --> 00:04:56,833
اکنون نام خود را به عنوان کاربر این برنامه تایپ میکنم،گفتم که

90
00:04:56,833 --> 00:05:02,530
نامم Jen است، و وقتی که enter را میفشارم ،پردازشش را تکمیل میکند.

91
00:05:02,530 --> 00:05:07,760
string که تایپ کردم،Jen،به عنوان string از تابع تحویل داده میشود.

92
00:05:07,760 --> 00:05:09,720
میبینیم که در اطراف آن نقل قول تکی هست که

93
00:05:09,720 --> 00:05:12,690
نشانگر این است که مقدار از نوع string میباشد.

94
00:05:12,690 --> 00:05:18,333
تابع input را برای دومین بار فرا میخوانیم،این بار گرچه

95
00:05:18,333 --> 00:05:23,196
نتیجه تحویلی با input را در متغیری به نام name ذخیره خواهد کرد.

96
00:05:23,196 --> 00:05:25,580
وقتی که تابع را پردازش میکنیم کاربرها

97
00:05:25,580 --> 00:05:28,500
نام خود را تایپ میکنند و مقدار 

98
00:05:28,500 --> 00:05:34,280
به صورت یک string تحویل داده میشود،بنابراین آدرس حافظه مقدار در متغیر name ذخیره میشود.

99
00:05:34,280 --> 00:05:36,350
و وقتی که محتوای name را بررسی میکنیم،

100
00:05:36,350 --> 00:05:39,400
خواهیم دید که آن میشود string jet.

101
00:05:39,400 --> 00:05:43,250
از input برای تشویق کاربر به وارد کردن محلش استفاده میکنیم.

102
00:05:43,250 --> 00:05:43,810
string،

103
00:05:43,810 --> 00:05:50,116
آن جا که محلتان هست چاپ میشود و من محل خودم Toronto را وارد میکنم.

104
00:05:51,220 --> 00:05:53,300
مقدار توسط تابع تحویل داده میشود.

105
00:05:53,300 --> 00:05:57,580
پس location میشود Torontoو name میشود Jen.

106
00:05:58,670 --> 00:06:01,465
اکنون دو متغیر را به کار میبریم،nameو

107
00:06:01,465 --> 00:06:04,960
location،تا پیامی را به کاربر بازگردانیم.

108
00:06:04,960 --> 00:06:08,000
قصد داریم که print را فراخوانیم که سه مولفه را گذر دهد.

109
00:06:08,000 --> 00:06:08,970
اولین 

110
00:06:08,970 --> 00:06:15,990
name دومی string که میگوید lives in و سومی location.

111
00:06:15,990 --> 00:06:18,760
بنابراین روشی که این فراخوان را تعبیر میکنیم که چاپ کند

112
00:06:18,760 --> 00:06:22,450
آن است که ابتدا از مقداری که مربوط به name میشود استفاده کنیم.

113
00:06:22,450 --> 00:06:26,370
اتصال دادن آن با فضای خالی بین آن و string موسوم به lives in

114
00:06:28,550 --> 00:06:31,540
و آنگاه،از فضای خالی و مقداری که

115
00:06:31,540 --> 00:06:36,050
به location مربوط میشود،برای چاپ Jen lives in Toronto.

116
00:06:36,050 --> 00:06:39,450
اوائل کار،توضیح دادم که nameو location هردو string هستند.

117
00:06:39,450 --> 00:06:42,660
در واقع،همه مقادیر،نوع همه

118
00:06:42,660 --> 00:06:45,690
مقادیری که input تحویل میدهد string خواهد بود.

119
00:06:45,690 --> 00:06:50,120
بار دیگرinput را فراخوانیم،با این پرسش که امروز چند فنجان قهوه صرف کردید.

120
00:06:51,460 --> 00:06:53,590
وقتی که مقداری را وارد میکنم

121
00:06:53,590 --> 00:06:57,200
به عنوان کاربر1 را وارد میکنم 2 را،و این مقدار

122
00:06:57,200 --> 00:07:00,190
توسط تابع input به صورت string تحویل داده میشود.

123
00:07:00,190 --> 00:07:06,210
بنابراین میتوانیم که ببینیم کهnum_coffee ، عدد صحیح 2 را تحویل نمیدهد بلکه string دو را تحویل میدهد.

124
00:07:07,310 --> 00:07:08,790
سابقا دیده اید که میتوانیم

125
00:07:08,790 --> 00:07:11,750
نقل قول تک خط و دو خط string را نشان میدهد.

126
00:07:11,750 --> 00:07:16,900
و اکنون میخواهم سومین فورمت نمایش string را نشان دهم،که string با سه خط نقل قول است.

127
00:07:21,230 --> 00:07:24,780
string های با سه خط نقل قول میتوانند که تا چندین سطر امتداد یابند.

128
00:07:24,780 --> 00:07:29,360
مثلا،string با نقل قول سه خط را چاپ کنیم با how در 

129
00:07:29,360 --> 00:07:33,920
سطر اول،are در سطر دوم،و you در سطر سوم.

130
00:07:33,920 --> 00:07:33,920
[SOUND]

131
00:07:33,920 --> 00:07:33,922
.

132
00:07:33,922 --> 00:07:42,150
پس میشود یک کلمه در هر سطر.

133
00:07:42,150 --> 00:07:43,790
میخواهم که از همین string استفاده کنم.

134
00:07:43,790 --> 00:07:46,639
تنها،به جای چاپ آن،آن را در متغیری ذخیره میکنم.

135
00:07:51,770 --> 00:07:54,580
و وقتی که محتوای متغیر s را بررسی میکنیم،

136
00:07:55,610 --> 00:07:58,480
به نظر با آن چه که وارد کرده ایم تفاوت زیادی دارد.

137
00:07:58,480 --> 00:08:00,910
اول از همه،نقل قول سه خط دیگر ندارد.

138
00:08:00,910 --> 00:08:02,352
یک خط نقل قول دارد.

139
00:08:02,352 --> 00:08:07,988
و ثانیا،در جاهایی که دکمه Enter یا Return را زدم،

140
00:08:07,988 --> 00:08:12,940
در دو جا backslash n را میبینیم.

141
00:08:12,940 --> 00:08:16,940
این کاراکتر کاراکتر سطر جدید خوانده میشود،و در پایتون

142
00:08:16,940 --> 00:08:18,370
کاراکتر خاصی است.

143
00:08:18,370 --> 00:08:23,510
نشانه backslash کاراکتر فرار است.

144
00:08:23,510 --> 00:08:28,150
و ترکیب آن با n ،فرار و بعد از آن سطر جدید است

145
00:08:28,150 --> 00:08:28,650
آنجا

146
00:08:31,860 --> 00:08:34,530
خاص متعدد دیگری وجود دارند.

147
00:08:34,530 --> 00:08:40,950
مثلا،اعداد سه چهار و پنج را که با tab جدا شده اند را چاپ کنیم.

148
00:08:40,950 --> 00:08:44,220
از سه استفاده میکنیم،و آنگاه نشانه tab،ما

149
00:08:44,220 --> 00:08:49,930
از فرار پشتش backslash t،چهار،backslash t و پنج.

150
00:08:49,930 --> 00:08:55,060
بنابراین سه tab چهار tab پنج،و آن به این صورت جلوه میکند.

151
00:08:55,060 --> 00:08:57,180
 علاوه بر سطر جدید و

152
00:08:57,180 --> 00:09:00,460
tab،پشت بند فرار متعدد دیگری وجود دارند.

153
00:09:00,460 --> 00:09:05,850
جفتی که برای ما مفید خواهد بود،فرار بعدش backslash،backslash است.

154
00:09:05,850 --> 00:09:08,190
که وقتی که میخواهیم 

155
00:09:08,190 --> 00:09:11,200
یک backslash را چاپ کنیم،یا در string یک backslash بگنجانیم از آن استفاده میکنیم.

156
00:09:12,800 --> 00:09:16,760
علت این است که کاراکتر backslash،کاراکتر فرار است و وقتی که

157
00:09:16,760 --> 00:09:20,990
خودش را به تنهایی کار میزنیم پیام خطا تحویل میگیریم.

158
00:09:20,990 --> 00:09:22,040
آن گونه که انتظار میرود،

159
00:09:22,040 --> 00:09:29,020
چیزی پشتش میاید.ترتیب مفید دیگر،ترتیب یک نقل قول تک خط است،

160
00:09:29,020 --> 00:09:33,800
برای وقتی که میخواهید در داخل یک string نقل قول تک خط بگنجانیم.

161
00:09:33,800 --> 00:09:40,540
مثلا، در صورتی که بخواهم بگویم،don\'t،آنگاه از backslash استفاده میکنم،

162
00:09:40,540 --> 00:09:46,310
نقل قول،برای جایی که نقل قول تک خط بخواهم و به طور مشابه،

163
00:09:46,310 --> 00:09:51,200
وقتی که بخواهم از نقل قول دو خط در یک string استفاده کنم،

164
00:09:51,200 --> 00:09:56,200
میتوانم از فرار پشتش backslash،نقل قول دو خط استفاده کنم.

165
00:09:56,200 --> 00:10:02,819
پس،تصور کنید که میخواهیم این کار را کنیم،says،He says.

166
00:10:02,819 --> 00:10:02,822
[SOUND]

167
00:10:02,822 --> 00:10:09,030
و از نقل قول دو خط \ استفاده میکنم

168
00:10:09,030 --> 00:10:11,200
میخواهم که از نقل قول دو خط در string استفاده کنم.