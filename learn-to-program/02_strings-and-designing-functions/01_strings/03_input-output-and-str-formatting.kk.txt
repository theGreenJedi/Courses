Сәлем. Бүгінгі дәрісте біз тізбектермен жұмыс істеп, оларды форматтауды жасаймыз. Сонымен қатар, қолданушыға хабарламаны жеткізіп, одан жауап алатын интерактивті программалар жазамыз. Ал енді бастайық. Питонның ішіндегі Print функциясына жалғыз аргументті мән беріп қолданамыз. Бұл жолы біз Hello тізбегін енгізіп, дисплейде соны көреміз. Hello экранға шықты дегеніміз ол экранда тұр және оған ешқандай түсіндірме қажет емес. Түсіндірмелер тек Питон үшкі тізбектерінің көрінісіне арналған және қолданушыға көрінбейді. Енді қайта print шақыртайық, функцияға аргумент ретінде математикалақ есепті қолдана отыра. Бұл жолы 3 қосу 7 минус 3 біздің есептің берілгені. Бұл біріншіе шығарылып барып, экран бетіне шығады. Біз үшінші рет екі аргумент қолдана отыра print жүгінеміз, екі тізбек; hello жіне there. Және бұл тізбектер экран бетіне шыққан кезде олардың арасында өздігінен ара қашықтық болады. Сонымен, экран бетінен көретініміз hello ара қашықтық there. Енді біз екі функцияны анықтаймыз. Бұл функцияны мен жасап сақтап қойған calc.pi файлында анықтаймыз. Екі функцияда да біз санның квадратын есептейміз. Бір функция сол нәтижені қайтарып, екіншісі оны басып шығарады. Функцияны анықтауды біз def сөзінен бастаймыз, ал атауы квадраттау болады. Жалғыз параметрді қажет етеді. Мен оны num деп атаймын. Яғни, бұл функцияның қызметі num−ды квадраттау. Екінші функцияның атауы square print. Ол да жалғыз параметр иеленеді, яғни num, және бұл да num−ның квадратын шығарады. Мәнін шығарып беретін функцияға қарағанда, бұл мәнді басып шығарады. Осы екі функцияны негізден шақыртамыз. Басып шығаруға квадраттаудан өзге мән бергім келіп отыр. Ол үшін басып шығару функциясының аргументтер тізіміне тізбек қосамын, сонда ол квадратталушы num санды квадратталған саннан бұрын шығарады. Келесі қадам, модульді іске қосу. Run менюінен Run Module таңдаймыз. Енді бізде негіздегі екі функцияға қол жеткізе аламыз. Осы екі функцияны қолданып, оның оның нәтижелерін айнымалыда сақтамақпыз. Сонымен, answer_return айнымалысы функцияға мін бергендегі нәтиже square_return болады. Мен аргументті square_return қолданып, оған 4 деген мән бермекшімін. Мен кез келген мән бере аламын. Мен тек мысал үшін функцияны қолданамын. Енді функцияны іске қосатын сәт келді. Осы функция орындалған кезде басып шығарылған нәрсе бар ма деп қараймыз. Оны орындаған сәтте бізге бірден нұсқау беріледі, яғни ешнәрсе басылып шыққан жоқ. Келесіде бізге айнымалы мәнінің жауабын тексеру керек, жіне жауап мәні 16 болғанын байқаймыз. Яғни квадраттау 16 арнайы жадысын қайтарып, ол арнайы жады қайта жауап айнымалысында сақталған. Квадраттап басып шығару функциясын қолданатын уақыт келді, сонымен қатар төрт мінін аргумент ретінде қолданамыз, кез келген мән алсақ та болар еді осы жолы біз экранда бір нәрсе шыққанын байқаймыз, саннын квадраты 16. Келесіде answer print айнымалысының құрамын байқаймыз, нітижесінде ештеңе жоқ. Функция ешқандай нітиже бермесе Python бізге None деген жауап шығарады, осы жолы біз тап болған осы. Оған себеп answer_return тек сандық мәнге қатысты, біз оны математикалық есепте оны беске көбейту тәрізді қолдансақ болады. Алайда, answer_print болса сандық мәнге қатысты емес. Бұл жағдайда қатеге тап болдық, себебі себебі ол None мәніне немесе NoneType типіне қатысты болды. Қолданушыға Питонның орнатылған функциясын экранға хабарлама шығарып беруі үшін қалай қолдануды білеміз. Келесі қадам қолданушыдан ақпарат алу үшін Питонның орнатылған бағдарламасын енгізуді қолданамыз. Енгізуге жалғыз тізбекті аргумент ретінде қолданамыз. Бұл жолы қолданушының есімін сұраймыз. Осы тізбекті функция орындаған кезді, экранға шығады, содан соң қолданушының жолаққа жауап жазғанын күтеміз. Курсордық жыпылықтап тұрғанын байқаңыз, ол бізден жауап күтіп тұр. Енді осы программаның қолданушы ретінде өз атымды жазамын, менің атм Джен дедім, содан соң енгізу батырмасын басып іске қостым. Мен жазған тізбек, Джен, функция ретінде қайтып келді. Осының айналасында жалғыз тібектер оынң мәні тізбек типі екенін білдіретінін байқаймыз. Екініші рет функцияны енгізуді қолданамыз, бұл жолы енгізуден шыққан нәтижені name деген атпен сақтаймын. Функцияны орындаған кезде қолданушылар өз есімдерін жазады жіне ол мән тізбек ретінде қайта беріледі, солай арнайы жады мәні name деген атпен сақталады. Атаудың құрылымын зерттегенде, оның тізбекке қатысты екенін байқаймыз. Енді енгізу арқылы қолданушыға өз мекенін енгізуге нұсқаулық береміз. Тізбек мекеніңіз жазылып, мен өз мекенімді жазамын; Торонто. Функция арқылы мән қайта оралады. Мекен Торонто мәніне қатысты, ала атау Дженге қатысты. Енді екі айнымалыны қолданайық, атау мен мекен, хабарламаны қолданушыға құайта жеткізу үшін. Үш аргумент бере отырып, print қарастырғалы жатырмын. Біріншіден атау қатысы бар бар мәнді қолданғалы тұрмын. Оны тізбек арасындағы ара қашықтыққа біріктіремін. Біріншіден атау қатысы бар мәнді қолданғалы тұрмын. Оны тізбек арасындағы ара қашықтыққа біріктіремін. Келесі, ара қашықтық пен мекенді білдіретін мәнді қолданамыз, Джен Торонтода тұрады дегенді жазу үшін. Осының алдында, атау мен мекен екуі де тізбекке қатысты екнін көрсеткенбіз. Негізінде, барлық мәндер, енгізудегі мәндер Тізбек типі болады. Енгізуді қайта шақыртып, одан бүгін мен қанша кесе кофе ішкенімді сұрайық. Мәнді қолданушы ретінде енгізгенімде, 2 деп, бұл мән енгізу функциясы арқылы тізбек ретінде қайта оралады. Енді біз num_coffee 2 тізбегіне қатысты екенін байқаймыз. Ал енді мен сіздерге келесі үшінші тізбек форматын көрсетемін, ол үшеулік тізбек цитатасы. Мысалы, үш жолақты тізбек жазайық, бірінші жолақта how, екіншісінде are, ал үшіншісінде you. [Дыбыс] . Әр жолақта бір сөзден екенін байқадық. Тура сол тізбекті қолданғалы тұрмын. Тек оны жазғаннан гөрі, айнымалыда сақтаймын. S айнымалысының құрамын зерттеген кезде біз енгізгеннен біршама өзгеше болып көрінеді. Ең біріншіден, онда басқа үш жолақты тізбек жоқ. Онда жалғаз цитата бар. Ал екіншіден, Enter key немес Return key қолданған жерлерімнің екі жерінде қисық символын көремін. Ол жаңа жол символы деп аталады және Питонда ол арнайы символ болып саналады. Қисық сызық символы артқа кету символы. Бұл қисық сызық комбинациясы, ал n артқа қайту ретіндегі жаңа жол. Мұнда өзге де басқа арнайы символдар бар. Мысалы, таблицамен ажыратылған үш, төрт және бес сандарын жазайық. Үшті қолданған кезде tab символы үшін, артқа артқа қайту ретін қисық символын t, төрт, қисық символ t, және бес. Сонымен, үш tab төрт tab бес түрінде болады. Жаңа жол мен tab қосымша өзге артқа қайту реті бар. Біз үшін пайдалы болатын жұп артқа қайту реті, қисық символ, қисық символ. Біз оны жалғыз қисық символын қолданғымыз келген сәтте немесе немесе оны тізбекке қосөымыз келгенде қолдана береміз. Оған себеп қисық символ ол артқа қайту символы жіне біз оны өздігінен қолданған кезде қате хабарламасын аламыз. Күткеніміздей, оның соңынан еретін нәрсе бар. Келесі бір пайдалы рет ол жалғыз рет, тізбек үшінде жалғыз ретті қолданғыңыз келгенде қажет. Мысалы, don't деп айтқыңыз келсе, ұиысқ символды қолданамыз, сәйкесінше, леп белгісін қолданғым келген кезде мен артқа қайту ретін, қисық символды, еселенген цитатаны қолдана аламын. Біз мынаны жүзеге асырғымыз келіп тұрғанын елестетіңіз, Ол айтады. [Дыбыс] сонда соны көрсету үшін мен  \ еселенген нұсқауын қолданамын мен еселенген нұсқауын тізбекте қолданғым келеді.