در مباحث گذشته،از چرخه های for جهت پرش از کاراکترها و string ها و اجزای لیست بهره گرفتیم.در این مبحث،میخواهیم با استفاده از چرخهfor ضریبهای string هاو لیست ها بپریم. و این عمل سبب میشود که بتوانیم مسائلی را حل کنیم که اکنون نمیتوانیم با چرخه های for انجام دهیم. اولین مساله کار با شمارش تعداد جفت های همسایه کاراکترهایی که در یک string ،مثل هم هستند هست. اینجا مثالی از string را ملاحظه میکنید. و در این string ،سه جفت کاراکتر همسایه وجود دارد که مثل هم هستند، cها،fهاو gها.برای اینکه این مساله را حل کنیم،نیاز است که کاراکترهای جفتی همسایه را با هم مقایسه کنیم.بنابراین string با ضریب صفر را باید با string با ضریب یک مقایسه کرد.string با ضریب یک رابا string با ضریب دو مقایسه کرد. و الا آخر،تا به کاراکتر یکی مانده به آخر برسیم. string با ضریب دو و آن را با آخرین کاراکتر string مقایسه کنیم،string با ضریب یک. اگر بخواهیم که کلی صحبت کنیم،این مطلب را میتوانیم به صورت مقایسه string با ضریب iبا string با ضریب i+1توصیف کنیم.برای ساختن این اعداد از تابع range استفاده میکنیم. صفر،از یک تا دو و شامل دو،پس مقادیر i در مقایسه های ما.یادآور میشوم که range سه پارامتر دارد، یکی الزامی و دو تا اختیاری.پارامتر الزامی مقداری است که میخواهیم دور تسلسل را پایان دهیم.و اعداد دلخواه شروع دامنه و رقم افزایش پلکانی هست.در این مورد از صفر شروع میشود، که فابریک هست.و میزان افزونی پلکانی یک،که آن هم فابریک هست. بنابراین فقط نیاز به نقطه توقف هست. و میخواهیم که به درازای string یک توقف کنیم. به سخنی دیگر،میخواهیم که به اندازهای بالا برویم که stringدو را شامل شود،یا کاراکتر یکی مانده به آخر string.و ما با استفاده ازطول string-1-این کار را میکنیم. که تا آن اندازه بالا میرود ولی آن را شامل نمیشود. و آنگاه،مقادیر ضریب ها چاپ میشود. اکنون که این چرخه ی for را نوشته ایم،میخواهیم که از همان عنوان در تابع خود برای شمارش جفت های کاراکترتکراری در string استفاده کنیم. تابعی را که میخواهیم بنویسیم شمارش تکراری های همسایه هست. یک پارامتر string دارد و عدد صحیح تحویل میدهد. و وقتی که تابع را فرامیخوانیم،string مثالی را به عنوان مولفه عبور داده، و تابع ،سه را تحویل میدهد.برای این تابع،نیاز بر این است که مواظب باشیم که چند کاراکتر تکراری را دیده ایم. پس میخواهیم که از متغیری استفاده کنیم که این عمل را تکرار کند. و این تکرارها مقدار اولیه صفر را خواهد داشت. میخواهیم مروری برکاراکترهای string داشته،از کنارشان رد شویم.و نیاز است که الان از ضرایبشان استفاده کنیم.قبلا این برنامه را برای عنوان چرخه نگاشته ایم. با ضریب صفر شروع میکنیم و تا string یکی مانده به آخر میرویم بالا. در بدنه چرخه for،میخواهیم که کاراکتر در موقعیتsبا ضریبi را باآن چه بعد از آن میاید مقایسه کنید، تا ببینید که آیا برابر هستند یا نه.بنابراین میتوانیم از عملگر تساوی برای این مورد استفاده کنیم، که s را در ضریب i با sدر ضریب i+1مقایسه کنیم. وقتی که مساوی باشند،دریافتیم که یکی از اینها که همسایه اند تکرار میشوند.بنابراین متغیر تکرار باید یکی یکی بالا برود.در انتهای چرخه،بعد از آن که خارج شد،میتوانیم مقداری را که قدم اول را تکرار میکند تحویل دهیم. سرانجام،تنها این فراخوان تابع را به جریان بیاندازیم تا اطمینان یابیم که آن طور که انتظار داریم عمل میکند. چهت این کار نیاز است که برنامه را به جریان بیاندازم. و حالا،میتوانیم تابع را فراخوانیم،و همان طور که انتظار میرود سه را تحویل میدهد. پس به طور خلاصه،به دلیل این حقیقت است که میخواهیم عضوی از لیست را با عضوی دیگر مقایسه کنیم که از ضرایب استفاده میکنیم. این کافی نیست که  مقدار آیتم را بدانیم. نیاز است که بدانیم که آیتم در کجای لیست واقع هست که معلوم کنیم که با کدام عضو دیگر مقایسه شود.برای کسب درک بهتر از آن چه که با به جریان انداختن برنامه پیش میاید،رد آن را با مجسم ساز پایتون دنبال میکنیم. اولین باری که تعریف تابع ارزیابی میشود،و به سطر نوزدهم رهنمون میشویم که در آن با استفاده از مثالی کوچکتر تابع خوانده شده است. وقتی که تابع خوانده میشود،پارامتر s به string به شرحa c,c f,f h رجوع میکند که به عنوان مولفه برای تابع گذرانده است. بعد ازاینکه سطر یازده برنامه به جریان افتاد،تکرارها به مقدار صفر ارجاع دارد.در سطر سیزدهم که اولین سطر چرخه for باشد مقدار اولیه صفر را به دست میاورم. i اول کار به صفر را به خود میگیرد. و شرط if ابتدا کنترل میشود.پس ،s در i،در صفر،با s درi+1 مقایسه میشود،s در یک کهc باشد.این کاراکترها برابر نیستند،پس بدنه چرخهfor درجریان برنامه نمیافتد.جلو رفته وi را  یکی زیاد میکنیم. بنابراین i عدد بعدی را که دامنه به وجود میاورد،که یک باشد،به خود میگیرد. اکنون i به یک ارا به خود میگیرد.وs در یک باsدر دو مقایسه میشود چون که کاراکترها در اینجا برابر هستند،بدنه if مورد عمل برنامه قرار میگیرد. و تکرارها یکی یکی اضافه میشوند.تکرارها اکنون به عدد یک را به خود میگیرد. و i مقدار بعدی را که دامنه میافریند که دو باشد را به خود میگیرد. string با ضریب دو با stringبا ضریب سه مقایسه میشود و باهم مساوی نیستند، بدنهf در جریان برنامه قرار نمیگیرد. دوباره به عنوان چرخه for مراجعه میکنیم،وiعدد بعدی است که دامنه میسازد. i  سه را به خود میگیرد.. string در ضزیب سه با string با ضریب چهار مقایسه میشود،آن دو کاراکتر برابرند،پس این بار بدنه if مورد عمل قرار میگیرد،تکرارها یکی یکی است،پس اکنون به دو را به خود میگیرد و i به عدد بعدی پیش میرود، که چهار باشد.string با ضریب چهار برابر با string با ضریب پنج نیست بنابراین بدنه if مورد عمل برنامه قرار نمیگیرد. و توجه داشته باشید که این آخرین جفتی هست که نیاز به مقایسه دارد،پس وقتی string با ضریب دو هست،یا کاراکتر یکی مانده به آخر string، آخرین گردش برای چرخهfor این است. یک بار دیگر به عنوان رسیده ایم و دیگر عددی توسط دامنه تولید نمیشود. پس بعد از این،پایتون تا سطر هفدهم پیش میرود. عددی که باید تحویل داده شود تعداد دور زدن ها است، که دو باشد که تحویل داده شده و سپس در سطر نوزدهم چاپ میشود. اکنون تابع دیگری را بنویسیم که درگیر گردش با ضرایب هست. نام این تابعshift left هست.یک پارامتر لیست دارد و آن لیست را تغییر میدهد،پس آنچه که تحویل داده میشود none هست. تغییری که در لیست انجام میشود این هست که هر عضوی از لیست،یا هر آیتم، به اندازه یک واحد به چپ انتقال مییابد.و اولین آیتم منتقل شده،یا حرکت کرده به آخرین موقعیت.یک پیش نیاز برای این تابع آن است که طول لیست دست کم یک باشد.اینجا مثالی در مورد لیستی با چهار string هست. string های d،c،b،a string ها به چپ منتقل خواهند شد،b را از ضریب یک به ضریب صفر حرکت داده. c از ضریب دو به ضریب یک.d از ضریب سه به ضریب دو.وaاز صفر به آخرین موضع که در آن d از ابتدا بود.بنابراین لیست نتیجه bcdaمیشود. وa.در مثال،حرکت b به به موقعیتی که a سابق در آن بود را نشان دادم.و آنگاه c به موقعیتی که b قبلا در آن بود، در ابتدا.یک چیزی را که در مثال صریح نشان ندادم آن است که وقتی b را به موقعیت a حرکت میدهیم،باید رد a را داشته باشیم. در ضریب صفر مقدارش چقدر هست،تا بعدا بتواند به آخرین موقعیت لیست حرکت کند. متغیر first item آن چیزی است که میخواهم برای نگهداری رد آن  به کار ببرم.به طوری که مقدار لیست  ضریب صفر را به خود بگیرد. ودر این صورت قادر خواهیم بود که از ضریب صفر مقدار را گرفته و آن را بعدا در آخرین موقعیت قرار دهیم. کار ما انتقال آیتم ها که از صفر شروع میشود هست.پس دوباره از range استفاده میکنم. اولین ضریب که از آن شروع به کار میکنم ضریب یک هست. و موقعیت توقف طول لیست هست. کارمان این هست که میخواهیم در موقعیت i-1 لیست را بگیریم و آن را در لیست جا کنیم، عنصری در سمت راست آن.پس، به دیگر سخن،اگر یک اولین مقدار i باشد، میخواهیم که لیست را در موقعیت صفر بگیریم و به آن موقعیت یک بدهیم. پس یکباره که همه اعضا به چپ منتقل شده اند، آنگاه میخواهیم که آن عضو را که در اول کار در اولین موقعیت بود گرفته و آن را به آخرین موقعیت منتقل سازیم.آخرین عنصر لیست را میتوان با استفاده از یک مشخص کرد، و آن را برای اولین آیتم متغیر تنظیم نمود،که به مقدار اولیه در ضریب صفر چسبیده است.در این نقطه،لیست L تغییر یافته است، و تابع میتواند خارج گردد.تابع را فرا میخوانیم. درshell، آی،لیستی را به وجود میاورد که همان مقادیر مثالی را دارد که به کار برده ایم. میتوانیم shift left را فرا بخوانیم که Lرا به عنوان مولفه قبول کند. و اکنون،آنچه که در L هست را بررسی میکنیم،میبینیم که مقادیر در واقع به چپ انتقال یافته اند با توجه به اینکه اولین آیتم به آخرین موقعیت رفته است. یکبار دیگر مجسم ساز پایتون را به کار میبریم تا نحوه پیشرفت فراخواندن  تابع در عملیات کامپیوتری را در آن ببینیم.این کار سبب میشود که درک بهتری از برنامه داشته باشیم و این چیزی است که همین طور که برنامه را مینویسید باید انجام دهید.تابع اول تعریف شده،و در سطر هفدهم حرف مربوط به متغیر به لیست چهار عضوی string ها که شامل string هایb،c،dوaاست میشود.اکنون function shiftخوانده میشود. پارامتر L تابع،به لیست string هایی مربوط میشود که به عنوان مولفه تابع مورد قبول قرار گرفت.در سطر دهم،اولین آیتم ،متغیری است که مقدار لیست را با ضریب صفر میپذیرد.اولین آیتم به string  a نظر دارد. چرخه forدر سطر دوازدهم شروع شده و مقدار اولیه i یک است. i میشود یک،اولین عددی که دامنه میسازد. در بدنه چرخه،لیست در ضریب صفر،i یک. آن مقدار صورت شده است و بعدی یک. بنابراین i،که به صورت صفر صورت شده،در حال حاضر aاست.لیست در یک b است،وآماده ایم که برای لیست در صفر مقدار لیست در یک را بگذاریم. اکنون میتوانیم ببینیم که لیست در صفر میشود b و همین طور لیست در ضریب یک. دلیل این که متغیر first item را به کار میبریم آن است که رد مقداری که در ابتدا با ضریب صفر وجود داشت را داشته باشیم. به آن نیاز داریم چون که بعدا وقتی که آیتم اولی را به آخرین موقعیت میکشانیم به آن نیاز داریم. با برگشت به چرخه،در سطر دوازدهم،مقدار i افزوده میشود. اکنون i روی دو است.و لیست در ضریب یک مقداری را به خود میگیرد که اکنون در ضریب دو لیست شدهc. و لیست در یک آماده است که آن آدرس حافظه را به خود بگیرد. پس اکنون هم لیست در یک و هم در دو،میشود c. iبیشترین مقدار را که سه باشد به خود میگیرد.و لیست در ضریب دو لیست را در ضریب سه معین کرده بنابراین لیست ما میشودb،c،d،d. و اکنون زمان آن رسیده که آخرین d را با aجانشین کنیم. این همان کاری هست که در سطر پانزدهم پیش میاید.لیست در آخرین موقعیت همان مقداری را به خود میگیرد که ابتدا در ضریب صفر بود. این آخرین سطر خواندن تابع میشود. پس کار به جریان انداختن برنامه پایان پذیرفت،ونتیجه را تحویل میدهد،بعد حروف چاپ میشود. بنابراین توجه داشته باشید که وقتی تابع نتیجه را تحویل داد آن چه که چاپ شده none بود. و اکنون حروف با مقادیر، با string هایc،d،aوb نمایش داده میشود.