سابقا از چرخه ها با بهره گیری از ضرایب استفاده کردیم،وقتی با تک string کار میکردیم یا یک تک لیست. در این مبحث،قصد داریم که روی ضریب ها از چرخه استفاده کنیم که به آیتم های موقعیت های مربوطه از دو لیست مختلف دست یابیم. و کاراکترها در موقعیت های مربوطه از دو string مختلف. با به کار گیری تابع sum_items کارمان را شروع میکنیم. دو پارامتر به خود میگیرد ،list1 وlist2 که هر دو لیست اعداد هستند. و لیست نمرات را تحویل میدهد. نقش تابع این است که لیست جدیدی را ارائه دهد،که در آن هر آیتم مجموع آیتمها در موقعیت مربوطه list1,list2باشد. حالا تحقیق میکنیم که منظور از موقعیت مربوطه چیست. اگر list1 سه عضو 1و2و3 و list2سه عضو 2و4و2 را داشته باشد. آنگاه،سه عضو در هر لیست با ضریب های 0و1و2 داریم. وقتی که میگوییم که میخواهیم اعضای مربوطه list1,list2، منظورمان اعضا یا آیتم های با ضریب یکسان است. مثلا،در ضریب 0،مقادیر 1و2 را داریم که جمعشان میشود3. در ضریب1،مقادیر2و4 را داریم که وقتی که جمعشان بزنیم میشود5. و در ضریب2،مقادیر3و2،که وقتی جمع زده میشود،5 را به دست میدهد. این لیست جدیدی را میسازد که تابع تحویل میدهد. حالا برنامه را بنویسیم. قصد داریم که لیست جدیدی را تحویل دهیم،و بنابراین متغیری با عنوانsum list به وجود میاوریم که در ابتدا لیستی خالی است. این لیست یکی یکی اضافه میشود، از طریق دوره ای که تابع پیش میبرد. دیدیم که وقتی به مثال نگاه میکردیم، از ضریب ها برای دسترسی به اعضای list1 , list2استفاده میکنیم،پس میخواهیم از طریق ضریب ها،برای i در دامنه طول لیست، چرخه بسازیم. و اکنون میتوانیم یکی از این دو لیست را در اینجا به عنوان مولفه رد کنیم. مطابق با آن چه که نشان داده شد list1 ,list2 یک طول دارند. بنابراین،هر یک از دو لیست را میتوانم انتخاب کنم. برای انتخاب  طولlist1 که به این معنی است که دامنه مقادیر0و1 تا طول لیست ولی نه خود طول لیست را شامل میشود. میخواهیم که در بدنه چرخه به i در list1 و list2 درموقعیت i دسترسی یافته و آنها را با هم جمع کنیم. وقتی که جمع را حساب کردیم،میخواهیم که آن را به sum list بیافزاییم. روش متکی به لیست،برای افزودن مجموع به انتهای sum list استفاده میشود. این تنها کاری است که نیاز ست که در بدنه چرخه for انجام دهیم. وقتی که چرخه for به پردازش پایان داد و خارج شد،آنگاه میتوانیم که sum list ا تحویل دهیم. اکنون فراخوانی تابع نمونه را به جریان میاندازیم. ابتدا،برنامه را به جریان بیاندازید،و آنگاه shell را،تابع را فراخوانید. و میتوانیم ببینیم که لیستی را با مقدارهای3و6و5 تحویل میدهد. یک تابع دیگر را به کار بگیریم. نام تابع count_matches است،و دو string دارد. دو پارامتر stringی s1 و s2 داشته و عدد صحیحی را تحویل میدهد که تعداد موقعیت ها در string موسوم به s1، کهدر موقعیت مربوطه s2 همان کاراکتر شده است. به عنوان نمونه،برای stringهای به نام apeوate، دو کاراکتر مشترک است. در ضریب0 aو در ضریب 2 e. برای string های head ,hard. در اینجا نیز دو کاراکتر مشترک هست،h در ضریب صفر و d در ضریب 3. اولین قدم برای به کار گیری این تابع ایجاد جمع کن است. آن را num matches میخوانم،و مقدار اولیه اش صفر قرار میدهم. آن متغیر تعداد حروف یک جور را جمع میکند. در نگاهی به مثال آن را مشاهده کردیم، مقایسه بین کاراکترها با ضریب یکسان بود. معنی این سخن این است که میخواهیم که چرخه خود را بر پایه ضریب های string بنویسم. پس از دامنه استفاده خواهیم کرد،با شروع از وضعیت 0،یا مقدار صفر، تا طول string به نام s1. و آن چه که میخواهیم انجام دهیم مقایسه کاراکتر string به نام s1، پس اگر s1 در ضریب i برابر با s2 در ضریب i باشد آنگاه که معلوم شد که یکی هستند،و میتوانیم که به متغیر num_matches یکی یکی اضافه کنیم. آنگاه که چرخه به پردازش پایان داد و از تک تک کاراکترهای string ها گذر کردیم،آنگاه num_matches تحویل داده میشود. فراخوان نونه تابع را به جریان بیاندازیم. ابتدا مثال ate,ape عدد2 را تحویل میدهد،و آنگاه مثالhead ,hard عدد 2 را تحویل میدهد.