1
00:00:01,460 --> 00:00:06,933
در مباحث گذشته،از چرخه های for جهت پرش از کاراکترها و string ها و

2
00:00:06,933 --> 00:00:10,890
اجزای لیست بهره گرفتیم.در این مبحث،میخواهیم با استفاده از چرخهfor

3
00:00:10,890 --> 00:00:14,320
ضریبهای string هاو لیست ها بپریم.

4
00:00:14,320 --> 00:00:19,728
و این عمل سبب میشود که بتوانیم مسائلی را حل کنیم که اکنون نمیتوانیم با چرخه های for انجام دهیم.

5
00:00:19,728 --> 00:00:23,421
اولین مساله کار با

6
00:00:23,421 --> 00:00:28,631
شمارش تعداد جفت های همسایه کاراکترهایی که در یک string ،مثل هم هستند هست.

7
00:00:28,631 --> 00:00:30,940
اینجا مثالی از string را ملاحظه میکنید.

8
00:00:32,140 --> 00:00:37,874
و در این string ،سه جفت کاراکتر همسایه وجود دارد که مثل هم هستند،

9
00:00:37,874 --> 00:00:44,352
cها،fهاو gها.برای اینکه این مساله را حل کنیم،نیاز است که

10
00:00:44,352 --> 00:00:50,091
کاراکترهای جفتی همسایه را با هم مقایسه کنیم.بنابراین string با ضریب صفر را باید

11
00:00:50,091 --> 00:00:55,759
با string با ضریب یک مقایسه کرد.string با ضریب یک رابا

12
00:00:55,759 --> 00:01:00,780
string با ضریب دو مقایسه کرد. و الا آخر،تا به کاراکتر یکی مانده به آخر برسیم.

13
00:01:00,780 --> 00:01:05,156
string با ضریب دو و آن را

14
00:01:05,156 --> 00:01:10,249
با آخرین کاراکتر string مقایسه کنیم،string با ضریب یک.

15
00:01:10,250 --> 00:01:17,604
اگر بخواهیم که کلی صحبت کنیم،این مطلب را میتوانیم به صورت مقایسه string

16
00:01:17,604 --> 00:01:26,914
با ضریب iبا string با ضریب i+1توصیف کنیم.برای ساختن این اعداد از تابع range استفاده میکنیم.

17
00:01:26,914 --> 00:01:31,587
صفر،از یک تا دو و شامل دو،پس

18
00:01:31,587 --> 00:01:38,009
مقادیر i در مقایسه های ما.یادآور میشوم که range سه پارامتر دارد،

19
00:01:38,009 --> 00:01:43,041
یکی الزامی و دو تا اختیاری.پارامتر الزامی مقداری است

20
00:01:43,041 --> 00:01:48,511
که میخواهیم دور تسلسل را پایان دهیم.و اعداد دلخواه

21
00:01:48,511 --> 00:01:52,740
شروع دامنه و رقم افزایش پلکانی هست.در این مورد از صفر شروع میشود،

22
00:01:52,740 --> 00:01:57,043
که فابریک هست.و میزان افزونی پلکانی یک،که آن هم فابریک هست.

23
00:01:57,043 --> 00:01:59,960
بنابراین فقط نیاز به نقطه توقف هست.

24
00:01:59,960 --> 00:02:04,188
و میخواهیم که به درازای string یک توقف کنیم.

25
00:02:04,190 --> 00:02:09,777
به سخنی دیگر،میخواهیم که به اندازهای بالا برویم که stringدو را شامل شود،یا

26
00:02:09,777 --> 00:02:15,237
کاراکتر یکی مانده به آخر string.و ما با استفاده ازطول string-1-این کار را میکنیم.

27
00:02:15,237 --> 00:02:19,661
که تا آن اندازه بالا میرود ولی آن را شامل نمیشود.

28
00:02:19,661 --> 00:02:23,660
و آنگاه،مقادیر ضریب ها چاپ میشود.

29
00:02:26,420 --> 00:02:31,598
اکنون که این چرخه ی for را نوشته ایم،میخواهیم که از همان عنوان در 

30
00:02:31,598 --> 00:02:35,754
تابع خود برای شمارش جفت های کاراکترتکراری در string استفاده کنیم.

31
00:02:35,754 --> 00:02:39,462
تابعی را که میخواهیم بنویسیم شمارش تکراری های همسایه هست.

32
00:02:39,462 --> 00:02:42,786
یک پارامتر string دارد و عدد صحیح تحویل میدهد.

33
00:02:42,786 --> 00:02:47,645
و وقتی که تابع را فرامیخوانیم،string مثالی را به عنوان مولفه عبور داده،

34
00:02:47,645 --> 00:02:52,977
و تابع ،سه را تحویل میدهد.برای این تابع،نیاز بر این است که مواظب باشیم

35
00:02:52,977 --> 00:02:55,898
که چند کاراکتر تکراری را دیده ایم.

36
00:02:55,898 --> 00:02:59,635
پس میخواهیم که از متغیری استفاده کنیم که این عمل را تکرار کند.

37
00:02:59,635 --> 00:03:03,060
و این تکرارها مقدار اولیه صفر را خواهد داشت.

38
00:03:03,060 --> 00:03:09,125
میخواهیم مروری برکاراکترهای string داشته،از کنارشان رد شویم.و نیاز است که

39
00:03:09,125 --> 00:03:13,712
الان از ضرایبشان استفاده کنیم.قبلا این برنامه را برای عنوان چرخه نگاشته ایم.

40
00:03:13,712 --> 00:03:19,482
با ضریب صفر شروع میکنیم و تا string یکی مانده به آخر میرویم بالا.

41
00:03:19,482 --> 00:03:24,711
در بدنه چرخه for،میخواهیم که

42
00:03:24,711 --> 00:03:31,014
کاراکتر در موقعیتsبا ضریبi را باآن چه بعد از آن میاید مقایسه کنید،

43
00:03:31,014 --> 00:03:36,530
تا ببینید که آیا برابر هستند یا نه.بنابراین میتوانیم از عملگر تساوی برای این مورد استفاده کنیم،

44
00:03:36,530 --> 00:03:40,154
که s را در ضریب i با sدر ضریب i+1مقایسه کنیم.

45
00:03:40,154 --> 00:03:43,463
وقتی که مساوی باشند،دریافتیم که یکی از اینها

46
00:03:43,463 --> 00:03:47,560
که همسایه اند تکرار میشوند.بنابراین متغیر تکرار باید

47
00:03:47,560 --> 00:03:52,858
یکی یکی بالا برود.در انتهای چرخه،بعد از آن که

48
00:03:52,858 --> 00:03:57,380
خارج شد،میتوانیم مقداری را که قدم اول را تکرار میکند تحویل دهیم.

49
00:03:59,540 --> 00:04:05,772
سرانجام،تنها این فراخوان تابع را به جریان بیاندازیم تا اطمینان یابیم که آن طور که انتظار داریم عمل میکند.

50
00:04:05,772 --> 00:04:09,344
چهت این کار نیاز است که برنامه را به جریان بیاندازم.

51
00:04:09,344 --> 00:04:14,360
و حالا،میتوانیم تابع را فراخوانیم،و همان طور که انتظار میرود سه را تحویل میدهد.

52
00:04:15,540 --> 00:04:21,041
پس به طور خلاصه،به دلیل این حقیقت است که میخواهیم عضوی از لیست را

53
00:04:21,041 --> 00:04:25,548
با عضوی دیگر مقایسه کنیم که از ضرایب استفاده میکنیم.

54
00:04:25,548 --> 00:04:29,127
این کافی نیست که  مقدار آیتم را بدانیم.

55
00:04:29,127 --> 00:04:34,430
نیاز است که بدانیم که آیتم در کجای لیست واقع هست که معلوم کنیم که با کدام عضو 

56
00:04:34,430 --> 00:04:39,625
دیگر مقایسه شود.برای کسب درک بهتر از آن چه که

57
00:04:39,625 --> 00:04:44,480
با به جریان انداختن برنامه پیش میاید،رد آن را با مجسم ساز پایتون دنبال میکنیم.

58
00:04:45,360 --> 00:04:51,485
اولین باری که تعریف تابع ارزیابی میشود،و به

59
00:04:51,485 --> 00:04:57,462
سطر نوزدهم رهنمون میشویم که در آن با استفاده از مثالی کوچکتر تابع خوانده شده است.

60
00:04:57,462 --> 00:05:05,424
وقتی که تابع خوانده میشود،پارامتر

61
00:05:05,424 --> 00:05:11,862
s به string به شرحa c,c f,f h رجوع میکند که به عنوان مولفه برای تابع گذرانده است.

62
00:05:11,862 --> 00:05:16,095
بعد ازاینکه سطر یازده برنامه به جریان افتاد،تکرارها 

63
00:05:16,095 --> 00:05:24,247
به مقدار صفر ارجاع دارد.در سطر سیزدهم که اولین سطر چرخه for باشد

64
00:05:24,247 --> 00:05:27,750
مقدار اولیه صفر را به دست میاورم.

65
00:05:27,750 --> 00:05:30,481
i اول کار به صفر را به خود میگیرد.

66
00:05:30,483 --> 00:05:36,890
و شرط if ابتدا کنترل میشود.پس ،s در i،در صفر،با 

67
00:05:36,890 --> 00:05:43,639
s درi+1 مقایسه میشود،s در یک کهc باشد.این کاراکترها برابر نیستند،پس

68
00:05:43,639 --> 00:05:49,557
بدنه چرخهfor درجریان برنامه نمیافتد.جلو رفته وi را  یکی زیاد میکنیم.

69
00:05:49,557 --> 00:05:55,583
بنابراین i عدد بعدی را که دامنه به وجود میاورد،که یک باشد،به خود میگیرد.

70
00:05:55,583 --> 00:06:01,813
اکنون i به یک ارا به خود میگیرد.وs در یک باsدر دو مقایسه میشود 

71
00:06:01,813 --> 00:06:08,861
چون که کاراکترها در اینجا برابر هستند،بدنه if مورد عمل برنامه قرار میگیرد.

72
00:06:08,861 --> 00:06:16,311
و تکرارها یکی یکی اضافه میشوند.تکرارها اکنون به عدد یک را به خود میگیرد.

73
00:06:16,312 --> 00:06:21,068
و i مقدار بعدی را که دامنه میافریند که دو باشد را به خود میگیرد.

74
00:06:21,070 --> 00:06:27,260
string با ضریب دو با stringبا ضریب سه مقایسه میشود و باهم مساوی نیستند،

75
00:06:27,260 --> 00:06:30,430
بدنهf در جریان برنامه قرار نمیگیرد.

76
00:06:30,430 --> 00:06:36,983
دوباره به عنوان چرخه for مراجعه میکنیم،وiعدد بعدی است که دامنه میسازد.

77
00:06:36,983 --> 00:06:39,277
i  سه را به خود میگیرد..

78
00:06:39,277 --> 00:06:45,666
string در ضزیب سه با string با ضریب چهار مقایسه میشود،آن دو

79
00:06:45,666 --> 00:06:51,892
کاراکتر برابرند،پس این بار بدنه if مورد عمل قرار میگیرد،تکرارها

80
00:06:51,892 --> 00:06:58,691
یکی یکی است،پس اکنون به دو را به خود میگیرد و i به عدد بعدی پیش میرود،

81
00:06:58,691 --> 00:07:03,085
که چهار باشد.string با ضریب چهار برابر با string

82
00:07:03,085 --> 00:07:07,184
با ضریب پنج نیست بنابراین بدنه if مورد عمل برنامه قرار نمیگیرد.

83
00:07:07,184 --> 00:07:12,492
و توجه داشته باشید که این آخرین جفتی هست که نیاز به مقایسه دارد،پس

84
00:07:12,492 --> 00:07:18,137
وقتی string با ضریب دو هست،یا کاراکتر یکی مانده به آخر string،

85
00:07:18,137 --> 00:07:21,900
آخرین گردش برای چرخهfor این است.

86
00:07:22,280 --> 00:07:28,237
یک بار دیگر به عنوان رسیده ایم و دیگر عددی توسط دامنه تولید نمیشود.

87
00:07:28,237 --> 00:07:31,433
پس بعد از این،پایتون تا سطر هفدهم پیش میرود.

88
00:07:31,433 --> 00:07:35,138
عددی که باید تحویل داده شود تعداد دور زدن ها است،

89
00:07:35,138 --> 00:07:43,354
که دو باشد که تحویل داده شده و سپس در سطر نوزدهم چاپ میشود.

90
00:07:43,360 --> 00:07:48,898
اکنون تابع دیگری را بنویسیم که درگیر گردش با ضرایب هست.

91
00:07:48,898 --> 00:07:54,761
نام این تابعshift left هست.یک پارامتر لیست دارد و

92
00:07:54,761 --> 00:08:00,300
آن لیست را تغییر میدهد،پس آنچه که تحویل داده میشود none هست.

93
00:08:00,300 --> 00:08:06,240
تغییری که در لیست انجام میشود این هست که هر عضوی از لیست،یا هر آیتم،

94
00:08:06,240 --> 00:08:11,724
به اندازه یک واحد به چپ انتقال مییابد.و اولین آیتم منتقل شده،یا حرکت کرده

95
00:08:11,724 --> 00:08:16,369
به آخرین موقعیت.یک پیش نیاز برای این تابع آن است که 

96
00:08:16,369 --> 00:08:24,845
طول لیست دست کم یک باشد.اینجا مثالی در مورد لیستی با چهار string هست.

97
00:08:24,849 --> 00:08:28,540
string های d،c،b،a

98
00:08:28,540 --> 00:08:35,046
string ها به چپ منتقل خواهند شد،b را از ضریب یک به ضریب صفر حرکت داده.

99
00:08:35,046 --> 00:08:36,998
c از ضریب دو به ضریب یک.d

100
00:08:36,998 --> 00:08:48,385
از ضریب سه به ضریب دو.وaاز صفر به آخرین موضع که در آن

101
00:08:48,385 --> 00:08:54,349
d از ابتدا بود.بنابراین لیست نتیجه bcdaمیشود.

102
00:08:54,349 --> 00:08:59,883
وa.در مثال،حرکت b به

103
00:08:59,883 --> 00:09:04,978
به موقعیتی که a سابق در آن بود را نشان دادم.و آنگاه c به موقعیتی که b قبلا در آن بود،

104
00:09:04,978 --> 00:09:09,515
در ابتدا.یک چیزی را که در مثال صریح نشان ندادم

105
00:09:09,515 --> 00:09:15,882
آن است که وقتی b را به موقعیت a حرکت میدهیم،باید رد a را داشته باشیم.

106
00:09:15,882 --> 00:09:22,250
در ضریب صفر مقدارش چقدر هست،تا بعدا بتواند به آخرین موقعیت لیست حرکت کند.

107
00:09:22,250 --> 00:09:27,437
متغیر first item آن چیزی است که میخواهم برای

108
00:09:27,437 --> 00:09:32,557
نگهداری رد آن  به کار ببرم.به طوری که مقدار لیست  ضریب صفر را به خود بگیرد.

109
00:09:32,558 --> 00:09:38,644
ودر این صورت قادر خواهیم بود که از ضریب صفر مقدار را گرفته و آن را بعدا در آخرین موقعیت قرار دهیم.

110
00:09:38,644 --> 00:09:44,257
کار ما انتقال آیتم ها

111
00:09:44,257 --> 00:09:49,008
که از صفر شروع میشود هست.پس دوباره از range استفاده میکنم.

112
00:09:49,008 --> 00:09:53,667
اولین ضریب که از آن شروع به کار میکنم ضریب یک هست.

113
00:09:53,668 --> 00:09:58,420
و موقعیت توقف طول لیست هست.

114
00:10:00,580 --> 00:10:09,890
کارمان این هست که میخواهیم در موقعیت i-1 لیست را بگیریم و آن را در لیست جا کنیم،

115
00:10:09,890 --> 00:10:15,719
عنصری در سمت راست آن.پس، به دیگر سخن،اگر یک اولین مقدار i باشد،

116
00:10:15,719 --> 00:10:21,761
میخواهیم که لیست را در موقعیت صفر بگیریم و به آن موقعیت یک بدهیم.

117
00:10:21,761 --> 00:10:26,428
پس یکباره که همه اعضا به چپ منتقل شده اند،

118
00:10:26,428 --> 00:10:32,425
آنگاه میخواهیم که آن عضو را که در اول کار در اولین موقعیت بود گرفته

119
00:10:32,425 --> 00:10:38,047
و آن را به آخرین موقعیت منتقل سازیم.آخرین عنصر لیست را میتوان با استفاده از یک مشخص کرد،

120
00:10:38,047 --> 00:10:44,869
و آن را برای اولین آیتم متغیر تنظیم نمود،که به

121
00:10:44,869 --> 00:10:50,491
مقدار اولیه در ضریب صفر چسبیده است.در این نقطه،لیست L تغییر یافته است،

122
00:10:50,491 --> 00:10:54,240
و تابع میتواند خارج گردد.تابع را فرا میخوانیم.

123
00:10:54,700 --> 00:11:03,620
درshell، آی،لیستی را به وجود میاورد که همان مقادیر مثالی را دارد که به کار برده ایم.

124
00:11:05,200 --> 00:11:09,441
میتوانیم shift left را فرا بخوانیم که Lرا به عنوان مولفه قبول کند.

125
00:11:09,441 --> 00:11:16,540
و اکنون،آنچه که در L هست را بررسی میکنیم،میبینیم که مقادیر در واقع

126
00:11:16,540 --> 00:11:22,860
 به چپ انتقال یافته اند با توجه به اینکه اولین آیتم به آخرین موقعیت رفته است.

127
00:11:23,380 --> 00:11:27,393
یکبار دیگر مجسم ساز پایتون را به کار میبریم تا نحوه پیشرفت 

128
00:11:27,393 --> 00:11:30,122
فراخواندن  تابع در عملیات کامپیوتری را در آن ببینیم.این کار سبب میشود که 

129
00:11:30,122 --> 00:11:34,242
درک بهتری از برنامه داشته باشیم و این چیزی است که همین طور که برنامه را مینویسید

130
00:11:34,242 --> 00:11:39,475
باید انجام دهید.تابع اول تعریف شده،و در سطر 

131
00:11:39,475 --> 00:11:46,025
هفدهم حرف مربوط به متغیر به لیست چهار عضوی string ها که شامل

132
00:11:46,025 --> 00:11:50,860
string هایb،c،dوaاست میشود.اکنون function shiftخوانده میشود.

133
00:11:53,200 --> 00:11:59,206
پارامتر L تابع،به لیست string هایی مربوط میشود که به عنوان

134
00:11:59,206 --> 00:12:04,365
مولفه تابع مورد قبول قرار گرفت.در سطر دهم،اولین آیتم ،متغیری است که 

135
00:12:04,365 --> 00:12:10,140
مقدار لیست را با ضریب صفر میپذیرد.اولین آیتم به string  a نظر دارد.

136
00:12:10,520 --> 00:12:16,533
چرخه forدر سطر دوازدهم شروع شده و مقدار اولیه i یک است.

137
00:12:16,533 --> 00:12:20,978
i میشود یک،اولین عددی که دامنه میسازد.

138
00:12:20,978 --> 00:12:26,760
در بدنه چرخه،لیست در ضریب صفر،i یک.

139
00:12:26,760 --> 00:12:30,596
آن مقدار صورت شده است و بعدی یک.

140
00:12:30,597 --> 00:12:36,877
بنابراین i،که به صورت صفر صورت شده،در حال حاضر aاست.لیست در یک b است،وآماده ایم که

141
00:12:36,877 --> 00:12:41,499
برای لیست در صفر مقدار لیست در یک را بگذاریم.

142
00:12:41,500 --> 00:12:48,391
اکنون میتوانیم ببینیم که لیست در صفر میشود b و همین طور لیست در ضریب یک.

143
00:12:48,391 --> 00:12:52,169
دلیل این که متغیر first item را به کار میبریم

144
00:12:52,169 --> 00:12:56,779
آن است که رد مقداری که در ابتدا با ضریب صفر وجود داشت را داشته باشیم.

145
00:12:56,783 --> 00:13:02,211
به آن نیاز داریم چون که بعدا وقتی که آیتم اولی را به آخرین موقعیت میکشانیم به آن نیاز داریم.

146
00:13:02,211 --> 00:13:06,622
با برگشت به چرخه،در سطر دوازدهم،مقدار i افزوده میشود.

147
00:13:06,622 --> 00:13:11,304
اکنون i روی دو است.و لیست در ضریب یک مقداری

148
00:13:11,304 --> 00:13:16,257
را به خود میگیرد که اکنون در ضریب دو لیست شدهc.

149
00:13:16,257 --> 00:13:20,600
و لیست در یک آماده است که آن آدرس حافظه را به خود بگیرد.

150
00:13:21,740 --> 00:13:27,783
پس اکنون هم لیست در یک و هم در دو،میشود c.

151
00:13:27,783 --> 00:13:35,821
iبیشترین مقدار را که سه باشد به خود میگیرد.و لیست در ضریب دو 

152
00:13:35,821 --> 00:13:44,105
لیست را در ضریب سه معین کرده بنابراین لیست ما میشودb،c،d،d.

153
00:13:44,105 --> 00:13:48,177
و اکنون زمان آن رسیده که آخرین d را با aجانشین کنیم.

154
00:13:48,177 --> 00:13:54,588
این همان کاری هست که در سطر پانزدهم پیش میاید.لیست در آخرین موقعیت

155
00:13:54,588 --> 00:14:01,236
همان مقداری را به خود میگیرد که ابتدا در ضریب صفر بود.

156
00:14:01,240 --> 00:14:04,527
این آخرین سطر خواندن تابع میشود.

157
00:14:04,527 --> 00:14:09,956
پس کار به جریان انداختن برنامه پایان پذیرفت،ونتیجه را تحویل میدهد،بعد حروف چاپ میشود.

158
00:14:09,956 --> 00:14:15,920
بنابراین توجه داشته باشید که وقتی تابع نتیجه را تحویل داد آن چه که چاپ شده none بود.

159
00:14:16,620 --> 00:14:22,386
و اکنون حروف با مقادیر، با string هایc،d،aوb نمایش داده میشود.