1
00:00:01,040 --> 00:00:06,435
Prima abbiamo visto che ogni carattere di una
stringa ha un indice associato,

2
00:00:06,435 --> 00:00:10,533
e abbiamo imparato come accedere ad ogni
carattere usando il suo indice.

3
00:00:10,533 --> 00:00:15,382
In questa lettura useremo qualcosa
chiamato ciclo for per accedere ai

4
00:00:15,382 --> 00:00:18,455
caratteri di una stringa, a turno, uno alla
volta.

5
00:00:18,455 --> 00:00:24,759
Per iniziare, sto per fare una stringa di
esempio, 'Hi There.'. E useremo questa

6
00:00:24,759 --> 00:00:30,986
stringa, nel nostro primo loop.
Stiamo per stampare ogni carattere

7
00:00:30,986 --> 00:00:33,490
della stringa, uno alla volta.

8
00:00:33,490 --> 00:00:38,621
Char, quella variabile, C-H-A-R, è il diminutivo
per carattere.

9
00:00:38,621 --> 00:00:46,009
Ed è solo il nome di una variabile.
Il valore di un Char cambierà mentre

10
00:00:46,009 --> 00:00:51,037
esegue il ciclo.
Nella prima iterazione del ciclo, Char

11
00:00:51,037 --> 00:00:55,962
ottiene il valore di s alla posizione zero
che è H.

12
00:00:55,962 --> 00:01:02,706
E poi viene stampato H.
Poi all'iterazione successiva, il valore

13
00:01:02,706 --> 00:01:07,553
di char cambia.
Quindi char ora fa riferimento al carattere alla

14
00:01:07,553 --> 00:01:11,760
posizione uno di S, che è I e I viene
stampata.

15
00:01:12,940 --> 00:01:20,439
Invece alla terza iterazione del loop,
char è il valore alla posizione due di

16
00:01:20,439 --> 00:01:24,360
S, che è uno spazio.
E quindi viene stampato lo spazio.

17
00:01:24,800 --> 00:01:29,570
E questo schema continua finché viene
raggiunta la fine della stringa.

18
00:01:29,570 --> 00:01:33,040
Quindi ogni carattere di S viene stampato uno
alla volta.

19
00:01:33,560 --> 00:01:38,659
Hair è il nome di una variabile.
Potremmo aver facilmente scelto qualcosa

20
00:01:38,659 --> 00:01:42,772
di diverso.
Ad esempio, questo è equivalente a banana

21
00:01:42,772 --> 00:01:47,624
in S, stampa banana.
Certamente, è meglio prendere un nome

22
00:01:47,624 --> 00:01:53,300
di variabile che indica cosa rappresenta
la variabile.

23
00:01:54,040 --> 00:01:56,905
.
Qui c'è un altro ciclo for.

24
00:01:56,905 --> 00:02:00,725
In questo ciclo, ci sono due istruzioni 
di print.

25
00:02:00,725 --> 00:02:07,844
Quindi la variabile pair viene stampata due volte.
Inizialmente, alla prima iterazione del

26
00:02:07,844 --> 00:02:12,185
ciclo, pair riceve il valore H, e H viene
stampata due volte.

27
00:02:12,185 --> 00:02:19,130
Poi pair ottiene I, e I viene stampato due volte,
e così via, finché non viene raggiunta la fine

28
00:02:19,130 --> 00:02:20,780
della stringa S.

29
00:02:23,340 --> 00:02:27,325
Ora useremo un ciclo for per risolvere
un problema.

30
00:02:27,325 --> 00:02:33,913
Il primo problema che affronteremo, è
contare il numero di vocali in una stringa.

31
00:02:33,913 --> 00:02:39,200
Inizierò scrivendo un paio di
esempi di chiamata di funzione.

32
00:02:39,200 --> 00:02:42,778
Sto per chiamare la funzione count
vowels.

33
00:02:42,778 --> 00:02:49,773
E riceverà un singolo argomento string.
Il primo, esempio usa Happy Anniversary

34
00:02:49,773 --> 00:02:54,084
come argomento.
E in questo caso, Count Vowels dovrebbe

35
00:02:54,084 --> 00:03:01,016
ritornare cinque.
La stringa successiva X Y Z, non contiene nessuna

36
00:03:01,016 --> 00:03:06,140
vocale.
Quindi questa funzione dovrebbe ritornare zero.

37
00:03:07,260 --> 00:03:13,102
Aggiungiamo il tipo di contratto.
C'è un parametro stringa, e la

38
00:03:13,102 --> 00:03:19,429
funzione ritorna un int.
E ora scriviamo la testata della funzione.

39
00:03:19,429 --> 00:03:24,337
Il nome della funzione è count vowels,
è ha un parametro.

40
00:03:24,337 --> 00:03:33,636
Lo chiamerò parametro S.
E il lavoro di questa funzione è ritornare

41
00:03:33,636 --> 00:03:40,273
il numero di vocali in S.
Potresti aver notato dall'esempio

42
00:03:40,273 --> 00:03:47,637
di chiamate delle funzioni che non stiamo
includendo Y, quindi devo aggiungerlo alla

43
00:03:47,637 --> 00:03:52,720
mia descrizione.
La lettera Y non viene trattata come una vocale.

44
00:03:54,520 --> 00:04:01,513
 Ora possiamo scrivere il corpo della funzione.
Prima di scrivere il suo codice voglio iniziare

45
00:04:01,513 --> 00:04:07,548
pensando a come abbiamo determinato quale dovrebbe
essere la risposta degli esempi di chiamate

46
00:04:07,548 --> 00:04:11,256
 alla funzione.
Quello che ho fatto è esaminare ogni carattere della

47
00:04:11,256 --> 00:04:14,601
stringa uno alla volta, iniziando con
l'H.

48
00:04:14,601 --> 00:04:20,563
Quindi ho considerato l'H e ho deciso che
non era una vocale, ma che A lo è, perciò ho tenuto

49
00:04:20,563 --> 00:04:23,689
traccia di quello.
Poi ho guardato a P, P Y spazio e

50
00:04:23,689 --> 00:04:30,400
ho incontrato un'altra vocale.
A N, N I è un'altra V E e R S e

51
00:04:30,400 --> 00:04:35,675
un'altra A fa cinque R Y punto esclamativo.

52
00:04:35,675 --> 00:04:44,260
Quindi andando carattere per carattere della
stringa abbiamo visto che ci sono cinque vocali.

53
00:04:45,220 --> 00:04:49,406
Modelleremo il nostro programma seguendo
questo approccio che abbiamo appena usato.

54
00:04:49,406 --> 00:04:54,190
Quindi vogliamo tenere traccia del numero di
vocali che abbiamo visto fino ad ora.

55
00:04:54,190 --> 00:04:59,640
E, inizialmente, abbiamo zero vocali, quindi
andrò a usare num_vowels per tenere traccia.

56
00:04:59,640 --> 00:05:03,883
Scorriamo la stringa esaminando un
carattere alla volta.

57
00:05:03,883 --> 00:05:09,298
E possiamo farlo semplicemente usando un ciclo for.
Quindi per ogni carattere in S, vogliamo

58
00:05:09,298 --> 00:05:13,250
controllare per vedere se quel carattere è
una vocale o meno.

59
00:05:13,250 --> 00:05:18,594
Posso usare un'istruzione if per vedere, per
controllare la condizione.

60
00:05:18,594 --> 00:05:24,399
Quindi se il carattere che appare nella stringa
a, e, i, o, u, minuscolo

61
00:05:24,399 --> 00:05:28,454
e A, E, I, O, U, maiuscolo, allora è una
vocale.

62
00:05:28,454 --> 00:05:34,904
E in questo caso, vogliamo incrementare il
valore di num vowels.

63
00:05:34,904 --> 00:05:41,640
Quindi num vowels otterrà il suo valore corrente
più uno.

64
00:05:43,440 --> 00:05:49,516
Dopo che questo ciclo for ha terminato l'esecuzione,
e abbiamo passato ogni carattere della

65
00:05:49,516 --> 00:05:55,592
stringa, num_vowels conterrà il numero
totale di vocali in S, e quello è

66
00:05:55,592 --> 00:06:01,147
il valore che ritorneremo.
Fermiamoci per un momento e pensiamo a

67
00:06:01,147 --> 00:06:05,728
questa istruzione di assegnazione.
Notate che il lato destro di questa

68
00:06:06,018 --> 00:06:11,035
espressione di assegnazione, l'espressione coinvolge
la variabile num vowels.

69
00:06:11,035 --> 00:06:16,923
Immaginate che l'istruzione num vow, vowels che
è presente al di fuori del ciclo non fosse

70
00:06:16,923 --> 00:06:21,788
lì.
Allora passiamo a questa istruzione di assegnazione e 

71
00:06:21,788 --> 00:06:26,440
guardiamo il valore di num vowels, avviene
un name error.

72
00:06:26,440 --> 00:06:33,622
Quindi l'istruzione di assegnazione che abbiamo usato
inizialmente per inizializzare num vowels a zero

73
00:06:33,622 --> 00:06:41,759
è di importanza fondamentale.
Ora facciamo girare il codice, controllando le

74
00:06:41,759 --> 00:06:48,238
nostre chiamate di esempio.
Faremo prima girare il modulo e poi,

75
00:06:48,238 --> 00:06:56,014
nella shell, chiameremo count vowels.
Con Happy Anniversary otteniamo cinque.

76
00:06:56,014 --> 00:07:03,185
E con XYZ, otteniamo zero.
La variabile num vowels è un accumulatore

77
00:07:03,185 --> 00:07:08,516
dato che accumula informazioni.
Ha un valore iniziale di zero e il suo

78
00:07:08,516 --> 00:07:11,857
valore aumenta ogni volta che viene trovata una

79
00:07:11,857 --> 00:07:17,259
vocale.

80
00:07:17,259 --> 00:07:22,520
Gli accumulatori non sono necessariamente numerici
come vedremo nel problema successivo.

81
00:07:22,980 --> 00:07:29,495
Il nostro prossimo compito è quello di ritornare
una stringa contenente tutte le vocali di una data

82
00:07:29,495 --> 00:07:33,221
stringa.
Inizierò di nuovo con un esempio di 

83
00:07:33,221 --> 00:07:39,094
chiamata, e potremmo usare gli stessi esempio,
come abbiamo fatto nella funzione precedente.

84
00:07:39,094 --> 00:07:45,469
Quindi, il nome di questa funzione sarà collect
vowels dato che stiamo per accumularle

85
00:07:45,469 --> 00:07:52,103
in una stringa.
E data la stringa happy anniversary

86
00:07:52,103 --> 00:07:59,678
questa dovrebbe ritornare una stringa con
le lettere A I E.

87
00:07:59,678 --> 00:08:09,488
Nel caso in cui non ci siano vocali nella
stringa dovrebbe ritornare la stringa

88
00:08:09,488 --> 00:08:14,828
vuota.
Quindi sarà solamente un aperte virgolette,

89
00:08:14,828 --> 00:08:22,068
e chiuse virgolette.
Il tipo di contratto,

90
00:08:22,068 --> 00:08:27,420
questa prende in ingresso un parametro stringa e
ritorna una stringa.

91
00:08:28,440 --> 00:08:33,235
E il nome della funzione come abbiamo visto
è collect vowels.

92
00:08:33,235 --> 00:08:37,480
Il nome del parametro di nuovo, userò
il nome S.

93
00:08:39,480 --> 00:08:46,080
E il lavoro di questa funzione è di ritornare
le vocali di S.

94
00:08:46,340 --> 00:08:55,600
Y non viene considerata come una vocale
anche in questo caso.

95
00:08:56,120 --> 00:09:00,002
Come abbiamo fatto per count vowels.
Voglio iniziare considerando come

96
00:09:00,002 --> 00:09:04,340
abbiamo risolto questo problema, quando stavamo 
determinando cosa doveva ritornare l'esempio 

97
00:09:04,340 --> 00:09:09,246
della chiamata.
Esaminiamo ogni carattere della stringa

98
00:09:09,246 --> 00:09:13,727
uno alla volta.
Quindi, guardiamo prima l'H, e poi la

99
00:09:13,727 --> 00:09:17,279
A.
E tutte le volte che ho incontrato una vocale, ho

100
00:09:17,279 --> 00:09:21,506
tenuto traccia di quello.
Quindi, ho un A, P, P, Y spazio e poi

101
00:09:21,506 --> 00:09:26,072
un'altra A, qualche oggetto tiene traccia che ho
queste due,

102
00:09:26,072 --> 00:09:31,995
N, N, I e così via.
Quindi ora analizziamo la stringa carattere per

103
00:09:31,995 --> 00:09:37,724
carattere, e quando trovo, una vocale, la
aggiungo al chara- set di caratteri

104
00:09:37,724 --> 00:09:42,769
che ho visto finora.
Ora implementiamo questa funzione.

105
00:09:42,769 --> 00:09:46,173
Come prima, dobbiamo accumulare delle
informazioni.

106
00:09:46,173 --> 00:09:51,446
Prima, era un intero, questa volta vogliamo
accumulare delle informazioni in una

107
00:09:51,446 --> 00:09:54,650
stringa.
QUindi userò la variabile vowels per far

108
00:09:54,650 --> 00:09:58,121
riferimento ad una stringa.
E quella stringa sarà inizializzata a vuota.

109
00:09:58,121 --> 00:10:02,860
Non abbiamo trovato alcuna vocale finora.
Stiamo per esaminare la stringa

110
00:10:02,860 --> 00:10:08,333
carattere per carattere usando [inudibile],
e vogliamo controllare per vedere se quel

111
00:10:08,333 --> 00:10:13,540
carattere è una vocale usando esattamente lo
stesso approccio della prima volta.

112
00:10:14,280 --> 00:10:20,819
Se il carattere è una vocale, voglio aggiungerla
all'insieme delle vocali che ho visto finora,

113
00:10:20,819 --> 00:10:27,280
quindi la mia variabile vowels farà riferimento
al suo valore originale più il carattere che

114
00:10:27,280 --> 00:10:31,717
abbiamo appena visto.
Userò questo operatore di concatenazione per

115
00:10:31,717 --> 00:10:35,610
aggiungere il carattere alla stringa corrente di
vocali.

116
00:10:35,610 --> 00:10:40,483
Al termine della funzione, una volta che il ciclo
for ha terminato l'esecuzione e ogni

117
00:10:40,483 --> 00:10:45,166
carattere della stringa è stato esaminato,
vowels farà riferimento alla stringa

118
00:10:45,166 --> 00:10:49,660
contenente ognuna delle vocali di S, e
questo è ciò che verrà ritornato.

119
00:10:51,500 --> 00:10:56,220
Dobbiamo testare la funzione, quindi faremo
girare il modulo.

120
00:10:56,680 --> 00:11:01,400
E poi effettueremo le chiamate d'esempio della
funzione nella shell.

121
00:11:01,680 --> 00:11:05,647
Collect vowels ritorna la stringa che
ci aspettiamo.

122
00:11:05,647 --> 00:11:12,400
E questa chiamata per l'argomento differente
ritorna anch'essa la stringa che ci aspettiamo.

123
00:11:12,940 --> 00:11:18,154
Come la variabile num vowels, la variabile
vowels è anch'essa un accumulatore.

124
00:11:18,154 --> 00:11:23,586
Dato che questa accumula una stringa
durante l'esecuzione della funzione.

125
00:11:23,586 --> 00:11:29,525
Come num vowels che è inizializzata a zero e aumenta, 
vowels inizia con una stringa vuota e aumenta anch'essa.