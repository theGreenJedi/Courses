1
00:00:00,000 --> 00:00:03,148
.
En nuestros programas a veces trabajamos con

2
00:00:03,148 --> 00:00:06,971
colecciones de datos.
Por ejemplo, podemos trabajar con las notas

3
00:00:06,971 --> 00:00:11,937
estudiante o con los títulos de los libros.
En esta clase les introduciré a

4
00:00:11,937 --> 00:00:17,369
el tipo de lista de Python y exploraremos 
algunas de las funciones y operaciones que

5
00:00:17,369 --> 00:00:22,147
se puede aplicar a las listas. 
Para empezar voy a crear una variable

6
00:00:22,147 --> 00:00:26,557
grades que se refiere a una lista de tres elementos 
de enteros.

7
00:00:26,557 --> 00:00:33,133
La notación para nuestra lista es un corchete de apertura 
Valores separados por comas y

8
00:00:33,133 --> 00:00:37,623
un corchete de cierre.
Grades es una lista de tres elementos.

9
00:00:37,623 --> 00:00:44,359
donde decimos que grades tiene tres elementos
El primer elemento está en el índice cero y grades

10
00:00:44,359 --> 00:00:50,534
en el índice cero se refiere a la enésima 80. 
Grades en el primer índice se refiere al enésimo 90 y grades

11
00:00:50,534 --> 00:00:56,423
en el índice dos se refiere a la enésima 70. 
También podemos tomar las rebanadas de una lista como

12
00:00:56,423 --> 00:01:00,322
podemos con una cadena que comienza con un
índice inicial.

13
00:01:00,322 --> 00:01:05,050
En este caso, voy a empezar en el índice inicial
Y un índice final.

14
00:01:05,050 --> 00:01:12,664
Así, subiendo a dos, esto me da una rebanada 
de la lista que contiene un único int

15
00:01:12,664 --> 00:01:17,086
90.
Si voy en grades desde cero hasta dos luego

16
00:01:17,086 --> 00:01:20,949
se da una rebanada de dos elementos con 80 y
90.

17
00:01:20,949 --> 00:01:26,217
Así las mismas reglas aplican para rebanar a 
listas como para las cadenas.

18
00:01:26,217 --> 00:01:32,187
El operador n que hemos usado para las cadenas 
también se puede usar con listas.

19
00:01:32,187 --> 00:01:38,245
Así que esto pregunta si 80 es un elemento de
la lista grades, que lo es.

20
00:01:38,245 --> 00:01:45,356
La expresión 60 en grades evalúa a
falso desde 60 no es un elemento de la

21
00:01:45,356 --> 00:01:49,333
Lista de los grades. 
Algunas de las funciones incorporadas de Python que

22
00:01:49,333 --> 00:01:54,040
hemos utilizado anteriormente con otros tipos también pueden 
se aplicadas al tipo lista.

23
00:01:54,040 --> 00:01:59,816
Por ejemplo, podemos encontrar la longitud de una
lista, en este caso tres, porque la lista

24
00:01:59,816 --> 00:02:04,095
tiene tres elementos
También podemos encontrar el valor más pequeño en una

25
00:02:04,095 --> 00:02:09,871
lista pasando la lista como argumento para 
la función MIN, y cuando llamamos a la

26
00:02:09,871 --> 00:02:13,722
función MAX en una lista, devuelve el
elemento más grande.

27
00:02:13,722 --> 00:02:19,345
Hay otra función llamada SUM. 
Va a sumar los elementos de la lista.

28
00:02:19,345 --> 00:02:23,148
Así en este caso suma 80, 90, y 70 
retornando 240.

29
00:02:23,799 --> 00:02:29,493
Grades es una lista de INTs, pero podemos tener
listas de otros tipos, también.

30
00:02:29,493 --> 00:02:33,966
Esta variable va referirse a una
lista de cadenas.

31
00:02:34,617 --> 00:02:41,612
Algunas de las mismas funciones que aplicamos 
a la lista de INT también se puede aplicar a

32
00:02:41,612 --> 00:02:47,062
la lista de cadenas 
Por ejemplo, podemos encontrar su longitud,

33
00:02:47,062 --> 00:02:51,129
y podemos averiguar el valor mínimo en
la lista.

34
00:02:51,129 --> 00:02:56,010
Para cadenas, el orden del diccionario es a lo que
se compara, y el

35
00:02:56,010 --> 00:03:01,176
El mínimo en este caso es el archivo. 
El max.

36
00:03:02,641 --> 00:03:08,623
Va a ser una cadena que viene 
finalmente en el alfabeto, o el por último en el

37
00:03:08,623 --> 00:03:13,828
diccionario, que es math. 
Y la función sum no se puede aplicar a

38
00:03:13,828 --> 00:03:17,752
cadenas.
Un error de tipo se produce cuando sum se aplica a la

39
00:03:17,752 --> 00:03:22,438
la lista de cadenas.
Los datos de diferentes tipos pueden estar contenidos

40
00:03:22,438 --> 00:03:26,816
en la misma lista. 
Por ejemplo, vamos a hacer una lista de

41
00:03:26,816 --> 00:03:30,426
dirección de calle
Contará con un int para el número de la calle,

42
00:03:30,426 --> 00:03:36,647
y una cadena para el nombre de la calle
Así que tienes un entero y una cadena en la

43
00:03:36,647 --> 00:03:40,181
misma lista. 
La última cosa para muestrarles en este

44
00:03:40,181 --> 00:03:44,021
Introducción a las listas es la iteracción for
sobre las listas.

45
00:03:44,021 --> 00:03:51,414
Por lo tanto, echemos un vistazo a nuestro ejemplo grade.
Para cada nota en la lista grades, haremos

46
00:03:51,414 --> 00:03:55,775
una iteración sobre ella y lo mostraremos
Grade es un nombre de variable.

47
00:03:55,775 --> 00:03:59,870
Podría haber usado aquí algo así como un item o 
element.

48
00:03:59,870 --> 00:04:05,558
Así que vamos a imprimir estas tres grades.
Del mismo modo podemos iterar sobre los subjects.

49
00:04:05,558 --> 00:04:11,776
Y yo voy a cambiar el nombre de la variable sólo para
hacen hincapié en que, eso es sólo una variable,

50
00:04:11,776 --> 00:04:17,995
refiriendo a cada elemento de la lista en 
turno, a partir del índice cero, trabajando hacia

51
00:04:17,995 --> 00:04:21,180
el final de la lista,
Imprimiendo los subjects