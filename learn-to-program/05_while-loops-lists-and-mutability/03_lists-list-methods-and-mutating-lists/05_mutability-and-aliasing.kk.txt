Біз қолданып жүрген арнайы жады
 өте пайдалы болып жүр Кейбір нысандардың мазмұнын жаңарта аласыз. Арнайы жады болмаса қандай амалдар орындалып 
жатқанын түсіну өте қиын болар еді. Тізімдегі нысандарды 
жаңартудан бастайық. Бір онлайн тақырып тапсырмасы болып табылады. Оң қол тұсындағы сандарды санай аламыз,
 бұл нысандардың тізімін құрайды,сонымен қатар бүтін сандарды құрайды 0, 2,
4, 6, 8 және10. Біз осы тізімнің құрылымын жасадық, содан кейін LST өзгермесін тағайындаймыз,
 бұл нысан тізімінің арнайы жады болып табылады. LST құрамында арнайы жады бар, ол ID
1 сол арқылы нысандар тізіміне сілтеме жасалынады.
Нөлдік индексте арнайы жады ID 2.
Осы арқылы нөлдік нысанға сілтеме жасалынады. Бір индексінде екіге сілтеме жасалынады.
Екілік индексте біз төртке сілтеме жасаймыз. Солай жалғаса береді. Онлайн екі тақырыптың келесі тапсырмасы. Сол қол жақта бізде өзгерме
 болған жоқ. Қазіргі амал аздап қиындау. 2 индексінде тізім бар. Осы жердегі жады орналасқан жерді
 біршама жаңартпақшымыз. 2 индекстегі  тізім, тапсырманы орындап болғаннан кейін, 4 бүтін санына сілтеме жасалынбайтын болады. Оның орнына ол 5 бүтінге сілтеме жасалынады. Хипте орналасқан нысанды жаңарту
 амалын орындамақпыз. Батырманы тағы да басқан кезде 
ID 8 арнайы жадында жаңа нысанның пайда болғанын көреміз. 2 индексіндегі тізім осы жаңа нысанға сілтеме жасалынады. Кодты редакциялау тәрізді жаңа 
амалдарды орындап көрейік. Мен бұл кодты жаңа 
кодтпен алмастырмақпын. Бұл амалдың қалай орындалатынын 
елестетіп көрейік. Бірінші жолда қандай амалдар орындалатынын болжауға болады.
1 тізім арқылы тізімге сілтеме жасалынады. 0 индексі тізімделеді, бірінші 0. Тізімделген индекс 1, 2 ішіндегі бірінші.
Listed index 2, our first of 4, and so on. On line two, I'm doing something rather
curious. мен өзгермелі тізбектегі арнайы жадыны аламын 1 нөмірдегі өзгермені 2 тізімге қосамын. өзгеретін бір ғана нәрсе ол модуль атауының мазмұны. біз жалғастырамыз. Енді 1 және 2 тізбек арқылы нысандар тізіміне сілтеме жасалынады. Бұл бұрмалану деп аталады.
Екі өзгермелі бір арнайы жадыдан тұратын болса бұрмалану орын алады.
Жалғасқан сайын нығайа түседі. Енді біз соңғы тақырыптағы тапсырманы орындаймыз ол бірінші тізімде орын алады, бірінші екі тізімнен пайда болған нысан, мәні 17 ге тең.
5 индексті нысан өзгертіледі ол тізімнің ішінде өзгертіледі.
Біз 10 санына сілтемеден айырылып қаламыз, орнына 5 индексті 17 бүтінге сілтеме жасалынатын мәнге ие боламыз. Біз оны шығардық. ең қызығы, 2 тізім де өзгерістерге ұшырайды. 2 тізім нысан тізімінің арнайы жадынан тұрады. Біз нысанды 1 тізімнің көмегімен өзгерттік, ал 2 тізім соның әсерінен өзгеріске ұшыраған. сонымен біз 1 тізімді минус 1 индекспен есептесек, 17 мәнін аламыз. енді біз 2 тізімдегі индекстен 1 азайту амалын жасағанда тура сол есеп шығатынын көреміз. біз бұрмалаудың тағы бір мысалын қарастырып көрейік. Бұл функция екі еселенген индекстен параметр ретінде кірулері екі еселенген және қайтып оралмайтын мән. бұл жол өзге кірулерді де екі еселейді және 
0 индекстен басталады. индекстің мәндері 0, 2, 4, 6, 8 және т.б. екі еселенетін болады. біз бұл есепті 0 ден бастаймыз. басқа сөзбен айтқанда i нысанында орналасақан нысандардың барлығы дерлік сақталып қалғанша екі еселенеді. Біз бұл амалды i тізімнің ұзындығынан кем болғанша жалғасырамыз.
Басқа сөзбен айтқанда, біз оның ұзындығы тізіммен бірдей немесе тізім ұзындығынан артық болғанға дейін орындаймыз. Тізбектің ішінде i нысанының индексін тауып, екі еселейміз. индекстер тізімінде жаңадан пайда болған мәнді сақтап отырамыз.
Содан кейін, i нысанына 2 санын қосамыз, себебі біз келесі индекске көшуіміз керек. Біздің негізгі бағдарламамыз тізімді жасап шығарады.
Ол осы тізімдегі өзгермелі 1 тізімге ұштастырылады. Осы тізімді басып шығарыңыз. Берілген тізімдегі бүтін сандарды тіпті, индекстерді екі еселеңіз. содан кейін тізімді қайта басып шығарыңыз. Біз өз функциямыздың қызметін анықтадық.
Тізімнің құрылымын жасап шығардық. Осы тізімді басып шығарамыз. Енді 1 өзгермелі тізімнің құрамында ID 2 арнайы жады бар екенін қараңыз, осы ID 2 біздің нысандар тізімінің арнайы жады болып есептелінеді. Енді біз оған аралас, ұқсас тізім жасап шығарамыз.
Бірақ тапсырмалар сұрағын қолданбаймыз. Оның орнына біз амалдар функциясын орындаймыз.
Біз тіптен аргументтерді жинақтаймыз. өзгермелі тізім жасап шығарайын деп жатқан ID 2 арнайы жадын аламыз, оны индекстерді екі еселеу үшін қолданамыз. екі еселенген индекс функциясында тізім өзгермесі
нысандыр тізіміне сілтенеді. 1 өзгермелі тізім де осы нысандар тізіміне сілтенеді. Бұл біздің жасаған әрбәр өзгертулеріміз екі өзгермелідегі нысандар тізіміне әсер етеді. i  нысаны 0 индекстен бастаймыз, бұл жерде  i арқылы 0 ге сілтеме жасалынатындығын байқаңыз. Тізімнің ұзындығы 1, 2, 3, 4, 5, 6, 7  тең.
Ал 0 саны 7 ден кем. мен 0 индекстің мәнін анықтапоны 2 арқылы көбейтемін. 0 индекстің мәні 11 ге тең.
Оны 2 ге көбейткенде 22 шығады. Енді біз 0 индекстке 22 арқылы сілтеме жасаймыз. i ге екіні қосамыз, енді ол, яғни i арқылы 2 ге сілтеме жасалынады. 2 саны 7 ден кем. мен алдында орындаған амалды енді 2 индексті тізімге жасамақшымын. 2 индекстің мәні 13 ке тең. Біз 13 санын алып екіге көбейтіп 26 санын аламыз. Енді 2 индекс тізімінде сақтаймыз. онда жаңадан алынған бүтін санның арнайы жадын сақтаймыз. біз ол малады алдында орындаған болатынбыз. i нысанына 2 қосу арқылы біз 4 курсты тамадаймыз.
i арқылы 4 санына сілтеме жасалынады. 4 саны 7-ге қарағанда кем.
ондықтан біз бұл амалды қайта орындамақшымыз бұл жолы 4 нысанындағы индексті өзгертіп15-ті 30 бен алмастырамыз. i -ға 2-ні қосамыз
6 саны 7өге қарағанда кем. алтылық индекстегі тізім 17-ге тең.
Шыққан амалды екіге көбейтеміз. 34 саны шықты, енді 
алтылық индекс арқылы 34-ке сілтеме жасалынады. iға 2-ні қосамыз, ол енді 8-ге тең.
бұл біздің тізбегіміздің амалын қате қылып берді. тізбек шарты қате немесе дұрыс емес деп саналғанша 
тізбек аяқталады. Сондықтан біз бұл тізбектен шығамыз. Бұл жерде еш тапсырма жоқ. яғни, екіге көбейтілген индекс соңында амал жоқ болғандықтан біз қайта ораламыз. бұл функцияда қайта оралу амалы жоқ болса функция мән арқылы ешқандай түрсіз қайта оралады. Біз қайда болдық? Біз осы жерде көрсетілген негізгі модульде болдық. екі еселенген индекстер бойынша амалдарды орындап біттік. біз енді 15 жолға көшеміз. 1 тізім 22 саны белгіленген тізімге сілтенеді, ол 0 индексте орналасқан. одан кейін 12, 26, 14, 30, 16 және 34. біз 1 тізімді функцияның негізінде орналасқан 1 тізімді ескерген жоқпыз. ол арқылы енді жаңартылған нысанға сілтеме жасалынады. енді бізде жаңа мәндер пайда болды. ұштастыру амалын орындағандықтан сіз қандай түрлер ұқсас ал қандай түрлер ұқсас емес екендігін есіңізде сақтағаныңыз жөн. Біздің тізімімізде тек бір түр ғана ұқсас. Қалғандары болса ұқсас емес. ұқсас жолдарға қосымша жолдар енгізгенде өте мұқият болыңыз. Сіз параметрдің функция ішіндегі код арқылы жаңарту енгізілетін параметрдің қай жерде орналасқанын біліп алғаныңыз абзал.