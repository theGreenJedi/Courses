در این مبحٍث ،تحقیقی در مورد روش های کار با لیست ها میکنیم. به عنوان یادآوری،متد تابعی است که درون یک سوژه از این روش های کاری در type list شنیده اید.با ندید گرفتن روش هایی که underscore دارند، append,count,extend,pop,remove,reverse,sort را میبینیم. بعضی از این روش ها لیست را عوض میکند،و بعضی تنها اطلاعات را تحویل میدهد. اکنون مثالهایی در مورد استفاده از هر یک از اینها. رد رنگهای دلخواه یک نفر را میخواهیم دنبال کنیم. اینجا prompt را ملاحظه میکنید که از آن برای جمع آوری اطلاعات استفاده میکنیم. برای جمع آوری همه رنگهای دلخواه فرد،قصد داریم که از چرخه ای استفاده کنیم، ولی نیاز است که با پرسش از آنها برای اولینشان شروع کنیم. تاکنون،آنگاه،متغیر colours با لیستی تهی مربوط شده است. یکی دیگر از رنگهای دلخواهتان را وارد کنید، برای پایان دادن return را تایپ کنید.از کاربر میخواهیم که اولین رنگ دلخواه خود را با فراخواندن تابع input و عبور دادن متغیر prompt وارد کند. بگوییم که کاربر آبی را تایپ میکند.پس اکنون colour به آبی اشاره دارد. متغیر colour هنوز به لیست تهی نظر دارد. در حال جمع آوری اطلاعاتی که کاربر تایپ میکند هستیم. پس،کاری که میخواهیم انجام دهیم استفاده از چرخه while است که بگوییم، وقتی که colour تهی نیست،آن را به متغیر colour ادغام میکنیم، Colour.append color.اکنون،رنگی را که هم اکنون کاربر تایپ کرده را ادغام کرده ایم، بنابراین لازم است که برای دور گردش بعدی چرخه با پرسش از اینکه کاربر رنگ دیگری را بگوید آماده شویم.بنابراین،رنگ به عنوان ورودی با مولفه prompt محسوب میشود.اکنون رنگهای زرد،قهوه ای و،بگوییم،لیست کامل رنگهای دلخواه است بنابراین میخواهیم که دستور کارها را دنبال کرده و return را تایپ کنیم که به چرخه while پایان دهیم. وقتی که متغیر coloures را بررسی میکنیم،میبینیم که شامل string های blue,yellow,brown است. ولی یک چیزی را فراموش کردیم،قصد داریم که از روش extend برای گسترش لیست colours با فرستادن در لیست colours که فراموش کردیم استفاده کنیم. colours,extend را فراخوانده و string های بنفش تند و سبز نئونی را از لیست عبور میدهیم. اکنون که coloures را بررسی میکنیم،blue,yellow,hot pink,neon green را میبینیم. آن گونه که روشن میشود،مخصوصا رنگ سبز نئونی را دوست نداریم،بنابراین برای حذف آن coloures.pop را فرا میخوانیم..وقتی که coloures را بررسی میکنیم، لیست blue,yellow,brown,pink را میبینیم،Neon green دیگر دیده نمیشود. نکته دیگر این که وقتی که شما coloures.pop را فرا میخوانید نه تنها آخرین آیتم را حذف میکند،بلکه آن را تحویل میدهد.پس،میتوانید آن را به صورت عبارت تکلیفی به کار برید. تابعی که هم اطلاعات را تحویل میدهد و هم با داده ها،مانند coloures.pop تابعی هست که گفته میشود آثار جانبی دارد.از قهوه ای هم خوشمان نمیاید،پس از pop با مولفه اختیاری اش استفاده کنیم تا حذفش نماییم. ضریب Brown دو است،پس اگر که colours.pop2 را فراخوانم،brown را از لیست حذف میکند و آن را تحویل میدهد.با بررسی coloures،میبینیم که  لیست شامل blue,yellow,hot pink است.colours.pop آخرین آیتم لیست را حذف میکند. و،coloures.pop با ضریب آیتمی را که با آن ضریب تعریف شده حذف میکند.روش remove سوژه ای را که باید حذف شود برمیدارد،نه ضریب را. و آن اولین مورد ظهور سوژه مورد نظر در لیست دارد.آن را برای حذف black امتحان کنیم. که در لیست نیست.و میبینیم که خطا تحویل میگیریم. اگر remove را با آیتمی که در لیست نیست فراخوانیم کار نمیکند. پس،قبل از فراخواندن روش یا تابع که امکان بروز خطا را دارد،میخواهیم آن را کنترل کنیم،که درواقع اتفاق نمیافتد.میتوانیم تعداد دفعات وجود مقداری خاص در لیستی را بشماریم.و،اگر از صفر بزرگتر باشد، به سخنی دیگر ،اگر زرد در لیست موجود باشد، آنگاه میتوانیم remove را فراخوانیم.با بررسی رنگها،با آبی و بنفش تند باقی میمانیم.به جای شمارش،میتوانستیم تنها بگوییم که، if yellow in colours,Then coloures,removeyellow. اینگونه نسبت به فراخوانی colours استانداردتر است،شمارش تعداد آیتم ها. تنها گفت،درصورتی که آنجا باشد،آنگاه coloures را فراخوانید، روی آن remove کنید.البته،زرد آنجا نبود. و،بنابراین شرط عبارت if غلط ارزیابی شد، و coloures را فرانخواندیم.remove cuz که قبلا آن را جابجا کردیم. اکنون colours.extend را با مولفه های auburn,taupeوmagenta فرا میخوانیم. ولی خطای تایپی تحویل میگیریم.Extend تنها یک مولفه میپذیرد ،که سه تا داده شده است. مشکل این است که قرار دادن auburn,taupeو magenta در لیست ضروری است زیرا extend منتظر لیستی است. اکنون،coloures به لیستی با string های blue,hot pink,auburn,taupeو magenta مربوط میشود. میتوانیم آن را مرتب کنیم. اکنون coloures به لیستی به ترتیب الفبا مربوط میشود به شرحauburn,blue,hot pink,magentaوtaupe. میتوانیم این را ذخیره کنیم. اکنون coloures.reverse را فرامیخوانیم،و اکنون coloures به taupe,magenta,
hot pink,blue,auburn نظر دارد. در مورد brown کمی احساس گناه میکنیم، colour.insert را فرامیخوانیم که آن را به جایی که در لیست بود بازگردانیم. از مولفه های منفی دو و brown استفاده کردیم که بگوییم brown را در ضریب منفی دو به داخل coloures جا دهیم. آیتمی را که در ضریب منفی دو بود را جایگزین نکردیم،در عوض blue و auburn تغییر مکان یافته اند تا برای brown جا فراهم کنند. بنابراین،insert از چیزی که در لیست هست خلاصمان نمیکند،چیزها را جابجا میکند تا جایی فراهم کند. در انتها،از hot pink خلاص شویم که که برای افراد مسن ما کمی روشن است. برای حذف آن باید که ضریبش را بدانیم. میتوانیم که از روش فراخوانی ضریب لیست برای این کار بهره بگیریم. ولی دوباره،اگر آیتم در لیست نباشد امکان دارد که ریب به هم بریزد. مثلا،colours.indexبه خاطر داریم که دیگر نئون سبز نداریم. به ما خطای مقداری میدهد که نئون سبز در لیست نیست. میخواهیم که جلوی خطا را بگیریم.پس در اینجا،از عبارت if دار بهره میگیریم در صورتی که hot pink در colours باشد کنترل کنیم که میتوانیم بدون به هم ریختن کار میتوانیم ضریب را فراخوانیم. پس،در صورتی که hot pink در colours باشد، میتوانیم متغیر where را که نتیجه فراخواندن colours.hotpink است را مطرح کنیم و آنگاه،ضریب where را میتوانیم برای فراخوانی colours.pop برای حذف hot pink بهره بگیریم و اکنون مانده ایم با taupe,magenta,brown,blueوauburn.