.
Nel nostro programma spesso lavoriamo con della collezioni di dati.
Ad esempio potremmo lavorare con i voti degli studenti o con i titoli dei libri.
In questa lezione introdurrò l'uso del tipo list di Python e esploreremo
alcune delle funzioni e operazioni che possono essere applicate alle liste.
Per iniziare andrò a creare una variabile grades che fa riferimento ad una lista di interi
con tre elementi. La notazione per la nostra lista è una aperta
parentesi quadra, valori separati da virgole e una chiusa parentesi quadra.
Grades è una lista a tre elementi. Dove diciamo che grades ha tre elementi,
il primo elemento è all'indice zero e grades all'indice zero fa riferimento a 80.
Grades a uno fa riferimento a 90 e grades all'indice due fa riferimento a 70.
Possiamo anche prendere delle parti delle liste come possiamo fare con una stringa iniziando con
un indice iniziale. In questo caso inizierò all'indice uno.
E un indice di fine. Quindi, andando avanti fino a due, questo mi fornisce
una fetta della lista che contiene un singolo intero. 90.
Se vado da grades a zero fino a due allora viene restituita una porzione con 80 e
90. Quindi vengono applicate le stesse regole
dello slicing come per le stringhe. L'operatore in che abbiamo usato per le stringhe
può anche essere usato con le liste. Quindi questo chiede se 80 è un elemento della
lista grades e lo è. L'espressione 60 in grades viene valutata a
falso dato che 60 non è un elemento della lista grades.
Alcune funzioni integrate di Python che abbiamo usato precedentemente con altri tipi possono
anche essere applicate al tipo lista. Ad esempio, possiamo trovare la lunghezza di una
lista, in questo caso tre dato che la lista ha tre elementi.
Possiamo anche trovare il valore più piccolo in una lista passando la lista come argomento alla
funzione MIN, e quando chiamiamo la funzione MAX su una lista viene ritornato
l'elemento più grande. C'è un'altra funzione chiamata SUM.
Questa sommerà gli elementi della lista. Quindi in questo caso somma 80, 90 e 70,
ritornando 240. Grades è una lista di interi, ma possiamo avere
anche liste di altri tipi. Questo soggetto variabile farà riferimento
ad una lista di stringhe. Alcune delle funzioni che abbiamo applicato
alla lista di interi possono anche essere applicate alla lista di stringhe.
Ad esempio, possiamo trovare la sua lunghezza e possiamo trovare il valore minimo della lista. Per le stringhe, viene usato l'ordinamento
da dizionario, e il minimo in questo caso è file.
Il max sarà la stringa che compare per ultima
nell'alfabeto, o l'ultima nel dizionario, che è math.
E la funzione sum non può essere applicata alle stringhe.
Comparirebbe un type error nel caso in cui la sum venga applicata ad una lista di stringhe.
Nella stessa lista possono essere presenti dati di tipi differenti.
Ad esempio, facciamo una lista di indirizzi stradali.
Avrà un int per il numero della strada e una stringa per il nome della strada.
Quindi abbiamo un int e una stringa nella stessa lista.
L'ultima cosa da mostrarvi in questa introduzione alle liste è il ciclo for
sulle liste. Quindi, osserviamo il nostro esempio grades.
Per ogni grade nella lista grades, effettueremo un ciclo su di esso e lo mostreremo.
Grade è il nome di una variabile. Qui potrei aver usato qualcosa come item, o
element. Quindi stamperemo quei tre voti.
All stesso modo potremmo ciclare sopra subjects. Sto cambiando il nome della variabile solo
per enfatizzare che, che è solo una variabile, che fa riferimento ad ogni elemento della lista a turno, 
iniziando dall'indice zero, fino alla fine della lista.
Stampando gli oggetti.