1
00:00:01,400 --> 00:00:05,970
آن آدرسهای حافظه که از آنها استفاده میکرده ایم حالا معلوم شده که واقعا مفید واقع میشوند.

2
00:00:05,970 --> 00:00:09,360
معلوم میشود که میتوانید محتوای بعضی از سوژه ها را میتوانید عوض کنید،و

3
00:00:09,360 --> 00:00:13,529
بدون آدرسهای حافظه ،واقعا دشوار است که آن چه را که پیش میاید را توضیح داد.

4
00:00:15,580 --> 00:00:19,120
با نشان دادن اینکه  سوژه های لیست قابل تغییر هستند کار را شروع میکنیم.

5
00:00:19,120 --> 00:00:21,190
در سطر اول عبارت تکلیفی هست.

6
00:00:21,190 --> 00:00:25,200
عبارت سمت راست را ارزیابی کرده و آن یک لیست سوژه به وجود میاورد

7
00:00:25,200 --> 00:00:29,760
و شش عدد صحیح صفر،دو،چهار،شش،هشت،و ده.

8
00:00:30,910 --> 00:00:35,810
وقتی که لیست را ساختیم متغیر LST را برایش نامگذاری میکنیم.

9
00:00:35,810 --> 00:00:39,750
آدرس حافظه سوژه لیست.

10
00:00:43,290 --> 00:00:49,190
پس لیست LST شامل آدرس حافظه ID1 است که نظر به سوژه لیست دارد.

11
00:00:51,080 --> 00:00:56,840
در ضریب صفر،آدرس حافظه ID2 است.

12
00:00:56,840 --> 00:00:59,670
و،آ« به سوژه صفر نظر دارد.

13
00:00:59,670 --> 00:01:03,190
در ضریب یک،به دو نظر داریم.

14
00:01:03,190 --> 00:01:06,020
در ضریب دو به چهار و ..و..و

15
00:01:09,520 --> 00:01:12,000
در سطر دو عبارت تکلیفی دیگری وجود دارد.

16
00:01:13,820 --> 00:01:17,820
در سمت چپ،دقیقا متغیری نداریم.

17
00:01:17,820 --> 00:01:22,510
چیزی کمی پیچیده تر داریم،لیست در ضریب دو.

18
00:01:22,510 --> 00:01:27,820
در واقع میخواهیم که جایگاه حافظه ای را که دقیقا آنجا است را تغییر دهیم.

19
00:01:28,910 --> 00:01:32,530
لیست در ضریب دو،بعد از به جریان انداختن عبارت تکلیفی،

20
00:01:32,530 --> 00:01:35,780
دیگر به عدد صحیح چهار نظر ندارد.

21
00:01:35,780 --> 00:01:39,270
در عوض به عدد صحیح پنج نظر دارد.

22
00:01:39,270 --> 00:01:43,210
میخواهیم که سوژه ای را در میان انبوهی تغییر دهیم.

23
00:01:46,958 --> 00:01:54,128
وقتی که به سمت جلو کلیک میکنم،میبینیم که سوژه جدیدی در آدرس ID8 عدد داریم،

24
00:01:54,128 --> 00:01:58,777
و آن ضریب دو به سوژه جدید نظر دارد.

25
00:02:01,517 --> 00:02:05,270
برنامه را ویرایش کنیم و کاری دیگر را به پیش بریم.

26
00:02:05,270 --> 00:02:09,886
میخواهم که این برنامه را با برنامه ای دیگر جایگزین کنم.

27
00:02:09,886 --> 00:02:11,754
پردازش را مجسم کنیم.

28
00:02:13,990 --> 00:02:16,540
سطر اول،میدانیم که منتظر چه باشیم.

29
00:02:17,650 --> 00:02:20,630
لیست یک به لیستی نظر دارد.

30
00:02:20,630 --> 00:02:22,890
در ضریب صفر اولین ما صفر است.

31
00:02:22,890 --> 00:02:30,130
در ضریب یک نظر به دو،ضریب دو نظر به چهار دارد و..و..و..

32
00:02:30,130 --> 00:02:33,730
در سطر دو،کار عجیبی میکنم.

33
00:02:33,730 --> 00:02:37,850
آدرس حافظهای را میگیرم که در لیست یک هست.

34
00:02:37,850 --> 00:02:40,890
و آن را در متغیر لیست دو جایش میدهم.

35
00:02:40,890 --> 00:02:44,510
تنها چیزی که عوض میشودمحتوای نام برنامه است.

36
00:02:45,880 --> 00:02:46,980
جلو برویم.

37
00:02:46,980 --> 00:02:52,460
اکنون،لیست یک و لیست دو به سوژه لیست نظر دارند.

38
00:02:55,915 --> 00:03:00,672
نام آن aliasاست،وقتی که هر دو متغیر

39
00:03:00,672 --> 00:03:04,470
به یک آدرس حافظه یکسانی دارند،alias پیش میاید.

40
00:03:05,770 --> 00:03:07,560
تا حالا که به خیر گذشت.

41
00:03:07,560 --> 00:03:13,040
الان قصد داریم که به آخرین آیتم لیست یک ،

42
00:03:13,040 --> 00:03:17,000
یا سوژه ای که لیست یک به آن نظر دارد مقدار 17 را اختصاص دهیم.

43
00:03:17,000 --> 00:03:24,450
پس آیتم در ضریب پنج در لیست تغییر خواهد یافت.

44
00:03:24,450 --> 00:03:29,022
قصد داریم که مرجع را تا10 ببازیم،و

45
00:03:29,022 --> 00:03:36,472
در عوض قصد داریم که آیتم در ضریب پنج به عدد صحیح 17 مربوط گردد.

46
00:03:38,411 --> 00:03:41,151
و در اینجا است.

47
00:03:43,998 --> 00:03:51,662
چیز جالب در اینجا لیست دو است که  ناظر بر تغییر است.

48
00:03:51,662 --> 00:03:55,860
لیست دو مشتمل بر آدرس حافظه سوژه لیست است 

49
00:03:55,860 --> 00:03:58,560
سوژه را با استفاده از لیست یک عوض کردیم.

50
00:03:59,710 --> 00:04:02,310
ولی لیست دو نیز عوض شد.

51
00:04:02,310 --> 00:04:07,000
بنابراین وقتی که لیست یک را در ضریب منفی یک چاپ میکنیم،آخرین آیتم را چاپ کرده 17 را به دست میاوریم.

52
00:04:07,000 --> 00:04:11,888
و قصد داریم که دقیقا همان نتیجه ای را ببینیم که لیست دو را چاپ میکنیم

53
00:04:11,888 --> 00:04:13,362
با ضریب منفی یک.

54
00:04:16,648 --> 00:04:20,220
مثال دیگری از alias را انجام میدهیم.

55
00:04:20,220 --> 00:04:24,380
اینجا تابع double_even_indices را داریم که لیستی از اعداد صحیح را

56
00:04:24,380 --> 00:04:30,140
به عنوان پارامتر پذیرفته و چیزی تحویل نمیدهد،none جواب میدهد.

57
00:04:32,760 --> 00:04:36,750
doc strings ،با شروع با ضریب صفر،برای اعداد صحیح داخل لیست یک درمیان دوبل میکند.

58
00:04:36,750 --> 00:04:39,800
پس مقادیر در ضرایب صفر،دو،چهار،شش،هشت و

59
00:04:39,800 --> 00:04:42,850
و..و...و.. دوبل میشوند.

60
00:04:42,850 --> 00:04:46,410
i را با صفر شروع میکنیم.

61
00:04:46,410 --> 00:04:52,280
به زبانی دیگر،i ضریب آیتم بعدی است که باید دوبل شود.

62
00:04:52,280 --> 00:04:53,980
تا آنجا که چیزی نماند.

63
00:04:55,430 --> 00:05:00,230
کار را تا آنجا ادامه میدهیم که i از طول لیست کوچکتر باشد.

64
00:05:00,230 --> 00:05:03,330
به زبان دیگر وقتی i مساوی یا

65
00:05:03,330 --> 00:05:05,680
بزرگتر از طول لیست باشد.

66
00:05:07,160 --> 00:05:12,930
داخل چرخه،قصد داریم که به آیتم در ضریب i نگاه کرده و آن را دوبل کنیم.

67
00:05:12,930 --> 00:05:19,530
و مرجع را در آن مقدار جدید ضریب لیست شده iذخیره کند.

68
00:05:21,490 --> 00:05:27,270
آنگاه میخواهیم که به i دو تا اضافه کنیم زیرا که قصد داریم که به ضریب ذوج بعدی بپریم.

69
00:05:28,590 --> 00:05:31,469
برنامه اصلی ما لیستی به وجود مباورد،

70
00:05:32,740 --> 00:05:36,680
برای آن متغیرنام list one را برمیگزینیم.

71
00:05:36,680 --> 00:05:41,592
آن لیست را چاپ کنید،اعداد صحیح با ضرایب ذوج را دوبل کنید،

72
00:05:41,592 --> 00:05:43,840
و آنگاه دوباره لیست را چاپ کنید.

73
00:05:47,810 --> 00:05:54,665
تابع خود را تعریف میکنیم،ساختار لیست خود را به وجود آورده،لیست را چاپ میکنیم و

74
00:05:54,665 --> 00:06:00,676
اکنون متوجه باشید که متغیر list one آدرس حافظه ID2 را دارد و

75
00:06:00,676 --> 00:06:05,870
ID2 آدرس حافظه سوژه لیست ما است.

76
00:06:05,870 --> 00:06:10,830
میخواهیم که برای این alias بیافرینیم ولی از یک عبارت تکلیفی استفاده نمیکنیم

77
00:06:10,830 --> 00:06:15,640
در عوض از فراخوانی تابع استفاده میکنیم.

78
00:06:15,640 --> 00:06:18,670
مولفه ها را ارزیابی خواهیم کرد.

79
00:06:18,670 --> 00:06:23,286
حافظه invest ID2را به دست میاوریم،که قصد داریم که در لیست متغیر در چارچوبی 

80
00:06:23,286 --> 00:06:28,148
که قرار است برای تابع double_even_indices ایجاد گردد.

81
00:06:30,042 --> 00:06:36,830
اکنون،در تابع double_even_indices لیست متغیر به آن لیست سوژه نظر دارد.

82
00:06:36,830 --> 00:06:40,390
متغیر list one نیز به آن سوژه لیست نظر دارد.

83
00:06:41,700 --> 00:06:45,790
به این معنی که هرگونه تغییری که در سوژه لیست ایجاد میکنیم

84
00:06:45,790 --> 00:06:47,960
در هر دو متغیر دیده میشود.

85
00:06:49,350 --> 00:06:53,650
i را با صفر شروع میکنیم،توجه کنید که i صفر است.

86
00:06:53,650 --> 00:06:59,338
طول های لیست یک،دو،سه،چهار،پنج،شش، هفت است.

87
00:06:59,338 --> 00:07:01,630
پس صفر از هفت کوچکتر است.

88
00:07:01,630 --> 00:07:08,780
قصد دارم که به مقدار در ضریب صفر نظر کرده و آن را در دو ضرب کنم.

89
00:07:08,780 --> 00:07:11,780
مقدار در ضریب صفر11 است،

90
00:07:11,780 --> 00:07:16,870
با ضرب کردن آن در 2 ،22 به دست میاید،و آن 22 را میگیریم،

91
00:07:16,870 --> 00:07:19,881
و دارای ضریب لیست شده است،که به آن نظر خواهید کرد.

92
00:07:23,601 --> 00:07:30,545
اکنون میخواهیم که 2 را به i بیافزاییم و بنابراین i دو است.

93
00:07:30,545 --> 00:07:34,345
دو از هفت کمتر است،پس همین کار را خواهم کرد ولی

94
00:07:34,345 --> 00:07:37,431
اینبار با ضریب لیست شده دو.

95
00:07:37,431 --> 00:07:40,150
ضریب لیست شده 2 برابر13 است.

96
00:07:40,150 --> 00:07:42,360
میخواهیم آن 13 را دوبل کرده ،26 را به دست دهد.

97
00:07:42,360 --> 00:07:46,822
و و میخواهیم که در ضریب دو آن را داخل لیست 

98
00:07:46,822 --> 00:07:51,104
آدرس حافظه آن عدد صحیح جدید را که میخواهیم به دستش آوریم.

99
00:07:55,005 --> 00:07:56,250
و در دو برای i

100
00:07:58,230 --> 00:08:00,130
البته که به چهار میرسیم.

101
00:08:00,130 --> 00:08:01,840
i الان چهار است.

102
00:08:01,840 --> 00:08:04,600
چهار از هفت کمتر است،پس این کار را دوباره انجام میدهیم.

103
00:08:04,600 --> 00:08:10,772
این بار تغییر آیتم و ضریب 4،آن 15 را با 30 جایگزین کن.

104
00:08:12,723 --> 00:08:14,170
2را به i اضافه کنید.

105
00:08:14,170 --> 00:08:16,460
شش کوچکتر از هفت است.

106
00:08:16,460 --> 00:08:19,250
ضریب لیست شده 6 میشود 17.

107
00:08:19,250 --> 00:08:21,517
با عمل کردن روی آن میرسیم به 34.

108
00:08:21,517 --> 00:08:25,719
پس ضریب لیست شده شش به 34 نظر دارد.

109
00:08:28,159 --> 00:08:33,490
با افزودن دو به i،i میشود هشت.

110
00:08:33,490 --> 00:08:38,150
که در اینجا شرط چرخه را به غلط میکشاند.

111
00:08:38,150 --> 00:08:41,870
آنجا که شرط چرخه غلط میشود،چرخه پایان میپذیرد،پس

112
00:08:41,870 --> 00:08:44,110
از چرخه خارج میشویم.

113
00:08:44,110 --> 00:08:47,580
در پایان تابع عبارت دیگری نیست.

114
00:08:47,580 --> 00:08:51,420
و بنابراین،none تحویل میگیریم.

115
00:08:51,420 --> 00:08:54,400
به خاطر داشته باشید که اگر عبارت return در تابع نباشد،

116
00:08:54,400 --> 00:08:58,010
آنگاه تابع مقدار none را از none type تحویل میدهد.

117
00:08:59,300 --> 00:09:00,070
کجا بودیم؟

118
00:09:00,070 --> 00:09:03,130
در برنامه اصلی این پایین.

119
00:09:03,130 --> 00:09:05,460
آن را دقیقا double even indexes نامیدیم.

120
00:09:05,460 --> 00:09:06,880
نزدیک است که کارش تمام شود.

121
00:09:06,880 --> 00:09:09,960
به سطر 15 مراجعه میکنیم.

122
00:09:13,182 --> 00:09:18,663
List one اکنون به سوژه لیست نظر دارد که در ضریب فر 22 است که بعدا 12،

123
00:09:18,663 --> 00:09:23,280
بعد 26،14،30،بعد26،14،16،و34.

124
00:09:23,280 --> 00:09:29,080
بنابراین باوجودی که هرگز list one را درون بدنه این تابع تعریف نکردیم

125
00:09:29,080 --> 00:09:34,550
list one اکنون به سوژه ای نظر دارد که تغییر یافته است به طوری که

126
00:09:34,550 --> 00:09:38,000
خروجی ما مقادیر جدید را در خود دارد.

127
00:09:38,000 --> 00:09:41,940
به دلیل aliasing باید بدانیم که چه انواعی قابلیت جابجایی را دارند و

128
00:09:41,940 --> 00:09:43,650
کدام انواع قابل جابجایی نیستند.

129
00:09:43,650 --> 00:09:46,810
تابه حال لیست تنها نوع قابل جابجاشدن است.

130
00:09:46,810 --> 00:09:48,550
بقیه غیر قابل جابجایی هستند.

131
00:09:49,870 --> 00:09:56,140
و نیز،نیاز است که وقتی که doc strings را برای انواع جابجا شدنی مینویسیم کاملا حواسمان را جمع کنیم.

132
00:09:56,140 --> 00:10:00,580
نیاز است که در مورد این که آیا پارامتر با برنامه

133
00:10:00,580 --> 00:10:01,490
داخل تابع تغییر مییابد یا خیر روشن عمل کنیم.