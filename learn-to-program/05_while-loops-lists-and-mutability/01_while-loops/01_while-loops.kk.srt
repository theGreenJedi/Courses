1
00:00:01,400 --> 00:00:06,540
Өткен дәрісте біз бір жолдағы таңбалар үшін төрт тізбіектен
енгізген болатынбыз.

2
00:00:06,540 --> 00:00:09,700
Ал егер біз әр таңбаға тізбек енгізуді қаламайтын болсақ ше?

3
00:00:09,700 --> 00:00:12,340
Біз дауысты әріп кездеспейінше ғана таңбаларға тізбек енгізуіміз мүмкін.
Мүмкін біз жолдармен 

4
00:00:12,340 --> 00:00:16,090
мүлде жұмыс жасағымыз келмейтін шығар.

5
00:00:16,090 --> 00:00:22,330
Мысалы, пайдаланушы белгілі бір маңызды жерге
кірмейінше біз тапсырманы шығаруымызға болады .

6
00:00:22,330 --> 00:00:25,990
Бұл дәрісте біз тізбек енгізу арқылы осы тапсырманы қалай

7
00:00:27,910 --> 00:00:31,900
шығаруға болатынын үйренеміз. Ең алдымен, 

8
00:00:31,900 --> 00:00:34,920
егер нұсқаулық Буль амалымен шығарылатын болса
 жалпы үлгісін қарап шығайық.

9
00:00:34,920 --> 00:00:39,830
Егер амал шындық болып шығатын болса, 
тапсырма  орындалады.

10
00:00:39,830 --> 00:00:42,340
Егер Буль амалы жалған болса
тапсырма бойынша орындалатын тапсырмалар
жүзеге аспайды.

11
00:00:42,340 --> 00:00:42,340
[Белгісіз]

12
00:00:42,340 --> 00:00:46,870
Ретсіз тізбектердің құрылымы тапсырманың құрылымына ұқсас, 

13
00:00:46,870 --> 00:00:54,000
яғни ол да Буль амалдары арқылы шығарылады.
Егер Буль амалы шындық болса тізбек шығарылады.

14
00:00:54,000 --> 00:01:00,440
Егер теріс болса, Буль амалы кейін 
қайта тексеріледі.

15
00:01:00,440 --> 00:01:03,530
Ал егер тізбек шарттары дұрыс болса,

16
00:01:03,530 --> 00:01:07,860
тізбек шығарылады, бұл үрдіс тізбек шарттары қате 

17
00:01:07,860 --> 00:01:12,060
болып есептелінбейінше

18
00:01:12,060 --> 00:01:17,330
тоқтаусыз қайталана береді. 

19
00:01:19,900 --> 00:01:20,310
Бірінші 

20
00:01:20,310 --> 00:01:20,310
 [Дыбыс]

21
00:01:20,310 --> 00:01:23,620
Тізбектің сандық өзгермелерден тұратынына мысал.

22
00:01:23,620 --> 00:01:25,005
Санның мәні 2-ге тең.

23
00:01:26,160 --> 00:01:27,000
Тізбек 

24
00:01:27,000 --> 00:01:27,000
 [Дыбыс]

25
00:01:27,000 --> 00:01:31,052
сан <100 болғанша орындала береді.

26
00:01:32,100 --> 00:01:32,630
Тізбектің негізінде сан екі еселенеді

27
00:01:32,630 --> 00:01:32,700
 [Дыбыс]

28
00:01:32,700 --> 00:01:37,150
және басып шығарылады.

29
00:01:39,530 --> 00:01:44,970
Мән  көрсеткіші  2-ге тең санмен,
мына Y тізбегі 6 рет шығарылады.

30
00:01:44,970 --> 00:01:49,620
егер  4, 8, 16, 32, 64, және соңында
128 ге тең болса

31
00:01:49,620 --> 00:01:53,600
Y тізбек шарты қате болып саналды.

32
00:01:55,210 --> 00:01:59,680
Егер сандық көлем 10-ға тең болса, 
Y тізбегін енгізуді қайта бастаймыз.

33
00:02:01,200 --> 00:02:04,550
Тізбек шарты қате болып саналу үшін төрт 
жұмыс циклы қажет.

34
00:02:04,550 --> 00:02:07,970
Бұл орайда тізбек негізі төрт рет шығарылады

35
00:02:07,970 --> 00:02:10,800
4 деген мағынаны білдіреді.

36
00:02:12,260 --> 00:02:18,170
Мәні   160-қа жетпейді  және тізбек шарты қате 
болып есептелінеді.

37
00:02:18,170 --> 00:02:21,900
Бұндай жағдайда біз тізбекті қайта жаңартамыз.

38
00:02:21,900 --> 00:02:25,150
Тізбектің негізі ешқашанда шығарылмайды, себебі

39
00:02:25,150 --> 00:02:27,740
тізбек шарты басынан бастап қате болып есептелінеді.

40
00:02:31,830 --> 00:02:35,360
Қазір мен алдында атап өткен мәселеге тоқталып өтейік,

41
00:02:35,360 --> 00:02:39,120
яғни, дауысты дыбыс кездеспейінше жолға тізбек енгізу мәселесі.

42
00:02:40,180 --> 00:02:44,080
Біз жолға тізбекті алдыңғы уақытта қалай енгізгенімізді еске түсірейік.

43
00:02:44,080 --> 00:02:44,580
Біз

44
00:02:48,600 --> 00:02:49,060
қолданамыз

45
00:02:49,060 --> 00:02:49,370
 [Дыбыс]

46
00:02:49,370 --> 00:02:55,970
Біз S жолына төрттік тізбек енгіздік,
енді мен сол таңбаны жай басып шығарып алмақшымын.

47
00:02:57,120 --> 00:03:00,360
Біз бұл тізбекті бұзған кезде 

48
00:03:00,360 --> 00:03:04,380
S  жолындағы тізбектің көлемі нөльге тең болған.

49
00:03:04,380 --> 00:03:10,090
Кейінірек көлемі жолдың соңына жеткенше 
көбейе берді.

50
00:03:10,090 --> 00:03:14,320
Біз  Y lтізбегін енгізген кезде, 
осы индекстерді ерекшелуіміз керек.

51
00:03:14,320 --> 00:03:19,440
Көлемі нөльге тең
тізбек енгізу керек жолдағы индекстің біріншісін көрсететін 

52
00:03:19,440 --> 00:03:23,520
өзгермелерді жасап шығарамын.

53
00:03:25,350 --> 00:03:28,470
Дауысты дыбыс кездескенге дейін тізбек шартын 

54
00:03:28,470 --> 00:03:32,460
орындауды жалғастыра беруіміз керек.
жол позицияда сақталса.

55
00:03:32,460 --> 00:03:39,480
жай әріптермен  

56
00:03:39,480 --> 00:03:43,690
a e i o u және бас әріптермен A E I O U
белгіленген дауысты дыбыс шыққан жоқ.

57
00:03:44,700 --> 00:03:49,080
Содан кейін біз тізбек негізіне еніп,
оны орындауға кірісеміз.

58
00:03:50,150 --> 00:03:54,470
Жолда орналасқан таңбаны басып шығарамын.

59
00:03:56,760 --> 00:04:01,890
Y тізбегінен шығар алдында, we need to
Индексті көбейтуіміз қажет,

60
00:04:01,890 --> 00:04:07,120
Сол арқылы оның мәні де өсетін болады.
Мен берілген мәнге бірді қосамын.

61
00:04:07,120 --> 00:04:10,560
Енді жолдағы келесі таңбаға көшейік.
Бұл жағдайда тізбек бірден шығарылады

62
00:04:13,740 --> 00:04:16,400
себебі мәні нөльге тең таңба дауысты дыбыс емес.

63
00:04:16,400 --> 00:04:20,740
Екінші ретте тізбек шарты тексерілгеннен кейін,

64
00:04:20,740 --> 00:04:25,080
мәні бірге тең таңба дауысты дыбыс жолдарының 
өтпелі жолына енеді.

65
00:04:25,080 --> 00:04:29,850
Ретсіз тізбек шарты 

66
00:04:29,850 --> 00:04:33,410
қате деп есептелінеді және
ретсіз тізбек бар болып есептелінеді.

67
00:04:34,900 --> 00:04:35,660
Есептеп шығарайық

68
00:04:35,660 --> 00:04:35,660
 [Дыбыс]

69
00:04:35,660 --> 00:04:37,320
Сол тізбек
Енді 

70
00:04:37,320 --> 00:04:37,320
 [Дыбыс]

71
00:04:37,320 --> 00:04:39,590
Жолды мына жерде қолданамыз.Жолды мына жерде қолданамыз.

72
00:04:39,590 --> 00:04:45,110
Қайтадан нөльдік мәнмен есептеп ретсіз тізбекті шығарамыз.

73
00:04:45,110 --> 00:04:48,090
Бұл жолы ретсіз тізбектің негізі екі рет шығарылады.

74
00:04:49,090 --> 00:04:54,190
Бір рет  t дауыссызы үшін, екінші рет  h дауыссызы үшін,
 ал e дауыстысы кездесіп, y тізбегінің шарты 

75
00:04:54,190 --> 00:04:59,290
қате болып есептелінеді де тізбек сақталады.

76
00:05:00,340 --> 00:05:04,640
Егер біздің жолымызда тек дауыссыз дыбыстар кездесетін болса ше

77
00:05:04,640 --> 00:05:04,640
 [Дыбыс]

78
00:05:04,640 --> 00:05:05,140
Бұндай жағдайда, үш дауыссыз көрсетіліп 

79
00:05:11,730 --> 00:05:16,995
индекс қате болып шығарылады.

80
00:05:16,995 --> 00:05:21,830
S(0) -  S(1)'x' таңбасына қатысты.

81
00:05:21,830 --> 00:05:27,180
S 1- 'y' және  s (2)  - "z" таңбасына қатысты.

82
00:05:27,180 --> 00:05:32,150
i таңбасының  ағымдығы мәні  3 және құны

83
00:05:32,150 --> 00:05:37,080
3-ке тең болу  дұрыс позиция емес, 
s-ті санауға берілген дұрыс емес индекс болғандықтан

84
00:05:37,080 --> 00:05:38,440
индекс қате болып есептелінеді.

85
00:05:38,440 --> 00:05:43,910
S таңбасын тексеруді қашан тоқтату керектігін анықтаған жоқпыз.

86
00:05:43,910 --> 00:05:46,740
Сонымен біз жолдағы берілген амалдарды орындауды тәмамдадық,

87
00:05:46,740 --> 00:05:49,820
және жоқ индекстерге қосылу мүмкіндігін іздедік.

88
00:05:50,840 --> 00:05:56,420
Бұл амалдардың алдын алу үшін,
Буль шартына екінші бөлім қосуымызға тура келеді.

89
00:05:56,420 --> 00:06:01,670
Бұл  i таңбасы  жолда берілген амалдармен 

90
00:06:01,670 --> 00:06:02,300
қатысты екендігін тексеру үшін орындалады.

91
00:06:02,300 --> 00:06:07,950
Ұзындығынан қысқа болып келетіндігіне 
көз жеткізу үшін де қолданылады.

92
00:06:07,950 --> 00:06:11,630
Орындап көрейік.
біз i  таңбасына нөльдік мән береміз.

93
00:06:11,630 --> 00:06:17,770
S жолда берілген, x y z және
тізбекті есептеп шығарамыз.

94
00:06:17,770 --> 00:06:21,230
Бұл амалды шығармас бұрын,
ең алдымен i таңбасы жолдың ұзындығына қарағанда 

95
00:06:21,230 --> 00:06:26,060
қысқа екендігіне көз жеткізуіміз керек.

96
00:06:26,060 --> 00:06:27,380
Кейіннен s және i таңбасы дауысты дыбыстар жолында

97
00:06:27,380 --> 00:06:30,930
өтпелі жол екендігін тексеріп алуымыз қажет.

98
00:06:31,930 --> 00:06:34,930
i таңбасына аталған шарт бірінші қолданатындығын
байқауға болады.

99
00:06:34,930 --> 00:06:37,440
Біз i таңбасы ұзындықтан қысқа екендігіне 

100
00:06:37,440 --> 00:06:42,810
I позициясына жолды  енгізер алдында
көз жеткізуіміз керек.

101
00:06:42,810 --> 00:06:48,000
Пайсон  бағдарламалау тілінің салыстыру амалдары 
және командалары баяу дамыған

102
00:06:48,000 --> 00:06:53,540
егер бірінші операнд қате берілсе,
екіншісі саналмайды.

103
00:06:53,540 --> 00:07:00,140
Бұл егер i жолдың ұзындығына қарағанда 
қысқа болмаса, бұл орайда N қате болып есептелінеді

104
00:07:00,140 --> 00:07:05,180
және біз жолды i позициясына қоймаймыз.

105
00:07:07,360 --> 00:07:13,350
Бұл жағдайда үш дауыссыз көрсетіледі
 және ұзындықтан қысқа i амалы қате 

106
00:07:13,350 --> 00:07:18,410
болып есептелінген шартқа байлансыты 
тізбек сақталады.

107
00:07:18,410 --> 00:07:18,910
[ШУ]

108
00:07:21,460 --> 00:07:25,350
Басқа мәселе үшін кең тізбек жөніндегі мысалдарды 
қолданып көрейік.

109
00:07:26,860 --> 00:07:29,900
Біз дауысты дыбысқа байланысты қызметті
енгізетін боламыз.

110
00:07:29,900 --> 00:07:30,570
[ШУ]

111
00:07:30,570 --> 00:07:33,940
Оның бір жолдық параметрі бар 
және жолды қайтару амалдары да бар.

112
00:07:35,180 --> 00:07:38,280
Бұл s параметріндегі жолддың өтпелі жолын 
нөльдік индекстен жоғары шығару 

113
00:07:38,280 --> 00:07:42,660
амалын орындайды, бірақ оның ішіне 
бірінші дауысты дыбыс кірмейді.

114
00:07:43,850 --> 00:07:46,900
Ұяшықта келтірілген мысалдағыдай
 басып шығармас бұрын, біз өтпелі жолдардың санын көбейтіп

115
00:07:46,900 --> 00:07:51,100
оларды қайта орындамақпыз.

116
00:07:52,590 --> 00:07:55,630
Осы мәселені шешуде алдыңғы уақыттырда

117
00:07:55,630 --> 00:07:58,250
қолданған есептеуіш нұсқаны қолданатын боламыз.

118
00:07:58,250 --> 00:07:58,250
 [Дыбыс]

119
00:07:58,250 --> 00:08:02,260
Дауысты дыбыс алдындағы өзгерме 
бос жолға бағытталады және

120
00:08:02,260 --> 00:08:06,260
дауысты дыбыс алдындағы жолы
қайтару арқылы жол санын көбейтеміз.

121
00:08:07,820 --> 00:08:10,690
Біз қолданатын уақытша тізбектер

122
00:08:10,690 --> 00:08:13,450
алдыңғы уақытта қолданған тізбектің тура көшірмесі.

123
00:08:13,450 --> 00:08:18,270
Нөльдік позициядан бастап жолдағы таңбалардың барлығын
тізбекке енгізбекшіміз

124
00:08:18,270 --> 00:08:22,300
Біз бұл амалды дауысты дыбыс кездескенше
немесе жол бітіп қалмайынша жалғастыратын боламыз.

125
00:08:23,740 --> 00:08:26,080
Тізбек негізінің ішіне

126
00:08:26,080 --> 00:08:26,250
 [Дыбыс]

127
00:08:26,250 --> 00:08:29,290
дауысты дыбысты көбейту амалын қосамыз.

128
00:08:29,290 --> 00:08:29,290
 [Дыбыс]

129
00:08:29,290 --> 00:08:33,360
Дауысты дыбыс алдында, оның ағымдағы мәні мен

130
00:08:33,360 --> 00:08:37,060
s жолындағы i позициясында берілген
 таңба қосындысын аламыз.

131
00:08:38,280 --> 00:08:42,800
Келесі таңбаға көшу үшін

132
00:08:42,800 --> 00:08:45,270
біз индекске бірді қосу арқылы индекс бірлігін 
көбейтеміз.

133
00:08:46,340 --> 00:08:50,370
Осы қызметті орындап біткеннен кейін
өтпелі жол қайта орнына келеді

134
00:08:50,370 --> 00:08:52,900
Дауысты дыбыс қайта орнына келмейінше
бағдарламалық кодты енгізейік.

135
00:08:54,610 --> 00:08:55,960
Бұл қызметті 

136
00:08:59,280 --> 00:09:00,980
арнайы Митчелл бағдарламсынан
аламыз.

137
00:09:03,530 --> 00:09:06,410
Бірінші қызметті орындау арқылы h таңбасын аламыз.

138
00:09:07,900 --> 00:09:13,490
Екіншісінде , t h таңбаларын қайта орнына келтіру керек.

139
00:09:13,490 --> 00:09:16,440
Ал үшінші мысалда

140
00:09:16,440 --> 00:09:16,440
 [Дыбыс]

141
00:09:16,440 --> 00:09:21,170
Таңбадан тұратын мысалда, дауысты дыбыс жоқ, 

142
00:09:21,170 --> 00:09:21,170
 [Дыбыс]

143
00:09:21,170 --> 00:09:21,820
тек дауыссыз дыбыс берілген болса
жол толығымен қайтарылады.

144
00:09:24,140 --> 00:09:26,660
Жаңа қызметті енгізіп көрелік.

145
00:09:26,660 --> 00:09:31,520
Бұл қызметтің аты жауап алу деп аталады.

146
00:09:31,520 --> 00:09:35,490
Бұл қызмет ия немесе жоқ деп жауап беретін 
Сұрақтар қоюға  негізделген.

147
00:09:35,490 --> 00:09:39,000
Қолданушы жауап беруі тиіс.

148
00:09:39,000 --> 00:09:44,090
Біз оларға жауаптары ия немес жоқ болғанға дейін 
сұрақтар қоя береміз.

149
00:09:44,090 --> 00:09:49,330
Бұл бір реттен немесе екінші реттен
немесе 100 реттен кейін ғана, яғни
пайдаланушы дұрыс жауабын

150
00:09:49,330 --> 00:09:50,100
енгізбейінше
қайталанып, қолданысқа енеді.

151
00:09:51,210 --> 00:09:53,970
Соңында пайдаланушы енгізген жауабына қайта ораламыз.

152
00:09:55,750 --> 00:09:58,920
Бұл қызметті шақыруларды енгізуден бастайық,

153
00:09:58,920 --> 00:10:02,170
сонымен біз жауап алу үшін сұрақтар енгіземіз,

154
00:10:02,170 --> 00:10:04,710
содан кейін сұрақтардың нәтижесін 

155
00:10:05,840 --> 00:10:08,290
жауаптар ұяшығына енгіземіз.

156
00:10:11,520 --> 00:10:16,220
Пайдаланушыға қойылатын сұрақтарды 
жүзеге асыру жолдарын анықтайық.

157
00:10:16,220 --> 00:10:21,820
Y тізбегінің негізі жоғарыда көрсетілген 
кодтың көшірмесі болып табылады

158
00:10:21,820 --> 00:10:27,400
ол код бір сызықтан тұрады, 
және пайдаланушы сол код арқылы жасалынған
 сұрақтарға жауап береді.

159
00:10:30,530 --> 00:10:35,350
Өзімізге қажетті жауап алмайынша біз 

160
00:10:35,350 --> 00:10:40,840
пайдалаушыларға сұрақ қоюды жалғастырамыз.

161
00:10:40,840 --> 00:10:44,970
Жауап ия немесе жоқ  болса ғана сұрақ қоюды
 тоқтатамыз.

162
00:10:44,970 --> 00:10:46,380
Біз ия немесе жоқ деген жауап алдық.

163
00:10:47,900 --> 00:10:49,660
Соңына таман тізбек аяқталады, бір мезетте

164
00:10:49,660 --> 00:10:52,900
Тізбек орындалып болған соң аяқталды, жауап
қайтарылды.

165
00:10:56,410 --> 00:11:00,446
Сіз менің бұл жолдың ішіне
Ешқандай мысал шақырулар енгізбегенімді байқай аласыз.

166
00:11:00,446 --> 00:11:05,200
Себебі бұл қызметтің орындалуы
бұл пайдаланушының кірісінен шығады, және

167
00:11:05,200 --> 00:11:07,480
қандай функцияның қайтып келетінін алдын ала болжау мүмкін емес
себебі ол

168
00:11:07,480 --> 00:11:10,140
пайдаланушы қандай ақпарат енгізгеніне байланысты.

169
00:11:10,140 --> 00:11:12,660
Ал енді бұл амалды бастан аяқ қайталап шығайық

170
00:11:12,660 --> 00:11:14,620
Қалай жүзеге асатынын көру үшін, бұл біз

171
00:11:14,620 --> 00:11:16,990
күткендей жүзеге асты.

172
00:11:19,960 --> 00:11:20,460
шақыру,

173
00:11:20,460 --> 00:11:20,460
 [Дыбыс]

174
00:11:20,460 --> 00:11:25,356
жауап алу, мен сұрақ жіберемін,
және бізге сұрақтар қойылатын болады.

175
00:11:25,356 --> 00:11:29,052
Егер 

176
00:11:29,052 --> 00:11:34,391
жауап мүмкін болса,

177
00:11:34,391 --> 00:11:40,510
 біз

178
00:11:40,510 --> 00:11:40,535
 [Дыбыс]

179
00:11:40,535 --> 00:11:42,100
қайтадан жауап беруге тура келеді,

180
00:11:42,100 --> 00:11:42,320
 [Дыбыс]

181
00:11:42,320 --> 00:11:43,858
Бұл кеш болып қалды, сұрақ қайта қойылады.

182
00:11:43,858 --> 00:11:43,860
 [Дыбыс]

183
00:11:43,860 --> 00:11:54,560
Шын мәнінде, бізге сұрақ қайта қойылған жоқ.
Упс.

184
00:11:54,560 --> 00:11:59,440
Соңында егер мен «иә» деп жауап берсем
Функция қайтып келеді.

185
00:11:59,440 --> 00:12:00,850
Осы амалды қайта жасап көрейік.

186
00:12:04,530 --> 00:12:10,090
Бұл жолы  мен бірден жауап бермеймін, 
Сондықтан тізбектің негізі орындалмады, 

187
00:12:10,090 --> 00:12:13,480
себебі тізбектің шарты

188
00:12:13,480 --> 00:12:15,510
 «жоқ» функция арқылы қайта оралады.

189
00:12:16,770 --> 00:12:19,000
алғашқыда жасағандағыдай қате болып шығады.