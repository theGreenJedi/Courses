1
00:00:01,100 --> 00:00:05,944
برنامه هایی را که تاکنون نگاشته ایم به همان ترتیبی که نوشته شده توسط کامپیوتر پردازش میشود

2
00:00:05,944 --> 00:00:09,652
هر باری که آنها به جریان میافتند. در این مبحث،میخواهیم که

3
00:00:09,652 --> 00:00:13,420
از عبارات Boolean برای این که کنترل شود که کدام دستور کار پردازش شده استفاده کرد.

4
00:00:13,860 --> 00:00:18,823
به این مساله توجه کنیم.پروازی برنامه ریزی شده که 

5
00:00:18,823 --> 00:00:23,786
در زمان معینی برسد،و اکنون تخمین زده میشود که در زمان دیگری برسد.

6
00:00:23,786 --> 00:00:29,501
تابعی بنویسد که،با در دست داشتن این دو زمان،وضعیت پروازی را تحویل دهد که،یا سر موقع،

7
00:00:29,501 --> 00:00:34,384
زود هنگام یا با تاخیرباشد.برای این تابع،زمان

8
00:00:34,384 --> 00:00:41,375
با عدد اعشاری نشان داده میشود.مثلا،زمان سه صبح به صورت

9
00:00:41,375 --> 00:00:48,693
3.0 و زمان دوم چهارده ونیم بعداز ظهر با14.5

10
00:00:48,693 --> 00:00:53,285
بنابراین،هر کدام از این زمانها که با آن 

11
00:00:53,285 --> 00:01:05,080
کار میکنیم بین0.0 و 24.0 را شامل میشود نه 24.

12
00:01:05,480 --> 00:01:11,029
این را پیش شرط مینامیم.وقتی که تابع خود را مینویسیم انتظار میرود که

13
00:01:11,029 --> 00:01:14,280
زمان هایی که مطرح میشود در این فاصله باشند.

14
00:01:15,660 --> 00:01:21,475
تابع را تعریف میکنیم،با چند فراخوان مثالی تابع.

15
00:01:21,475 --> 00:01:24,820
میخواهم که این تابع را report status بنامم.

16
00:01:25,260 --> 00:01:29,312
و دو مولفه خواهد داشت،دو مولفه را بگیرید.

17
00:01:29,960 --> 00:01:36,363
اولی زمان برنامه ریزی شده رسیدن،و دومی زمان جدید

18
00:01:36,363 --> 00:01:41,550
تخمینی رسیدن.وقتی هر دو زمان یکی باشد،پیام

19
00:01:41,550 --> 00:01:48,034
سر وقت راتحویل میدهد.وقتی که زمان برنامه ریزی شده12.5 و

20
00:01:48,034 --> 00:01:54,600
زمان جدید تخمینی 11.5 یا زودتر باشد،این تابع زود تحویل میدهد.

21
00:01:55,420 --> 00:01:58,949
و،سرانجام برای آخرین وضع ممکن،

22
00:01:58,949 --> 00:02:06,473
وقتی که زمان 9.0 است،زمان برنامه ریزی شده و آنگاه تخمین میزنید که دیر شده،

23
00:02:06,473 --> 00:02:13,996
این تابع باید پیامی تحویل دهد که پرواز تاخیر دارد.

24
00:02:13,996 --> 00:02:17,623
اکنون،عنوان تابع را بنویسیم.

25
00:02:17,623 --> 00:02:23,238
تابع در همه موارد دو پارامتر عددی دارد،

26
00:02:23,238 --> 00:02:27,670
که اعداد اعشاری باشند.ولی میشد اعداد درست را داشت.

27
00:02:27,670 --> 00:02:30,773
پس میتوانیم که از دو پارامتر عددی

28
00:02:30,773 --> 00:02:35,280
استفاده کرد و چیزی که تحویل میدهد از نوع string باشد.

29
00:02:36,540 --> 00:02:41,015
زمان برای عنوان.میدانیم که تابع را

30
00:02:41,015 --> 00:02:46,957
Report status خوانده ایم و اکنون باید دو تا نام مناسب برای پارامترها انتخاب کنیم.

31
00:02:46,957 --> 00:02:50,507
اولی را ،scheduled time>

32
00:02:50,507 --> 00:03:04,130
و دومی راestimated time.آخرین قسمت doc string است که نیاز است 

33
00:03:04,130 --> 00:03:09,528
اضافه شود تشریح تابع است.این تابع وضعیت پرواز را تحویل میدهد،

34
00:03:09,528 --> 00:03:13,681
و آن یکی از سه string خواهد بود.سروموقع،زود و با تاخیر.

35
00:03:13,681 --> 00:03:19,087
وضعیت پرواز را تحویل میدهد که اولین پارامتر رسیدن طبق برنامه بود.

36
00:03:19,087 --> 00:03:22,713
اما اکنون در زمان تخمینی میرسد،

37
00:03:22,713 --> 00:03:25,680
که پارامتر دوم باشد.

38
00:03:25,680 --> 00:03:33,185
اطلاعاتی اضافی که نیاز است که به doc string افزوده شود

39
00:03:33,185 --> 00:03:39,318
آن است که پیش شرط آن است کهزمان برنامه ریزی شده بین 0.0و.24باشد.

40
00:03:39,318 --> 00:03:46,550
همین مطلب در مورد زمان تخمینی صحیح است.نیاز است که آن نیز در این دامنه قرار گیرد.

41
00:03:46,550 --> 00:03:55,000
.24و0.0

42
00:03:55,380 --> 00:03:58,799
اکنون زمان نوشتن بدنه تابع است.

43
00:03:58,799 --> 00:04:03,857
میخواهیم که بدنه این تابع را در دو مرحله مختلف بنویسیم.

44
00:04:03,857 --> 00:04:07,491
و سر انجام،کل ماجرا عمل میکند.

45
00:04:07,491 --> 00:04:13,261
برای شروع،باید بدانیم که چگونه بعضی از عبارات گاهی پردازش شده،ولی بعضی دیگر نشود.

46
00:04:13,261 --> 00:04:17,251
مثلا،میخواهیم که string سرموقع را تحویل دهیم.

47
00:04:17,251 --> 00:04:20,457
ولی نمیخواهیم که همیشه این طور شود

48
00:04:20,457 --> 00:04:26,370
تنها وقتی که زمان برنامه ریزی شده برابر با زمان تخمینی باشد.

49
00:04:26,370 --> 00:04:31,490
از عبارت if دار برای بیان مطلب استفاده میکنیم.

50
00:04:31,490 --> 00:04:35,688
این عبارت if دار شرط boolean را دارد

51
00:04:35,688 --> 00:04:42,160
که زمان برنامه ریزی شده برابر با زمان تخمینی باشد.

52
00:04:44,800 --> 00:04:50,022
و قصد داریم که این عبارت return را داخل بدنه چرخه if قرار دهیم.

53
00:04:50,022 --> 00:04:55,739
پس توجه داشته باشید که جلوآمدگی دارد،که این مطلب را نشان میدهد که،داخل عبارت if واقع میشود.

54
00:04:55,739 --> 00:05:01,244
روشی که این برنامه را میخوانیم این است که در صورتی که این زمان برنامه ریزی شده برابر با

55
00:05:01,244 --> 00:05:07,173
زمان تخمین زده شده باشد،در صورتی که آن عبارت منطقی درست باشد،آنگاه return در عبارت زمان پردازش میشود.

56
00:05:07,173 --> 00:05:10,560
در غیر این صورت،پردازش نمیشود،و ما

57
00:05:10,560 --> 00:05:14,654
با هر چه که این if را دنبال میکند ادامه میدهیم.

58
00:05:14,654 --> 00:05:23,288
این را ذخیره کرده و به جریان میاندازیم.پس وقتی که این تابع را فرامیخوانم،در shell

59
00:05:23,288 --> 00:05:28,690
با زمان های برابر وضعیت سر موقع را گزارش میکند.

60
00:05:28,690 --> 00:05:34,305
در صورتی که میتوانستم این تابع را در لحظه با یک زمان فراخوانم،جفت 

61
00:05:34,305 --> 00:05:38,000
زمانها که برابر نیستند،هیچ چیزی تحویل نمیدهد.

62
00:05:38,000 --> 00:05:43,746
بخواهیم که دقیق تر باشیم،در واقع باید بگویم که شبیه به این است که چیزی تحویل نمیدهد.

63
00:05:43,746 --> 00:05:49,420
زیرا چیزی که توسط این تابع تحویل داده میشود،با اینکه هیچ عبارت return 

64
00:05:49,420 --> 00:05:52,581
پردازش نشده است.این فراخوان تابع را چاپ کنیم.

65
00:05:52,581 --> 00:05:57,249
پس تابع فراخوانده میشود،هر مقداری که تحویل شود.

66
00:05:57,249 --> 00:06:02,565
و آن مقدار چاپ میشود.و میتوان دید که none چاپ میشود.

67
00:06:02,565 --> 00:06:08,239
وقتی که فراخوان تابعی پردازش میشود و هیچ عبارت return پردازش نشود،مقدار

68
00:06:08,239 --> 00:06:13,481
none  توسط تابع تحویل داده میشود.نوع none منحصر به خود none است نه string.

69
00:06:13,481 --> 00:06:19,224
بنابراین قرار تایپ را که برای گزارش وضع تابع تصریح کردیم ملغی میکند

70
00:06:19,224 --> 00:06:24,687
نیاز داریم که بقیه تابع را تکمیل کنیم تا اطمینان بدهد که قرار تایپ برقرار است.

71
00:06:24,687 --> 00:06:28,330
برگردیم به تعریف تابع.

72
00:06:28,330 --> 00:06:34,388
هم اکنون،یک عبارت if داریم و وقتی که این شرایط منطقی برقرار باشد،

73
00:06:34,388 --> 00:06:38,933
سر موقع تحویل میدهد.وقتی که شرط غلط در بیاید کار دیگری میخواهیم بکنیم.

74
00:06:38,933 --> 00:06:42,265
بنابراین کنترل میکنیم که اگر درست باشد،و

75
00:06:42,265 --> 00:06:47,642
میخواهیم که L را به جای else،و L if را برای کنترل شرط دومی.

76
00:06:47,642 --> 00:06:53,130
این بار قصد داریم که کنترل کنیم که

77
00:06:53,130 --> 00:06:59,269
آیا زمان برنامه ریزی شده بیش از زمان برنامه ریزی شده است یا نه.

78
00:06:59,269 --> 00:07:05,054
و وقتی که هست،زود را تحویل دهیم.

79
00:07:05,054 --> 00:07:13,640
و باید که دیکته آن مطابق با برنامه باشد.پس در این مرحله آن را به جریان اندازیم.

80
00:07:14,520 --> 00:07:21,514
و وقتی که این تابع را با زمانهای برابر فرامیخوانیم میگوید سر موقع.

81
00:07:21,514 --> 00:07:28,071
وقتی که آن را با زمان زودتری فرامیخوانیم،زود را گزارش میکند.

82
00:07:28,071 --> 00:07:34,410
اما هنوز،در این نقطه وقتی که آن را با زمانی دیرتر فرامیخوانیم

83
00:07:34,410 --> 00:07:37,877
none تحویل داده میشود.پس کارمان هنوز تمام نشده است.

84
00:07:37,877 --> 00:07:43,733
قصد داریم که قسمت سومی به عبارت if اضافه کنیم که عبارت else باشد.

85
00:07:43,733 --> 00:07:49,511
ٍElse بیان میدارد که اگر هیچ یک از شرایط یا عبارات مطرح شده درست نباشند،آنگاه

86
00:07:49,511 --> 00:07:53,133
این کار را بکن.بنابراین کنترل کرده ایم که آیا برابرند،

87
00:07:53,133 --> 00:07:59,528
بزرگتر است یا نه،و تنها چیزی که باقی میماند این است که زمان برنامه ریزی شده کمتر از زمان تخمینی است.

88
00:07:59,528 --> 00:08:02,764
در این موقعیت ،این تابع تاخیر را تحویل میدهد.

89
00:08:02,764 --> 00:08:08,217
پس میتوانیم که دوباره آن را به جریان اندازیم،

90
00:08:08,217 --> 00:08:15,442
همه شرایطمان را کنترل کنیم،وقتی که برابرند،وقتی که زودتر است،و وقتی که زمان تخمینی دیرتر است.

91
00:08:15,442 --> 00:08:20,260
اکنون گزارشهای مقتضی را داریم.

92
00:08:21,240 --> 00:08:26,400
میخواهم که چند جنبه عمومی عبارات if را توضیح بدهم.

93
00:08:26,400 --> 00:08:33,252
میتوانیم صفر یا بیشترL از عبارات if مرتبط با if داشته باشم و میتوانیم

94
00:08:33,252 --> 00:08:40,020
صفر یا بیشتر از عبارات else داشته باشیم،و else باید آخرین عبارت برای if باشد.

95
00:08:40,280 --> 00:08:45,728
وقتی که ما عبارت if با این عبارات متنوع را داریم،هر عبارتی را به ترتیب ارزیابی میکنیم.

96
00:08:45,728 --> 00:08:49,974
و برای اولین که درست ارزیابی یشود،

97
00:08:49,974 --> 00:08:54,502
بدنه آن،آن قسمت عبارت if پردازش میشود.

98
00:08:54,502 --> 00:08:58,677
بعد از آن که آن بدنه پردازش شود،عبارت if خاتمه مییابد.

99
00:08:58,677 --> 00:09:04,692
بنابراین خارج شده و روی برنامه ادامه مییابد که پایین آن میاید،بدون کنترل

100
00:09:04,692 --> 00:09:06,037
هیچ شرایط بیشتر.