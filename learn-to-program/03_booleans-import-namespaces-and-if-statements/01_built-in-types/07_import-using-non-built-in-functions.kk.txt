Питонда жүздеген функциялар бар. Олардың басым көпшілігі бірден қол жетімді емес. Негізінде, ол функциялар түрлі модульдерде сақталған, оларды қолдану үшін, бірінші, сіз оны Питонға жеткізуіңіз қажет. Тура солай, сіздің өзіңіздің де функцияларыңыз түрлі модульдерде сақтала алады. Біз сізге осыны triangle.pie үшбұрышы негізінде көрсете аламыз. Біз екінші функцияны үшбұрыштың ауданын табу арқылы анықтаймыз, егер де сізге үшбұрыштың үш қабырғасының мәні белгілі, алайда біктігі мен табаны берілмесе де есептей аласыз. Бұл жолы, үшбұрыштың аудынан Герон формуласын қолдана отыра шығарамыз, ол Герон формуласы деген атпен белгілі. Бұл формула жарты периметр мен үшбұрыштың үш қабырғасы арқылы шығарылады. S дегеніміз периметр,ал  s1, s2 және s3 үшбұрыштың үш қабырғасының ұзындықтары. Осы кодты жазу үшін бізге жарты периметрді есептеу керек. Ал бізде осынын орындайтын функция бар, triangle.pi-де анықталған. Сонымен қатар, бізге квадратты түбірді есептейтін функция қажет, ондай функция бар, алайда ол программа құрамында емес. Ол функция келесі бір math.pi деп аталатын файлда анықталған. Математика үшбұрыш дегеніміз тәрізді модуль. Ол өз атауында, математика модулі математикаға қатысты бірқатар функциядан тұрады. Функциялардың тізімін көру үшін, модульді иморттайық. Содан соң біз программадағы функцияны dir деп атаймыз. Біз квадратты түбір деп аталатын функция қол жетімді функциялар қатарында екенін кһреміз, 
енді біз көмек пен квадратты түбірді тереңірек ақпарат үшін іске қосамыз. Квадрат түбір жөнінде ақпарат сұратқанымызда, біз міндетті түрде оның математика модулінде екенін айқын етуіміз керек. Біз оны модуль атауын қолдана отыра жасаймыз, одан соң нүкте, содан соң функция атауы. Сосын ол бізге квадрат түбір функциясы жөнінде ақпарат береді. Енді біз функцияны жазуға даярмыз. Алғашқы қадам, функцияны шақыртудың бірнеше мысалдарын жазу болады. Оны жүзеге асыру үшін, біз мағыналы функция атауын ойлап табуымыз керек. Мен аудан сөзін геронмен қатар қолданамын, ол біз герон формуласын қолданып отырғанымызды білдіреді. Бұл функция үш қабырғаны қажет етеді, бұл жолы мен оны 6.0 қайта оралады деп күтемін. Біз екінші функция шақыртуын қосамыз, екінші мысал. Осы жолы, өз есептеуіш құралымды қолдана отыра, мен 27.731. 27.731 ұқсас жауап алуыңыз қажет деп есептеп отырмын. Мұнда бірнеше тағы да цифрлар болуы керек, мен нақты қандай екенін білмеймін, себебі Питон жуық шама арифметикасын қолданды. Алайда бұл маған біз жазып отырған функция дұрыс па дегенге жауап береді. Енді біз осы функция үшін шарттар тізімін жазамыз. Біз үш сан қолданамыз, бүтін сан болсын, бөлшек сан болсан, маңызды емес, нәтижесінже бөлшек сан аламыз. Енді біз функцияның жоғарғы бөлігін жазуға дайынбыз. def сөзі мен функция атауыннан бастаймыз. Сонымен бірге үш параметрлер, оларды мен қабырға1, қабырға2 және қабырға3 деп атамақшымын. Сонымен бірге, осы кезеңде біз сипаттама енгізе аламыз. Осы функция қабырға 1, қабырға2 және қабырға3 ұзындақтары ұзындақтары болатын үшбұрыш ауданына қайта оралады. Осы [ДАУЫССЫЗ]. тізбек аяқталған соң, біз функция негізіге көше аламыз. Формула жарты периметрді төрт түрлі рет қолданады. Нақтырақ, жарты периметрді бірдей мәнмен төрт түрлі рет қолданады. Біз оны бір рет шақыртып, нәтижесін айнымалыда сақтай аламыз. Біз айнымалыны жарты деп атап, содан соң жарты периметрді шақыртып, есептете аламыз, онда қабырға1, қабырға2 және қабырға3 мәндерін аргумент ретінде қолдансақ болады. Содан соң біз аудан есептеуге көше берсек болады. Аудан есептеген кезде біз квадрат түбір функциясын қолданамыз, ал квдрат түбір математика модулінде. Сонымен квадрат түбірге қол жеткізу үшін біз математика модулін импотрттауымыз қажет. Мен оны өзімнің файлымның басында жасаймын. Тек сонда ғана мен квадрат түбір функциясына қол жетикізе аламын. [Белгісіз] Аудан есептеу. Модуль атауын қолданушыдан квадрат түбірді шақыртамыз, нүкте, содан соң функция атауы, келесіге көшеміз. Жарты рет жарты азайту қабырға1 рет жарты азайту қабырға2 рет жарты азайту қабырға3. Осының нәтижесі функцияның шығарып беретін нәтижесіне тең. Соңында енді біз осы функцияны бірнеше рет шақырту арқылы сынақтан өткізе аламыз. Сонымен, мен осы терезешенің өлшемін өзгертейін деп отырмын, содан соң модульді іске қосамын. Содан соң біз оның жай ғана өлшемін өзгертіп, осы фукнция шақыртуды көшіріп, қайта қоямыз. Сонымен, алғашқы функция шақыртуы 6.0 деген нәтиже беруі керек, және солай болды. Және екінші мысал бізге осында бардай нәтиже беруі керек, ал негізінде ол бізге көбірек цифрлар беріп отыр. Мен сол нәтижені осында қолданбақпын. Сонымен, бұл біз күткеніміз. Бұл біз импорттай алатын тек Питон модульдері ғана емес. Сонымен қатар, біз өзіміз жазған модульді импорттай аламыз. Мысалы, егер де біз өзге модульде үшбұрыш функцияларымыздың бірін қолданғымыз келсе, біз үшбұрышты импорттасақ болар еді. Импортталған модуль, соны импорттаушы модульмен бірдей бағытта болуы керек.