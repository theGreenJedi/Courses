Сәлем. Бұл дәріс толығымен дұрыс және бұрыс мәндер жайында болмақ. Олар Булев мәндері деген атпен белгілі. Бұл сабақта біз Pythonның  булев, яғни логикалық типі мен Булев мәндеріне қолдана алатын операторларды зерттейміз. Алдыңға сабақтардың бірінде біз Pythonның арифметикалық операторларын қолданғанбыз, олар азайту сияқты.
Ал енді біз Pythonның салыстыру операторларының кейбірін қолданамыз. Мысалы, үш мәні мен төртті кісіін табу операторы үшін қолданып көрейік. Осы берілген есептелген кезде біз дұрыс немесе бұрыс мәнімізді қайта аламыз. Біз алатын мәт типі булев, яғни логикалық мән. Үш пен сегіздің жақсы жұбы. 
Үш сегізден үлкен бе деген сұрақ. Олай емес екені анық, сондықтан бұл берілген есептің жауабы бұрыс болады. Егер де сегіз үштен үлкен деп жазған болсаңыз, дұрыс деген жауап аласыз. Ал егер де  үш бүтін оннан бес үш бүтін оннан төрттен үлкен немесе тең деп берген болсақ. Бұл да дұрыс жауабын береді. Екі бүтін санды салыстырып көрелік, жеті мен жеті. Біз қазір қолданайын деп отырған амал, теңдік амалы екенін аңғарыңыз. Бізге бірдей екі белгі қолдану қажет, теңдік белгісі емес. Оған себеп теңдік белгісі меншіктеу амалында қолданылып қойды. Жеті жетіге тең. 
Жеті және жеті бүтін оннан нөлге қалай қарайсыз. Бүтін сан мен бөлшек сан. Ол да дұрыс. 
Енді айнымалы мәндерінің жұбын беріп көрейік. Х-ке жеті, ал Y-ке сегіз, енді біз бірдей теңдік амалын екі айнымалы амалы ұшін қолдана аламыз. Біріншіден, бі Х-тің мәнін іздейміз, ол жеті, ал Y-тің мәні сегіз және ол сегізбен салыстырылады. Келесі бір амал – теңсіздік амалы. Үштің төртеке тең емес пе екенін тексере аласыз, нәтижесінде жауап дұрыс. Питонда да үш логикалық амал бар, олар Булев мәндері мен Булев нәтижелеріне арналған. Біз қолданғалы отырған бірішні амал, ол амал емес біз айнымалы лдәрежесін жасайдан бастаймыз, оны 80 мәніне жүктейміз. Сонымен дәреже 80-ге тең. Ал енді дәреженің ең төмен немесе басқа екендігін тексеретін есеп жазайық. Дәреже 50-ге тең бе, әлде үлкен бе?
Нәтижесі дұрыс. Сол есепті біз амал емес, біз дәреже 50ге тең бе, әлде үлкен бе, соны тексермекпіз. Кезек, ол осы есеп толығымен істейді, сондықтан дәреже үлкен немесе тең 50ге есебінің бір бөлігі бірінші есептеліп, содан соң 
дұрыс жауабын береді Және оператор, яғни амал емес Дұрысқа қолданылады. Дұрыс емес деген, Бұрыс дегеніміз. және бұл біз қол жеткізген нәтиже. 
Ал енді біз осы оператор еместі тізбекте екі рет қолданамыз. Ол сол дұрыс емес пе деп сұрап, ол жай айтқанға тең, 
яғни дәреже 50ге тең немесе үлкен. Келесі, операторды қолданалық. Біріншіден, келесі бір 70 мәніне қатысты  дәреже2 деп аталатын айнымалыны алайық. Енді біз екеуінен де тұратын дәреже мен дәреже2 тұратын есеп берілгенін жазайық. Бұл есеп осының екеуі де төменгі дәреже ме екенін анықтаушы. Сонымен дәреже 50ден үлкен бе, әлде тең бе, және дәреже2  50ден үлкен бе тең бе. Нәтижесі дұрыс болады, егер екі амал да дұрыс болса. Сонымен, бірінші, берілген есеп шығарылды, жауабы дұрыс. Содан соң есеп есептелді, ол да дұрыс болып шықты, сонымен, толығымен нәтиже дұрыс болып шықты. Енді айнымалы дәреженің мәнін өзгертелік, және оны 40 деп алайық. Біз осы булев есебін қайта оралып, нәтижесінде неге қол жеткізгенімізді тексерейік. Себебі осы бірінші амал бұрыс, сондықтан Булев амалы да бұрыс. Сол себепті бізге екінші амалды тексерудің қажеті де жоқ. Дәрежені 80-ге төмендетіп көрейік, бұл жолы дәреже2-ні дәрежесіз етіп алайық. Осы амал есептелген кезде, біріншіден осы бөлігі есептеледі. Ол дұрыс, сонымен біз амалдың осы бөлігін есептеуге ауысамыз, ол бұрыс. Сонымен, амал бұрысқа есептейді. Жалпылай келгенде, дұрыс деген жауапты тек, егерде осы амалдың екеуі де дұрыс болған кезінде ғана шығарады. Не болмаса бұрыс деген нәтиже береді. Нәтижесінде, логикалық амал төртті қолданайық, ол да амалдырда жасауға қатысты. Біз дәреже2 дәрежеге меншіктеуден бастаймыз, екі төмендеуші дәрежелер. Енді алдындағыдай амалды жазамыз. Бұл амал дұрыс деп есептейді, егер кемінде бір амал дүрыс болса. Сол кезде бізде дұрыс жауабы шығады. Енді  дәрежеге  дәрежесізді берейік, сөйтіп амалды қайта орындап көрсек. Осы амалдың бірінші бөлігін есептеген сәтте мен оның жауабы бұрыс екенін анықтаймын. Сонымен біз амалдың екінші бөлігін есептеге көшеміз, ол дұрыс, себебі кемінде бір амалы дұрыс. Амал дұрыс жауабын шығарады. Егер де біз дәрежені төмендеуші дәрежеге және дәреже2 дәрежесізге берсек, есептелген кезде келесідегідей болады. Себебі дәреже дәреже төмендеуші, амал дұрыс деп есептеледі, 
тіпті, екінші амалға көңіл бөлмей-ақ анықтауға болады. Есептеп келгенде, Булев операторы немесе 
дұрысқа есептеуші егер де ол кемінде бір амалы дұрыс болған кезде және
керісінше бұрыс шығарады. Ал енді амалдарды жалғыз есепке жинайық. Мен дәреже мен дәреже2ні төмендеуші 80 және 90 мәндерін бердім. Енді мен осы берілгенді есептемекшімін. Содан соң үлкен емес дәреже немесе теңге қолдандым, яғни 50-ге, немесе дәреже2 50-ден үлкен немесе тең. Сонымен қатар, мұнда өзге бірнеше жолдар бар, солар арқылы осы амалды жүзеге асыра аламыз, 
бастылық кезегіне байланысты. Біріншісі қолданылған оператор болады. Мен жай жақшаны бұл оператор еместі белгілеу үшін қолданамын. Екіншісі оператор еместі бірінші қолдану есептің бірінші бөлігі үшін және 
содан соң оператор екінші қолданылады. Сонымен, алғашқы емес, соңынан еретін, немесе бірінші болымсыз соңынан. Енді осы берілген есепті шығарып, нәтижесін байқайық. Есепте қолданылған мән берілген есепті  дұрыс деп шығарып береді. Ал енді жәй жақшаны берілген екі амалдың қайсы бірінші қолданылатынын анықтау үшін қолданып көрейік. Біз жақшаны есептің бөлігіне қолданамыз. Немесе теріске шығарудан бұрын қолданылатынына кепіл береді. Осыны жүзеге асырған кезімізде нәтиже бұрыс болып шығады. 
Сонымен, біз жақшаны қалдырған кезде болатыны бұл емес, және ол басымдылықтың реті емес. Керісінше, үлкендеітің реті, бұрыс осы жерде байқап отырғанымыздай бірінші қолданылған. Немеседен кейін Логикалық амалдар үшін үлкендік реті бұрыс, содан кейін немесе. Және біз бірнеше логикалық операторлармен жұмыс істеген кезімізде есептің ішінде, біз жақшаны операторлар біз қалаған ретпен жасалып жатқанын қамтамассыз ету үшін. Үлкендік реті қандай екендігі жайында ойланбастан. Сонымен, жақшаны амалдар реті сіз қалағандай болуы .шін қолданамыз. Кей кезде біз жақшаны берілген есепті түсініктірек ету үшін қолданымыз. Мысалы, осы есепте, арифметикалық амалдар, Булев амалдарына қарағанда басымдылыққа ие
немесе логикалық амалдар. Сонымен, осы жақшалар қажетсіз. Алайда, біз оларды [БЕЛГІСІЗ] қатарына қосамыз. Керісінше, жақшаны қолданудан бас тартып, келесіге қол жеткізе аламыз. Бірақ кейбіреу үшін осыны оқып, түсіну қиынға соғар.