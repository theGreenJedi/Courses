1
00:00:00,090 --> 00:00:05,069
En este video, vamos a explorar cuando
se crean las variables, cuanto tiempo existen

2
00:00:05,069 --> 00:00:10,031
en la memoria del computador, y que pasa cuando
dos variables tienen el mismo nombre y

3
00:00:10,031 --> 00:00:14,073
dos funciones diferentes. Aquí, vemos la función convert to minutes,

4
00:00:14,073 --> 00:00:18,012
que hemos explorado en la función
de visualización de lectura.

5
00:00:18,012 --> 00:00:23,001
Hemos añadido la función convert to seconds,
que convierte un numero de horas a

6
00:00:23,001 --> 00:00:27,001
un número equivalente de segundos.
Convert to seconds hace su trabajo

7
00:00:27,001 --> 00:00:30,094
llamando a convert to minutes y luego
multiplicando el resultado por 60.

8
00:00:31,055 --> 00:00:39,013
Vamos a usar el visualizador para explorar esto.
Pasamos por las 2 definiciones de funciones

9
00:00:39,013 --> 00:00:44,003
y observamos que hay 2 objetos de
funcion aquí en la pila

10
00:00:44,003 --> 00:00:50,016
También convert to minutes refiere a una de
las funciones y convert the seconds refiere a la otra.

11
00:00:50,016 --> 00:00:54,071
Ahora, estamos a punto de ejecutar una sentencia de asignación.

12
00:00:54,071 --> 00:00:57,074
En el lado derecho de la sentencia de asignación

13
00:00:57,074 --> 00:01:02,085
está una llamada a función, y evaluaremos el primer argumento que se creará

14
00:01:02,085 --> 00:01:05,069
en la memoria del computador aquí en la pila.

15
00:01:05,069 --> 00:01:10,011
Vamos a obtener un marco para convertir
a segundos en la parte superior de la pila.

16
00:01:10,011 --> 00:01:14,098
Ese marco contendrá los la variable num hours
que se refieren al valor de dos.

17
00:01:18,031 --> 00:01:22,061
Vamos a dar un paso adelante a la primera línea
del cuerpo de la función.

18
00:01:22,061 --> 00:01:27,063
La primera línea en el cuerpo de convert to
seconds es una sentencia de asignación.

19
00:01:27,063 --> 00:01:32,006
Seguimos las reglas de siempre.
Evaluamos el lado derecho.

20
00:01:32,204 --> 00:01:37,060
Es una llamada de función y cuando
ejecutamos la llamada  de función, evaluamos

21
00:01:37,060 --> 00:01:40,097
el argumento num hours que produce en memoria
la dirección x3.

22
00:01:40,097 --> 00:01:46,019
Enviamos x3 a todos los parametros en convert
to minutes que también pasa a llamarse num hours.

23
00:01:46,019 --> 00:01:52,071
Hay dos variables llamadas num hours en la pila de llamadas.

24
00:01:52,071 --> 00:01:56,048
Una de ellas es en función de convertir a minutos

25
00:01:56,048 --> 00:02:00,038
y la otra es en función de convertir a segundos.

26
00:02:00,038 --> 00:02:05,612
Python mantiene estas dos funciones ejecutándose
en áreas separadas de la memoria para que no

27
00:02:05,612 --> 00:02:12,145
haya confusión sobre qué variable utilizar.
Vamos a dar un paso adelante en el cuerpo de

28
00:02:12,145 --> 00:02:14,847
esta función. Esta es una sentencia de asignación.

29
00:02:14,847 --> 00:02:20,200
En el lado derecho tenemos una expresión
num<u>hours 60 veces, pero ¿que num hours usamos?</u>

30
00:02:20,200 --> 00:02:24,170
Python siempre utiliza la variable en el marco

31
00:02:24,170 --> 00:02:29,006
que está  en la parte superior de la pila de llamadas.
La variable minutes no existe todavía y

32
00:02:29,006 --> 00:02:34,564
es debido a que la sentencia de asignación no ha terminado de ejecutarse y no hemos

33
00:02:34,564 --> 00:02:39,082
visto minutes antes de esto. Una vez que evaluamos 60 veces, tenemos 120,

34
00:02:39,082 --> 00:02:45,048
minutes es creada en el marco en la parte superior de la pila de llamadas.

35
00:02:45,048 --> 00:02:49,829
Esa es siempre la regla. Las variables se crean en el marco en la parte superior

36
00:02:49,829 --> 00:02:55,329
de la pila de llamadas. Vamos a ver que sucede.

37
00:02:55,329 --> 00:03:00,927
Ahora estamos a punto de retornar minutos, pero
¿a dónde?

38
00:03:00,927 --> 00:03:06,144
Tenemos dos posibles ubicaciones. La respuesta es siempre al marco justo debajo

39
00:03:06,144 --> 00:03:12,291
de la parte superior de la pila de llamadas. Esta llamada a la función se detuvo justo aquí,

40
00:03:12,291 --> 00:03:18,129
en la llamada a convert to minutes. Cuando se ejecuta la sentencia return,

41
00:03:18,129 --> 00:03:23,215
vemos que vamos a devolver 120 a quien haya llamado a esta función.

42
00:03:23,215 --> 00:03:28,640
Esto pasa mas abajo en esta línea como hemos explicado así que nos vamos a tomar

43
00:03:28,640 --> 00:03:34,495
la dirección de memoria de 120 y la guardamos en una nueva variable minutes que va a aparecer

44
00:03:34,495 --> 00:03:37,582
aquí abajo en la función convert to seconds.

45
00:03:37,582 --> 00:03:42,818
Este marco de pila está a punto de desaparecer
debido a que es uno de los efectos de

46
00:03:42,818 --> 00:03:46,648
la sentencia retorno. Borra el marco en la parte superior de la pila de llamadas,

47
00:03:46,648 --> 00:03:51,466
devolviendo el control a quien lo llamó.

48
00:03:51,466 --> 00:03:56,131
Ahí va.
Ahora, la variable minutes es creada,

49
00:03:56,131 --> 00:04:01,811
el primer valor 120 y estamos a punto de ejecutar otra sentencia de asignación.

50
00:04:01,811 --> 00:04:07,802
El lado derecho evalúa minutes 60 veces minutes para los primeros 120, por lo que

51
00:04:07,802 --> 00:04:14,366
terminamos con lo que es 60, 120 veces y la variable seconds se va a crear

52
00:04:14,366 --> 00:04:18,768
y se referirá a este nuevo valor. 
Ahí lo tenemos.

53
00:04:18,768 --> 00:04:25,668
Seconds, almacena la dirección de memoria x5, en
la dirección de memoria X5 está el valor 7.200

54
00:04:25,668 --> 00:04:29,611
Continuando, vamos a tener ese valor.

55
00:04:29,611 --> 00:04:34,454
Eso va a devolver el control a la línea veinte aquí.

56
00:04:34,454 --> 00:04:38,658
Únicamente, está terminando una llamada a convert
to seconds.

57
00:04:38,658 --> 00:04:44,462
Esto produce el valor de 7.200 y vamos a crear una variable seconds mas abajo

58
00:04:44,462 --> 00:04:48,966
en el módulo principal que se va a referir a ese valor.

59
00:04:48,966 --> 00:04:54,130
Nuestro primer valor seconds,  es ahora 7.200.
El marco es convert to seconds ya no está aquí

60
00:04:54,130 --> 00:05:00,859
ha sido borrado, cuando convert to minutes fue borrado, en el momento en que

61
00:05:00,859 --> 00:05:03,095
ejecutamos esta sentencia retorno.