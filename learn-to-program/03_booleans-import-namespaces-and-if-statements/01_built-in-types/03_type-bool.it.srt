1
00:00:02,310 --> 00:00:06,290
Ciao, questa lezione riguarda totalmente
i valori vero e falso,

2
00:00:06,290 --> 00:00:08,900
anche detti valori Booleani.

3
00:00:08,900 --> 00:00:11,700
In questa lezione esploriamo il
tipo bool

4
00:00:11,700 --> 00:00:15,040
di Python e gli operatori che possiamo applicare
ai valori Booleani.

5
00:00:17,770 --> 00:00:19,810
Prima abbiamo usato gli operatori aritmetici

6
00:00:19,810 --> 00:00:23,350
di Python come la moltiplicazione e
la sottrazione

7
00:00:23,350 --> 00:00:26,390
E ora andremo a usare qualcuno degli
operatori di paragone di Python.

8
00:00:27,400 --> 00:00:32,830
Ad esempio, confrontiamo i valori tre
e quattro usando l'operatore minore.

9
00:00:32,830 --> 00:00:35,560
Quando questa espressione viene valutata
otteniamo

10
00:00:35,560 --> 00:00:37,720
il valore vero o falso come ritorno.

11
00:00:38,810 --> 00:00:41,500
Il tipo del valore che otteniamo è il
tipo bool.

12
00:00:42,700 --> 00:00:46,750
Questa è una buona coppia di tre e otto.
Chiedendoti se tre sia maggiore di otto.

13
00:00:46,750 --> 00:00:51,950
E non è cos', quindi il valore a cui viene 
valutata questa espressione è falso.

14
00:00:51,950 --> 00:00:54,770
Quando valutate otto maggiore di tre,
si ottiene vero.

15
00:00:54,770 --> 00:00:57,343
E se dovessimo valutare tre punto

16
00:00:57,343 --> 00:01:01,400
cinque maggiore o uguale a tre punto
quattro.

17
00:01:01,400 --> 00:01:02,050
Anche questo è vero.

18
00:01:03,910 --> 00:01:07,560
Confrontiamo due interi, sette, sette.

19
00:01:07,560 --> 00:01:13,100
Notiamo che l'operazione che stiamo 
effettuando ora è l'uguaglianza.

20
00:01:13,100 --> 00:01:18,440
E, dobbiamo usare due segni di uguale, non
solo uno per significare l'uguaglianza.

21
00:01:18,440 --> 00:01:22,535
Questo perché l'uguale singolo viene già
usato per l'operazione di assegnazione.

22
00:01:22,535 --> 00:01:26,750
Sette è uguale a sette.
Cosa diciamo di sette e sette punto zero.

23
00:01:26,750 --> 00:01:31,730
Un tipo di operando int con un tipo di
operando float.

24
00:01:32,880 --> 00:01:38,973
Questo è anche vero.
Assegniamo una coppia di valori variabili.

25
00:01:38,973 --> 00:01:41,885
X riceve sette, Y riceve 8, e ora possiamo

26
00:01:41,885 --> 00:01:47,530
applicare lo stesso operatore di uguaglianza
ai due operandi variabili.

27
00:01:47,530 --> 00:01:52,574
Per prima cosa, controlliamo il valore a cui si
riferisce X, che è sette,

28
00:01:52,574 --> 00:01:57,710
e Y che si riferisce ad otto, e poi sette viene
confrontato con otto.

29
00:01:57,710 --> 00:02:00,310
Un altro operatore è quello di 
disuguaglianza.

30
00:02:00,310 --> 00:02:04,490
Puoi Controllare se tre è diverso da
quattro, ed è vero.

31
00:02:08,550 --> 00:02:11,942
Python possiede anche tre operatori logici,
che sono operatori 

32
00:02:11,942 --> 00:02:16,400
che vengono applicati ai valori Booleani, e
restituiscono valori Booleani.

33
00:02:16,400 --> 00:02:20,140
Il primo operatore logico che useremo
è l'operatore not, e

34
00:02:20,140 --> 00:02:24,560
inizieremo a creare una variabile grade,
e assegnarle il valore 80.

35
00:02:24,560 --> 00:02:26,460
Quindi grade fa riferimento ad 80.

36
00:02:26,460 --> 00:02:29,260
Ora, scriviamo un'espressione che controlli
per

37
00:02:29,260 --> 00:02:32,180
verificare se grade è un voto sufficiente per passare.

38
00:02:32,180 --> 00:02:33,767
grade è maggiore o uguale

39
00:02:33,767 --> 00:02:35,630
di 50?
Ed è vero.

40
00:02:36,710 --> 00:02:40,665
Applichiamo l'operatore not a quell'espressione
ora. Quindi andremo a 

41
00:02:40,665 --> 00:02:44,240
verificare per vedere se grade non è maggiore
o uguale a 50.

42
00:02:44,240 --> 00:02:47,807
L'ordine con cui questa espressione viene
valutata funzione

43
00:02:47,807 --> 00:02:51,113
da dentro a fuori, quindi la parte dell'espressione 

44
00:02:51,113 --> 00:02:53,897
grade maggiore o uguale a 50 viene

45
00:02:53,897 --> 00:02:58,650
valutata prima, e restituisce il valore
vero.

46
00:02:58,650 --> 00:03:01,580
E poi l'operatore not viene applicato a
True.

47
00:03:01,580 --> 00:03:05,520
Qualcosa che non è True è False, e questo
è il risultato che otteniamo.

48
00:03:05,520 --> 00:03:11,200
E si può applicare questo operatore not due
volte contemporaneamente.

49
00:03:12,410 --> 00:03:16,258
Dicendo quello ci si chiede se questo è
vero o no, che

50
00:03:16,258 --> 00:03:20,725
è semplicemente equivalente a dire, grade
è più grande o uguale a 50.

51
00:03:23,710 --> 00:03:26,490
Poi usiamo l'operatore and.

52
00:03:26,490 --> 00:03:31,530
Per prima cosa creiamo un'altra variabile
chiamata grade2 che fa riferimento al valore 70.

53
00:03:31,530 --> 00:03:35,520
E, ora scriveremo l'espressione che 
coinvolge entrambe le variabili grade e grade2.

54
00:03:35,520 --> 00:03:41,000
Questa espressione controllerà se entrambi
sono voti che permettono di passare.

55
00:03:41,000 --> 00:03:44,745
Quindi grado è maggiore o uguale a 50,

56
00:03:44,745 --> 00:03:49,290
ed è grade 2 anche maggiore o uguale a
50.

57
00:03:49,290 --> 00:03:54,750
E sarà vera se entrambi gli operandi sono
veri.

58
00:03:54,750 --> 00:04:00,720
Quindi per prima cosa, l'espressione viene
valutata ed è vero.

59
00:04:00,720 --> 00:04:04,400
Quindi, questa espressione viene valutata
ed è

60
00:04:04,400 --> 00:04:08,570
anche vero, rendendo l'intero risultato
un risultato vero.

61
00:04:08,570 --> 00:04:14,450
Cambiamo il valore della variabile grade
per un momento e impostiamolo

62
00:04:14,450 --> 00:04:15,346
a 40.

63
00:04:15,346 --> 00:04:19,350
Faremo girare di nuovo questa espressione
Booleana che coinvolge il grado

64
00:04:19,350 --> 00:04:21,990
e, e controlleremo per vedere cosa otteniamo.

65
00:04:23,160 --> 00:04:29,660
Dato che il primo operando è falso,
l'espressione Booleana è falsa.

66
00:04:29,660 --> 00:04:32,340
E non andiamo neanche a controllare il
valore del secondo operando.

67
00:04:33,660 --> 00:04:39,900
Ora impostiamo di nuovo grade ad 80, e questa
volta cambiamo grade2 ad un voto negativo.

68
00:04:41,130 --> 00:04:46,950
Quando questa espressione viene valutata, viene
valutata prima questa parte dell'espressione.

69
00:04:46,950 --> 00:04:48,882
Ed è vera, quindi andiamo avanti a

70
00:04:48,882 --> 00:04:52,560
valutare questa parte dell'espressione,
che è falsa.

71
00:04:52,560 --> 00:04:54,350
E quindi questa espressione risulta falsa.

72
00:04:56,990 --> 00:05:03,980
Per riassumere, e di nuovo, viene valutata
vera se entrambi gli operandi sono veri.

73
00:05:03,980 --> 00:05:05,230
Altrimenti viene valutata a falso.

74
00:05:07,860 --> 00:05:14,180
Infine, usiamo l'operatore logiro or che
si applica anch'esso a due operandi.

75
00:05:14,180 --> 00:05:20,090
Inizieremo assegnando a grade e grade 2,
due voti positivi.

76
00:05:20,090 --> 00:05:25,400
E ora scriveremo la stessa espressione di
prima, rimpiazzando l'and con l'or.

77
00:05:26,550 --> 00:05:31,400
Questa espressione viene valutata a vera se
almeno uno dei due operandi è vero.

78
00:05:32,540 --> 00:05:33,116
Quindi in questo

79
00:05:33,116 --> 00:05:35,220
caso, otteniamo vero.

80
00:05:35,220 --> 00:05:40,300
Ora assegniamo a grade un voto negativo
e valutiamo nuovamente l'espressione.

81
00:05:40,300 --> 00:05:42,444
Dato che valuterò prima la prima parte

82
00:05:42,444 --> 00:05:46,180
di questa espressione e vedrò che è falsa.

83
00:05:46,180 --> 00:05:49,100
Quindi andiamo a valutare la seconda parte

84
00:05:49,100 --> 00:05:53,670
dell'espressione che è vera e dato che almeno 
uno dei due operandi è vero,

85
00:05:53,670 --> 00:05:55,190
l'espressione viene valutata a vera.

86
00:05:56,210 --> 00:05:58,366
Se impostiamo grade ad un voto

87
00:05:58,366 --> 00:06:01,894
positivo e grade 2 ad un voto negativo, allora

88
00:06:01,894 --> 00:06:06,490
quando l'espressione viene valutata funzione
come segue.

89
00:06:06,490 --> 00:06:11,248
Dato che grade è un grado positivo
l'espressione viene valutata a vera a

90
00:06:11,248 --> 00:06:16,010
questo punto, senza nemmeno andare a
controllare il secondo operando.

91
00:06:18,110 --> 00:06:23,390
Quindi riassumendo velocemente, l'operatore
Booleano or risulta vero se almeno

92
00:06:23,390 --> 00:06:28,600
uno dei suoi operandi è vero e risulta
falso altrimenti.

93
00:06:31,740 --> 00:06:35,470
Ora combiniamo gli operatori in 
espressioni singole.

94
00:06:35,470 --> 00:06:40,130
Ho assegnato a grade e grade2 dei gradi
sufficienti di 80 e 90.

95
00:06:40,130 --> 00:06:42,615
E vorrei valutare questa espressione

96
00:06:42,615 --> 00:06:46,185
e poi applicare not a grade maggiore o
uguale

97
00:06:46,185 --> 00:06:49,915
a 50, o grade2 maggiore o uguale a
50.

98
00:06:49,915 --> 00:06:51,839
E c'è un paio di modi differenti in cui

99
00:06:51,839 --> 00:06:54,962
possiamo interpretare questa espressione,
a seconda dell'ordine di precedenza.

100
00:06:54,962 --> 00:06:56,860
Il primo operatore applicato deve

101
00:06:56,860 --> 00:06:58,134
 essere l'or.

102
00:06:58,134 --> 00:07:03,280
E userò delle parentesi per segnalarlo,
seguito dall'operatore not.

103
00:07:03,280 --> 00:07:07,592
Il secondo operatore ad essere applicato
dovrebbe essere il not alla prima

104
00:07:07,592 --> 00:07:12,160
parte dell'espressione e poi l'operatore
or applicato alla seconda.

105
00:07:12,160 --> 00:07:18,330
Quindi not per primo, seguito dall'or, l'or
primo seguito dal not.

106
00:07:21,090 --> 00:07:23,640
Valutiamo l'espressione, e vediamo
cosa accade.

107
00:07:28,450 --> 00:07:32,220
Il valore dell'espressione viene valutato a
vero.

108
00:07:32,220 --> 00:07:36,470
Usiamo le parentesi per vedere quale
dei due operatori viene applicato per primo.

109
00:07:38,040 --> 00:07:43,360
Inizieremo posizionando le parentesi
attorno alla parte dell'espressione con l'or,

110
00:07:43,360 --> 00:07:48,990
assicurandoci che la parte con l'or venga applicata 
prima del not, e otteniamo un risultato falso.

111
00:07:48,990 --> 00:07:51,150
Quindi, non è ciò che è successo quando

112
00:07:51,150 --> 00:07:53,550
l'abbiamo lasciata senza parentesi, il che significa
che che non

113
00:07:53,550 --> 00:07:55,610
è l'ordine di precedenza.

114
00:07:55,610 --> 00:08:02,060
Invece l'ordine di precedenza è che il not venga 
applicato prima come posso mostrare qui.

115
00:08:02,060 --> 00:08:03,120
Seguito dall'or.

116
00:08:03,120 --> 00:08:10,460
L'ordine di precedenza per gli
operatori logici è not e and poi or.

117
00:08:10,460 --> 00:08:14,604
E quando stiamo lavorando con degli
operatori logici multipli all'interno di

118
00:08:14,604 --> 00:08:18,748
un'espressione, possiamo usare le parentesi per
assicurarci che le operazioni

119
00:08:18,748 --> 00:08:21,480
vengano effettuate nell'ordine che vogliamo,

120
00:08:21,480 --> 00:08:24,480
Senza doverci preoccupare di quale sia
l'ordine di precedenza.

121
00:08:24,480 --> 00:08:26,368
Quindi usate le parentesi per stabilire l'ordine

122
00:08:26,368 --> 00:08:28,620
in cui vengono svolte le operazioni secondo
cosa volete fare.

123
00:08:30,310 --> 00:08:33,910
In alcuni casi useremo le parentesi per rendere 
un'espressione più leggibile.

124
00:08:33,910 --> 00:08:37,886
Per esempio, nell'espressione,
gli operatori aritmetici hanno

125
00:08:37,886 --> 00:08:42,480
una precedenza più alta degli operatori
Booleani, o degli operatori logici.

126
00:08:42,480 --> 00:08:45,560
Quindi le parentesi non sono necessarie.

127
00:08:45,560 --> 00:08:46,548
Ma le includiamo per

128
00:08:46,548 --> 00:08:47,030
[SCONOSCIUTO].

129
00:08:47,030 --> 00:08:52,950
Invece avremmo potuto lasciare senza le
parentesi e avremmo avuto la seguente.

130
00:08:52,950 --> 00:08:55,480
Ma qualcuno può trovare un po' difficile
leggerlo e capirlo.