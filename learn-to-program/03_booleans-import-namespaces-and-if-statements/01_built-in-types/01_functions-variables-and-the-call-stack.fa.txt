در این ویدئو میخواهیم تحقیق کنیم که متغیرها درست میشوند،چه مدت در در حافظه کامپیوتر باقی میمانند،و وقتی که دو متغیر یک نام دارند و دو تابع مختلف. اینجا توابع convert to minutes که در درس تجسم تابع در موردش تحقیق کردیم. تابع convert to seconds که تعداد ساعات را به ثانیه تبدیل میکند. برای تبدیل به ثانیه با فراخوانی convert to minutes و آنگاه ضرب کردن نتیجه در 60 عمل میکنیم. برای تحقیق از مجسم ساز استفاده میکنیم. به سرعت به تعاریف تابع رجوع میکنیم که سوژه های تابع به وجود آیند.convert to minutes برای [معلوم نشد] یکی از این سوژه های تابع،و برای اولین تبدیل ثانیه به دیگر. اکنون در مرحله پردازش عبارت تکلیفی هستیم. اولین قدم ارزیابی سمت راست که فراخوان تابع هست میباشد. پایتون اول کار مولفه را ارزیابی کرده و برای آن مقدار سوژه ای را به وجود میاورد. آنگاه،ifound چارچوبی را در call stack به وجود میاورد و آدرس های حافظه دو پارامتر را ذخیره میکند، [قابل شنیدن نیست] محض یادآوری،این ناحیه call stack خوانده میشود. به صورت دسته چارچوب های واژگون نشان داده شده است. در جریان پردازش فراخوانی تابع stack frame ایجاد میشود. وقتی که تابع خارج میشود stack frame جاری حذف میشود. و پردازش تابع قبلی ادامه مییابد. اولین سطر در بدنه convert_to_seconds عبارت تکلیفی دیگری است. سمت راست فراخوان تابع است. قوانین همیشگی را دنبال کرده، مولفه را ارزیابی کنید،nun_hours که آدرس حافظه مقدار دو را دارد. آنگاه،شکل stack برای فراخوان convert_to_minutes ایجاد میشود، و پارامتر آن،mem_hours،آدرس حافظه آن مقدار را دارد. دو متغیر به نام mem_hours هست. یکی از آنها برای فراخوان convert_to_minutes در چارچوب است،و یکی از آنها برای فراخوان convert_to_secondدر چارچوب است. پایتون این دو تابع در جریان را در مناطق جداگانه ای از حافظه نگه میدارد بنابراین دودل نمیشود که از کدام متغیر استفاده کند. برگردیم به ردیابی پردازش. اولین سطر در بدنه convert the minutes یک وضعیت تکلیفی است. سمت راست عبارت x 60 است. از کدام num_hours استفاده میکنیم؟ جواب این است که پایتون در stack frame جاری نظر میکند. num_hours به دو عدد 60و120 برمیگردد دومین قدم تکلیف تعیین120 است برای متغیر minuites. اگر minutes در stack frame جاری وجود نداشته باشد آنگاه ایجاد میشود. هر stack frame مجموعه متغیرهای خودش را دارد. در چارچوب convert to minutes متغیرهای num hoursو minutes وجود دارند. چارچوب برای convert to seconds در حال حاضر تنها متغیر num hours را دارد. گرچه، بعد از پایان پردازش،هم minutes و هم seconds را خواهد داشت. stack frame برای برنامه اصلی در حال حاضر دارای convert_to_minutes وconvert_to_seconds است. گر چه با عبارت تکلیفی سطر 20 پردازش انجام یافته است، متغیر seconds آنجا وجود دارد. اکنون در مرحله ای قرار داریم که مقدار متغیر minutes را تحویل داده و از تابع جاری خارج شویم. ولی به کجا برمیگردیم؟ پاسخ همیشه این است که،به چارچوب بعدی در call stack. stack frame جاری در جریان فراخوانی convert_to_minutes ایجاد میشود. وقتی این فراخوانی کامل شود،stack frame جاری پاک میشود و پایتون مقدار تحویلیش مقدار این تابع عبارت فراخوان شده است. این فراخوان در سمت راست عبارت تکلیفی است. برای تکمیل متغیر تکلیفی  minutes ایجاد میشود،و پایتون آدرس حافظه مقدار تحویلی را ذخیره خواهد کرد. تماشا کنیم که چگونه پیش میرود. توجه کنید که چارچوب convert to minutes حذف شده است،و متغیر minutes در چارچوب برای convert to seconds ایجاد شده است. اینجا عبارت تکلیفی دیگری داریم. سمت راست،minutes ضربدر 60،میشود120 ضربدر 60. و متغیر جدید seconds درست میشود، و آدرس حافظه مقدار جدید را دارد. بعد seconds را تحویل میدهیم، seconds 7200 است و این مقداری است که با فراخواندن convert to seconds در سطر 20 درست میشود. [BLANK_AUDIO]