پایتون صدها و صدها تابع دارد. بیشترشان همچون توابع فابریک بلافاصله در دسترس نیستند. در عوض،توابع در برنامه های گوناگون ذخیره شده اند،و شما نیاز است که به پایتون بگویید که دوست دارید از آنها استفاده کنید. همین طور،امکان دارد تابع های خودتان نیز در برنامه های گوناگون ذخیره شده باشد. با مثال triangle.pie خودمان موضوع را با مثال تشریح میکنیم. تابع دومی را تعریف میکنیم که مساحت مثلث با آن حساب شود، برای وقتی که طول سه ضلع معلوم باشد ولی قاعده و ارتفاع نا معلوم. این بار،سطح مثلث را را با دستور هرون ،که فرمول هرون نیز خوانده میشود،محاسبه میکنیم. فرمول هم با نصف پیرامون و هم طول سه ضلع درگیر است. S نیم محیط ،S1وS2وS3 طول اضلاع مثلث هستند. برای نوشتن این برنامه،نیاز به محاسبه نیم محیط است. و از قبل تابعی داریم که این کار را انجام دهد،که در triangle.pi تعریف شده است. و نیز نیاز به تابعی داریم که جذررا محاسبه کند، و چنین تابعی وجود دارد،ولی این فاکتور فابریک نیست. در عوض،در فایل دیگری به نام math.pi تعریف شده است. Math مانند triangle برنامه ای است. همان طور که نامش گویا است،برنامهmath شامل توابع گوناگونی در ارتباط با ریاضی را شامل میشود. برای مشاهده صورت توابع،تابع را وارد میکنیم تا به آنها دسیترسی پیدا کنیم. و آنگاه تابع فابریک dir r را فرا میخوانیم. میبینیم که در میان توابع در دسترس تابعی موسوم به square rootوجود دارد،و میتوانیم help را به جریان بیاندازیم و اطلاعات بیشتری در مورد آن به دست آوریم. وقتی که دنبال اطلاعات در مورد square root میگردیم،باید تصریح کنیم که آن برنامه Mathاست. این کار را با به کار بردن نام برنامه،بعد یک نقطه،بعد نام تابع انجام میدهیم. و آآن اطلاعات مربوط به تابع square root را به ما میدهد. اکنون،آماده ایم که تابع را بنویسیم. اولین قدم نوشتن دو فراخوانی مثالی است. و برای به انجام رساندن آن،باید نام گذاری پرمعنی برای تابع داشته باشیم. از area به همراه hero استفاده میکنیم که نشان دهد از فرمول hero استفاده میکنیم. این تابع سه ضلع را گرفته،و در این مورد، انتظار دارم که 6.0 را تحویل بدهد. فراخوان دومی هم اضافه میکنم،مثال دوم. و در این مورد،با استفاده از ماشین حساب،دریافته ام که باید عددی چون 27.731 را تحویل بگیرید. ارقام بیشتری خواهد بود،و دقیقا نمیدانم که چند است،زیرا پایتون از ریاضی اعداد اعشاری استفاده میکند. اما این موضوع به من این حس را میدهد که آیا تابعی که مینویسیم درست هست یا نه. اکنون،قرارداد تایپ برای این تابع را تامین میکنیم. سه عدد،خواه عدد صحیح یا عدد اعشاری را تحویل گرفته و یک عدد اعشاری تحویل میدهد. اکنون آماده ایم که عنوان تابع را اضافه کنیم. با کلمه def شروع کرده و بعد نام تابع. همراه با سه پارامتر،که میخواهم آنها را side1,side2,side3مینامم. و در این مرحله،میتوانیم توضیحات را اضافه کنیم. این تابع به سطح مثلث با طول اضلاع side1,side2,side3 ارجاع دارد. ب [INAUDIBLE] اکنون میتوانیم روی بدنه تابع کار کنیم. فرمول از نیم محیط چهار بار استفاده میکند. و به جای اینکه نیم محیط را با همان مولفه چهار بار مختلف فراخواند میتوانیم که یکبار آن را فراخوانیم و نتایج در متغیری ضبط کنیم. آن متغیر را semi مینامم،و آن گاه نیم محیط را یکبار برای محاسبه آن، با side1,side2,side3 به عنوان مولفه فرامیخوانیم. آنگاه میتوانیم سطح را محاسبه کنیم. وقتی که سطح را محاسبه میکنیم،میتوانیم از تابع squre rootاستفاده کنیم که در برنامه Math قرار دارد. بنابراین برای دسترسی به square root برنامه Math را صادر کنم. این کار را در بالای فایلم انجام میدهم. و آنگاه به تابع square root دسترسی دارم. [معلوم نشد] برای محاسبه سطح square root را با استفاده ازمدل نام نقطه و نام تابع فرامیخوانیم و آنچه را که پشت سر میاید را عبور میدهیم. .(semi.(semi-side1 .(semi-side3).(semi-side2) و آن سطح چیزی است که این تابع تحویل میدهد. سرانجام،نیاز است که دو دفعه ای برای آزمایش با فراخواندن تابع آن را بیازماییم. بنابراین،میخواهم که اندازه واین پنجره را تغییر دهم،و برنامه را به جریان بیاندازم. آنگاه اندازه این را عوض میکنیم،و این فراخوان توابع را copy ,paste میکنیم. بنابراین اولین فراخوان تابع 6.0 را تحویل میدهد. و مثال دومی چیزی شبیه به آنچه که آنجا داشتیم، و در واقع ارقام بیشتری تحویل میدهد. به جای آن میخواهم در اینجا از آن نتیجه استفاده کنم. پس آن چیزی است که انتظار داریم به دست آوریم. این تنها برنامه های پایتون نیست که میتوانیم وارد کنیم. همچنین میتوانیم برنامه ای را که نوشتیم وارد کنیم. مثلا،اگر میخواستیم که یکی از توابع مثلث را در برنامه ای دیگر به کار بریم میتوانستیم triangle را وارد کنیم. برنامه ای که میخواهد وارد شود باید دربرنامه  همان directory باشد که دارد وارد میکند.