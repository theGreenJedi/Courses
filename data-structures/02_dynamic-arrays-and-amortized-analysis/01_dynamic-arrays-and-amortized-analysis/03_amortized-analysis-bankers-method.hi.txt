इस वीडियो में, हम बात करेंगे अमॉर्टिजेड एनालिसिस करने के दूसरे तरीके के बारे में, जिसे हम कहते है बैंकर मेथड. यहाँ उपाय यह है कि हम अतिरिक्त चार्ज करेंगे हर सस्ते आपरेशन के लिए . तो यह उसी उदाहरण की तरह है जिसमे, हमने देखा कार के लिए पैसे बचाने का तरीका. यहाँ हम उस $100 को लेगे औरे बैंक में रख देंगे. और उसके बाद हम उन बदलाव को कही एकत्रित कर लेते है, बैंक के केस में हम उसे बैंक में डाल देंगे. हमारे केस में हम इसे अपने डाटा स्ट्रक्चर में सेव करते है. हम वास्तव में अपना कोड बदल नहीं रहे है, हम बस इसकी जांच कर रहे है. लेकिन बुनियादी तौर पर हम सोच रहे हैं डालने की अपनी बचाई हुई एक्स्ट्रा कॉस्ट एक टोकन के रूप में, हमारे डाटा स्ट्रक्चर में ताकि बाद में हम ऑपरेशनज़ का खर्च चुका सके. ज्यादा जानने के लिए हम एक उदाहरण देखते है. तो यह एक तरह का अमोर्टिज़िंग लोन की तरह है या अभी के लिए हम बात करते है उसके बारे में जहाँ हम सेव करते है $100 हर महीन , $6000 की कार के लिए, क्योंकि हमें पता है कि हमारी कार ख़राब होने / बदलवाने वाली है. आइये हम देखते है उसी उदाहरण को जहाँ हमारे पास एक डायनामिक ऐरे है और n कॉल्स push back के लिए, खाली ऐरे से शुरुआत कर के, ठीक है? विचार यह है कि हम चार्ज करेंगे 3 हर एक इंसर्शन के लिए. तो हर एक पुश बैक के लिए हम 3 चार्ज करेंगे . एक है रॉ कॉस्ट वास्तव में ऐरे में यह नया आइटम लाने के लिए और बाकि के दो सेव कर दिए जायेंगे. तो हमें रिसाइज करना होगा ताकि हम चलित हुए एलिमेंट्स के लिए पे कर पाए, हम पे करने के लिए टोकन का इश्तेमाल करेंगे 
जिसको हमने पहले से बचा कर रखा हुआ है. और तब, फिर हम एक टोकन रख देंगे जब हम अपनी आइटम जोड़ चुकें होंगे. 1 टोकन आइटम ऐड करने के लिए और 1 टोकन एक आइटम पर इससे पहले ऐरे में, ठीक है? यह आसान हो जायेगा जब हम एक उदाहरण देखेंगे. एक उदाहरण देखते है हमारे पास एक खाली ऐरे है. और हम साइज जीरो और कैपेसिटी जीरो से स्टार्ट करने जा रहे है हम पुश बैक (a) करते है तो क्या होगा ? ठीक है तो हमें एक ऐरे बनाना होगा, 
साइज 1 का उसको पॉइंट करते हुए तब हम a को ऐरे में रखेंगे. और अब हम जा रहे है a पर एक टोकन रखने और इसी टोकन को हम इस्तेमाल करेंगे पे करने के लिए जब हमें a को मूव करना होगा. इस उदाहरण के लिए सबसे पहले एलिमेंट के लिए कोई और एलिमेंट नहीं है जिसके लिए टोकन रखा जा सके. तो इसलिये हम तीसरा टोकन बेकार करने जा रहे है. हम b को उसमे push करते है, ठीक है? a के लिए कोई जगह नहीं है इसलिये
 हमें एक बड़ा ऐरे बनाना होगा और फिर a को उसमे डालना होगा. a को हटाने का कॉस्ट हम कैसे पे करेंगे? अच्छा तो उस टोकन की मदद से जो अभी भी उसके ऊपर है. तो हमने इस a को हटाने की पेमेंट की थी, ठीक? वास्तव में जब शुरुआत में हमने a को ऐरे में डाला था, तभी हमने उसपर एक टोकन रख दिया था जो इसके लिए नयी एरे में मूव करने के लिए पे करे. तो ऐसे हम a को मूव करने के लिए कॉस्ट चुकाते है और तब हम ऐरे को अपडेट करते है, पुराने वाले को डिलीट करते है, और अब उसमे b डालते है. इसलिये हम बी को एक की कोस्ट पर डालते है, हमारे पास भुगतान करने के लिए 2 और टोकन है. तो हम b के ऊपर एक डालते है और हम डालेंगे 1 कैपेसिटी दो के ऊपर. वह एक एलिमेंट पहले है, तो हम एक डालेंगे b पर इसलिये हमने अब तक3 खर्च कर दिया. एक वास्तविक भुगतान के लिए और दो स्थगित भुगतान के लिए जो बाद में हम टोकन के रूप में इस्तेमाल करेंगे. याद रहे कि ये टोकंनस स्टोर नहीं किये जाते. वास्तव में ऐरे में कुछ नहीं होता. ये सारी बातें चीजो को आसान बनाने के लिए है जिससे हम आसानी से इनका अध्ययन कर सके जब आप c push करोगे, हमे एक नया ऐरे बनाना पड़ेगा. हम a पर कॉपी करते है हमारे भुगतान किये हुए टोकन से. हम b पर कॉपी करते है हमारे भुगतान किये हुए टोकन से. और अब हम c को पुश करते है. यह एक है, दूसरा भुगतान जो हमें करना है वो है, c पर एक टोकन रखना और उसके बाद a पर एक टोकन रखना. चार भाग दो, यह है कैपेसिटी भाग 2, है दो एलिमेंट्स पहले. हम d को पुश करते है, हमें कोई बदलाव नहीं करना होता ऐरे के आकार में. हम सिर्फ d को ऐरे में डाल देते है 1 के भुगतान पर. उसके बाद, हम d पर एक टोकन रख देते है. तीसरा, हम टोकन कपैसिटी डालते है 2 पर या उससे 2 एलिमेंट्स पहले. तो देखें कि हमारे पास एक पूरा ऐरे है और हर एलिमेंट के ऊपर एक टोकन है इसका मतलब है कि हमें आकार बदलना होगा, 
और हमने हर उस गति विधि के लिए तैयारी कर ली है. अतः हम e को पुश करते है और एक नया ऐरे बनाते है. अब हम पहले से पेड़ टोकनज़ का इस्तेमाल कर a ,b ,c और d को आगे पीछे करते है पुराने ऐरे को हटायें और इ को पुश इन करते है. फिर से, एक टोकन रखते है e पर और a पर. तो अब यहाँ हमारे पास है order 1 कॉस्ट हर एक push-back का. और वास्तव में हमारे पास 3 की कोस्ट है, ठीक? तो हमें साफ़ दिख रहा है. वापस हम यह देखते है कि हमने यह कैसे किया. इस डायनामिक ऐरे के लिए हमने फैसला किया है कि 
हमें भरपाई करना होगा 3 का, और दूसरे- डाटा स्ट्रक्चर के लिए भी हमें दूसरा राशी चार्ज नहीं करना होगा. हमें पर्याप्त तरीक़ा भी ढूँढना था, हमारे लिए 3 पर्याप्त था और हमने यह भी सोचा कि हम आगे जायेंगे और जमा करो इन टोकंस को वैसे एलिमेंट्स पर जहाँ इनकी ज़रूरत है. इस तरह से हमें यह पता रहेगा की हमने कौन से काम को सेव कर लिया है. या जो प्रीपेड काम हमने किया है. तो हम भुगतान करते है 3 का, 1 भुगतान होगा इंसर्शन के लिए. अगर हमें रिसाईज करना हुआ, तो हमने ऐसे सजाया है जिससे जब भी ऐरे भर जाये, तो ऐरे फुल होने के लिए, हमारे पास पर्याप्त पुशबैक होना चाहिए जिससे कि हर एक एलिमेंट को एक टोकन मिल जाये. हर एक नया वाला जो हमने जोड़ा है पिछले रिसाईज के बाद, ऊपर से हर बार जब भी हम कोई नया वाला जोड़ते है हम एक और एलिमेंट के लिए पहले से भुगतान कर चुके होते है इसलिये हम भुगतान करते है एक इंसर्शन के लिए, 
हम भुगतान करते है एक एलिमेंट लिखने के लिए और हम एक भुगतान करते है पहले एक बड्डी एलिमेंट के लिए. अगले वीडियो में हम देखेंगे तीसरा तरीक़ा अमॉर्टाइज़्ड एनालिसिस करने का. जिसका नाम है फिजिसिस्ट मेथड.