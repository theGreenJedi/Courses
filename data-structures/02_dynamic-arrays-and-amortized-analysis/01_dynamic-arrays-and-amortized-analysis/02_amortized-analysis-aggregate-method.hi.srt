1
00:00:00,310 --> 00:00:03,430
तो, अब हम चर्चा करेंगे कि अमोर्टिज़ेड एनालिसिस क्या है और

2
00:00:03,430 --> 00:00:05,900
देखेंगे एक ख़ास तरीक़ा, इस एनालिसिस को करने का

3
00:00:07,280 --> 00:00:12,410
कभी कभी, हम एक वर्स्ट केस कोे देखते है और यह बहुत बुरा हो सकता है.

4
00:00:12,410 --> 00:00:16,670
खास कर हम जानना चाहते है कुल वर्स्ट केस

5
00:00:16,670 --> 00:00:21,020
ऑपरेशन्स के एक क्रम के लिए और हो सकता है कि इनमे से कुछ ऑपरेशन्स सस्ते हो

6
00:00:21,020 --> 00:00:23,680
जबकि उनमें से सिर्फ कुछ ही बहुत महेंगे हैं.

7
00:00:23,680 --> 00:00:26,390
तो अगर हम किसी भी एक के वर्स्ट केस को देखे और

8
00:00:26,390 --> 00:00:30,810
उसे कुल जमा / टोटल से गुना कर दे, 
वह बढ़ा चढ़ा कुल कॉस्ट हो सकता है.

9
00:00:32,210 --> 00:00:36,830
जैसे कि उदाहरण के लिए, एक डायनामिक ऐरे के लिए, हम बहुत बार साइज बदलते है.

10
00:00:36,830 --> 00:00:40,990
अक्सर, हम एक कांस्टेंट टाइम आपरेशन करते है, एलिमेंट्स को जोड़ना.

11
00:00:40,990 --> 00:00:45,290
हम पूरी क्षमता पर पहुँचकर ही उसको रिसाइज़ करते है.

12
00:00:45,290 --> 00:00:48,890
सवाल यह है कि, पूरा कॉस्ट क्या होगा अगर हमें बहुत सारा एलिमेंट्स समूह जोड़ना है?

13
00:00:51,730 --> 00:00:53,610
तो यहाँ हैं अमोर्टिज़ड कॉस्ट की परिभाषा.

14
00:00:53,610 --> 00:00:56,520
आपके पास n ऑपरेशन्स का एक क्रमांक है,

15
00:00:56,520 --> 00:01:00,920
अमोर्टिज़ेड कॉस्ट है उन सभी ऑपरेशन्स का कॉस्ट n से भाग दिया हुआ.

16
00:01:02,110 --> 00:01:09,190
यह ये कहने के बराबर है कि, 
मान लीजिये आप एक कार खरीदते है, शायद $6,००० में

17
00:01:09,190 --> 00:01:11,610
और आप देखेंगे कि ये आपके साथ पाँच साल तक रहेगा.

18
00:01:12,610 --> 00:01:15,880
अब, दो संभावनाएं है.

19
00:01:15,880 --> 00:01:17,650
एक, आप $6000 चुकाए और

20
00:01:17,650 --> 00:01:21,560
पाँच साल बाद बाकि का $6000 चुकाए.

21
00:01:21,560 --> 00:01:27,440
दूसरा उपाय यह है कि हर महीने कुछ पैसे चुका दे.

22
00:01:27,440 --> 00:01:30,420
तो 5 साल में हैं 60 महीने.

23
00:01:30,420 --> 00:01:36,430
तो अगर हम हर महीने $100 चुकाए, तो पाँच साल के अंत में

24
00:01:36,430 --> 00:01:41,940
जब $6000 का कार खरीदने का समय आएगा, तब हमारे पास बैंक में $6000 होंगे.

25
00:01:41,940 --> 00:01:50,130
तो मासिक खर्च का अमॉर्टिजेड कॉस्ट होगा $100 प्रति मास,

26
00:01:50,130 --> 00:01:54,890
जबकि सबसे बुरे हालात में हमें एक महीने में $6000 चुकाना पड सकता है,

27
00:01:54,890 --> 00:01:59,640
यह 0 है, 59 महीने के लिए और 6000 है 
एक महीने के बाद, अतः आप देख सकते है,

28
00:01:59,640 --> 00:02:03,370
वह अमोर्टिज़ेड कॉस्ट हमें एक ज्यादा संतुलित समझ देता है.

29
00:02:03,370 --> 00:02:07,150
तो अगर आप जानना चाहते है कि सबसे बुरे हालात में मुझे एक महीने में कितना चुकाना होगा,

30
00:02:07,150 --> 00:02:08,610
तो जवाब है $6000.

31
00:02:08,610 --> 00:02:11,205
लेकिन अगर आप ये जानना चाहते है कि औसतन मैं कितना खर्च कर रहा हूँ,

32
00:02:11,205 --> 00:02:13,740
जवाब होगा $100.

33
00:02:13,740 --> 00:02:15,970
इसीलिये हम यह अमोर्टिज़ेड एनालिसिस करते है,

34
00:02:15,970 --> 00:02:20,180
यह जानने के लिए कि कैसे दिखेगा एक के बाद एक

35
00:02:20,180 --> 00:02:20,860
ऑपरेशन्स का होना.

36
00:02:22,830 --> 00:02:27,360
तो आइये देखते है, अमोर्टिज़ेड एनालिसिस करने का तरीका.

37
00:02:27,360 --> 00:02:32,700
समस्त तरीक़ा यही बोलता है कि आइये हम परिभाषा देखते है

38
00:02:32,700 --> 00:02:36,620
कि क्या है एक अमोरतीजेड क्लास, 
और उसका इश्तेमाल करें सीधे हिसाब करने में.

39
00:02:37,970 --> 00:02:40,700
इसलिए हम देखते है डायनामिक ऐरे के एक उदाहरण को और

40
00:02:40,700 --> 00:02:42,460
हम PushBack को n बार इस्तेमाल करने जा रहे है.

41
00:02:42,460 --> 00:02:47,210
हम एक खाली ऐरे से शुरुआत करते है, फिर n बार PushBack काल करते है.

42
00:02:48,620 --> 00:02:53,190
फिर हम एक बार PushBack को काल करके अमोर्टिज़ेड कॉस्ट पता करते है.

43
00:02:53,190 --> 00:02:56,430
हम जानते है कि वर्स्ट केस टाइम है.

44
00:02:56,430 --> 00:03:00,410
मान लो कि C sub i है ith insertion की कोस्ट.

45
00:03:00,410 --> 00:03:03,080
तो हमें दिलचस्पी है C1 से Cn में.

46
00:03:04,610 --> 00:03:06,025
तो साफ तौर पर C1 है 1.

47
00:03:06,025 --> 00:03:08,380
क्योंकि हम वास्तव तक पहुँच गए हैं, और

48
00:03:08,380 --> 00:03:14,100
कुछ समय के लिए जो हम यहाँ count कर रहे है वो है ऐरे में लिखना.

49
00:03:14,100 --> 00:03:19,485
तो यहाँ कॉस्ट 1 है क्योंकि हम ith एलिमेंट में लिख रहे है जिसे हम जोड़ रहे है.

50
00:03:20,640 --> 00:03:22,350
यह परवाह किये बिना कि हमें उसका साइज बदलना पड़े.

51
00:03:24,200 --> 00:03:28,390
अगर हमें उसका साइज बदलना पड़ा, तो प्रश्न यह है कि इसका साइज कब बदलना होगा?

52
00:03:28,390 --> 00:03:33,890
हमें साइज बदलना होगा यदि हमारी कपैसिटी प्रयोग हो चुकी है.

53
00:03:33,890 --> 00:03:36,150
इसका मतलब जब उसका साइज उसके कपैसिटी के बराबर होगा तब.

54
00:03:36,150 --> 00:03:37,390
तो ऐसा कब होगा?

55
00:03:37,390 --> 00:03:42,070
ऐसा तब होगा जब पहले वाले इंसर्शन ने जगह पूरी तरह भर दिया हो.

56
00:03:42,070 --> 00:03:43,725
इसका मतलब कि इसे फुल पावर 2 की बना दिया,

57
00:03:43,725 --> 00:03:46,850
क्योंकि हम इसके आकार को हमेशा दोगुना कर रहे है.

58
00:03:46,850 --> 00:03:49,500
तो ऐसा बोल सकते है कि, i वे इंसर्शन में

59
00:03:49,500 --> 00:03:53,240
हमें रिसाइज़ करना पड़ सकता है अगर i-1वे इंसर्शन ने इसे भर दिया तो.

60
00:03:53,240 --> 00:03:55,475
इसका मतलब i-1 पावर 2 की है.

61
00:03:56,820 --> 00:03:59,850
अगर रिसाइज़ नहीं करना पड़ा तो अतिरिक्त कॉस्ट नहीं लगेगा,कॉस्ट जीरो ही रहेगा.

62
00:04:01,480 --> 00:04:06,317
तो कुल अमोर्टिज़ेड कॉस्ट वास्तव में

63
00:04:06,317 --> 00:04:11,630
जोड़ n वास्तविक कॉस्ट्स का n से विभाजित किया हुआ.

64
00:04:11,630 --> 00:04:15,090
तो वह होगा जोड़ i = 1 से n C sub i का.

65
00:04:15,090 --> 00:04:19,180
एक बार फिर C sub i कॉस्ट होगा ith insertion का.

66
00:04:19,180 --> 00:04:24,600
जबकि यह n के बराबर है, क्यूंकि हर एक C sub i का कॉस्ट है 1,

67
00:04:24,600 --> 00:04:30,920
तो हम जोड़ते है उसे n बार, यह है n को जोड़ना यह जो कुल जोड़ आता, यह दिखता है

68
00:04:30,920 --> 00:04:36,080
थोड़ा पेचीदा इसलिये j = 1 टू द फोर ऑफ log based 2 ऑफ n-1 ऑफ 2 टू द j.

69
00:04:36,080 --> 00:04:38,680
कि यह असल में है पावर 2ज़ की.

70
00:04:38,680 --> 00:04:42,888
पूरे n-1 तक.

71
00:04:42,888 --> 00:04:47,841
तो उदाहरण के रूप में अगर n है 100, तब 2s का power

72
00:04:47,841 --> 00:04:53,270
यह होगा 1,2,4,8,16,32 और 64.

73
00:04:53,270 --> 00:04:54,940
और यह उन सभी का जोड़ है.

74
00:04:54,940 --> 00:04:59,170
तो यह पूरा जोड़ आर्डर n का है.

75
00:05:00,370 --> 00:05:03,820
ठीक. तो बुनियादी तौर पर हम 2 का पावरज़ लेते है n तक

76
00:05:03,820 --> 00:05:05,590
लेकिन n को छोड़ कर.

77
00:05:05,590 --> 00:05:07,690
और यह 2n से ज्यादा नहीं होगा.

78
00:05:07,690 --> 00:05:12,400
तो हमारे पास है n जोड़ कुछ जो 2n से ज्यादा नहीं है,

79
00:05:12,400 --> 00:05:17,030
यह साफ़ तौर पर है order n का भाग n से और यह है सिर्फ order ऑफ 1.

80
00:05:17,030 --> 00:05:22,065
तो अब जो हम जानते है वह यह कि हमने अमोर्टिज़े कर लिया है

81
00:05:22,065 --> 00:05:24,855
हर उस इंसर्शन का कॉस्ट जिसका आर्डर 1 है.

82
00:05:26,670 --> 00:05:30,260
हमारा वर्स्ट केस कॉस्ट भी अभी आर्डर n का ही है, इसलिए

83
00:05:30,260 --> 00:05:33,610
अगर हम यह जानना चाहते है कि 
कितना समय लगेगा और वर्स्ट केस जब आपका

84
00:05:33,610 --> 00:05:37,305
एक ख़ास इंसर्शन, अमॉर्टिजेड कॉस्ट है order 1.

85
00:05:38,510 --> 00:05:39,260
अगले वीडियो में,

86
00:05:39,260 --> 00:05:43,213
हम अमोर्टिज़ेड एनालिसिस करने के दूसरे तरीके को देखेंगे.