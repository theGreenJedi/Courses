1
00:00:01,090 --> 00:00:03,770
तो इस लेक्चर मे हम बात कर रहे हैं ऐरेज़ और लिंक्ड-लिस्टस के बार में॰

2
00:00:04,890 --> 00:00:06,820
इस  विडियो मे हम ऐरेज़ के  बार में चर्चा करेंगे॰

3
00:00:07,950 --> 00:00:11,860
तो यहाँ कुछ उदाहरण हैं डेक्लेरेशञ्ज के ऐरेज के अलग-अलग लैंगवेजिज में॰

4
00:00:11,860 --> 00:00:18,541
 साथ में, हम देख सकते हैं एक एक डाईमेन्शनल ऐरे जिसमें पाँच एलिमेंन्टस हैं,

5
00:00:18,541 --> 00:00:24,948
और तब एक दो डाइमेन्सनल ऐरे जिसमें एक रो, नहीं दो रोज़ और पाँच 
 कॉलम हैं॰

6
00:00:26,341 --> 00:00:29,510
तो ऐरे की परिभाषा क्या है ?

7
00:00:29,510 --> 00:00:32,070
अच्छा, हमारे पास मूलता एक दूसरे से लगा हुआ ऐरे है ममोरी का॰

8
00:00:32,070 --> 00:00:33,810
वह मेमोरी का एक चंक / टुकड़ा हैं॰

9
00:00:33,810 --> 00:00:36,350
जो एक स्टैक पर हो सकता है या एक हीप / ढेर पर,

10
00:00:36,350 --> 00:00:37,700
इससे फर्क नहीं पड़ता कि यह कहाँ हैं॰

11
00:00:38,850 --> 00:00:43,500
यह बँटा होता हैं बराबर साईज़ के एलीमेंट्स में, और 

12
00:00:43,500 --> 00:00:46,910
उन एलिमेंटस में से प्रत्येक इंडेक्स्ड होता है सन्निहित पूर्णांक / क्रम-सह नम्बर से॰

13
00:00:46,910 --> 00:00:49,640
ये तीनों बातें महत्वपूर्ण हैं एक ऐरे को परिभाषित करने के लिए॰

14
00:00:50,700 --> 00:00:57,010
यहाँ, इस उदाहरण में, हमारे पास है एक ऐरे जिसके इंडिसिज 1 से 7 तक हैं॰

15
00:00:57,010 --> 00:00:59,290
बहुत सी लैंग्वेजिज में, वही इंडिसिज 

16
00:00:59,290 --> 00:01:01,440
इस ऐरे के लिए होंगे ज़ीरो से छः तक॰

17
00:01:01,440 --> 00:01:03,430
तो यह ज़ीरो आधारित इंडेक्सिंग होगा, परंतु 

18
00:01:03,430 --> 00:01:06,620
एक आधारित इंडेक्सिंग भी संभव है कुछ लैंगवेजिज में॰

19
00:01:06,620 --> 00:01:09,766
और अन्य लैंगवेंजिज आपको अनुमति देती हैं वास्तव में बताने / स्पेसिफ़ाई करने की कि इनिशियल इंडेक्स क्या है॰

20
00:01:12,471 --> 00:01:14,450
तो ऐरेज़ कि खासियत क्या हैं?

21
00:01:14,450 --> 00:01:17,730
अच्छा, मुख्य बिंदु ऐरे का हैं कि हम रैन्डम ऐक्सेस कर सकते हैं

22
00:01:17,730 --> 00:01:22,870
इसका मतलब है, ऐरे के किसी भी एलिमेंट को ऐक्सेस करने के लिए बराबर समय लगता हैं / कोंस्टेंट टाईम एकसेस है॰

23
00:01:22,870 --> 00:01:26,530
बराबर समय ऐक्सेस रीड करने के लिए और बराबर समय ऐक्सेस राइट करने के लिए॰

24
00:01:28,230 --> 00:01:29,760
सवाल ये हैं कि ये काम कैसे करता हैं ?

25
00:01:29,760 --> 00:01:34,030
अर्थात ये कि अंकगणित करके हम पता कर सकते हैं

26
00:01:34,030 --> 00:01:36,720
ऐड्रेस एक एलिमेंट ऐरे का॰

27
00:01:37,780 --> 00:01:40,460
तो पहली चीज जो हमें करनी है वो है शुरू करना ऐरे के एड्रेस से॰

28
00:01:42,190 --> 00:01:43,880
तो हम लेते हैं एड्रेस ऐरे का और

29
00:01:43,880 --> 00:01:47,670
तब हम उसे गुणा करते हैं पहले एलिमेंट साइज से॰

30
00:01:47,670 --> 00:01:52,770
तो यहाँ जहां मुद्दे की बात है कि हर एलिमेंट एक ही साइज का है महत्वपूर्ण है, इसीलिए 

31
00:01:52,770 --> 00:01:55,520
इससे हम एक साधारण गुणा कर सकते हैं॰

32
00:01:55,520 --> 00:01:59,427
बजाय इसके अगर हर एलिमेंट ऐरे का होता अलग अलग साइज का,

33
00:01:59,427 --> 00:02:03,540
हमें उन्हे एक साथ सम करना पडता, और अगर हमें सम करना पड़ता इकट्ठा एन आईटमज़, 

34
00:02:03,540 --> 00:02:05,241
तो वह ऑडर एन टाईम होता॰

35
00:02:05,241 --> 00:02:10,094
इसलिए हम हमारा ऐरे ऐड्रेस लेते है, उसमें एलिमेंट साईज़ टाईम्ज़ आई ज़ोड़ते हैं जो

36
00:02:10,094 --> 00:02:14,141
है इंडेक्स जो है इन्टरेस्ट माईनस फर्स्ट-इंडेक्स॰

37
00:02:15,600 --> 00:02:19,050
अगर हम ज़ीरो बेस्ड इंडेक्सिंग कर रहे है, तो वह पहला इ्डेक्स असल में जरूरी नहीं है॰

38
00:02:19,050 --> 00:02:22,890
मुझे यह उदाहरण पसंद हैं क्योकि यह वास्तव में दिखाता है एक अधिक साधारण केस जहां हमारे पास नहीं है 

39
00:02:22,890 --> 00:02:23,410
एक पहला इन्डेक्स॰

40
00:02:24,410 --> 00:02:28,240
उदाहरण के रूप में कहें कि हम चौथे इन्डेक्स के ऐड्रेस को देख रहे है॰

41
00:02:28,240 --> 00:02:33,830
हम लेंगे चार माईनस पहला इन्डेक्स, जो है एक, जो हमें देगा तीन॰

42
00:02:33,830 --> 00:02:38,270
उसको गुना करें उससे जो भी हमारा एलिमेंट साइज है, और

43
00:02:38,270 --> 00:02:41,120
तब उसे जोड़ें हमारे ऐरे ऐड्रेस में॰

44
00:02:41,120 --> 00:02:44,959
और निश्चय, हमे यह सारा काम नहीं करना, कम्पाइलर या इंटरप्रेटर करता है 

45
00:02:44,959 --> 00:02:48,635
यह काम हमारे लिए, लेकिन हम देख सकते हैं कि कैसे यह काम करता है कोंस्टेंट टाईम में॰

46
00:02:51,538 --> 00:02:54,400
बहुत सी लैंगवेज मल्टी डाइमेंशनल ऐरेज़ भी सपोर्ट करती हैं,

47
00:02:54,400 --> 00:02:58,402
अगर नहीं तो आप एक तरह से अपनी खुद ही बना सकते हैं एक उदाहरण द्वारा जो मैं आपको यहाँ दिखाऊँगा,

48
00:02:58,402 --> 00:03:00,960
जहा आप अपना गणित खुद से कर सकते हो॰

49
00:03:00,960 --> 00:03:01,670
तो यहाँ, आओ देखें॰

50
00:03:01,670 --> 00:03:06,420
मान लो कि ऊपर बायाँ एलिमेंट है इंडेक्स (1, 1) पर,  और यहाँ हैं इंडेक्स (3,4)॰

51
00:03:06,420 --> 00:03:09,620
तो इसका मतलब है कि हम रो 3, कॉलम 4 में हैं॰

52
00:03:09,620 --> 00:03:15,330
हम उस एलिमेंट का एड्रेस कैसे जान पाते हैं?

53
00:03:15,330 --> 00:03:20,880
तो, सबसे पहले जो हम करते हैं कि हम उन रोज़ को छोड़ देंगे जो, 

54
00:03:20,880 --> 00:03:23,820
पूरी रोज़, जो हम इस्तेमाल नहीं कर रहे॰

55
00:03:23,820 --> 00:03:26,390
तो वह है कि, हमें दो रोज़ छोडना है, या फिर 3,

56
00:03:26,390 --> 00:03:31,910
जो है रो इंडेक्स माईनस 1, जो हैं शुरू का / इनिशियल रो इंडेक्स॰

57
00:03:31,910 --> 00:03:34,340
तो इससे हमें मिलता है 2 गुना 6 या 12 एलिमेंट्स जिसे हम छोड़ रहे है

58
00:03:34,340 --> 00:03:38,620
उन रोज़ के लिए ताकि हम रो 3 में पहुँच सके.

59
00:03:38,620 --> 00:03:44,401
उसके बाद हमे एलिमेंट्स छोड़ने है (3,4) से पहले उसी रो के॰

60
00:03:44,401 --> 00:03:45,650
तो यहाँ तीन हैं.

61
00:03:45,650 --> 00:03:47,130
हम उन तक कैसे पहुँचे

62
00:03:47,130 --> 00:03:48,684
हम कॉलम इंडेक्स लेते है,

63
00:03:48,684 --> 00:03:53,510
जो 4 है और उसको इनिशियल कॉलम इंडेक्स से घटाते है, जो है 1॰

64
00:03:53,510 --> 00:03:55,524
तो बुनियादी तौर पर इससे हमें 15 मिलता है॰

65
00:03:56,560 --> 00:04:00,688
छः पहले रो के लिए, छः दूसरे रो के लिए और फिर तीन

66
00:04:00,688 --> 00:04:03,877
तीसरे रो के लिए उस ख़ास एलिमेंट से पहले॰

67
00:04:03,877 --> 00:04:06,706
हम उस 15 को लेते हैं और हमारे एलिमेंट साइज से गुणा करते है और 

68
00:04:06,706 --> 00:04:08,970
फिर उसको हमारे ऐरे एड्रेस में जोड़ते है॰

69
00:04:08,970 --> 00:04:11,994
और उससे हमे एलिमेंट (3,4) का एड्रेस मिल जायेगा॰

70
00:04:14,310 --> 00:04:16,040
अब हमने यहाँ एक तरह का सपोजीशन /  परिकल्पना की॰

71
00:04:16,040 --> 00:04:19,544
और वह थी कि जिस रारह से इसे दर्शाया गया कि हमने सभी एलिमेंट्स दर्शाये

72
00:04:19,544 --> 00:04:23,247
पहली रो के, उसके बाद सभी एलिमेंटस दूसरी रो के और इसी तरह आगे॰

73
00:04:23,247 --> 00:04:28,160
उसे कहते हैं रो-मेजर ऑर्डरिंग या फिर रो-मेजर इंडेक्सिंग॰

74
00:04:28,160 --> 00:04:32,545
और हम बुनियादी तौर पर क्या करते है कि, हम ले आउट करते / बिछाते हैं, (1, 1), (1, 2), (1, 3), (1, 4), (1, 5),

75
00:04:32,545 --> 00:04:33,118
(1,6)॰

76
00:04:33,118 --> 00:04:36,992
और उसके बिलकुल बाद मेमोरी में (2, 1), (2, 2), (2, 3), (2, 4), (2, 5),

77
00:04:36,992 --> 00:04:37,531
(2,6)॰

78
00:04:37,531 --> 00:04:41,851
तो कॉलम इंडेक्स बहुत तेजी से बदल रहा है जैसे जैसे हम देख रहे हैं 

79
00:04:41,851 --> 00:04:43,740
आगे के एलिमेंट्स॰

80
00:04:43,740 --> 00:04:46,850
और यह प्रमाण है इसके रो-मेजर इंडेक्सिंग का॰

81
00:04:48,820 --> 00:04:52,690
हम ऐरेज़ को अलग अलग रूप में दर्शा सकते है और कुछ लैंग्वेजेज या 

82
00:04:52,690 --> 00:04:57,620
कम्पाइलर ऐसा करते है, जब वे हर एक कॉलम को ऑर्डर में ले आउट करते हैं, ऐसे कि

83
00:04:57,620 --> 00:05:00,840
आपके पा होगा पहला कॉलम, उसके बाद दूसरा, उसके बाद तीसरा॰

84
00:05:00,840 --> 00:05:05,374
और ऐसे कि, तब, क्रमशः एलिमेंटस होंगे, (1, 1), (2,

85
00:05:05,374 --> 00:05:08,720
1), (3, 1), उसके बाद (1, 2), (2, 2), (3, 2) इत्यादि॰

86
00:05:09,940 --> 00:05:14,482
तो वहाँ हम देखते हैं कि रो इंडेक्सिंग अधिकतम तेजी से बदलता है, और 

87
00:05:14,482 --> 00:05:17,494
इसे कहते हैं  कॉलम-मेजर ओरडरिंग॰

88
00:05:19,380 --> 00:05:21,098
तो ओपरेशञ्ज / संचालन करने में कितना समय लगता है?

89
00:05:21,098 --> 00:05:23,679
हम पहले कहा कि किसी एलिमेंट को पढ़ना है O(1), और

90
00:05:23,679 --> 00:05:25,880
किसी एलिमेंट को लिखना है O(1)॰

91
00:05:25,880 --> 00:05:29,870
वह ऐरेज़ का स्टैंडर्ड / मानक फीचर है॰

92
00:05:29,870 --> 00:05:32,230
क्या होता है अगर हम एक एलिमेंट जोड़ना चाहते है एक ऐरे के अंत में?

93
00:05:32,230 --> 00:05:36,570
मान लो कि हमने एलोकेट किए हैं सात एलिमेंट्स एक ऐरे के लिए॰

94
00:05:36,570 --> 00:05:38,900
हम उनमे से सिर्फ चार इस्तेमाल कर रहे है, ठीक?

95
00:05:38,900 --> 00:05:42,750
तो हमें याद रखना है कि हम चार एलिमेंट इस्तेमाल कर रहे है और हमे पांचवा एलिमेंट जोड़ना है॰

96
00:05:42,750 --> 00:05:44,920
और फिर यहाँ सात के लिए जगह है॰

97
00:05:44,920 --> 00:05:47,160
हम सब ये जानते है कि हमने सिर्फ उसे जोड़ दिया॰

98
00:05:47,160 --> 00:05:50,200
तब अपडेट करें संख्या एलिमेंट्स की जो इस्तेमाल में हैं॰

99
00:05:50,200 --> 00:05:51,830
वह एक O(1) ऑपरेशन है॰

100
00:05:51,830 --> 00:05:54,030
अगर हम आखरी एलिमेंट भी हटाना चाहते है,

101
00:05:54,030 --> 00:05:57,860
तो वह एक O(1) आपरेशन है क्योंकि हम सिर्फ  

102
00:05:57,860 --> 00:06:01,560
अपडेट करते हैं नंबर ऑफ एलिमेंट्स को जो हम इस्तेमाल कर रहे है, और इसलिए वह एक O(1) आपरेशन है॰

103
00:06:03,320 --> 00:06:06,490
यह वहाँ महँगा साबित होता है, जहा अगर हम चाहे, उदाहरणता,

104
00:06:06,490 --> 00:06:08,100
पहला एलिमेंट हटाना॰

105
00:06:08,100 --> 00:06:09,700
तो यहाँ हम पाँच हटाते है, और

106
00:06:09,700 --> 00:06:12,860
तब हमे क्या करना है कि, हम इसमें खाली जगह / होल्ज़ नहीं छोड़ना चाहते॰

107
00:06:12,860 --> 00:06:16,517
इसलिए हमें 8 को नीचे ले जाना होगा, 3 को नीचे ले जाओ, 12 को नीचे ले जाओ॰

108
00:06:16,517 --> 00:06:17,780
वह एक O(n) आपरेशन है॰

109
00:06:19,150 --> 00:06:22,240
ऐसा ही होगा अगर हम शुरुआत में कोई एलिमेंट जोड़ना चाहे तो॰

110
00:06:22,240 --> 00:06:27,000
इसलिए हमें 12 को ले जाना होगा,  3 को और 8 को हटाना होगा जगह बनाने के लिए

111
00:06:27,000 --> 00:06:27,920
हमारे नये एलिमेंट के लिए॰

112
00:06:27,920 --> 00:06:28,990
तब वह भी होगा O(n)॰

113
00:06:30,270 --> 00:06:31,100
और अगर हम जोड़ना या

114
00:06:31,100 --> 00:06:33,920
निकालना चाहे कही बीच से, तब भी वो O(n) आपरेशन ही होगा॰

115
00:06:33,920 --> 00:06:35,860
अगर हम एकदम बीच में जोड़ना चाहे तो,

116
00:06:35,860 --> 00:06:39,670
हमे n/2 आईटंज हटाना होगा, जो O(n) है॰

117
00:06:39,670 --> 00:06:41,010
यही बात हटाने के लिए भी लागू है॰

118
00:06:41,010 --> 00:06:43,870
तो, ऐरेज महान / महत्वपूर्ण हैं अगर आप चाहते हैं या अंत से हटाएँ तो॰

119
00:06:43,870 --> 00:06:49,130
लेकिन यह खर्चीला है / समय ज्यादा लेता है, अगर आप शुरू में या अंत में जोड़ना या हटाना चाहे॰

120
00:06:50,510 --> 00:06:54,630
फिर भी, याद रखिए, ऐरेज़ के लिए बहुत से फायदे है

121
00:06:54,630 --> 00:06:59,600
कि हमारे पास यह कोंस्टेंट / समान टाईम एक्सेस है सभी एलिमेंट्स के लिए, रीड करे या लिखें,

122
00:07:01,530 --> 00:07:06,600
संक्षेप में तब, एक ऐरे होता है एक कंटिगुयस / संस्पर्शी एरिया मेमोरी का॰ 

123
00:07:06,600 --> 00:07:10,560
क्योकि अगर यह नहीं होता कंटिगुयस / संस्पर्शी, तब हम नहीं कर पाते यह आसान अंकगणित

124
00:07:10,560 --> 00:07:11,210
वहाँ पहुँचने के लिए जहां  हम जा रहे हैं॰

125
00:07:11,210 --> 00:07:14,850
हमें फिर एक बराबर साईज़ के एलिमेंट्स लेने पड़ेंगे ताकि हमारा गणित काम कर पाये॰

126
00:07:14,850 --> 00:07:17,930
और फिर इंडेक्स किए हुए कंटिगुयस / संस्पर्शी इंटिजर्ज / अंको से ताकि हमारा गणित काम कर सके॰

127
00:07:18,980 --> 00:07:22,530
हमे बराबर समय लगता है किसी एलिमेंट तक पहुँचने में, एलिमेंट जोड़ने में या

128
00:07:22,530 --> 00:07:26,600
या अंत में हटाने मे और लिनियर समय किसी भी जगह पर जोड़ने या हटाने में॰

129
00:07:27,810 --> 00:07:29,680
अपने अगले विडियो में हम लिंक्ड लिस्ट के बारे में बात करेंगे॰