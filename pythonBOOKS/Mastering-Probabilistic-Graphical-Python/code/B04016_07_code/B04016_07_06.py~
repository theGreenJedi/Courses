In [1]: from hmmlearn.hmm import GaussianHMM
In [2]: import matplotlib.pyplot as plt
In [3]: import numpy as np
# Here n_components correspond to number of states in the hidden
# variables.
In [4]: model_gaussian = GaussianHMM(n_components=3,
covariance_type='full')
# Transition probability as specified above
In [5]: transition_matrix = np.array([[0.2, 0.6, 0.2],
[0.4, 0.3, 0.3],
[0.05, 0.05, 0.9]])
# Setting the transition probability
In [6]: model_gaussian.transmat_ = transition_matrix
# Initial state probability
In [7]: initial_state_prob = np.array([0.1, 0.4, 0.5])
# Setting initial state probability
In [8]: model_gaussian.startprob_ = initial_state_prob
# As we want to have a 2-D gaussian distribution the mean has to
# be in the shape of (n_components, 2)
In [9]: mean = np.array([[0.0, 0.0],
[0.0, 10.0],
[10.0, 0.0]])
# Setting the mean
In [10]: model_gaussian.means_ = mean
